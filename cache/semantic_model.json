{
  "entities": [
    {
      "name": "Customer (Business Point)",
      "source": "dbo.BusinessPoint",
      "primary_key": [
        "ID"
      ],
      "business_meaning": "Represents a customer organization / business location (master record for customers/business points).",
      "confidence": 0.95,
      "evidence": [
        "Descriptive columns: Name, BrandName, Url, TaxOfficeID, VatCategoryID, Profession, Code",
        "Contains stable master attributes and identifiers (ID, Code, Version, DMKey/DMCharKey)",
        "Target of many foreign keys (e.g., BusinessPointIdentification.BusinessPointID, BusinessPointListing.BusinessPointID, BusinessPointErpInfo.BusinessPointID, CampaignBucket.BusinessPointID)",
        "Used as a reference in related tables (comments, listings, identification, ERP info, confirmations)"
      ]
    },
    {
      "name": "Address",
      "source": "dbo.Address",
      "primary_key": [
        "ID"
      ],
      "business_meaning": "Master record for physical addresses / geocoded locations.",
      "confidence": 0.93,
      "evidence": [
        "Contains classic address and geocoding attributes (Line1..Line4, Longitude, Latitude, GeoModel*, CountryID)",
        "Foreign key target for multiple tables (BusinessPoint.LocationAddressID, BusinessPoint.BillingAddressID, BusinessPoint.SalesAddressID, BroaderArea.AddressID)",
        "Designed as stable reference data (DMKey/DMTable fields present for integration)"
      ]
    },
    {
      "name": "Bank",
      "source": "dbo.Bank",
      "primary_key": [
        "ID"
      ],
      "business_meaning": "Reference table of banks used for payments and deposits.",
      "confidence": 0.9,
      "evidence": [
        "Simple lookup structure (ID, Description, IsActive) typical for master data",
        "Referenced by transactional tables (AdvancedPaymentMethod.BankID, BankDepositDetail.BankID)",
        "Low cardinality, descriptive attributes (Description, IsActive)"
      ]
    },
    {
      "name": "Campaign",
      "source": "dbo.Campaign",
      "primary_key": [
        "ID"
      ],
      "business_meaning": "Represents marketing/advertising campaigns (master configuration and descriptive data for campaigns).",
      "confidence": 0.88,
      "evidence": [
        "Descriptive and lifecycle columns (Code, Name, Description, CampaignTypeID, State, StartedOn, ClosedOn, PlannedStartOn)",
        "Referenced by many related tables (CampaignAllocationPlan, CampaignBucket, CampaignCalendar, CampaignBucketFileUploadHistory, CampaignAssignmentRequest)",
        "Holds configuration IDs (SelectedAllocationPlanID, MediumVersionID, GeographicDestinationID) indicating master/configuration role"
      ]
    },
    {
      "name": "Broader Area Lookup (Geo)",
      "source": "dbo.BroaderAreaLookUp",
      "primary_key": [
        "BroaderAreaID",
        "GeoModelVersion"
      ],
      "business_meaning": "Master lookup of broader geographic areas (grouping/labels for geocoding).",
      "confidence": 0.82,
      "evidence": [
        "Lookup semantics: BroaderAreaID, AreaName, ShortAreaName, AreaNameEn",
        "References MasterGeoAreaGroupID (FK -> dbo.MasterGeoAreaGroup) indicating hierarchical master data",
        "Designed for stable reference (GeoModelVersion included to version geo data)"
      ]
    },
    {
      "name": "Advertisement Deactivation Reason",
      "source": "dbo.AdvertisementDeactivationReason",
      "primary_key": [
        "ID"
      ],
      "business_meaning": "Lookup table of reasons why an advertisement is deactivated.",
      "confidence": 0.75,
      "evidence": [
        "Simple lookup structure (ID, Description) typical for reference/lookup data",
        "Name and purpose align with common master/lookup pattern for statuses/reasons",
        "Used conceptually by advertisement lifecycle (column DeactivationReason exists on dbo.Advertisement)"
      ]
    },
    {
      "name": "Advertisement Sales Type",
      "source": "dbo.AdvertisementSalesType",
      "primary_key": [
        "ID"
      ],
      "business_meaning": "Lookup table defining sales/types/classifications for advertisements.",
      "confidence": 0.74,
      "evidence": [
        "Descriptive lookup fields (ID, Description) and DMKey/DMTable for integration",
        "Naming convention 'SalesType' indicates classification/lookup usage rather than transactional",
        "Typical dimension/lookup shape (small, descriptive)"
      ]
    },
    {
      "name": "Calendar (generic)",
      "source": "dbo.Calendar",
      "primary_key": [
        "ID"
      ],
      "business_meaning": "Master calendar/holiday table containing named dates used across the system.",
      "confidence": 0.72,
      "evidence": [
        "Contains CalendarDate and Description fields typical of a holiday/calendar master",
        "Has DMKey/DMTable fields indicating stable reference usage",
        "Intended for reuse by other processes that need calendar/exception information"
      ]
    }
  ],
  "dimensions": [
    {
      "name": "AutoExtractCalendar",
      "source": "dbo.AutoExtractCalendar",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "CalendarDate"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Calendar",
      "source": "dbo.Calendar",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "CalendarDate"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "CampaignAllocationPlan",
      "source": "dbo.CampaignAllocationPlan",
      "type": "geography",
      "keys": [
        "ID"
      ],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "CampaignAllocationPlanChannel",
      "source": "dbo.CampaignAllocationPlanChannel",
      "type": "geography",
      "keys": [
        "ID"
      ],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "CampaignAllocationPlanUser",
      "source": "dbo.CampaignAllocationPlanUser",
      "type": "geography",
      "keys": [
        "ID"
      ],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "CampaignCalendar",
      "source": "dbo.CampaignCalendar",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "CalendarDay",
        "IsWorkingDay"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "CampaignNewLossCustomerRuleRegion",
      "source": "dbo.CampaignNewLossCustomerRuleRegion",
      "type": "geography",
      "keys": [
        "ID"
      ],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "CampaignRegion",
      "source": "dbo.CampaignRegion",
      "type": "geography",
      "keys": [
        "ID"
      ],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "CampaignSalesmanBeginEndDate",
      "source": "dbo.CampaignSalesmanBeginEndDate",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "BeginDate",
        "EndDate"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "CanvasPlanningCalendar",
      "source": "dbo.CanvasPlanningCalendar",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "Date"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "CanvasStage1AddressLocation",
      "source": "dbo.CanvasStage1AddressLocation",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "Country",
      "source": "dbo.Country",
      "type": "geography",
      "keys": [
        "ID"
      ],
      "attributes": [
        "CountryTelephoneCode",
        "MinLongitude",
        "MinLatitude",
        "MaxLongitude",
        "MaxLatitude"
      ],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "CustomerUpdate",
      "source": "dbo.CustomerUpdate",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "location",
      "source": "dbo.location",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "PaymentDatePolicy",
      "source": "dbo.PaymentDatePolicy",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "FromDate",
        "ToDate",
        "PaymentDate"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "SQLUpdateStatement",
      "source": "dbo.SQLUpdateStatement",
      "type": "date",
      "keys": [
        "SQLCommandID"
      ],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "TimeLogger",
      "source": "dbo.TimeLogger",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "EventDate"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "TimeLoggerArchive",
      "source": "dbo.TimeLoggerArchive",
      "type": "date",
      "keys": [
        "ID"
      ],
      "attributes": [
        "EventDate"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr116ArrivalTimeEN",
      "source": "dbo.Attr116ArrivalTimeEN",
      "type": "date",
      "keys": [],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr116ArrivalTimeGR",
      "source": "dbo.Attr116ArrivalTimeGR",
      "type": "date",
      "keys": [],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr117DepartureTimeEN",
      "source": "dbo.Attr117DepartureTimeEN",
      "type": "date",
      "keys": [],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr117DepartureTimeGR",
      "source": "dbo.Attr117DepartureTimeGR",
      "type": "date",
      "keys": [],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr1322RestRegionsGR",
      "source": "dbo.Attr1322RestRegionsGR",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "Attr1325AllBroaderAreasRestRegionsGR",
      "source": "dbo.Attr1325AllBroaderAreasRestRegionsGR",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "Attr159RegionsEN",
      "source": "dbo.Attr159RegionsEN",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "Attr159RegionsGR",
      "source": "dbo.Attr159RegionsGR",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "Attr159RegionsGR_ATKBck_20190924",
      "source": "dbo.Attr159RegionsGR_ATKBck_20190924",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "Attr159RegionsGR_THBck_20190924",
      "source": "dbo.Attr159RegionsGR_THBck_20190924",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "Attr295TimetableGR",
      "source": "dbo.Attr295TimetableGR",
      "type": "date",
      "keys": [],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr296TimetableNotesEN",
      "source": "dbo.Attr296TimetableNotesEN",
      "type": "date",
      "keys": [],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr296TimetableNotesGR",
      "source": "dbo.Attr296TimetableNotesGR",
      "type": "date",
      "keys": [],
      "attributes": [],
      "business_meaning": "Time dimension for date-based analysis"
    },
    {
      "name": "Attr308TargetAudienceGeoLocations",
      "source": "dbo.Attr308TargetAudienceGeoLocations",
      "type": "geography",
      "keys": [],
      "attributes": [],
      "business_meaning": "Geographic dimension for location-based analysis"
    },
    {
      "name": "ViewBPLastSalesAssignmentDate",
      "source": "dbo.ViewBPLastSalesAssignmentDate",
      "type": "date",
      "keys": [],
      "attributes": [
        "StartDate"
      ],
      "business_meaning": "Time dimension for date-based analysis"
    }
  ],
  "facts": [
    {
      "name": "AdvancedPaymentMethod",
      "source": "dbo.AdvancedPaymentMethod",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "column": "Amount",
          "aggregation": "SUM",
          "business_meaning": "Total payment amount recorded for advanced payment methods."
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "column": "Amount",
          "aggregation": "AVG",
          "business_meaning": "Average payment amount per advanced payment method record."
        },
        {
          "name": "TotalPolicyAmount",
          "expression": "SUM(PolicyAmount)",
          "column": "PolicyAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount applied to policies associated with these payment records."
        },
        {
          "name": "PaymentCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of advanced payment method records (transactions)."
        },
        {
          "name": "AverageCreditCardInstallments",
          "expression": "AVG(CreditCardInstallments)",
          "column": "CreditCardInstallments",
          "aggregation": "AVG",
          "business_meaning": "Average number of installments for credit card payments."
        }
      ],
      "foreign_keys": [
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        },
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "CreditCardTypeID",
          "references": "dbo.CreditCardType.ID"
        },
        {
          "column": "PaymentMethodTypeID",
          "references": "dbo.PaymentMethodType.ID"
        },
        {
          "column": "ID",
          "references": "dbo.Contract.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "AdvancedPaymentSalesCollection",
      "source": "dbo.AdvancedPaymentSalesCollection",
      "grain": [
        "AdvancedPaymentMethodID",
        "SalesCollectionID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "AdvancedPaymentMethodID",
          "references": "dbo.AdvancedPaymentMethod.ID"
        },
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "business_meaning": "Transactional data at AdvancedPaymentMethodID, SalesCollectionID grain"
    },
    {
      "name": "Advertisement",
      "source": "dbo.Advertisement",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AdvertisementCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of advertisements (rows) in the fact table"
        },
        {
          "name": "TotalPrice",
          "expression": "SUM(Price)",
          "column": "Price",
          "aggregation": "SUM",
          "business_meaning": "Sum of advertised prices"
        },
        {
          "name": "AveragePrice",
          "expression": "AVG(Price)",
          "column": "Price",
          "aggregation": "AVG",
          "business_meaning": "Average advertised price per advertisement"
        },
        {
          "name": "TotalDiscount",
          "expression": "SUM(Discount)",
          "column": "Discount",
          "aggregation": "SUM",
          "business_meaning": "Aggregate discount amount applied to advertisements"
        },
        {
          "name": "TotalRulesDiscount",
          "expression": "SUM(RulesDiscount)",
          "column": "RulesDiscount",
          "aggregation": "SUM",
          "business_meaning": "Aggregate discount amount applied by rules"
        },
        {
          "name": "TotalAlteredAmount",
          "expression": "SUM(AlteredAmount)",
          "column": "AlteredAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of manually altered amounts on advertisements"
        },
        {
          "name": "TotalPaymentDiscount",
          "expression": "SUM(PaymentDiscount)",
          "column": "PaymentDiscount",
          "aggregation": "SUM",
          "business_meaning": "Aggregate payment discount (sum of discount rates/values depending on definition)"
        },
        {
          "name": "AveragePaymentDiscount",
          "expression": "AVG(PaymentDiscount)",
          "column": "PaymentDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average payment discount rate/value per advertisement"
        },
        {
          "name": "TotalProductDiscount",
          "expression": "SUM(ProductDiscount)",
          "column": "ProductDiscount",
          "aggregation": "SUM",
          "business_meaning": "Aggregate product-level discount (sum of discount rates/values depending on definition)"
        },
        {
          "name": "AverageProductDiscount",
          "expression": "AVG(ProductDiscount)",
          "column": "ProductDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average product discount rate/value per advertisement"
        },
        {
          "name": "TotalBundleDiscount",
          "expression": "SUM(BundleDiscount)",
          "column": "BundleDiscount",
          "aggregation": "SUM",
          "business_meaning": "Aggregate bundle discount (sum of discount rates/values depending on definition)"
        },
        {
          "name": "AverageBundleDiscount",
          "expression": "AVG(BundleDiscount)",
          "column": "BundleDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average bundle discount rate/value per advertisement"
        },
        {
          "name": "TotalBudgetAmount",
          "expression": "SUM(BudgetAmount)",
          "column": "BudgetAmount",
          "aggregation": "SUM",
          "business_meaning": "Total budget amount allocated across advertisements"
        },
        {
          "name": "TotalOneTimeAmount",
          "expression": "SUM(OneTimeAmount)",
          "column": "OneTimeAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of one-time amounts before discounts"
        },
        {
          "name": "TotalExtraFeeAmount",
          "expression": "SUM(ExtraFeeAmount)",
          "column": "ExtraFeeAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of extra fee amounts before discounts"
        },
        {
          "name": "TotalOneTimeAmountAfterDiscount",
          "expression": "SUM(OneTimeAmountAfterDiscount)",
          "column": "OneTimeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Sum of one-time amounts after discounts"
        },
        {
          "name": "TotalExtraFeeAmountAfterDiscount",
          "expression": "SUM(ExtraFeeAmountAfterDiscount)",
          "column": "ExtraFeeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Sum of extra fees after discounts"
        },
        {
          "name": "TotalActualSpentBudget",
          "expression": "SUM(ActualSpentBudget)",
          "column": "ActualSpentBudget",
          "aggregation": "SUM",
          "business_meaning": "Total actual budget spent across advertisements"
        },
        {
          "name": "TotalExtraFeeAmountAfterCC",
          "expression": "SUM(ExtraFeeAmountAfterCC)",
          "column": "ExtraFeeAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Sum of extra fees after credit card / charge corrections"
        },
        {
          "name": "TotalAlteredPPCAmountAfterCC",
          "expression": "SUM(AlteredPPCAmountAfterCC)",
          "column": "AlteredPPCAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Sum of altered pay-per-click amounts after credit card / charge corrections"
        },
        {
          "name": "TotalMonths",
          "expression": "SUM(Months)",
          "column": "Months",
          "aggregation": "SUM",
          "business_meaning": "Total contract/advertisement duration in months (sum across rows)"
        },
        {
          "name": "AverageMonths",
          "expression": "AVG(Months)",
          "column": "Months",
          "aggregation": "AVG",
          "business_meaning": "Average contract/advertisement duration in months"
        },
        {
          "name": "TotalCompletedChanges",
          "expression": "SUM(CompletedChanges)",
          "column": "CompletedChanges",
          "aggregation": "SUM",
          "business_meaning": "Total number of completed changes across advertisements"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "CaseAttachmentID",
          "references": "dbo.CaseAttachment.ID"
        },
        {
          "column": "ContractProductID",
          "references": "dbo.ContractProduct.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "ProductKitID",
          "references": "dbo.ProductKit.ID"
        },
        {
          "column": "HeadingID",
          "references": "dbo.VersionGroupItem.ID"
        },
        {
          "column": "ReactivatedContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "RelatedAdvertisementID",
          "references": "dbo.Advertisement.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "AvailableConditionOperands",
      "source": "dbo.AvailableConditionOperands",
      "grain": [
        "RuleConditionDefinitionID",
        "RuleConditionOperandID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "RuleConditionOperandID",
          "references": "dbo.RuleConditionOperand.ID"
        },
        {
          "column": "RuleConditionDefinitionID",
          "references": "dbo.RuleConditionDefinition.ID"
        }
      ],
      "business_meaning": "Transactional data at RuleConditionDefinitionID, RuleConditionOperandID grain"
    },
    {
      "name": "BankDepositDetail",
      "source": "dbo.BankDepositDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "DepositCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of deposit records in the BankDepositDetail table"
        }
      ],
      "foreign_keys": [
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "ID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "BusinessPointComment",
      "source": "dbo.BusinessPointComment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalComments",
          "expression": "COUNT([ID])",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of comments (rows) in the BusinessPointComment table within the current filter context."
        },
        {
          "name": "DistinctCommentingUsers",
          "expression": "COUNT(DISTINCT [UserID])",
          "column": "UserID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique users who have left comments in the current filter context."
        },
        {
          "name": "CommentsOfType_N",
          "expression": "SUM(CASE WHEN [CommentType] = <TypeValue> THEN 1 ELSE 0 END)",
          "column": "CommentType",
          "aggregation": "SUM (conditional)",
          "business_meaning": "Count of comments of a specific comment type. Replace <TypeValue> with the specific CommentType code to create a filtered measure for that type."
        },
        {
          "name": "AverageCommentsPerUser",
          "expression": "CASE WHEN COUNT(DISTINCT [UserID]) = 0 THEN NULL ELSE COUNT([ID]) * 1.0 / COUNT(DISTINCT [UserID]) END",
          "column": "ID",
          "aggregation": "CALCULATED",
          "business_meaning": "Average number of comments per unique commenting user in the current filter context."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "BusinessPointConfirmationHistory",
      "source": "dbo.BusinessPointConfirmationHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Confirmation Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of confirmation history events (rows) recorded."
        },
        {
          "name": "Distinct Business Points Confirmed",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique business points that have at least one confirmation event."
        },
        {
          "name": "Distinct Identifications Confirmed",
          "expression": "COUNT(DISTINCT BusinessPointIdentificationID)",
          "column": "BusinessPointIdentificationID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique business point identifications that were confirmed."
        },
        {
          "name": "Distinct Performers",
          "expression": "COUNT(DISTINCT PerformedByID)",
          "column": "PerformedByID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct users or actors who performed confirmation actions."
        },
        {
          "name": "Third-Party Confirmations",
          "expression": "SUM(CASE WHEN IsThirdPartyDataSource = 1 THEN 1 ELSE 0 END)",
          "column": "IsThirdPartyDataSource",
          "aggregation": "SUM",
          "business_meaning": "Count of confirmation events that originated from a third-party data source."
        },
        {
          "name": "Share of Third-Party Confirmations",
          "expression": "SUM(CASE WHEN IsThirdPartyDataSource = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(ID), 0)",
          "column": "IsThirdPartyDataSource",
          "aggregation": "RATIO",
          "business_meaning": "Proportion of confirmation events that came from third-party sources (value between 0 and 1)."
        },
        {
          "name": "Average Confirmations per Business Point",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT BusinessPointID), 0)",
          "column": "ID",
          "aggregation": "RATIO",
          "business_meaning": "Average number of confirmation events per business point in the evaluated scope."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "BusinessPointIdentificationID",
          "references": "dbo.BusinessPointIdentification.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "PerformedByID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "BusinessPointIdentification",
      "source": "dbo.BusinessPointIdentification",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalRecords",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of records (business point identification rows) in the table."
        },
        {
          "name": "DistinctBusinessPoints",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique business points represented in the table."
        },
        {
          "name": "RejectedCount",
          "expression": "SUM(CASE WHEN RejectionReasonId IS NOT NULL THEN 1 ELSE 0 END)",
          "column": "RejectionReasonId",
          "aggregation": "SUM",
          "business_meaning": "Count of records that have a rejection reason (i.e., were flagged as rejected)."
        },
        {
          "name": "RejectionRate",
          "expression": "AVG(CASE WHEN RejectionReasonId IS NOT NULL THEN 1.0 ELSE 0.0 END)",
          "column": "RejectionReasonId",
          "aggregation": "AVG",
          "business_meaning": "Proportion of records that are rejected (value between 0 and 1)."
        },
        {
          "name": "RejectionPercentage",
          "expression": "100.0 * AVG(CASE WHEN RejectionReasonId IS NOT NULL THEN 1.0 ELSE 0.0 END)",
          "column": "RejectionReasonId",
          "aggregation": "AVG",
          "business_meaning": "Percentage of records that are rejected (0-100%)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "RejectionReasonId",
          "references": "dbo.RejectionReason.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "BusinessPointListing",
      "source": "dbo.BusinessPointListing",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Listing Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of BusinessPointListing records (rows) in the table."
        },
        {
          "name": "Distinct BusinessPoint Count",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique BusinessPoint entities referenced by listings."
        },
        {
          "name": "Distinct ClassifierNode Count",
          "expression": "COUNT(DISTINCT ClassifierNodeID)",
          "column": "ClassifierNodeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique classifier nodes referenced by listings."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ModifiedByID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "BusinessPointListingLog",
      "source": "dbo.BusinessPointListingLog",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "LogEntryCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of log entries recorded in BusinessPointListingLog"
        },
        {
          "name": "ActionOccurrences",
          "expression": "COUNT(ActionID)",
          "column": "ActionID",
          "aggregation": "COUNT",
          "business_meaning": "Number of logged actions (rows with an ActionID)"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct business points referenced in the log"
        },
        {
          "name": "DistinctPerformerCount",
          "expression": "COUNT(DISTINCT PerformerID)",
          "column": "PerformerID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct performers (users or systems) that made changes"
        },
        {
          "name": "DistinctListingCount",
          "expression": "COUNT(DISTINCT BusinessPointListingID)",
          "column": "BusinessPointListingID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct listings affected"
        },
        {
          "name": "DistinctAttributeCount",
          "expression": "COUNT(DISTINCT AttributeID)",
          "column": "AttributeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct attributes that were changed or logged"
        },
        {
          "name": "DistinctClassifierNodeCount",
          "expression": "COUNT(DISTINCT ClassifierNodeID)",
          "column": "ClassifierNodeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct classifier nodes referenced in the log"
        },
        {
          "name": "ChangesCount",
          "expression": "SUM(CASE WHEN (OldValue IS NULL AND NewValue IS NULL) THEN 0 WHEN OldValue = NewValue THEN 0 ELSE 1 END)",
          "column": "OldValue, NewValue",
          "aggregation": "SUM",
          "business_meaning": "Count of log rows where the value actually changed (OldValue differs from NewValue)"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "PerformerID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignAssignmentBPLossRequestDetail",
      "source": "dbo.CampaignAssignmentBPLossRequestDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows (assignments) in the CampaignAssignmentBPLossRequestDetail table"
        },
        {
          "name": "BPAssignmentCount",
          "expression": "COUNT(BPID)",
          "column": "BPID",
          "aggregation": "COUNT",
          "business_meaning": "Count of BP (business partner) assignments (counts rows where BPID is present)"
        },
        {
          "name": "DistinctBPCount",
          "expression": "COUNT(DISTINCT BPID)",
          "column": "BPID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique business partners referenced in the detail records"
        },
        {
          "name": "DistinctRequestCount",
          "expression": "COUNT(DISTINCT RequestID)",
          "column": "RequestID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique requests represented in the detail records"
        }
      ],
      "foreign_keys": [
        {
          "column": "BPID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "RequestID",
          "references": "dbo.CampaignAssignmentRequest.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignAssignmentRequest",
      "source": "dbo.CampaignAssignmentRequest",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RequestCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of campaign assignment requests"
        },
        {
          "name": "UniqueRequestedSalesmen",
          "expression": "COUNT(DISTINCT RequestedSalesmanID)",
          "column": "RequestedSalesmanID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct salesmen who were requested across requests"
        },
        {
          "name": "UniquePerformers",
          "expression": "COUNT(DISTINCT PerformerID)",
          "column": "PerformerID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct performers who handled requests"
        },
        {
          "name": "ClosedRequests",
          "expression": "SUM(CASE WHEN ClosedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "column": "ClosedOn",
          "aggregation": "SUM (conditional)",
          "business_meaning": "Count of requests that have been closed"
        },
        {
          "name": "OpenRequests",
          "expression": "SUM(CASE WHEN ClosedOn IS NULL THEN 1 ELSE 0 END)",
          "column": "ClosedOn",
          "aggregation": "SUM (conditional)",
          "business_meaning": "Count of requests that are still open (not closed)"
        },
        {
          "name": "AvgTimeToCloseDays",
          "expression": "AVG(CASE WHEN ClosedOn IS NOT NULL THEN DATEDIFF(DAY, CreatedOn, ClosedOn) END)",
          "column": "CreatedOn, ClosedOn",
          "aggregation": "AVG",
          "business_meaning": "Average time in days between request creation and closure (computed for closed requests)"
        },
        {
          "name": "ClosureRate",
          "expression": "(SUM(CASE WHEN ClosedOn IS NOT NULL THEN 1 ELSE 0 END) * 1.0) / NULLIF(COUNT(ID), 0)",
          "column": "ClosedOn, ID",
          "aggregation": "RATIO",
          "business_meaning": "Proportion of requests that have been closed (closed requests divided by total requests)"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "CreatedByUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "PerformerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ReasonID",
          "references": "dbo.CampaignAssignmentRequestReason.ID"
        },
        {
          "column": "RequestedSalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignAssignmentRequestDetail",
      "source": "dbo.CampaignAssignmentRequestDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AssignmentCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of assignment detail rows (records) in the table."
        },
        {
          "name": "DistinctRequestCount",
          "expression": "COUNT(DISTINCT RequestID)",
          "column": "RequestID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct assignment requests represented in the detail rows."
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct campaigns referenced by the assignment detail rows."
        },
        {
          "name": "DistinctBucketCount",
          "expression": "COUNT(DISTINCT BucketID)",
          "column": "BucketID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct buckets referenced by the assignment detail rows."
        },
        {
          "name": "DistinctOldSalesmanCount",
          "expression": "COUNT(DISTINCT OldSalesmanID)",
          "column": "OldSalesmanID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct original salesmen in the assignment details."
        },
        {
          "name": "DistinctNewSalesmanCount",
          "expression": "COUNT(DISTINCT NewSalesmanID)",
          "column": "NewSalesmanID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct new salesmen in the assignment details."
        },
        {
          "name": "SalesmanReassignmentsCount",
          "expression": "SUM(CASE WHEN OldSalesmanID IS NOT NULL AND NewSalesmanID IS NOT NULL AND OldSalesmanID <> NewSalesmanID THEN 1 ELSE 0 END)",
          "column": "OldSalesmanID, NewSalesmanID",
          "aggregation": "SUM",
          "business_meaning": "Count of detail rows where the salesman was changed (old != new)."
        },
        {
          "name": "SalesmanReassignmentRate",
          "expression": "AVG(CASE WHEN OldSalesmanID IS NOT NULL AND NewSalesmanID IS NOT NULL AND OldSalesmanID <> NewSalesmanID THEN 1.0 ELSE 0.0 END)",
          "column": "OldSalesmanID, NewSalesmanID",
          "aggregation": "AVG",
          "business_meaning": "Proportion of detail rows where the salesman changed (reassignments / total rows)."
        },
        {
          "name": "SegmentChangesCount",
          "expression": "SUM(CASE WHEN OldSegmentID IS NOT NULL AND NewSegmentID IS NOT NULL AND OldSegmentID <> NewSegmentID THEN 1 ELSE 0 END)",
          "column": "OldSegmentID, NewSegmentID",
          "aggregation": "SUM",
          "business_meaning": "Count of detail rows where the segment was changed (old segment != new segment)."
        },
        {
          "name": "SegmentChangeRate",
          "expression": "AVG(CASE WHEN OldSegmentID IS NOT NULL AND NewSegmentID IS NOT NULL AND OldSegmentID <> NewSegmentID THEN 1.0 ELSE 0.0 END)",
          "column": "OldSegmentID, NewSegmentID",
          "aggregation": "AVG",
          "business_meaning": "Proportion of detail rows with a segment change (segment changes / total rows)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BucketID",
          "references": "dbo.CampaignBucket.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "NewSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "OldSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "RequestID",
          "references": "dbo.CampaignAssignmentRequest.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignAssignmentToBPRequestDetail",
      "source": "dbo.CampaignAssignmentToBPRequestDetail",
      "grain": [
        "ID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "BPID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "RequestID",
          "references": "dbo.CampaignAssignmentRequest.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignBucket",
      "source": "dbo.CampaignBucket",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "BucketCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of campaign bucket records (rows)"
        },
        {
          "name": "TotalAmount",
          "expression": "SUM(TotalAmount)",
          "column": "TotalAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of all amounts allocated to the bucket (total investment/revenue)"
        },
        {
          "name": "PrintAmount",
          "expression": "SUM(PrintAmount)",
          "column": "PrintAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount allocated to print channel"
        },
        {
          "name": "PPCAmount",
          "expression": "SUM(PPCAmount)",
          "column": "PPCAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount allocated to pay-per-click channel"
        },
        {
          "name": "XOGRAmount",
          "expression": "SUM(XOGRAmount)",
          "column": "XOGRAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount allocated to XOGR channel"
        },
        {
          "name": "WebSiteAmount",
          "expression": "SUM(WebSiteAmount)",
          "column": "WebSiteAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount allocated to website channel"
        },
        {
          "name": "TargetingAmountCalculated",
          "expression": "SUM(TargetingAmountCalculated)",
          "column": "TargetingAmountCalculated",
          "aggregation": "SUM",
          "business_meaning": "Total targeting amount as calculated by the system"
        },
        {
          "name": "TargetingAmountByUser",
          "expression": "SUM(TargetingAmountByUser)",
          "column": "TargetingAmountByUser",
          "aggregation": "SUM",
          "business_meaning": "Total targeting amount set/overridden by users"
        },
        {
          "name": "AvgScoreTotal",
          "expression": "AVG(ScoreTotal)",
          "column": "ScoreTotal",
          "aggregation": "AVG",
          "business_meaning": "Average overall score for buckets"
        },
        {
          "name": "AvgScoreMainActivity",
          "expression": "AVG(ScoreMainActivity)",
          "column": "ScoreMainActivity",
          "aggregation": "AVG",
          "business_meaning": "Average score for main activity"
        },
        {
          "name": "AvgScoreSeniority",
          "expression": "AVG(ScoreSeniority)",
          "column": "ScoreSeniority",
          "aggregation": "AVG",
          "business_meaning": "Average score for seniority"
        },
        {
          "name": "AvgScoreValueBillingRange",
          "expression": "AVG(ScoreValueBillingRange)",
          "column": "ScoreValueBillingRange",
          "aggregation": "AVG",
          "business_meaning": "Average score for billing value range"
        },
        {
          "name": "AvgScoreCombinationMedium",
          "expression": "AVG(ScoreCombinationMedium)",
          "column": "ScoreCombinationMedium",
          "aggregation": "AVG",
          "business_meaning": "Average score for medium combination"
        },
        {
          "name": "AvgScoreMaxInvestmentMedium",
          "expression": "AVG(ScoreMaxInvestmentMedium)",
          "column": "ScoreMaxInvestmentMedium",
          "aggregation": "AVG",
          "business_meaning": "Average score for maximum investment per medium"
        },
        {
          "name": "AvgScoreCombinationProduct",
          "expression": "AVG(ScoreCombinationProduct)",
          "column": "ScoreCombinationProduct",
          "aggregation": "AVG",
          "business_meaning": "Average score for product combination"
        },
        {
          "name": "AvgScoreCustomerBehavior",
          "expression": "AVG(ScoreCustomerBehavior)",
          "column": "ScoreCustomerBehavior",
          "aggregation": "AVG",
          "business_meaning": "Average score for customer behavior"
        },
        {
          "name": "AvgScoreSalesmanManagement",
          "expression": "AVG(ScoreSalesmanManagement)",
          "column": "ScoreSalesmanManagement",
          "aggregation": "AVG",
          "business_meaning": "Average score for salesman management"
        },
        {
          "name": "AvgScoreDifferenceToAvg",
          "expression": "AVG(ScoreDifferenceToAvg)",
          "column": "ScoreDifferenceToAvg",
          "aggregation": "AVG",
          "business_meaning": "Average difference of the bucket score to campaign average"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        },
        {
          "column": "FileID",
          "references": "dbo.CampaignBucketFileUploadHistory.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignBucketFileUploadHistory",
      "source": "dbo.CampaignBucketFileUploadHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "UploadCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of file upload records (number of files uploaded)"
        },
        {
          "name": "UniqueCampaignsWithUploads",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct campaigns that have at least one file upload"
        },
        {
          "name": "UniqueUploaders",
          "expression": "COUNT(DISTINCT CreatedByUserID)",
          "column": "CreatedByUserID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct users who performed file uploads"
        }
      ],
      "foreign_keys": [
        {
          "column": "CreatedByUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignChannelType",
      "source": "dbo.CampaignChannelType",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalIncludedQuantity",
          "expression": "SUM(IncludedQuantity)",
          "column": "IncludedQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of items/records explicitly included for the campaign channel type"
        },
        {
          "name": "TotalExcludedQuantity",
          "expression": "SUM(ExcludedQuantity)",
          "column": "ExcludedQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of items/records explicitly excluded for the campaign channel type"
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(TotalQuantity)",
          "column": "TotalQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total quantity (included + excluded or overall count) for the campaign channel type"
        },
        {
          "name": "TotalIncludedOthersQuantity",
          "expression": "SUM(IncludedOthersQuantity)",
          "column": "IncludedOthersQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of other included items/records associated with the campaign channel type"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignFixedOffer",
      "source": "dbo.CampaignFixedOffer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "OfferCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of fixed offers (row count)"
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct campaigns that have fixed offers"
        },
        {
          "name": "DistinctChannelTypeCount",
          "expression": "COUNT(DISTINCT ChannelTypeID)",
          "column": "ChannelTypeID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct channel types used by the fixed offers"
        },
        {
          "name": "OffersWithDescriptionCount",
          "expression": "COUNT(Description)",
          "column": "Description",
          "aggregation": "COUNT",
          "business_meaning": "Number of offers that have a non-null description"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignFixedOfferProduct",
      "source": "dbo.CampaignFixedOfferProduct",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(*)",
          "column": "*",
          "aggregation": "COUNT",
          "business_meaning": "Total number of product entries (rows) in the CampaignFixedOfferProduct fact table"
        },
        {
          "name": "DistinctPricelistItems",
          "expression": "COUNT(DISTINCT PricelistItemID)",
          "column": "PricelistItemID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique pricelist items associated with campaign fixed offers"
        },
        {
          "name": "DistinctCampaignFixedOffers",
          "expression": "COUNT(DISTINCT CampaignFixedOfferID)",
          "column": "CampaignFixedOfferID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique campaign fixed offers that have one or more associated products"
        }
      ],
      "foreign_keys": [
        {
          "column": "PricelistItemID",
          "references": "dbo.PricelistItem.ID"
        },
        {
          "column": "CampaignFixedOfferID",
          "references": "dbo.CampaignFixedOffer.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignFixedOfferProductDetail",
      "source": "dbo.CampaignFixedOfferProductDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalNumberOfOccurencies",
          "expression": "SUM(NumberOfOccurencies)",
          "column": "NumberOfOccurencies",
          "aggregation": "SUM",
          "business_meaning": "Total number of occurrences across all CampaignFixedOfferProductDetail records."
        },
        {
          "name": "AverageNumberOfOccurencies",
          "expression": "AVG(NumberOfOccurencies)",
          "column": "NumberOfOccurencies",
          "aggregation": "AVG",
          "business_meaning": "Average number of occurrences per CampaignFixedOfferProductDetail record."
        },
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Count of CampaignFixedOfferProductDetail records (rows) in the table."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignFixedOfferProductID",
          "references": "dbo.CampaignFixedOfferProduct.ID"
        },
        {
          "column": "PriceListItemDetailID",
          "references": "dbo.PricelistItemDetail.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignGroup",
      "source": "dbo.CampaignGroup",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalIncludedQuantity",
          "expression": "SUM(IncludedQuantity)",
          "column": "IncludedQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of items included across campaign groups"
        },
        {
          "name": "AvgIncludedQuantityPerGroup",
          "expression": "AVG(IncludedQuantity)",
          "column": "IncludedQuantity",
          "aggregation": "AVG",
          "business_meaning": "Average number of items included per campaign group"
        },
        {
          "name": "TotalExcludedQuantity",
          "expression": "SUM(ExcludedQuantity)",
          "column": "ExcludedQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of items excluded across campaign groups"
        },
        {
          "name": "AvgExcludedQuantityPerGroup",
          "expression": "AVG(ExcludedQuantity)",
          "column": "ExcludedQuantity",
          "aggregation": "AVG",
          "business_meaning": "Average number of items excluded per campaign group"
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(TotalQuantity)",
          "column": "TotalQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of items (included + excluded) across campaign groups"
        },
        {
          "name": "AvgTotalQuantityPerGroup",
          "expression": "AVG(TotalQuantity)",
          "column": "TotalQuantity",
          "aggregation": "AVG",
          "business_meaning": "Average total number of items per campaign group"
        },
        {
          "name": "TotalIncludedOthersQuantity",
          "expression": "SUM(IncludedOthersQuantity)",
          "column": "IncludedOthersQuantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of items included in 'others' category across campaign groups"
        },
        {
          "name": "AvgIncludedOthersQuantityPerGroup",
          "expression": "AVG(IncludedOthersQuantity)",
          "column": "IncludedOthersQuantity",
          "aggregation": "AVG",
          "business_meaning": "Average number of 'others' items included per campaign group"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignMediumType",
      "source": "dbo.CampaignMediumType",
      "grain": [
        "CampaignTypeID",
        "MediumTypeID"
      ],
      "measures": [
        {
          "name": "AssociationCount",
          "expression": "COUNT(*)",
          "column": "DMKey",
          "aggregation": "COUNT",
          "business_meaning": "Total number of Campaign-Medium associations (row count in the table)."
        },
        {
          "name": "DistinctCampaignTypeCount",
          "expression": "COUNT(DISTINCT CampaignTypeID)",
          "column": "CampaignTypeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct campaign types represented in the mappings."
        },
        {
          "name": "DistinctMediumTypeCount",
          "expression": "COUNT(DISTINCT MediumTypeID)",
          "column": "MediumTypeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct medium types represented in the mappings."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignTypeID",
          "references": "dbo.CampaignType.ID"
        },
        {
          "column": "MediumTypeID",
          "references": "dbo.MediumType.ID"
        }
      ],
      "business_meaning": "Transactional data at CampaignTypeID, MediumTypeID grain"
    },
    {
      "name": "CampaignNewLossCustomer",
      "source": "dbo.CampaignNewLossCustomer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of records in CampaignNewLossCustomer (row count)."
        },
        {
          "name": "NewRecordCount",
          "expression": "SUM(IsNewRecord)",
          "column": "IsNewRecord",
          "aggregation": "SUM",
          "business_meaning": "Number of records flagged as new."
        },
        {
          "name": "NewRecordRate",
          "expression": "AVG(IsNewRecord)",
          "column": "IsNewRecord",
          "aggregation": "AVG",
          "business_meaning": "Proportion of records that are flagged as new (rate between 0 and 1)."
        },
        {
          "name": "RequestedToSuspendCount",
          "expression": "SUM(IsRequestedToSuspend)",
          "column": "IsRequestedToSuspend",
          "aggregation": "SUM",
          "business_meaning": "Number of records where a suspend was requested."
        },
        {
          "name": "RequestedToSuspendRate",
          "expression": "AVG(IsRequestedToSuspend)",
          "column": "IsRequestedToSuspend",
          "aggregation": "AVG",
          "business_meaning": "Proportion of records with a suspend request (rate between 0 and 1)."
        },
        {
          "name": "SuspendedCount",
          "expression": "SUM(IsSuspended)",
          "column": "IsSuspended",
          "aggregation": "SUM",
          "business_meaning": "Number of records that are currently suspended."
        },
        {
          "name": "SuspendedRate",
          "expression": "AVG(IsSuspended)",
          "column": "IsSuspended",
          "aggregation": "AVG",
          "business_meaning": "Proportion of records that are suspended (rate between 0 and 1)."
        },
        {
          "name": "RequestedToResumeCount",
          "expression": "SUM(IsRequestedToResume)",
          "column": "IsRequestedToResume",
          "aggregation": "SUM",
          "business_meaning": "Number of records where a resume was requested."
        },
        {
          "name": "RequestedToResumeRate",
          "expression": "AVG(IsRequestedToResume)",
          "column": "IsRequestedToResume",
          "aggregation": "AVG",
          "business_meaning": "Proportion of records with a resume request (rate between 0 and 1)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignNewLossCustomerRule",
      "source": "dbo.CampaignNewLossCustomerRule",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalCustomerRegionCount",
          "expression": "SUM(CustomerRegionCount)",
          "column": "CustomerRegionCount",
          "aggregation": "SUM",
          "business_meaning": "Total number of customer regions summed across selected campaign rules"
        },
        {
          "name": "TotalCustomerMainActivityCount",
          "expression": "SUM(CustomerMainActivityCount)",
          "column": "CustomerMainActivityCount",
          "aggregation": "SUM",
          "business_meaning": "Total number of customer main activities summed across selected campaign rules"
        },
        {
          "name": "TotalCustomerCount",
          "expression": "SUM(CustomerTotalCount)",
          "column": "CustomerTotalCount",
          "aggregation": "SUM",
          "business_meaning": "Total customers targeted (or counted) summed across selected campaign rules"
        },
        {
          "name": "TotalCustomerIndicatorCount",
          "expression": "SUM(CustomerIndicatorCount)",
          "column": "CustomerIndicatorCount",
          "aggregation": "SUM",
          "business_meaning": "Total number of customer indicators summed across selected campaign rules"
        },
        {
          "name": "TotalCustomerSourceCount",
          "expression": "SUM(CustomerSourceCount)",
          "column": "CustomerSourceCount",
          "aggregation": "SUM",
          "business_meaning": "Total number of customer sources summed across selected campaign rules"
        },
        {
          "name": "RuleCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of campaign rules (rows) in the current filter/selection"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "CreatorUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "DialerGroupID",
          "references": "dbo.DialerGroup.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignNewLossCustomerRuleCustomerIndicator",
      "source": "dbo.CampaignNewLossCustomerRuleCustomerIndicator",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of indicator records (row count) in the table"
        },
        {
          "name": "DistinctRuleCount",
          "expression": "COUNT(DISTINCT RuleID)",
          "column": "RuleID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct rules associated with the customer indicators"
        },
        {
          "name": "DistinctClassifierNodeCount",
          "expression": "COUNT(DISTINCT ClassifierNodeID)",
          "column": "ClassifierNodeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct classifier nodes represented in the indicators"
        }
      ],
      "foreign_keys": [
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignNewLossCustomerRuleCustomerSource",
      "source": "dbo.CampaignNewLossCustomerRuleCustomerSource",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rule-to-customer-source association records (row count)"
        },
        {
          "name": "DistinctCustomerSourceCount",
          "expression": "COUNT(DISTINCT CustomerSourceID)",
          "column": "CustomerSourceID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique customer sources referenced by rules"
        },
        {
          "name": "DistinctRuleCount",
          "expression": "COUNT(DISTINCT RuleID)",
          "column": "RuleID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique rules associated with customer sources"
        }
      ],
      "foreign_keys": [
        {
          "column": "CustomerSourceID",
          "references": "dbo.CustomerSource.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignNewLossCustomerRuleMainActivity",
      "source": "dbo.CampaignNewLossCustomerRuleMainActivity",
      "grain": [
        "ID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignNewLossCustomerRuleSalesman",
      "source": "dbo.CampaignNewLossCustomerRuleSalesman",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Assignment Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rule-to-salesman assignment records in the table"
        },
        {
          "name": "Distinct Salesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "column": "SalesmanID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique salesmen associated with rules"
        },
        {
          "name": "Distinct Rules",
          "expression": "COUNT(DISTINCT RuleID)",
          "column": "RuleID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique rules referenced in the table"
        }
      ],
      "foreign_keys": [
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignNewLossPremiseCustomerItem",
      "source": "dbo.CampaignNewLossPremiseCustomerItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rows (items) in the CampaignNewLossPremiseCustomerItem fact table"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique business points (locations/customers) represented in the data"
        },
        {
          "name": "DistinctSalesmanCount",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "column": "SalesmanID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique salesmen associated with the records"
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct campaigns referenced in the table"
        },
        {
          "name": "DistinctRuleCount",
          "expression": "COUNT(DISTINCT RuleID)",
          "column": "RuleID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct rules that triggered items in the table"
        },
        {
          "name": "ActionCount",
          "expression": "COUNT(Action)",
          "column": "Action",
          "aggregation": "COUNT",
          "business_meaning": "Count of non-null action entries recorded (number of actions logged)"
        },
        {
          "name": "DistinctActionSalesmanCount",
          "expression": "COUNT(DISTINCT ActionSalesmanID)",
          "column": "ActionSalesmanID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique salesmen who performed actions (as recorded by ActionSalesmanID)"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignNewLossSalesmenCustomer",
      "source": "dbo.CampaignNewLossSalesmenCustomer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of records (customer loss events) in the table"
        },
        {
          "name": "DistinctCustomers",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct customers / business points affected"
        },
        {
          "name": "DistinctSalesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "column": "SalesmanID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct salesmen involved"
        },
        {
          "name": "DistinctCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct campaigns represented in the records"
        },
        {
          "name": "DistinctRules",
          "expression": "COUNT(DISTINCT RuleID)",
          "column": "RuleID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct rules that were triggered"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignOrgModel",
      "source": "dbo.CampaignOrgModel",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows (organization nodes) in the campaign organization model"
        },
        {
          "name": "AverageLevel",
          "expression": "AVG(Level)",
          "column": "Level",
          "aggregation": "AVG",
          "business_meaning": "Average hierarchical level of organization nodes within the campaign structure"
        },
        {
          "name": "MinimumLevel",
          "expression": "MIN(Level)",
          "column": "Level",
          "aggregation": "MIN",
          "business_meaning": "Lowest (closest to root) hierarchical level present in the campaign organization model"
        },
        {
          "name": "MaximumLevel",
          "expression": "MAX(Level)",
          "column": "Level",
          "aggregation": "MAX",
          "business_meaning": "Highest (deepest) hierarchical level present in the campaign organization model"
        }
      ],
      "foreign_keys": [
        {
          "column": "ParentID",
          "references": "dbo.CampaignOrgModel.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignOrgPerson",
      "source": "dbo.CampaignOrgPerson",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AssignmentCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of CampaignOrgPerson records (assignments)"
        },
        {
          "name": "UniqueUserCount",
          "expression": "COUNT(DISTINCT UserID)",
          "column": "UserID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct users involved in campaigns"
        },
        {
          "name": "StoppedCount",
          "expression": "SUM(CASE WHEN IsStopped = 1 THEN 1 ELSE 0 END)",
          "column": "IsStopped",
          "aggregation": "SUM",
          "business_meaning": "Number of assignments that have been marked as stopped"
        },
        {
          "name": "ActiveCount",
          "expression": "SUM(CASE WHEN IsStopped = 0 THEN 1 ELSE 0 END)",
          "column": "IsStopped",
          "aggregation": "SUM",
          "business_meaning": "Number of assignments currently not stopped (active assignments)"
        },
        {
          "name": "ActiveRate",
          "expression": "AVG(CASE WHEN IsStopped = 0 THEN 1.0 ELSE 0.0 END)",
          "column": "IsStopped",
          "aggregation": "AVG",
          "business_meaning": "Proportion of assignments that are active (useful as a percentage when multiplied by 100)"
        },
        {
          "name": "AvgAssignmentDurationDays",
          "expression": "AVG(DATEDIFF(day, StartDate, EndDate))",
          "column": "StartDate, EndDate",
          "aggregation": "AVG",
          "business_meaning": "Average duration in days between StartDate and EndDate for assignments (null or ongoing assignments should be handled appropriately)"
        },
        {
          "name": "TotalAssignmentDurationDays",
          "expression": "SUM(DATEDIFF(day, StartDate, EndDate))",
          "column": "StartDate, EndDate",
          "aggregation": "SUM",
          "business_meaning": "Total summed duration in days across all assignments (useful for workload or coverage analysis)"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignOrgModelID",
          "references": "dbo.CampaignOrgModel.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignSalesman",
      "source": "dbo.CampaignSalesman",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AssignmentCount",
          "expression": "COUNT(*)",
          "column": null,
          "aggregation": "COUNT",
          "business_meaning": "Total number of campaign-salesman assignment rows"
        },
        {
          "name": "UniqueSalesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "column": "SalesmanID",
          "aggregation": "COUNT(DISTINCT)",
          "business_meaning": "Number of distinct salesmen assigned to campaigns"
        },
        {
          "name": "UniqueCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT(DISTINCT)",
          "business_meaning": "Number of distinct campaigns that have salesman assignments"
        }
      ],
      "foreign_keys": [
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignSalesmanNewCustomerTarget",
      "source": "dbo.CampaignSalesmanNewCustomerTarget",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalTarget",
          "expression": "SUM(Target)",
          "column": "Target",
          "aggregation": "SUM",
          "business_meaning": "Sum of the target amount for the campaign-salesman-segment across all records (total planned target)."
        },
        {
          "name": "AverageTarget",
          "expression": "AVG(Target)",
          "column": "Target",
          "aggregation": "AVG",
          "business_meaning": "Average target amount per record for the campaign-salesman-segment (useful to understand typical target size)."
        },
        {
          "name": "TotalDailyTarget",
          "expression": "SUM(DailyTarget)",
          "column": "DailyTarget",
          "aggregation": "SUM",
          "business_meaning": "Sum of daily targets across records (total daily target capacity for the selected scope)."
        },
        {
          "name": "AverageDailyTarget",
          "expression": "AVG(DailyTarget)",
          "column": "DailyTarget",
          "aggregation": "AVG",
          "business_meaning": "Average daily target per record (typical daily target assigned)."
        },
        {
          "name": "TotalUserDailyTarget",
          "expression": "SUM(UserDailyTarget)",
          "column": "UserDailyTarget",
          "aggregation": "SUM",
          "business_meaning": "Sum of user-specific daily targets across records (total daily target considering user overrides)."
        },
        {
          "name": "AverageUserDailyTarget",
          "expression": "AVG(UserDailyTarget)",
          "column": "UserDailyTarget",
          "aggregation": "AVG",
          "business_meaning": "Average user-specific daily target per record (typical user-assigned daily target)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignSalesMarketCalandar",
      "source": "dbo.CampaignSalesMarketCalandar",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of calendar rows (records) in CampaignSalesMarketCalandar within the current filter context."
        },
        {
          "name": "DistinctSalesmanCount",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "column": "SalesmanID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique salesmen represented in the calendar within the current filter context."
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct campaigns represented in the calendar within the current filter context."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignSalesmenAbsence",
      "source": "dbo.CampaignSalesmenAbsence",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AbsenceCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of absence records (each row represents one absence event)"
        },
        {
          "name": "RecordedAbsenceDays",
          "expression": "COUNT(AbsenceDay)",
          "column": "AbsenceDay",
          "aggregation": "COUNT",
          "business_meaning": "Number of non-null AbsenceDay entries (count of recorded absence days)"
        },
        {
          "name": "DistinctSalesmenAbsent",
          "expression": "COUNT(DISTINCT UserID)",
          "column": "UserID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique salesmen who were absent in the scoped period or campaign"
        },
        {
          "name": "AverageAbsencesPerSalesman",
          "expression": "CASE WHEN COUNT(DISTINCT UserID) = 0 THEN 0 ELSE COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT UserID), 0) END",
          "column": "ID",
          "aggregation": "AVERAGE (CALCULATED)",
          "business_meaning": "Average number of absence records per distinct absent salesman (for the selected scope)"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignScoreMainActivity",
      "source": "dbo.CampaignScoreMainActivity",
      "grain": [
        "ID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        },
        {
          "column": "CampaignScoreMainActivityGroupID",
          "references": "dbo.CampaignScoreMainActivityGroup.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignScoreMainActivityGroupSnapshot",
      "source": "dbo.CampaignScoreMainActivityGroupSnapshot",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "column": "Amount",
          "aggregation": "SUM",
          "business_meaning": "Total amount across all snapshots in the CampaignScoreMainActivityGroupSnapshot table"
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "column": "Amount",
          "aggregation": "AVG",
          "business_meaning": "Average amount per snapshot"
        },
        {
          "name": "MaxAmount",
          "expression": "MAX(Amount)",
          "column": "Amount",
          "aggregation": "MAX",
          "business_meaning": "Maximum amount observed in a single snapshot"
        },
        {
          "name": "MinAmount",
          "expression": "MIN(Amount)",
          "column": "Amount",
          "aggregation": "MIN",
          "business_meaning": "Minimum amount observed in a single snapshot"
        },
        {
          "name": "SnapshotCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of snapshot records"
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct campaigns represented in the snapshots"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "CampaignScoreMainActivityGroupID",
          "references": "dbo.CampaignScoreMainActivityGroup.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignScoreReport",
      "source": "dbo.CampaignScoreReport",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "NumberOfCustomers",
          "expression": "SUM(NumberOfCustomers)",
          "column": "NumberOfCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customers in the campaign/segment (summed across the report grain)."
        },
        {
          "name": "TotalCoAmount",
          "expression": "SUM(TotalCoAmount)",
          "column": "TotalCoAmount",
          "aggregation": "SUM",
          "business_meaning": "Total CO amount (monetary) associated with the campaign/segment."
        },
        {
          "name": "TotalRoCoAmount",
          "expression": "SUM(TotalRoCoAmount)",
          "column": "TotalRoCoAmount",
          "aggregation": "SUM",
          "business_meaning": "Total RO CO amount (monetary) associated with the campaign/segment."
        },
        {
          "name": "TotalNew",
          "expression": "SUM(TotalNew)",
          "column": "TotalNew",
          "aggregation": "SUM",
          "business_meaning": "Total new amount (monetary) from the campaign/segment."
        },
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of report rows/records (useful for row-level counts at the current grain)."
        },
        {
          "name": "AverageCoAmountPerCustomer",
          "expression": "SUM(TotalCoAmount) / NULLIF(SUM(NumberOfCustomers), 0)",
          "column": "TotalCoAmount",
          "aggregation": "CALCULATED",
          "business_meaning": "Average CO amount per customer (uses aggregated totals to avoid row-level distortions)."
        },
        {
          "name": "AverageRoCoAmountPerCustomer",
          "expression": "SUM(TotalRoCoAmount) / NULLIF(SUM(NumberOfCustomers), 0)",
          "column": "TotalRoCoAmount",
          "aggregation": "CALCULATED",
          "business_meaning": "Average RO CO amount per customer (aggregated)."
        },
        {
          "name": "AverageNewPerCustomer",
          "expression": "SUM(TotalNew) / NULLIF(SUM(NumberOfCustomers), 0)",
          "column": "TotalNew",
          "aggregation": "CALCULATED",
          "business_meaning": "Average new amount per customer (aggregated)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "MangerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SupervisorID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CampaignScoreSenioritySnapshot",
      "source": "dbo.CampaignScoreSenioritySnapshot",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "column": "Amount",
          "aggregation": "SUM",
          "business_meaning": "Total amount aggregated for the campaign/classifier snapshot (e.g., total score or monetary amount)"
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "column": "Amount",
          "aggregation": "AVG",
          "business_meaning": "Average amount per snapshot record"
        },
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of snapshot records"
        },
        {
          "name": "DistinctClassifierNodeCount",
          "expression": "COUNT(DISTINCT ClassifierNodeID)",
          "column": "ClassifierNodeID",
          "aggregation": "COUNT(DISTINCT)",
          "business_meaning": "Number of unique classifier nodes represented in the snapshot"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Case",
      "source": "dbo.Case",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Case Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of cases (row count)."
        },
        {
          "name": "Completed Case Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "column": "CompletedOn",
          "aggregation": "SUM",
          "business_meaning": "Number of cases that have been completed."
        },
        {
          "name": "Open Case Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "column": "CompletedOn",
          "aggregation": "SUM",
          "business_meaning": "Number of cases that are still open (not completed)."
        },
        {
          "name": "Average Time to Complete (Days)",
          "expression": "AVG(DATEDIFF(day, CreatedOn, CompletedOn))",
          "column": "CreatedOn / CompletedOn",
          "aggregation": "AVG",
          "business_meaning": "Average number of days between case creation and completion for completed cases."
        },
        {
          "name": "Average Case Age (Days)",
          "expression": "AVG(DATEDIFF(day, CreatedOn, ISNULL(CompletedOn, GETDATE())))",
          "column": "CreatedOn / CompletedOn",
          "aggregation": "AVG",
          "business_meaning": "Average age in days of cases; uses current date for open cases and completion date for closed cases."
        },
        {
          "name": "Distinct Context Entities",
          "expression": "COUNT(DISTINCT ContextEntityID)",
          "column": "ContextEntityID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct context entities referenced by cases (e.g., distinct customers or related entities)."
        }
      ],
      "foreign_keys": [
        {
          "column": "ReferencePointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "InitiatorID",
          "references": "dbo.User.ID"
        },
        {
          "column": "OwnerUser",
          "references": "dbo.User.ID"
        },
        {
          "column": "MasterCaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "ParentTaskId",
          "references": "dbo.Task.ID"
        },
        {
          "column": "PermanentOwnerId",
          "references": "dbo.User.ID"
        },
        {
          "column": "CaseTypeID",
          "references": "dbo.CaseType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CaseAttachment",
      "source": "dbo.CaseAttachment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Attachment Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of attachment records."
        },
        {
          "name": "Distinct Case Count",
          "expression": "COUNT(DISTINCT CaseID)",
          "column": "CaseID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique cases that have one or more attachments."
        },
        {
          "name": "Distinct Task Count",
          "expression": "COUNT(DISTINCT TaskID)",
          "column": "TaskID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique tasks associated with attachments."
        },
        {
          "name": "Deleted Attachment Count",
          "expression": "SUM(CASE WHEN IsDeleted = 1 THEN 1 ELSE 0 END)",
          "column": "IsDeleted",
          "aggregation": "SUM",
          "business_meaning": "Count of attachments marked as deleted."
        },
        {
          "name": "Active Attachment Count",
          "expression": "SUM(CASE WHEN IsDeleted = 0 OR IsDeleted IS NULL THEN 1 ELSE 0 END)",
          "column": "IsDeleted",
          "aggregation": "SUM",
          "business_meaning": "Count of attachments that are not marked deleted (active/current)."
        },
        {
          "name": "Last-Version Attachment Count",
          "expression": "SUM(CASE WHEN IsLast = 1 THEN 1 ELSE 0 END)",
          "column": "IsLast",
          "aggregation": "SUM",
          "business_meaning": "Count of attachments flagged as the last (latest) version."
        },
        {
          "name": "Distinct Attachment Types",
          "expression": "COUNT(DISTINCT AttachmentType)",
          "column": "AttachmentType",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct attachment type codes used."
        },
        {
          "name": "Average Attachments per Case",
          "expression": "CASE WHEN COUNT(DISTINCT CaseID) = 0 THEN NULL ELSE COUNT(ID) * 1.0 / COUNT(DISTINCT CaseID) END",
          "column": "ID",
          "aggregation": "CALCULATED",
          "business_meaning": "Average number of attachments per case."
        }
      ],
      "foreign_keys": [
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "CaseAttachmentTypeID",
          "references": "dbo.CaseAttachmentType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CaseComment",
      "source": "dbo.CaseComment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Comment Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of comments recorded in the CaseComment table"
        },
        {
          "name": "Distinct Cases Commented",
          "expression": "COUNT(DISTINCT CaseID)",
          "column": "CaseID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique cases that have at least one comment"
        },
        {
          "name": "Distinct Tasks Commented",
          "expression": "COUNT(DISTINCT TaskID)",
          "column": "TaskID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique tasks referenced by comments"
        },
        {
          "name": "Distinct DMKey Count",
          "expression": "COUNT(DISTINCT DMKey)",
          "column": "DMKey",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct DMKey values referenced in comments (useful for tracking linked external entities)"
        },
        {
          "name": "Average Comments per Case",
          "expression": "CASE WHEN COUNT(DISTINCT CaseID) = 0 THEN 0 ELSE (COUNT(ID) * 1.0) / COUNT(DISTINCT CaseID) END",
          "column": "ID",
          "aggregation": "CALCULATED",
          "business_meaning": "Average number of comments per case over the selected scope (comments \u00f7 distinct cases)"
        }
      ],
      "foreign_keys": [
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ChannelTargeting",
      "source": "dbo.ChannelTargeting",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Preprinted Customer Number (Total)",
          "expression": "SUM(PreprintedCustomerNumber)",
          "column": "PreprintedCustomerNumber",
          "aggregation": "SUM",
          "business_meaning": "Total number of preprinted customers targeted"
        },
        {
          "name": "Preprinted Amount (Total)",
          "expression": "SUM(PreprintedAmount)",
          "column": "PreprintedAmount",
          "aggregation": "SUM",
          "business_meaning": "Total preprinted monetary amount"
        },
        {
          "name": "Loss Customer Percentage (Average)",
          "expression": "AVG(LossCustomerPercentage)",
          "column": "LossCustomerPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of customers lost"
        },
        {
          "name": "Loss Amount Percentage (Average)",
          "expression": "AVG(LossAmountPercentage)",
          "column": "LossAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount lost"
        },
        {
          "name": "\u0399ncrease Customer Percentage (Average)",
          "expression": "AVG(\\u0399ncreaseCustomerPercentage)",
          "column": "\\u0399ncreaseCustomerPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of customers with increased activity"
        },
        {
          "name": "\u0399ncrease Amount Percentage (Average)",
          "expression": "AVG(\\u0399ncreaseAmountPercentage)",
          "column": "\\u0399ncreaseAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount increase"
        },
        {
          "name": "Reduction Customer Percentage (Average)",
          "expression": "AVG(ReductionCustomerPercentage)",
          "column": "ReductionCustomerPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of customers with reduced activity"
        },
        {
          "name": "Reduction Amount Percentage (Average)",
          "expression": "AVG(ReductionAmountPercentage)",
          "column": "ReductionAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount reduction"
        },
        {
          "name": "AvoNew (Total)",
          "expression": "SUM(AvoNew)",
          "column": "AvoNew",
          "aggregation": "SUM",
          "business_meaning": "Total AvoNew (business-specific count)"
        },
        {
          "name": "Number Of Visits (Total)",
          "expression": "SUM(NumberOfVisits)",
          "column": "NumberOfVisits",
          "aggregation": "SUM",
          "business_meaning": "Total recorded visits"
        },
        {
          "name": "Number Of Visits CO (Total)",
          "expression": "SUM(NumberOfVisitsCO)",
          "column": "NumberOfVisitsCO",
          "aggregation": "SUM",
          "business_meaning": "Total number of CO visits"
        },
        {
          "name": "Conversion Rate Percentage (Average)",
          "expression": "AVG(ConvRatePercentage)",
          "column": "ConvRatePercentage",
          "aggregation": "AVG",
          "business_meaning": "Average conversion rate percentage"
        },
        {
          "name": "Number Of CO (Total)",
          "expression": "SUM(NumberOfCO)",
          "column": "NumberOfCO",
          "aggregation": "SUM",
          "business_meaning": "Total count of CO"
        },
        {
          "name": "Amount Of CO (Total)",
          "expression": "SUM(AmountOfCO)",
          "column": "AmountOfCO",
          "aggregation": "SUM",
          "business_meaning": "Total monetary amount of CO"
        },
        {
          "name": "Number Of CO Percentage (Average)",
          "expression": "AVG(NumberOfCOPercentage)",
          "column": "NumberOfCOPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage share of CO by count"
        },
        {
          "name": "Amount Of CO Percentage (Average)",
          "expression": "AVG(AmountOfCOPercentage)",
          "column": "AmountOfCOPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage share of CO by amount"
        },
        {
          "name": "Loss Customers (Total)",
          "expression": "SUM(LossCustomers)",
          "column": "LossCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of lost customers"
        },
        {
          "name": "Loss Amount (Total)",
          "expression": "SUM(LossAmount)",
          "column": "LossAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount lost"
        },
        {
          "name": "\u0399ncrease Customers (Total)",
          "expression": "SUM(\\u0399ncreaseCustomers)",
          "column": "\\u0399ncreaseCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customers with increased activity"
        },
        {
          "name": "\u0399ncrease Amount (Total)",
          "expression": "SUM(\\u0399ncreaseAmount)",
          "column": "\\u0399ncreaseAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount increase"
        },
        {
          "name": "Reduction Customers (Total)",
          "expression": "SUM(ReductionCustomers)",
          "column": "ReductionCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customers with reduced activity"
        },
        {
          "name": "Reduction Amount (Total)",
          "expression": "SUM(ReductionAmount)",
          "column": "ReductionAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount reduction"
        },
        {
          "name": "No Changes Customers (Total)",
          "expression": "SUM(NoChangesCustomers)",
          "column": "NoChangesCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total customers with no changes"
        },
        {
          "name": "No Changes Customers Percentage (Average)",
          "expression": "AVG(NoChangesCustomersPercentage)",
          "column": "NoChangesCustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of customers with no changes"
        },
        {
          "name": "No Changes Amount (Total)",
          "expression": "SUM(NoChangesAmount)",
          "column": "NoChangesAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount with no changes"
        },
        {
          "name": "No Changes Amount Percentage (Average)",
          "expression": "AVG(NoChangesAmountPercentage)",
          "column": "NoChangesAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount with no changes"
        },
        {
          "name": "ROCO Customers (Total)",
          "expression": "SUM(ROCOCustomers)",
          "column": "ROCOCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total ROCO customers"
        },
        {
          "name": "ROCO Customers Percentage (Average)",
          "expression": "AVG(ROCOCustomersPercentage)",
          "column": "ROCOCustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of ROCO customers"
        },
        {
          "name": "ROCO Amount (Total)",
          "expression": "SUM(ROCOAmount)",
          "column": "ROCOAmount",
          "aggregation": "SUM",
          "business_meaning": "Total ROCO amount"
        },
        {
          "name": "ROCO Amount Percentage (Average)",
          "expression": "AVG(ROCOAmountPercentage)",
          "column": "ROCOAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of ROCO amount"
        },
        {
          "name": "New Customers (Total)",
          "expression": "SUM(NewCustomers)",
          "column": "NewCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total new customers acquired"
        },
        {
          "name": "New Customers Percentage (Average)",
          "expression": "AVG(NewCustomersPercentage)",
          "column": "NewCustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of new customers"
        },
        {
          "name": "New Amount (Total)",
          "expression": "SUM(NewAmount)",
          "column": "NewAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount from new customers"
        },
        {
          "name": "New Amount Percentage (Average)",
          "expression": "AVG(NewAmountPercentage)",
          "column": "NewAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount from new customers"
        },
        {
          "name": "CI Customers (Total)",
          "expression": "SUM(CICustomers)",
          "column": "CICustomers",
          "aggregation": "SUM",
          "business_meaning": "Total CI customers"
        },
        {
          "name": "CI Customers Percentage (Average)",
          "expression": "AVG(CICustomersPercentage)",
          "column": "CICustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of CI customers"
        },
        {
          "name": "CI Amount (Total)",
          "expression": "SUM(CIAmount)",
          "column": "CIAmount",
          "aggregation": "SUM",
          "business_meaning": "Total CI amount"
        },
        {
          "name": "CI Amount Percentage (Average)",
          "expression": "AVG(CIAmountPercentage)",
          "column": "CIAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of CI amount"
        },
        {
          "name": "Working Days (Total)",
          "expression": "SUM(WorkingDays)",
          "column": "WorkingDays",
          "aggregation": "SUM",
          "business_meaning": "Total working days (sum across records)"
        },
        {
          "name": "Salesmen (Total)",
          "expression": "SUM(Salesmen)",
          "column": "Salesmen",
          "aggregation": "SUM",
          "business_meaning": "Total number of salesmen (sum across records)"
        },
        {
          "name": "Mandays (Total)",
          "expression": "SUM(Mandays)",
          "column": "Mandays",
          "aggregation": "SUM",
          "business_meaning": "Total mandays (sum of person-days)"
        },
        {
          "name": "Number Of Visits Total (Total)",
          "expression": "SUM(NumberOfVisitsTotal)",
          "column": "NumberOfVisitsTotal",
          "aggregation": "SUM",
          "business_meaning": "Aggregate of total visits metric"
        },
        {
          "name": "Number Of Visits CO Total (Total)",
          "expression": "SUM(NumberOfVisitsCOTotal)",
          "column": "NumberOfVisitsCOTotal",
          "aggregation": "SUM",
          "business_meaning": "Aggregate of CO total visits metric"
        },
        {
          "name": "Number Of Visits New (Total)",
          "expression": "SUM(NumberOfVisitsNew)",
          "column": "NumberOfVisitsNew",
          "aggregation": "SUM",
          "business_meaning": "Aggregate of new visits metric"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ChannelID",
          "references": "dbo.ChannelType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CheckDetail",
      "source": "dbo.CheckDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Check Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of check detail records (number of checks)"
        },
        {
          "name": "Distinct Check Numbers",
          "expression": "COUNT(DISTINCT CheckNumber)",
          "column": "CheckNumber",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct check numbers in the dataset"
        },
        {
          "name": "Same Publisher Count",
          "expression": "SUM(CASE WHEN IsSamePublisher = 1 THEN 1 ELSE 0 END)",
          "column": "IsSamePublisher",
          "aggregation": "SUM",
          "business_meaning": "Count of checks where the publisher matches the reference (IsSamePublisher = true)"
        },
        {
          "name": "Average Days Between Publish and Expiration",
          "expression": "AVG(DATEDIFF(day, CheckPublishDate, CheckExpirationDate))",
          "column": "CheckExpirationDate",
          "aggregation": "AVG",
          "business_meaning": "Average number of days between check publish date and expiration date"
        }
      ],
      "foreign_keys": [
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "ID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Classification",
      "source": "dbo.Classification",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Classification Count",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of classification records (row count)"
        },
        {
          "name": "Distinct Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique business points that have classifications"
        },
        {
          "name": "Distinct Classifiers",
          "expression": "COUNT(DISTINCT ClassifierID)",
          "column": "ClassifierID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique classifiers used in classifications"
        },
        {
          "name": "Distinct Classifier Nodes",
          "expression": "COUNT(DISTINCT ClassifierNodeID)",
          "column": "ClassifierNodeID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique classifier nodes assigned in classifications"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ClassifierID",
          "references": "dbo.Classifier.ID"
        },
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Classifier",
      "source": "dbo.Classifier",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Classifier Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of classifier records"
        },
        {
          "name": "Distinct Classifier Trees",
          "expression": "COUNT(DISTINCT ClassifierTreeID)",
          "column": "ClassifierTreeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct classifier trees referenced"
        },
        {
          "name": "Classifiers With Default Node",
          "expression": "COUNT(DefaultNodeId)",
          "column": "DefaultNodeId",
          "aggregation": "COUNT",
          "business_meaning": "Number of classifiers that have a default node assigned (non-null DefaultNodeId)"
        },
        {
          "name": "Distinct DM Keys",
          "expression": "COUNT(DISTINCT DMKey)",
          "column": "DMKey",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique DMKey values referenced by classifiers"
        }
      ],
      "foreign_keys": [
        {
          "column": "ClassifierTreeID",
          "references": "dbo.ClassifierTree.ID"
        },
        {
          "column": "DefaultNodeId",
          "references": "dbo.ClassifierNode.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ClassifierNode",
      "source": "dbo.ClassifierNode",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "NodeCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of classifier nodes (row count)"
        },
        {
          "name": "AverageSubtreeSize",
          "expression": "AVG(RightIndex - LeftIndex + 1)",
          "column": "RightIndex, LeftIndex",
          "aggregation": "AVG",
          "business_meaning": "Average size of the subtree for nodes (based on nested-set indexes)"
        },
        {
          "name": "TotalSubtreeSize",
          "expression": "SUM(RightIndex - LeftIndex + 1)",
          "column": "RightIndex, LeftIndex",
          "aggregation": "SUM",
          "business_meaning": "Sum of subtree sizes across selected nodes (derived measure from nested-set indexes)"
        },
        {
          "name": "MaxRightIndex",
          "expression": "MAX(RightIndex)",
          "column": "RightIndex",
          "aggregation": "MAX",
          "business_meaning": "Maximum RightIndex value (indicates the span of the nested-set indexing)"
        },
        {
          "name": "MinLeftIndex",
          "expression": "MIN(LeftIndex)",
          "column": "LeftIndex",
          "aggregation": "MIN",
          "business_meaning": "Minimum LeftIndex value (indicates the start of the nested-set indexing)"
        }
      ],
      "foreign_keys": [
        {
          "column": "ParentNodeID",
          "references": "dbo.ClassifierNode.ID"
        },
        {
          "column": "ClassifierTreeID",
          "references": "dbo.ClassifierTree.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ClassifierNodeMasterHeadings",
      "source": "dbo.ClassifierNodeMasterHeadings",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "column": "*",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rows (classifier-to-master-heading associations) in the table"
        },
        {
          "name": "DistinctClassifierNodeCount",
          "expression": "COUNT(DISTINCT ClassifierNodeID)",
          "column": "ClassifierNodeID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique classifier nodes referenced in this table"
        },
        {
          "name": "DistinctMasterHeadingCount",
          "expression": "COUNT(DISTINCT MasterHeadingID)",
          "column": "MasterHeadingID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique master headings referenced in this table"
        },
        {
          "name": "DistinctDMKeyCount",
          "expression": "COUNT(DISTINCT DMKey)",
          "column": "DMKey",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct DMKey values (distinct referenced dimension keys)"
        }
      ],
      "foreign_keys": [
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        },
        {
          "column": "MasterHeadingID",
          "references": "dbo.MasterHeading.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ClickToCallHarmonyHistory",
      "source": "dbo.ClickToCallHarmonyHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalCalls",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of click-to-call events (row count of call history)."
        },
        {
          "name": "UniqueCallSessions",
          "expression": "COUNT(DISTINCT KSCallIdentifier)",
          "column": "KSCallIdentifier",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct call sessions tracked by KSCallIdentifier."
        },
        {
          "name": "UniqueUsers",
          "expression": "COUNT(DISTINCT UserID)",
          "column": "UserID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Count of distinct users who initiated or were involved in calls."
        },
        {
          "name": "UniqueTasks",
          "expression": "COUNT(DISTINCT TaskID)",
          "column": "TaskID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Count of distinct tasks associated with calls."
        },
        {
          "name": "UniquePhoneNumbers",
          "expression": "COUNT(DISTINCT Phone)",
          "column": "Phone",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct phone numbers called or used in call events."
        }
      ],
      "foreign_keys": [
        {
          "column": "TgivID",
          "references": "dbo.TargetGroupItemValue.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ContactPhone",
      "source": "dbo.ContactPhone",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PhoneRecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of phone records (rows) in the ContactPhone table."
        },
        {
          "name": "DistinctContactCount",
          "expression": "COUNT(DISTINCT ContactID)",
          "column": "ContactID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct contacts that have one or more phone records."
        },
        {
          "name": "ActivePhoneCount",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Count of phone records marked as active."
        },
        {
          "name": "ExtensionCount",
          "expression": "COUNT(Extension)",
          "column": "Extension",
          "aggregation": "COUNT",
          "business_meaning": "Number of phone records that have a non-null extension."
        },
        {
          "name": "AveragePhonesPerContact",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT ContactID), 0)",
          "column": "ID,ContactID",
          "aggregation": "CALCULATED",
          "business_meaning": "Average number of phone records per contact."
        }
      ],
      "foreign_keys": [
        {
          "column": "ContactID",
          "references": "dbo.Contact.ID"
        },
        {
          "column": "Number",
          "references": "dbo.Phone.Number"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ContactRelationship",
      "source": "dbo.ContactRelationship",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ContactRelationshipCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of contact relationship records (rows) in the table"
        },
        {
          "name": "ActiveRelationshipCount",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Number of contact relationships marked as active"
        },
        {
          "name": "ContactPersonCount",
          "expression": "SUM(CASE WHEN IsContactPerson = 1 THEN 1 ELSE 0 END)",
          "column": "IsContactPerson",
          "aggregation": "SUM",
          "business_meaning": "Number of relationships flagged as a contact person"
        },
        {
          "name": "UniqueContacts",
          "expression": "COUNT(DISTINCT ContactID)",
          "column": "ContactID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Count of distinct contacts involved in relationships"
        },
        {
          "name": "DistinctRelationshipTypes",
          "expression": "COUNT(DISTINCT ContactRelationshipTypeID)",
          "column": "ContactRelationshipTypeID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct contact relationship types present"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ContactID",
          "references": "dbo.Contact.ID"
        },
        {
          "column": "ContactRelationshipTypeID",
          "references": "dbo.ContactRelationshipType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ContentAttributeValue",
      "source": "dbo.ContentAttributeValue",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Record Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of ContentAttributeValue records (rows) in the table"
        },
        {
          "name": "Non-null Value Count",
          "expression": "COUNT(Value)",
          "column": "Value",
          "aggregation": "COUNT",
          "business_meaning": "Number of records where the Value column is populated (non-null)"
        },
        {
          "name": "Distinct Contract Products",
          "expression": "COUNT(DISTINCT ContractProductID)",
          "column": "ContractProductID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique contract products referenced by attribute values"
        },
        {
          "name": "Distinct Content Attributes",
          "expression": "COUNT(DISTINCT ContentAttributeDefinitionID)",
          "column": "ContentAttributeDefinitionID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique content attribute definitions present in the data"
        },
        {
          "name": "Distinct Product Parts",
          "expression": "COUNT(DISTINCT ProductPartID)",
          "column": "ProductPartID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique product parts referenced by attribute values"
        },
        {
          "name": "Distinct Advertisements",
          "expression": "COUNT(DISTINCT AdvertisementID)",
          "column": "AdvertisementID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique advertisements associated with attribute values"
        },
        {
          "name": "Average Sequence Number",
          "expression": "AVG(SeqNo)",
          "column": "SeqNo",
          "aggregation": "AVG",
          "business_meaning": "Average SeqNo value (useful for analyzing typical ordering/position where SeqNo is applicable)"
        },
        {
          "name": "Minimum Sequence Number",
          "expression": "MIN(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MIN",
          "business_meaning": "Lowest SeqNo observed (useful for boundary/ordering checks)"
        },
        {
          "name": "Maximum Sequence Number",
          "expression": "MAX(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MAX",
          "business_meaning": "Highest SeqNo observed (useful for boundary/ordering checks)"
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractProductID",
          "references": "dbo.ContractProduct.ID"
        },
        {
          "column": "AdvertisementID",
          "references": "dbo.Advertisement.ID"
        },
        {
          "column": "ContentAttributeDefinitionID",
          "references": "dbo.ContentAttributeDefinition.ID"
        },
        {
          "column": "ProductPartID",
          "references": "dbo.ProductPart.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Contract",
      "source": "dbo.Contract",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ContractCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of contracts (row count)"
        },
        {
          "name": "TotalFinalPrice",
          "expression": "SUM(FinalPrice)",
          "column": "FinalPrice",
          "aggregation": "SUM",
          "business_meaning": "Total final price across contracts (aggregate revenue/price)"
        },
        {
          "name": "AverageFinalPrice",
          "expression": "AVG(FinalPrice)",
          "column": "FinalPrice",
          "aggregation": "AVG",
          "business_meaning": "Average final price per contract"
        },
        {
          "name": "TotalUserDiscountAmount",
          "expression": "SUM(UserDiscountAmount)",
          "column": "UserDiscountAmount",
          "aggregation": "SUM",
          "business_meaning": "Total user discount amount applied across contracts"
        },
        {
          "name": "AverageUserDiscountAmount",
          "expression": "AVG(UserDiscountAmount)",
          "column": "UserDiscountAmount",
          "aggregation": "AVG",
          "business_meaning": "Average user discount amount per contract"
        },
        {
          "name": "TotalInitialUserDiscountAmount",
          "expression": "SUM(InitialUserDiscountAmount)",
          "column": "InitialUserDiscountAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of initial user discount amounts (at contract creation)"
        },
        {
          "name": "TotalUserDiscountAmountPPC",
          "expression": "SUM(UserDiscountAmountPPC)",
          "column": "UserDiscountAmountPPC",
          "aggregation": "SUM",
          "business_meaning": "Total user discount amount expressed in PPC (monetary)"
        },
        {
          "name": "AverageUserDiscountPercent",
          "expression": "AVG(UserDiscountPercent)",
          "column": "UserDiscountPercent",
          "aggregation": "AVG",
          "business_meaning": "Average discount percentage applied across contracts"
        },
        {
          "name": "TotalRenewalNumber",
          "expression": "SUM(RenewalNumber)",
          "column": "RenewalNumber",
          "aggregation": "SUM",
          "business_meaning": "Sum of renewal counts across contracts (total renewals)"
        },
        {
          "name": "AverageRenewalNumber",
          "expression": "AVG(RenewalNumber)",
          "column": "RenewalNumber",
          "aggregation": "AVG",
          "business_meaning": "Average number of renewals per contract"
        }
      ],
      "foreign_keys": [
        {
          "column": "BillingPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ShippingPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ActualBPOwnerID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "CampaignTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        },
        {
          "column": "BillingEmailID",
          "references": "dbo.ContactEmail.ID"
        },
        {
          "column": "ArchivedNumberID",
          "references": "dbo.ArchivedNumber.ID"
        },
        {
          "column": "PdfID",
          "references": "dbo.ContractDocument.ID"
        },
        {
          "column": "SubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "InitialSubscriptionContractId",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "OrigionalContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ShippingFaxID",
          "references": "dbo.PointPhone.ID"
        },
        {
          "column": "ShippingEmailID",
          "references": "dbo.PointEmail.ID"
        },
        {
          "column": "SalesManID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ContractArchivedNumberChangeHistory",
      "source": "dbo.ContractArchivedNumberChangeHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "NumberOfChanges",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of archived-number change events recorded"
        },
        {
          "name": "DistinctContractsChanged",
          "expression": "COUNT(DISTINCT ContractID)",
          "column": "ContractID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique contracts that had an archived-number change"
        },
        {
          "name": "SumArchivedNumberChange",
          "expression": "SUM(NewArchivedNumber - OldArchivedNumber)",
          "column": "NewArchivedNumber - OldArchivedNumber",
          "aggregation": "SUM",
          "business_meaning": "Net sum of archived-number changes across all events (positive for overall increases, negative for decreases)"
        },
        {
          "name": "AvgArchivedNumberChange",
          "expression": "AVG(NewArchivedNumber - OldArchivedNumber)",
          "column": "NewArchivedNumber - OldArchivedNumber",
          "aggregation": "AVG",
          "business_meaning": "Average change in archived number per change event"
        },
        {
          "name": "MinArchivedNumberChange",
          "expression": "MIN(NewArchivedNumber - OldArchivedNumber)",
          "column": "NewArchivedNumber - OldArchivedNumber",
          "aggregation": "MIN",
          "business_meaning": "Smallest (most negative) single archived-number change observed"
        },
        {
          "name": "MaxArchivedNumberChange",
          "expression": "MAX(NewArchivedNumber - OldArchivedNumber)",
          "column": "NewArchivedNumber - OldArchivedNumber",
          "aggregation": "MAX",
          "business_meaning": "Largest single archived-number change observed"
        },
        {
          "name": "IncreasesCount",
          "expression": "SUM(CASE WHEN NewArchivedNumber > OldArchivedNumber THEN 1 ELSE 0 END)",
          "column": "NewArchivedNumber, OldArchivedNumber",
          "aggregation": "SUM",
          "business_meaning": "Number of change events where the archived number increased"
        },
        {
          "name": "DecreasesCount",
          "expression": "SUM(CASE WHEN NewArchivedNumber < OldArchivedNumber THEN 1 ELSE 0 END)",
          "column": "NewArchivedNumber, OldArchivedNumber",
          "aggregation": "SUM",
          "business_meaning": "Number of change events where the archived number decreased"
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "NewArchivedNumber",
          "references": "dbo.ArchivedNumber.ID"
        },
        {
          "column": "OldArchivedNumber",
          "references": "dbo.ArchivedNumber.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ContractOffer",
      "source": "dbo.ContractOffer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ContractOffer Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of contract offer records"
        }
      ],
      "foreign_keys": [
        {
          "column": "CreatedByUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ModifiedUserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ContractOfferDetail",
      "source": "dbo.ContractOfferDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "column": "Amount",
          "aggregation": "SUM",
          "business_meaning": "Total monetary amount for contract offer detail lines"
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "column": "Amount",
          "aggregation": "AVG",
          "business_meaning": "Average monetary amount per contract offer detail line"
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(Quantity)",
          "column": "Quantity",
          "aggregation": "SUM",
          "business_meaning": "Total quantity/units across contract offer detail lines"
        },
        {
          "name": "AverageQuantity",
          "expression": "AVG(Quantity)",
          "column": "Quantity",
          "aggregation": "AVG",
          "business_meaning": "Average quantity/units per contract offer detail line"
        },
        {
          "name": "OfferDetailCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of contract offer detail records"
        },
        {
          "name": "DistinctContractOfferCount",
          "expression": "COUNT(DISTINCT ContractOfferID)",
          "column": "ContractOfferID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct contract offers represented in the detail records"
        },
        {
          "name": "AverageUnitPrice",
          "expression": "CASE WHEN SUM(Quantity)=0 THEN NULL ELSE SUM(Amount)/SUM(Quantity) END",
          "column": "Amount,Quantity",
          "aggregation": "RATIO",
          "business_meaning": "Average amount per unit (unit price) across the selected detail records"
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractOfferID",
          "references": "dbo.ContractOffer.ID"
        },
        {
          "column": "UdacID",
          "references": "dbo.Udac.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ContractProduct",
      "source": "dbo.ContractProduct",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ContractProductCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of contract-product rows (records)"
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(Quantity)",
          "column": "Quantity",
          "aggregation": "SUM",
          "business_meaning": "Total quantity/units across all contract products"
        },
        {
          "name": "AverageUnitPrice",
          "expression": "AVG(Price)",
          "column": "Price",
          "aggregation": "AVG",
          "business_meaning": "Average unit price per contract product"
        },
        {
          "name": "TotalListPrice",
          "expression": "SUM(Price * Quantity)",
          "column": "Price * Quantity",
          "aggregation": "SUM",
          "business_meaning": "Total list price (unit price \u00d7 quantity) before discounts"
        },
        {
          "name": "TotalAlteredAmount",
          "expression": "SUM(AlteredAmount)",
          "column": "AlteredAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of altered amounts (manual adjustments) on contract products"
        },
        {
          "name": "TotalBudgetAmount",
          "expression": "SUM(BudgetAmount)",
          "column": "BudgetAmount",
          "aggregation": "SUM",
          "business_meaning": "Total budgeted amount for the contract products"
        },
        {
          "name": "TotalOneTimeAmount",
          "expression": "SUM(OneTimeAmount)",
          "column": "OneTimeAmount",
          "aggregation": "SUM",
          "business_meaning": "Total one-time amounts (charges) before discounts"
        },
        {
          "name": "TotalExtraFeeAmount",
          "expression": "SUM(ExtraFeeAmount)",
          "column": "ExtraFeeAmount",
          "aggregation": "SUM",
          "business_meaning": "Total extra fees applied to contract products"
        },
        {
          "name": "TotalOneTimeAmountAfterDiscount",
          "expression": "SUM(OneTimeAmountAfterDiscount)",
          "column": "OneTimeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total one-time amounts after discounts"
        },
        {
          "name": "TotalExtraFeeAmountAfterDiscount",
          "expression": "SUM(ExtraFeeAmountAfterDiscount)",
          "column": "ExtraFeeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total extra fees after discounts"
        },
        {
          "name": "TotalActualSpentBudget",
          "expression": "SUM(ActualSpentBudget)",
          "column": "ActualSpentBudget",
          "aggregation": "SUM",
          "business_meaning": "Total actual spent from budget for the contract products"
        },
        {
          "name": "TotalExtraFeeAmountAfterCC",
          "expression": "SUM(ExtraFeeAmountAfterCC)",
          "column": "ExtraFeeAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Total extra fees after credit-card (or charge) adjustments"
        },
        {
          "name": "TotalAlteredPPCAmountAfterCC",
          "expression": "SUM(AlteredPPCAmountAfterCC)",
          "column": "AlteredPPCAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Total altered per\u2011product/price\u2011component amounts after credit-card adjustments"
        },
        {
          "name": "TotalMonths",
          "expression": "SUM(Months)",
          "column": "Months",
          "aggregation": "SUM",
          "business_meaning": "Total number of months across subscription-based contract products"
        },
        {
          "name": "AverageDiscount",
          "expression": "AVG(Discount)",
          "column": "Discount",
          "aggregation": "AVG",
          "business_meaning": "Average discount (rate or amount depending on business usage) applied to contract products"
        },
        {
          "name": "AverageRulesDiscount",
          "expression": "AVG(RulesDiscount)",
          "column": "RulesDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average discount applied by business rules"
        },
        {
          "name": "AveragePaymentDiscount",
          "expression": "AVG(PaymentDiscount)",
          "column": "PaymentDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average payment-related discount (e.g., early payment) as stored on the contract product"
        },
        {
          "name": "AverageProductDiscount",
          "expression": "AVG(ProductDiscount)",
          "column": "ProductDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average product-specific discount rate/amount"
        },
        {
          "name": "AverageBundleDiscount",
          "expression": "AVG(BundleDiscount)",
          "column": "BundleDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average bundle discount applied when products are sold together"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "SalesTypeID",
          "references": "dbo.AdvertisementSalesType.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "RelatedContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "PaymentMethodID",
          "references": "dbo.PaymentMethod.ID"
        },
        {
          "column": "SourceContractProductID",
          "references": "dbo.ContractProduct.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CreditCardOffLineDetail",
      "source": "dbo.CreditCardOffLineDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TransactionCount",
          "expression": "COUNT(*)",
          "column": "*",
          "aggregation": "COUNT",
          "business_meaning": "Number of offline credit card detail records (transactions)"
        },
        {
          "name": "CreditCardInstallments_Sum",
          "expression": "SUM(CreditCardInstallments)",
          "column": "CreditCardInstallments",
          "aggregation": "SUM",
          "business_meaning": "Total number of installments across all offline credit card transactions"
        },
        {
          "name": "CreditCardInstallments_Avg",
          "expression": "AVG(CreditCardInstallments)",
          "column": "CreditCardInstallments",
          "aggregation": "AVG",
          "business_meaning": "Average number of installments per offline credit card transaction"
        },
        {
          "name": "UniqueCreditCardCount",
          "expression": "COUNT(DISTINCT CreditCardNumber)",
          "column": "CreditCardNumber",
          "aggregation": "COUNT(DISTINCT)",
          "business_meaning": "Number of distinct credit card numbers present in offline transactions (unique cards)"
        }
      ],
      "foreign_keys": [
        {
          "column": "ID",
          "references": "dbo.SalesCollection.ID"
        },
        {
          "column": "CreditCardTypeID",
          "references": "dbo.CreditCardType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "CustomerCareCase",
      "source": "dbo.CustomerCareCase",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "Case Count",
          "expression": "COUNT(Id)",
          "column": "Id",
          "aggregation": "COUNT",
          "business_meaning": "Total number of customer care cases (rows) in the fact table"
        },
        {
          "name": "Total Contacts",
          "expression": "SUM(TotalContacts)",
          "column": "TotalContacts",
          "aggregation": "SUM",
          "business_meaning": "Total number of contact attempts across all cases"
        },
        {
          "name": "Current Contacts",
          "expression": "SUM(CurrentContact)",
          "column": "CurrentContact",
          "aggregation": "SUM",
          "business_meaning": "Total number of current/successful contacts across all cases"
        },
        {
          "name": "Average Contacts per Case",
          "expression": "AVG(TotalContacts)",
          "column": "TotalContacts",
          "aggregation": "AVG",
          "business_meaning": "Average number of contact attempts per case"
        },
        {
          "name": "Average Current Contacts per Case",
          "expression": "AVG(CurrentContact)",
          "column": "CurrentContact",
          "aggregation": "AVG",
          "business_meaning": "Average number of current/successful contacts per case"
        },
        {
          "name": "Contact Rate",
          "expression": "SUM(CurrentContact) / NULLIF(SUM(TotalContacts), 0)",
          "column": "CurrentContact, TotalContacts",
          "aggregation": "RATIO",
          "business_meaning": "Proportion of current/successful contacts out of all contact attempts (guarded against division by zero)"
        },
        {
          "name": "Distinct Agent Count",
          "expression": "COUNT(DISTINCT AgentId)",
          "column": "AgentId",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique agents who handled cases"
        },
        {
          "name": "Distinct Business Point Count",
          "expression": "COUNT(DISTINCT BusinessPointId)",
          "column": "BusinessPointId",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct business points associated with cases"
        }
      ],
      "foreign_keys": [
        {
          "column": "CustomerCareTaskActionId",
          "references": "dbo.CustomerCareTaskAction.Id"
        },
        {
          "column": "AgentId",
          "references": "dbo.User.ID"
        },
        {
          "column": "BusinessPointId",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CaseId",
          "references": "dbo.Case.ID"
        },
        {
          "column": "CustomerCareTaskResultId",
          "references": "dbo.CustomerCareTaskResult.Id"
        }
      ],
      "business_meaning": "Transactional data at Id grain"
    },
    {
      "name": "DialerTask",
      "source": "dbo.DialerTask",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalNotFound",
          "expression": "SUM(NotFound)",
          "column": "NotFound",
          "aggregation": "SUM",
          "business_meaning": "Total number of items or attempts marked as 'NotFound' (useful when NotFound is a count or a 0/1 indicator to get the total occurrences)."
        },
        {
          "name": "NotFoundRate",
          "expression": "AVG(NotFound)",
          "column": "NotFound",
          "aggregation": "AVG",
          "business_meaning": "Average of the NotFound flag (useful as a rate when NotFound is 0/1 to represent the proportion of records not found)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CurrentTaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.DialerBusinessPoint.BusinessPointID"
        },
        {
          "column": "SourceTaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        },
        {
          "column": "DialerGroupID",
          "references": "dbo.DialerGroup.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "DistributionCampaignCriteria",
      "source": "dbo.DistributionCampaignCriteria",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of distribution campaign criteria records (row count)"
        },
        {
          "name": "DistinctUsers",
          "expression": "COUNT(DISTINCT UserID)",
          "column": "UserID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique users who created or are associated with criteria"
        },
        {
          "name": "DistinctCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "column": "CampaignID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct campaigns referenced by the criteria"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "FreeListingGroupItem",
      "source": "dbo.FreeListingGroupItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ItemCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of items (rows) in the FreeListingGroupItem table"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique BusinessPoints associated with the items"
        },
        {
          "name": "DistinctFreeListingGroupCount",
          "expression": "COUNT(DISTINCT FreeListingGroupID)",
          "column": "FreeListingGroupID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique FreeListingGroups represented in the items"
        },
        {
          "name": "ExcludedItemCount",
          "expression": "SUM(CASE WHEN IsExcluded = 1 THEN 1 ELSE 0 END)",
          "column": "IsExcluded",
          "aggregation": "SUM",
          "business_meaning": "Count of items marked as excluded"
        },
        {
          "name": "IncludedItemCount",
          "expression": "SUM(CASE WHEN IsExcluded = 0 THEN 1 ELSE 0 END)",
          "column": "IsExcluded",
          "aggregation": "SUM",
          "business_meaning": "Count of items not marked as excluded"
        },
        {
          "name": "DistinctDMKeyCount",
          "expression": "COUNT(DISTINCT DMKey)",
          "column": "DMKey",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct DMKey values (distinct data-management keys) in the table"
        }
      ],
      "foreign_keys": [
        {
          "column": "FreeListingGroupID",
          "references": "dbo.FreeListingGroup.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "FreeListingGroupTemplate",
      "source": "dbo.FreeListingGroupTemplate",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of records (rows) in the FreeListingGroupTemplate table"
        },
        {
          "name": "DistinctTemplateCount",
          "expression": "COUNT(DISTINCT TemplateID)",
          "column": "TemplateID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct templates represented in the table"
        },
        {
          "name": "DistinctMediumCount",
          "expression": "COUNT(DISTINCT MediumID)",
          "column": "MediumID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct media referenced by the listings"
        },
        {
          "name": "DistinctMediumVersionCount",
          "expression": "COUNT(DISTINCT MediumVersionID)",
          "column": "MediumVersionID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct medium versions referenced"
        },
        {
          "name": "DistinctVersionSectionCount",
          "expression": "COUNT(DISTINCT VersionSectionID)",
          "column": "VersionSectionID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct version sections referenced"
        },
        {
          "name": "DistinctClassifierNodeCount",
          "expression": "COUNT(DISTINCT ClassifierNodeID)",
          "column": "ClassifierNodeID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct classifier nodes referenced"
        },
        {
          "name": "DistinctDMKeyCount",
          "expression": "COUNT(DISTINCT DMKey)",
          "column": "DMKey",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct DMKey values (distinct data-mapping keys) in the table"
        }
      ],
      "foreign_keys": [
        {
          "column": "TemplateID",
          "references": "dbo.FreeListingTemplate.ID"
        },
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "ClassifierNodeID",
          "references": "dbo.ClassifierNode.ID"
        },
        {
          "column": "MediumID",
          "references": "dbo.Medium.ID"
        },
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "FreeTemplate",
      "source": "dbo.FreeTemplate",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of FreeTemplate records (row count)"
        },
        {
          "name": "TotalPrice",
          "expression": "SUM(Price)",
          "column": "Price",
          "aggregation": "SUM",
          "business_meaning": "Sum of unit prices for all records"
        },
        {
          "name": "AveragePrice",
          "expression": "AVG(Price)",
          "column": "Price",
          "aggregation": "AVG",
          "business_meaning": "Average unit price"
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(Quantity)",
          "column": "Quantity",
          "aggregation": "SUM",
          "business_meaning": "Total units/quantity across all records"
        },
        {
          "name": "ExtendedPrice",
          "expression": "SUM(Price * Quantity)",
          "column": "Price * Quantity",
          "aggregation": "SUM",
          "business_meaning": "Total extended price (unit price multiplied by quantity)"
        },
        {
          "name": "TotalDiscount",
          "expression": "SUM(Discount)",
          "column": "Discount",
          "aggregation": "SUM",
          "business_meaning": "Sum of discount amounts applied (absolute discounts)"
        },
        {
          "name": "TotalRulesDiscount",
          "expression": "SUM(RulesDiscount)",
          "column": "RulesDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total discount amount applied from rule-based discounts"
        },
        {
          "name": "TotalAlteredAmount",
          "expression": "SUM(AlteredAmount)",
          "column": "AlteredAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of manually altered amounts or adjustments"
        },
        {
          "name": "AveragePaymentDiscountRate",
          "expression": "AVG(PaymentDiscount)",
          "column": "PaymentDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average payment discount rate (percentage/rate where applicable)"
        },
        {
          "name": "AverageProductDiscountRate",
          "expression": "AVG(ProductDiscount)",
          "column": "ProductDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average product-level discount rate"
        },
        {
          "name": "AverageBundleDiscountRate",
          "expression": "AVG(BundleDiscount)",
          "column": "BundleDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average bundle discount rate"
        },
        {
          "name": "TotalBudgetAmount",
          "expression": "SUM(BudgetAmount)",
          "column": "BudgetAmount",
          "aggregation": "SUM",
          "business_meaning": "Total budgeted amount"
        },
        {
          "name": "TotalOneTimeAmount",
          "expression": "SUM(OneTimeAmount)",
          "column": "OneTimeAmount",
          "aggregation": "SUM",
          "business_meaning": "Total one-time charges before discounts"
        },
        {
          "name": "TotalExtraFeeAmount",
          "expression": "SUM(ExtraFeeAmount)",
          "column": "ExtraFeeAmount",
          "aggregation": "SUM",
          "business_meaning": "Total additional fees before discounts"
        },
        {
          "name": "TotalOneTimeAfterDiscount",
          "expression": "SUM(OneTimeAmountAfterDiscount)",
          "column": "OneTimeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total one-time charges after discounts"
        },
        {
          "name": "TotalExtraFeeAfterDiscount",
          "expression": "SUM(ExtraFeeAmountAfterDiscount)",
          "column": "ExtraFeeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total extra fees after discounts"
        },
        {
          "name": "TotalActualSpentBudget",
          "expression": "SUM(ActualSpentBudget)",
          "column": "ActualSpentBudget",
          "aggregation": "SUM",
          "business_meaning": "Total actual budget spent"
        },
        {
          "name": "TotalExtraFeeAfterCC",
          "expression": "SUM(ExtraFeeAmountAfterCC)",
          "column": "ExtraFeeAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Total extra fees after credit card (or other) processing"
        },
        {
          "name": "TotalAlteredPPCAfterCC",
          "expression": "SUM(AlteredPPCAmountAfterCC)",
          "column": "AlteredPPCAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Sum of altered pay-per-click (PPC) amounts after processing"
        },
        {
          "name": "AverageMonths",
          "expression": "AVG(Months)",
          "column": "Months",
          "aggregation": "AVG",
          "business_meaning": "Average contract/subscription term in months"
        },
        {
          "name": "TotalMonths",
          "expression": "SUM(Months)",
          "column": "Months",
          "aggregation": "SUM",
          "business_meaning": "Sum of months (useful for total term exposure analyses)"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "SalesTypeID",
          "references": "dbo.AdvertisementSalesType.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "PaymentMethodID",
          "references": "dbo.PaymentMethod.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "FreeTemplateAdvertisement",
      "source": "dbo.FreeTemplateAdvertisement",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AdCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of free template advertisements (row count)"
        },
        {
          "name": "TotalPrice",
          "expression": "SUM(Price)",
          "column": "Price",
          "aggregation": "SUM",
          "business_meaning": "Sum of listed prices for advertisements"
        },
        {
          "name": "TotalDiscount",
          "expression": "SUM(Discount)",
          "column": "Discount",
          "aggregation": "SUM",
          "business_meaning": "Total discount amounts applied to advertisements"
        },
        {
          "name": "TotalRulesDiscount",
          "expression": "SUM(RulesDiscount)",
          "column": "RulesDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total discount amounts applied by rules"
        },
        {
          "name": "AveragePaymentDiscountRate",
          "expression": "AVG(PaymentDiscount)",
          "column": "PaymentDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average payment discount rate applied (percentage/ratio)"
        },
        {
          "name": "AverageProductDiscountRate",
          "expression": "AVG(ProductDiscount)",
          "column": "ProductDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average product discount rate applied (percentage/ratio)"
        },
        {
          "name": "AverageBundleDiscountRate",
          "expression": "AVG(BundleDiscount)",
          "column": "BundleDiscount",
          "aggregation": "AVG",
          "business_meaning": "Average bundle discount rate applied (percentage/ratio)"
        },
        {
          "name": "TotalAlteredAmount",
          "expression": "SUM(AlteredAmount)",
          "column": "AlteredAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount adjustments/alterations applied to advertisements"
        },
        {
          "name": "TotalBudgetAmount",
          "expression": "SUM(BudgetAmount)",
          "column": "BudgetAmount",
          "aggregation": "SUM",
          "business_meaning": "Total budget amounts allocated to advertisements"
        },
        {
          "name": "TotalOneTimeAmount",
          "expression": "SUM(OneTimeAmount)",
          "column": "OneTimeAmount",
          "aggregation": "SUM",
          "business_meaning": "Total one-time charges associated with advertisements"
        },
        {
          "name": "TotalExtraFeeAmount",
          "expression": "SUM(ExtraFeeAmount)",
          "column": "ExtraFeeAmount",
          "aggregation": "SUM",
          "business_meaning": "Total extra fee amounts before discounts/charges"
        },
        {
          "name": "TotalOneTimeAmountAfterDiscount",
          "expression": "SUM(OneTimeAmountAfterDiscount)",
          "column": "OneTimeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total one-time charges after discounts"
        },
        {
          "name": "TotalExtraFeeAmountAfterDiscount",
          "expression": "SUM(ExtraFeeAmountAfterDiscount)",
          "column": "ExtraFeeAmountAfterDiscount",
          "aggregation": "SUM",
          "business_meaning": "Total extra fees after discounts"
        },
        {
          "name": "TotalActualSpentBudget",
          "expression": "SUM(ActualSpentBudget)",
          "column": "ActualSpentBudget",
          "aggregation": "SUM",
          "business_meaning": "Total actual spend against budgets for advertisements"
        },
        {
          "name": "TotalExtraFeeAmountAfterCC",
          "expression": "SUM(ExtraFeeAmountAfterCC)",
          "column": "ExtraFeeAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Total extra fees after credit card (or other) charges/adjustments"
        },
        {
          "name": "TotalAlteredPPCAmountAfterCC",
          "expression": "SUM(AlteredPPCAmountAfterCC)",
          "column": "AlteredPPCAmountAfterCC",
          "aggregation": "SUM",
          "business_meaning": "Total altered pay-per-click amounts after credit card (or other) adjustments"
        },
        {
          "name": "TotalMonths",
          "expression": "SUM(Months)",
          "column": "Months",
          "aggregation": "SUM",
          "business_meaning": "Sum of months (e.g., subscription durations) across advertisements"
        },
        {
          "name": "AverageMonths",
          "expression": "AVG(Months)",
          "column": "Months",
          "aggregation": "AVG",
          "business_meaning": "Average duration in months per advertisement"
        },
        {
          "name": "TotalCompletedChanges",
          "expression": "SUM(CompletedChanges)",
          "column": "CompletedChanges",
          "aggregation": "SUM",
          "business_meaning": "Total number of completed change actions across advertisements"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "CaseAttachmentID",
          "references": "dbo.CaseAttachment.ID"
        },
        {
          "column": "FreeTemplateID",
          "references": "dbo.FreeTemplate.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "ProductKitID",
          "references": "dbo.ProductKit.ID"
        },
        {
          "column": "HeadingID",
          "references": "dbo.VersionGroupItem.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "FreeTemplateAttributeValue",
      "source": "dbo.FreeTemplateAttributeValue",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of attribute value records (rows) in the table"
        },
        {
          "name": "DistinctFreeTemplates",
          "expression": "COUNT(DISTINCT FreeTemplateID)",
          "column": "FreeTemplateID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct free templates represented in the attribute values"
        },
        {
          "name": "DistinctProducts",
          "expression": "COUNT(DISTINCT ProductPartID)",
          "column": "ProductPartID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct product parts referenced by attribute values"
        },
        {
          "name": "DistinctAttributes",
          "expression": "COUNT(DISTINCT ContentAttributeDefinitionID)",
          "column": "ContentAttributeDefinitionID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct attribute definitions used"
        },
        {
          "name": "DistinctAdvertisements",
          "expression": "COUNT(DISTINCT FreeTemplateAdvertisementID)",
          "column": "FreeTemplateAdvertisementID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct advertisements associated with attribute values"
        },
        {
          "name": "AvgSeqNo",
          "expression": "AVG(SeqNo)",
          "column": "SeqNo",
          "aggregation": "AVG",
          "business_meaning": "Average sequence/order number of attribute values (useful for ordering analysis)"
        },
        {
          "name": "MaxSeqNo",
          "expression": "MAX(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MAX",
          "business_meaning": "Maximum sequence number among attribute values (highest position)"
        },
        {
          "name": "MinSeqNo",
          "expression": "MIN(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MIN",
          "business_meaning": "Minimum sequence number among attribute values (lowest position)"
        }
      ],
      "foreign_keys": [
        {
          "column": "FreeTemplateID",
          "references": "dbo.FreeTemplate.ID"
        },
        {
          "column": "FreeTemplateAdvertisementID",
          "references": "dbo.FreeTemplateAdvertisement.ID"
        },
        {
          "column": "ContentAttributeDefinitionID",
          "references": "dbo.ContentAttributeDefinition.ID"
        },
        {
          "column": "ProductPartID",
          "references": "dbo.ProductPart.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "GroupTargeting",
      "source": "dbo.GroupTargeting",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PreprintedCustomerNumber",
          "expression": "SUM(PreprintedCustomerNumber)",
          "column": "PreprintedCustomerNumber",
          "aggregation": "SUM",
          "business_meaning": "Total number of preprinted customers"
        },
        {
          "name": "PreprintedAmount",
          "expression": "SUM(PreprintedAmount)",
          "column": "PreprintedAmount",
          "aggregation": "SUM",
          "business_meaning": "Total preprinted monetary amount"
        },
        {
          "name": "LossCustomerPercentage",
          "expression": "AVG(LossCustomerPercentage)",
          "column": "LossCustomerPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of lost customers"
        },
        {
          "name": "LossAmountPercentage",
          "expression": "AVG(LossAmountPercentage)",
          "column": "LossAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of lost amount"
        },
        {
          "name": "\u0399ncreaseCustomerPercentage",
          "expression": "AVG(\u0399ncreaseCustomerPercentage)",
          "column": "\u0399ncreaseCustomerPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of customer increases"
        },
        {
          "name": "\u0399ncreaseAmountPercentage",
          "expression": "AVG(\u0399ncreaseAmountPercentage)",
          "column": "\u0399ncreaseAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount increases"
        },
        {
          "name": "ReductionCustomerPercentage",
          "expression": "AVG(ReductionCustomerPercentage)",
          "column": "ReductionCustomerPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of customer reductions"
        },
        {
          "name": "ReductionAmountPercentage",
          "expression": "AVG(ReductionAmountPercentage)",
          "column": "ReductionAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount reductions"
        },
        {
          "name": "AvoNew",
          "expression": "SUM(AvoNew)",
          "column": "AvoNew",
          "aggregation": "SUM",
          "business_meaning": "Aggregate AvoNew metric (count/flag aggregate)"
        },
        {
          "name": "NumberOfVisits",
          "expression": "SUM(NumberOfVisits)",
          "column": "NumberOfVisits",
          "aggregation": "SUM",
          "business_meaning": "Total number of visits"
        },
        {
          "name": "NumberOfVisitsCO",
          "expression": "SUM(NumberOfVisitsCO)",
          "column": "NumberOfVisitsCO",
          "aggregation": "SUM",
          "business_meaning": "Total number of CO visits"
        },
        {
          "name": "ConvRatePercentage",
          "expression": "AVG(ConvRatePercentage)",
          "column": "ConvRatePercentage",
          "aggregation": "AVG",
          "business_meaning": "Average conversion rate percentage"
        },
        {
          "name": "NumberOfCO",
          "expression": "SUM(NumberOfCO)",
          "column": "NumberOfCO",
          "aggregation": "SUM",
          "business_meaning": "Total number of CO occurrences"
        },
        {
          "name": "AmountOfCO",
          "expression": "SUM(AmountOfCO)",
          "column": "AmountOfCO",
          "aggregation": "SUM",
          "business_meaning": "Total amount of CO"
        },
        {
          "name": "NumberOfCOPercentage",
          "expression": "AVG(NumberOfCOPercentage)",
          "column": "NumberOfCOPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of NumberOfCO"
        },
        {
          "name": "AmountOfCOPercentage",
          "expression": "AVG(AmountOfCOPercentage)",
          "column": "AmountOfCOPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of AmountOfCO"
        },
        {
          "name": "LossCustomers",
          "expression": "SUM(LossCustomers)",
          "column": "LossCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of lost customers"
        },
        {
          "name": "LossAmount",
          "expression": "SUM(LossAmount)",
          "column": "LossAmount",
          "aggregation": "SUM",
          "business_meaning": "Total lost monetary amount"
        },
        {
          "name": "\u0399ncreaseCustomers",
          "expression": "SUM(\u0399ncreaseCustomers)",
          "column": "\u0399ncreaseCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customer increases"
        },
        {
          "name": "\u0399ncreaseAmount",
          "expression": "SUM(\u0399ncreaseAmount)",
          "column": "\u0399ncreaseAmount",
          "aggregation": "SUM",
          "business_meaning": "Total increased amount"
        },
        {
          "name": "ReductionCustomers",
          "expression": "SUM(ReductionCustomers)",
          "column": "ReductionCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customer reductions"
        },
        {
          "name": "ReductionAmount",
          "expression": "SUM(ReductionAmount)",
          "column": "ReductionAmount",
          "aggregation": "SUM",
          "business_meaning": "Total reduced amount"
        },
        {
          "name": "NoChangesCustomers",
          "expression": "SUM(NoChangesCustomers)",
          "column": "NoChangesCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total customers with no changes"
        },
        {
          "name": "NoChangesCustomersPercentage",
          "expression": "AVG(NoChangesCustomersPercentage)",
          "column": "NoChangesCustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of customers with no changes"
        },
        {
          "name": "NoChangesAmount",
          "expression": "SUM(NoChangesAmount)",
          "column": "NoChangesAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount with no changes"
        },
        {
          "name": "NoChangesAmountPercentage",
          "expression": "AVG(NoChangesAmountPercentage)",
          "column": "NoChangesAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of amount with no changes"
        },
        {
          "name": "ROCOCustomers",
          "expression": "SUM(ROCOCustomers)",
          "column": "ROCOCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total ROCO customers"
        },
        {
          "name": "ROCOCustomersPercentage",
          "expression": "AVG(ROCOCustomersPercentage)",
          "column": "ROCOCustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of ROCO customers"
        },
        {
          "name": "ROCOAmount",
          "expression": "SUM(ROCOAmount)",
          "column": "ROCOAmount",
          "aggregation": "SUM",
          "business_meaning": "Total ROCO amount"
        },
        {
          "name": "ROCOAmountPercentage",
          "expression": "AVG(ROCOAmountPercentage)",
          "column": "ROCOAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average ROCO amount percentage"
        },
        {
          "name": "NewCustomers",
          "expression": "SUM(NewCustomers)",
          "column": "NewCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total new customers"
        },
        {
          "name": "NewCustomersPercentage",
          "expression": "AVG(NewCustomersPercentage)",
          "column": "NewCustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of new customers"
        },
        {
          "name": "NewAmount",
          "expression": "SUM(NewAmount)",
          "column": "NewAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount from new customers"
        },
        {
          "name": "NewAmountPercentage",
          "expression": "AVG(NewAmountPercentage)",
          "column": "NewAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of new amount"
        },
        {
          "name": "CICustomers",
          "expression": "SUM(CICustomers)",
          "column": "CICustomers",
          "aggregation": "SUM",
          "business_meaning": "Total CI customers"
        },
        {
          "name": "CICustomersPercentage",
          "expression": "AVG(CICustomersPercentage)",
          "column": "CICustomersPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average percentage of CI customers"
        },
        {
          "name": "CIAmount",
          "expression": "SUM(CIAmount)",
          "column": "CIAmount",
          "aggregation": "SUM",
          "business_meaning": "Total CI amount"
        },
        {
          "name": "CIAmountPercentage",
          "expression": "AVG(CIAmountPercentage)",
          "column": "CIAmountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average CI amount percentage"
        },
        {
          "name": "WorkingDays",
          "expression": "SUM(WorkingDays)",
          "column": "WorkingDays",
          "aggregation": "SUM",
          "business_meaning": "Total working days"
        },
        {
          "name": "Salesmen",
          "expression": "SUM(Salesmen)",
          "column": "Salesmen",
          "aggregation": "SUM",
          "business_meaning": "Total salesmen (aggregate count)"
        },
        {
          "name": "Mandays",
          "expression": "SUM(Mandays)",
          "column": "Mandays",
          "aggregation": "SUM",
          "business_meaning": "Total mandays"
        },
        {
          "name": "NumberOfVisitsTotal",
          "expression": "SUM(NumberOfVisitsTotal)",
          "column": "NumberOfVisitsTotal",
          "aggregation": "SUM",
          "business_meaning": "Total visits (overall)"
        },
        {
          "name": "NumberOfVisitsCOTotal",
          "expression": "SUM(NumberOfVisitsCOTotal)",
          "column": "NumberOfVisitsCOTotal",
          "aggregation": "SUM",
          "business_meaning": "Total CO visits (overall)"
        },
        {
          "name": "NumberOfVisitsNew",
          "expression": "SUM(NumberOfVisitsNew)",
          "column": "NumberOfVisitsNew",
          "aggregation": "SUM",
          "business_meaning": "Total visits for new customers"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "GroupID",
          "references": "dbo.CampaignGroup.ID"
        },
        {
          "column": "ChannelID",
          "references": "dbo.ChannelType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "HeadingSynonym",
      "source": "dbo.HeadingSynonym",
      "grain": [
        "SourceID",
        "TargetID"
      ],
      "measures": [
        {
          "name": "Row Count",
          "expression": "COUNT(*)",
          "column": null,
          "aggregation": "COUNT",
          "business_meaning": "Total number of synonym relationships (rows) in the HeadingSynonym table"
        },
        {
          "name": "Unique Source Count",
          "expression": "COUNT(DISTINCT SourceID)",
          "column": "SourceID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct source headings that have one or more synonyms"
        },
        {
          "name": "Unique Target Count",
          "expression": "COUNT(DISTINCT TargetID)",
          "column": "TargetID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct target headings referenced as synonyms"
        },
        {
          "name": "Unique DMKey Count",
          "expression": "COUNT(DISTINCT DMKey)",
          "column": "DMKey",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct DMKey values present (useful for understanding distinct domain mapping keys)"
        },
        {
          "name": "Average Synonyms per Source",
          "expression": "COUNT(*) / NULLIF(COUNT(DISTINCT SourceID), 0)",
          "column": null,
          "aggregation": "CALCULATED",
          "business_meaning": "Average number of target synonyms associated with each source heading"
        }
      ],
      "foreign_keys": [
        {
          "column": "SourceID",
          "references": "dbo.MasterHeading.ID"
        },
        {
          "column": "TargetID",
          "references": "dbo.MasterHeading.ID"
        }
      ],
      "business_meaning": "Transactional data at SourceID, TargetID grain"
    },
    {
      "name": "InternalProductTypeRole",
      "source": "dbo.InternalProductTypeRole",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows in the InternalProductTypeRole table (records linking product types to roles)"
        },
        {
          "name": "DistinctProductTypeCount",
          "expression": "COUNT(DISTINCT ProductTypeID)",
          "column": "ProductTypeID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique product types represented in the table"
        },
        {
          "name": "DistinctRoleCount",
          "expression": "COUNT(DISTINCT RoleID)",
          "column": "RoleID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique roles represented in the table"
        }
      ],
      "foreign_keys": [
        {
          "column": "ProductTypeID",
          "references": "dbo.InternalProductType.ID"
        },
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "InvoicePaymentMethod",
      "source": "dbo.InvoicePaymentMethod",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PaymentMethodCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of payment method records (rows) in the InvoicePaymentMethod table"
        },
        {
          "name": "TotalNumberOfInvoices",
          "expression": "SUM(NumberOfInvoices)",
          "column": "NumberOfInvoices",
          "aggregation": "SUM",
          "business_meaning": "Total number of invoices associated with the payment methods"
        },
        {
          "name": "TotalAdvancedPolicyAmount",
          "expression": "SUM(AdvancedPolicyAmount)",
          "column": "AdvancedPolicyAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of advanced policy amounts applied to invoices"
        },
        {
          "name": "AverageAdvancedPolicyAmount",
          "expression": "AVG(AdvancedPolicyAmount)",
          "column": "AdvancedPolicyAmount",
          "aggregation": "AVG",
          "business_meaning": "Average advanced policy amount per payment method record"
        },
        {
          "name": "TotalInstallments",
          "expression": "SUM(Installments)",
          "column": "Installments",
          "aggregation": "SUM",
          "business_meaning": "Total number of installments across all payment methods"
        },
        {
          "name": "AverageInstallments",
          "expression": "AVG(Installments)",
          "column": "Installments",
          "aggregation": "AVG",
          "business_meaning": "Average number of installments per payment method"
        },
        {
          "name": "TotalCreditCardInstallments",
          "expression": "SUM(CreditCardInstallments)",
          "column": "CreditCardInstallments",
          "aggregation": "SUM",
          "business_meaning": "Total number of credit card installments across payment methods"
        },
        {
          "name": "AverageInterval",
          "expression": "AVG(Interval)",
          "column": "Interval",
          "aggregation": "AVG",
          "business_meaning": "Average interval value (e.g., days between payments) per payment method"
        }
      ],
      "foreign_keys": [
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        },
        {
          "column": "InvoicePolicyID",
          "references": "dbo.InvoicePolicy.ID"
        },
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "CreditCardTypeID",
          "references": "dbo.CreditCardType.ID"
        },
        {
          "column": "BillingEmailID",
          "references": "dbo.ContactEmail.ID"
        },
        {
          "column": "PaymentMethodTypeID",
          "references": "dbo.PaymentMethodType.ID"
        },
        {
          "column": "PaymentPhoneID",
          "references": "dbo.PointPhone.ID"
        },
        {
          "column": "ID",
          "references": "dbo.Contract.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "InvoicePaymentSalesCollection",
      "source": "dbo.InvoicePaymentSalesCollection",
      "grain": [
        "InvoicePaymentMethodID",
        "SalesCollectionID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "InvoicePaymentMethodID",
          "references": "dbo.InvoicePaymentMethod.ID"
        },
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "business_meaning": "Transactional data at InvoicePaymentMethodID, SalesCollectionID grain"
    },
    {
      "name": "InvoicePolicy",
      "source": "dbo.InvoicePolicy",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PolicyCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of invoice policy records (policies) in the table"
        },
        {
          "name": "TotalNumberOfInvoices",
          "expression": "SUM(NumberOfInvoices)",
          "column": "NumberOfInvoices",
          "aggregation": "SUM",
          "business_meaning": "Total number of invoices scheduled across all policies"
        },
        {
          "name": "AvgNumberOfInvoicesPerPolicy",
          "expression": "AVG(NumberOfInvoices)",
          "column": "NumberOfInvoices",
          "aggregation": "AVG",
          "business_meaning": "Average number of invoices per policy"
        },
        {
          "name": "TotalInstallments",
          "expression": "SUM(Installments)",
          "column": "Installments",
          "aggregation": "SUM",
          "business_meaning": "Total installments summed across all policies"
        },
        {
          "name": "AvgInstallmentsPerPolicy",
          "expression": "AVG(Installments)",
          "column": "Installments",
          "aggregation": "AVG",
          "business_meaning": "Average number of installments per policy"
        },
        {
          "name": "AvgInterval",
          "expression": "AVG(Interval)",
          "column": "Interval",
          "aggregation": "AVG",
          "business_meaning": "Average interval (e.g., days) between installments or invoice events"
        },
        {
          "name": "AvgPriceFrom",
          "expression": "AVG(PriceFrom)",
          "column": "PriceFrom",
          "aggregation": "AVG",
          "business_meaning": "Average lower bound of the price range for policies"
        },
        {
          "name": "AvgPriceTo",
          "expression": "AVG(PriceTo)",
          "column": "PriceTo",
          "aggregation": "AVG",
          "business_meaning": "Average upper bound of the price range for policies"
        },
        {
          "name": "MinPriceFrom",
          "expression": "MIN(PriceFrom)",
          "column": "PriceFrom",
          "aggregation": "MIN",
          "business_meaning": "Minimum observed lower bound of the price range"
        },
        {
          "name": "MaxPriceTo",
          "expression": "MAX(PriceTo)",
          "column": "PriceTo",
          "aggregation": "MAX",
          "business_meaning": "Maximum observed upper bound of the price range"
        },
        {
          "name": "AvgPriceRangeWidth",
          "expression": "AVG(PriceTo - PriceFrom)",
          "column": "PriceTo - PriceFrom",
          "aggregation": "AVG",
          "business_meaning": "Average width of the price range (PriceTo minus PriceFrom) across policies"
        }
      ],
      "foreign_keys": [
        {
          "column": "MediumID",
          "references": "dbo.Medium.ID"
        },
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        },
        {
          "column": "PaymentMethodTypeID",
          "references": "dbo.PaymentMethodType.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Listing",
      "source": "dbo.Listing",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Listing Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of listings (row count)"
        },
        {
          "name": "Primary Listings Count",
          "expression": "SUM(CASE WHEN IsPrimary = 1 THEN 1 ELSE 0 END)",
          "column": "IsPrimary",
          "aggregation": "SUM",
          "business_meaning": "Number of listings marked as primary"
        },
        {
          "name": "Secondary Listings Count",
          "expression": "SUM(CASE WHEN IsSecondary = 1 THEN 1 ELSE 0 END)",
          "column": "IsSecondary",
          "aggregation": "SUM",
          "business_meaning": "Number of listings marked as secondary"
        },
        {
          "name": "Contract Listings Count",
          "expression": "SUM(CASE WHEN IsContract = 1 THEN 1 ELSE 0 END)",
          "column": "IsContract",
          "aggregation": "SUM",
          "business_meaning": "Number of listings flagged as contract listings"
        },
        {
          "name": "Potential Freelister Count",
          "expression": "SUM(CASE WHEN IsPotentialFreelister = 1 THEN 1 ELSE 0 END)",
          "column": "IsPotentialFreelister",
          "aggregation": "SUM",
          "business_meaning": "Number of listings identified as potential freelisters"
        },
        {
          "name": "Primary Listing Rate",
          "expression": "AVG(CASE WHEN IsPrimary = 1 THEN 1.0 ELSE 0.0 END)",
          "column": "IsPrimary",
          "aggregation": "AVG",
          "business_meaning": "Proportion of listings that are primary (decimal fraction)"
        },
        {
          "name": "Distinct BusinessPoint Count",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "DISTINCTCOUNT",
          "business_meaning": "Number of unique business points represented in listings"
        },
        {
          "name": "Distinct Locality Count",
          "expression": "COUNT(DISTINCT LocalityID)",
          "column": "LocalityID",
          "aggregation": "DISTINCTCOUNT",
          "business_meaning": "Number of unique localities represented in listings"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "LocalityID",
          "references": "dbo.Address.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "MasterGeoAreaGroup",
      "source": "dbo.MasterGeoAreaGroup",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "GeoAreaGroupCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Count of geo area group records (number of rows in MasterGeoAreaGroup)"
        }
      ],
      "foreign_keys": [
        {
          "column": "BroaderAreaID",
          "references": "dbo.BroaderAreaLookUp.BroaderAreaID"
        },
        {
          "column": "GeoModelVersion",
          "references": "dbo.BroaderAreaLookUp.GeoModelVersion"
        },
        {
          "column": "ParentGeoAreaGroupID",
          "references": "dbo.MasterGeoAreaGroup.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Medium",
      "source": "dbo.Medium",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Medium Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of Medium records (row count)."
        },
        {
          "name": "Active Mediums",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Number of Medium records marked as active."
        },
        {
          "name": "Inactive Mediums",
          "expression": "SUM(CASE WHEN IsActive = 0 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Number of Medium records marked as inactive."
        },
        {
          "name": "Distinct Companies",
          "expression": "COUNT(DISTINCT CompanyID)",
          "column": "CompanyID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Count of unique companies associated with Medium records."
        },
        {
          "name": "Mediums per Company (average)",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT CompanyID), 0)",
          "column": "ID,CompanyID",
          "aggregation": "CALCULATED",
          "business_meaning": "Average number of Medium records per company (useful to show concentration of mediums across companies)."
        }
      ],
      "foreign_keys": [
        {
          "column": "MediumKindID",
          "references": "dbo.MediumKind.ID"
        },
        {
          "column": "MediumTypeID",
          "references": "dbo.MediumType.ID"
        },
        {
          "column": "CompanyID",
          "references": "dbo.Company.ID"
        },
        {
          "column": "GeographicalDefinitionID",
          "references": "dbo.GeographicalDefinition.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "MediumVersionBroaderArea",
      "source": "dbo.MediumVersionBroaderArea",
      "grain": [
        "MediumVersionID",
        "BroaderAreaID",
        "GeoModelVersion"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "BroaderAreaID",
          "references": "dbo.BroaderAreaLookUp.BroaderAreaID"
        },
        {
          "column": "GeoModelVersion",
          "references": "dbo.BroaderAreaLookUp.GeoModelVersion"
        },
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        }
      ],
      "business_meaning": "Transactional data at MediumVersionID, BroaderAreaID, GeoModelVersion grain"
    },
    {
      "name": "MediumVersionColor",
      "source": "dbo.MediumVersionColor",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of MediumVersionColor records (rows)"
        },
        {
          "name": "DistinctProductionColors",
          "expression": "COUNT(DISTINCT ProductionColorID)",
          "column": "ProductionColorID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Count of unique production colors referenced by the records"
        },
        {
          "name": "DistinctMediumVersions",
          "expression": "COUNT(DISTINCT MediumVersionID)",
          "column": "MediumVersionID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Count of unique medium versions referenced by the records"
        },
        {
          "name": "AvgSeqNo",
          "expression": "AVG(SeqNo)",
          "column": "SeqNo",
          "aggregation": "AVG",
          "business_meaning": "Average sequence position (SeqNo) across records"
        },
        {
          "name": "MinSeqNo",
          "expression": "MIN(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MIN",
          "business_meaning": "Minimum sequence number (lowest SeqNo) among records"
        },
        {
          "name": "MaxSeqNo",
          "expression": "MAX(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MAX",
          "business_meaning": "Maximum sequence number (highest SeqNo) among records"
        }
      ],
      "foreign_keys": [
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "ProductionColorID",
          "references": "dbo.ProductionColor.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "MediumVersionDistributionInset",
      "source": "dbo.MediumVersionDistributionInset",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalQuantity",
          "expression": "SUM(Quantity)",
          "column": "Quantity",
          "aggregation": "SUM",
          "business_meaning": "Total number of insets (sum of Quantity across rows)"
        },
        {
          "name": "TotalQuantityPerCategory",
          "expression": "SUM(QuantityPerCategory)",
          "column": "QuantityPerCategory",
          "aggregation": "SUM",
          "business_meaning": "Total quantity aggregated by category values (sum of QuantityPerCategory)"
        },
        {
          "name": "TotalCategorySummary",
          "expression": "SUM(CategorySummary)",
          "column": "CategorySummary",
          "aggregation": "SUM",
          "business_meaning": "Aggregate summary metric for categories (sum of CategorySummary) \u2014 use when CategorySummary represents a numeric measure"
        },
        {
          "name": "AverageQuantity",
          "expression": "AVG(Quantity)",
          "column": "Quantity",
          "aggregation": "AVG",
          "business_meaning": "Average quantity per record (useful for rate/average analyses)"
        },
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of inset records (row count)"
        }
      ],
      "foreign_keys": [
        {
          "column": "AdvertisementID",
          "references": "dbo.Advertisement.ID"
        },
        {
          "column": "MediumVersionDistributionID",
          "references": "dbo.MediumVersionDistribution.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "MediumVersionFont",
      "source": "dbo.MediumVersionFont",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of MediumVersionFont records (count of associations between ProductionFont and MediumVersion)"
        }
      ],
      "foreign_keys": [
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "ProductionFontID",
          "references": "dbo.ProductionFont.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "MediumVersionPrintVersionSection",
      "source": "dbo.MediumVersionPrintVersionSection",
      "grain": [
        "ID",
        "MediumVersionPrintVersionID",
        "VesrionSectionID"
      ],
      "measures": [
        {
          "name": "Record Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rows (records) in the MediumVersionPrintVersionSection table"
        },
        {
          "name": "MediumVersionPrintVersion Row Count",
          "expression": "COUNT(MediumVersionPrintVersionID)",
          "column": "MediumVersionPrintVersionID",
          "aggregation": "COUNT",
          "business_meaning": "Count of rows grouped by MediumVersionPrintVersionID (useful to see how many section entries exist per medium-version-print-version)"
        },
        {
          "name": "Distinct Medium Versions",
          "expression": "COUNT(DISTINCT MediumVersionPrintVersionID)",
          "column": "MediumVersionPrintVersionID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique MediumVersionPrintVersion entities referenced in the table"
        },
        {
          "name": "Distinct Version Sections",
          "expression": "COUNT(DISTINCT VesrionSectionID)",
          "column": "VesrionSectionID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique version sections referenced in the table"
        }
      ],
      "foreign_keys": [
        {
          "column": "MediumVersionPrintVersionID",
          "references": "dbo.MediumVersionPrintVersion.ID"
        },
        {
          "column": "VesrionSectionID",
          "references": "dbo.VersionSection.ID"
        }
      ],
      "business_meaning": "Transactional data at ID, MediumVersionPrintVersionID, VesrionSectionID grain"
    },
    {
      "name": "OBPSSearchResult",
      "source": "dbo.OBPSSearchResult",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "SearchResultCount",
          "expression": "COUNT(Id)",
          "column": "Id",
          "aggregation": "COUNT",
          "business_meaning": "Total number of search result records"
        },
        {
          "name": "UniqueIndividualsSearched",
          "expression": "COUNT(DISTINCT IndividualSearchId)",
          "column": "IndividualSearchId",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct individuals for whom searches were performed"
        },
        {
          "name": "UniqueBusinessPointsMatched",
          "expression": "COUNT(DISTINCT BusinessPointId)",
          "column": "BusinessPointId",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct business points matched in results"
        },
        {
          "name": "UniqueBusinessesMatched",
          "expression": "COUNT(DISTINCT BusinessUniqueId)",
          "column": "BusinessUniqueId",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct businesses (by BusinessUniqueId) represented in results"
        },
        {
          "name": "AverageCompletenessScore",
          "expression": "AVG(CompletenessScore)",
          "column": "CompletenessScore",
          "aggregation": "AVG",
          "business_meaning": "Average completeness/match score across search results"
        },
        {
          "name": "ResultsWithResponseCount",
          "expression": "COUNT(Response)",
          "column": "Response",
          "aggregation": "COUNT",
          "business_meaning": "Number of results that include a non-null response payload"
        },
        {
          "name": "CurrentResultsPercentage",
          "expression": "AVG(CASE WHEN IsCurrent = 1 THEN 1.0 ELSE 0.0 END)",
          "column": "IsCurrent",
          "aggregation": "AVG",
          "business_meaning": "Proportion of results flagged as current (expressed as a fraction between 0 and 1)"
        },
        {
          "name": "HasMultipleBusinessPointsPercentage",
          "expression": "AVG(CASE WHEN HasMultipleBusinessPoints = 1 THEN 1.0 ELSE 0.0 END)",
          "column": "HasMultipleBusinessPoints",
          "aggregation": "AVG",
          "business_meaning": "Proportion of results that indicate multiple business points exist (fraction between 0 and 1)"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointId",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "IndividualSearchId",
          "references": "dbo.OBPSIndividualSearch.Id"
        }
      ],
      "business_meaning": "Transactional data at Id grain"
    },
    {
      "name": "OteDirectoryAreaHeader",
      "source": "dbo.OteDirectoryAreaHeader",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AreaHeaderCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of area header rows (count of headers)"
        },
        {
          "name": "AverageIndent",
          "expression": "AVG(Indent)",
          "column": "Indent",
          "aggregation": "AVG",
          "business_meaning": "Average indentation level of area headers (indicates typical nesting depth)"
        },
        {
          "name": "MaxIndent",
          "expression": "MAX(Indent)",
          "column": "Indent",
          "aggregation": "MAX",
          "business_meaning": "Maximum indentation level among area headers (deepest nesting)"
        },
        {
          "name": "MinIndent",
          "expression": "MIN(Indent)",
          "column": "Indent",
          "aggregation": "MIN",
          "business_meaning": "Minimum indentation level among area headers (shallowest nesting)"
        },
        {
          "name": "MinSeqNo",
          "expression": "MIN(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MIN",
          "business_meaning": "Lowest sequence number within the grouping (earliest position)"
        },
        {
          "name": "MaxSeqNo",
          "expression": "MAX(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MAX",
          "business_meaning": "Highest sequence number within the grouping (latest position)"
        }
      ],
      "foreign_keys": [
        {
          "column": "OteDirectoryDakID",
          "references": "dbo.OteDirectoryDak.ID"
        },
        {
          "column": "OteAreaHeaderTypeID",
          "references": "dbo.OteAreaHeaderType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "OteDirectoryShippingPoint",
      "source": "dbo.OteDirectoryShippingPoint",
      "grain": [
        "OteDirectoryID",
        "OteShippingPointID"
      ],
      "measures": [
        {
          "name": "DMKey",
          "expression": "SUM(DMKey)",
          "column": "DMKey",
          "aggregation": "SUM",
          "business_meaning": "SUM of DMKey"
        }
      ],
      "foreign_keys": [
        {
          "column": "OteDirectoryID",
          "references": "dbo.OteDirectory.ID"
        },
        {
          "column": "OteShippingPointID",
          "references": "dbo.OteShippingPoint.ID"
        }
      ],
      "business_meaning": "Transactional data at OteDirectoryID, OteShippingPointID grain"
    },
    {
      "name": "OteDirectoryVersionProgressPoint",
      "source": "dbo.OteDirectoryVersionProgressPoint",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ProgressPointCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of progress point records (row count) in the fact table"
        },
        {
          "name": "RelatedDays_Total",
          "expression": "SUM(RelatedDays)",
          "column": "RelatedDays",
          "aggregation": "SUM",
          "business_meaning": "Total number of related days across all progress point records"
        },
        {
          "name": "RelatedDays_Average",
          "expression": "AVG(RelatedDays)",
          "column": "RelatedDays",
          "aggregation": "AVG",
          "business_meaning": "Average number of related days per progress point record"
        },
        {
          "name": "RelatedDays_Min",
          "expression": "MIN(RelatedDays)",
          "column": "RelatedDays",
          "aggregation": "MIN",
          "business_meaning": "Minimum related days observed for a progress point record"
        },
        {
          "name": "RelatedDays_Max",
          "expression": "MAX(RelatedDays)",
          "column": "RelatedDays",
          "aggregation": "MAX",
          "business_meaning": "Maximum related days observed for a progress point record"
        }
      ],
      "foreign_keys": [
        {
          "column": "OteDirectoryVersionID",
          "references": "dbo.OteDirectoryVersion.ID"
        },
        {
          "column": "OteProgressPointID",
          "references": "dbo.OteProgressPoint.ID"
        },
        {
          "column": "RelatedID",
          "references": "dbo.OteDirectoryVersionProgressPoint.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "OteDirectoryVersionShipping",
      "source": "dbo.OteDirectoryVersionShipping",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "column": "Amount",
          "aggregation": "SUM",
          "business_meaning": "Sum of the Amount values for shipping records (total value/amount associated with shipments)"
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "column": "Amount",
          "aggregation": "AVG",
          "business_meaning": "Average Amount per shipping record"
        },
        {
          "name": "MinAmount",
          "expression": "MIN(Amount)",
          "column": "Amount",
          "aggregation": "MIN",
          "business_meaning": "Minimum Amount observed in shipping records"
        },
        {
          "name": "MaxAmount",
          "expression": "MAX(Amount)",
          "column": "Amount",
          "aggregation": "MAX",
          "business_meaning": "Maximum Amount observed in shipping records"
        },
        {
          "name": "TotalPackages",
          "expression": "SUM(Packages)",
          "column": "Packages",
          "aggregation": "SUM",
          "business_meaning": "Total number of packages across shipping records"
        },
        {
          "name": "AveragePackages",
          "expression": "AVG(Packages)",
          "column": "Packages",
          "aggregation": "AVG",
          "business_meaning": "Average number of packages per shipping record"
        },
        {
          "name": "TotalPalets",
          "expression": "SUM(Palets)",
          "column": "Palets",
          "aggregation": "SUM",
          "business_meaning": "Total number of palets across shipping records"
        },
        {
          "name": "AveragePalets",
          "expression": "AVG(Palets)",
          "column": "Palets",
          "aggregation": "AVG",
          "business_meaning": "Average number of palets per shipping record"
        },
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of shipping records (rows) in the fact table"
        }
      ],
      "foreign_keys": [
        {
          "column": "OteDirectoryVersionID",
          "references": "dbo.OteDirectoryVersion.ID"
        },
        {
          "column": "OteShippingPointID",
          "references": "dbo.OteShippingPoint.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "PaymentMethod",
      "source": "dbo.PaymentMethod",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalInstallments",
          "expression": "SUM(Installments)",
          "column": "Installments",
          "aggregation": "SUM",
          "business_meaning": "Total number of installments across payment methods"
        },
        {
          "name": "AverageInstallments",
          "expression": "AVG(Installments)",
          "column": "Installments",
          "aggregation": "AVG",
          "business_meaning": "Average number of installments per payment method"
        },
        {
          "name": "TotalAdvancedPayment",
          "expression": "SUM(AdvancedPayment)",
          "column": "AdvancedPayment",
          "aggregation": "SUM",
          "business_meaning": "Total advanced payment amount"
        },
        {
          "name": "AverageAdvancedPayment",
          "expression": "AVG(AdvancedPayment)",
          "column": "AdvancedPayment",
          "aggregation": "AVG",
          "business_meaning": "Average advanced payment amount per payment method"
        },
        {
          "name": "TotalNumberOfInvoices",
          "expression": "SUM(NumberOfInvoices)",
          "column": "NumberOfInvoices",
          "aggregation": "SUM",
          "business_meaning": "Total number of invoices associated with the payment methods"
        },
        {
          "name": "AverageNumberOfInvoices",
          "expression": "AVG(NumberOfInvoices)",
          "column": "NumberOfInvoices",
          "aggregation": "AVG",
          "business_meaning": "Average number of invoices per payment method"
        },
        {
          "name": "AverageInterval",
          "expression": "AVG(Interval)",
          "column": "Interval",
          "aggregation": "AVG",
          "business_meaning": "Average interval (e.g., days/months) between payments when applicable"
        }
      ],
      "foreign_keys": [
        {
          "column": "BillingEmailID",
          "references": "dbo.ContactEmail.ID"
        },
        {
          "column": "PaymentMethodTypeID",
          "references": "dbo.PaymentMethodType.ID"
        },
        {
          "column": "PaymentPhoneID",
          "references": "dbo.PointPhone.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "PointPhone",
      "source": "dbo.PointPhone",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalUsage",
          "expression": "SUM(Usage)",
          "column": "Usage",
          "aggregation": "SUM",
          "business_meaning": "Total phone usage across all records"
        },
        {
          "name": "AverageUsage",
          "expression": "AVG(Usage)",
          "column": "Usage",
          "aggregation": "AVG",
          "business_meaning": "Average phone usage per record"
        },
        {
          "name": "MinUsage",
          "expression": "MIN(Usage)",
          "column": "Usage",
          "aggregation": "MIN",
          "business_meaning": "Minimum observed phone usage for a record"
        },
        {
          "name": "MaxUsage",
          "expression": "MAX(Usage)",
          "column": "Usage",
          "aggregation": "MAX",
          "business_meaning": "Maximum observed phone usage for a record"
        },
        {
          "name": "PhoneRecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of phone records"
        },
        {
          "name": "ActivePhoneCount",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Number of active phone records (assuming IsActive is 1 for active)"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique business points represented in the phone records"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "Number",
          "references": "dbo.Phone.Number"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "PointRelationship",
      "source": "dbo.PointRelationship",
      "grain": [
        "BusinessPointID",
        "TargetBussinessPointID",
        "Type"
      ],
      "measures": [
        {
          "name": "RelationshipCount",
          "expression": "COUNT(1)",
          "column": "*",
          "aggregation": "COUNT",
          "business_meaning": "Total number of point relationship records (total relationships)"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique source business points that have relationships"
        },
        {
          "name": "DistinctTargetBusinessPointCount",
          "expression": "COUNT(DISTINCT TargetBussinessPointID)",
          "column": "TargetBussinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique target business points referenced by relationships"
        },
        {
          "name": "RelationshipsWithTypeCount",
          "expression": "COUNT(Type)",
          "column": "Type",
          "aggregation": "COUNT",
          "business_meaning": "Count of relationships that have a non-null Type value"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "TargetBussinessPointID",
          "references": "dbo.BusinessPoint.ID"
        }
      ],
      "business_meaning": "Transactional data at BusinessPointID, TargetBussinessPointID, Type grain"
    },
    {
      "name": "PricelistItem",
      "source": "dbo.PricelistItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PricelistItemCount",
          "expression": "COUNT(*)",
          "column": null,
          "aggregation": "COUNT",
          "business_meaning": "Number of pricelist items (row count) in the PricelistItem table"
        }
      ],
      "foreign_keys": [
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "PricelistItemDetail",
      "source": "dbo.PricelistItemDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalUnitAmount",
          "expression": "SUM(UnitAmount)",
          "column": "UnitAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of the unit measurement amounts for all pricelist item details (total units/measurement across rows)."
        },
        {
          "name": "AverageUnitAmount",
          "expression": "AVG(UnitAmount)",
          "column": "UnitAmount",
          "aggregation": "AVG",
          "business_meaning": "Average unit measurement amount per pricelist item detail (useful for per-item sizing or average quantity)."
        },
        {
          "name": "TotalComplexPrice",
          "expression": "SUM(ComplexPrice)",
          "column": "ComplexPrice",
          "aggregation": "SUM",
          "business_meaning": "Sum of complex prices for pricelist item details (total price/extended price if ComplexPrice represents an amount)."
        },
        {
          "name": "TotalAllowableQuantities",
          "expression": "SUM(AllowableQuantities)",
          "column": "AllowableQuantities",
          "aggregation": "SUM",
          "business_meaning": "Total of allowable quantities across all pricelist item details (sum of allowed quantity values)."
        },
        {
          "name": "TotalAmountsPerAllowableQuantities",
          "expression": "SUM(AmountsPerAllowableQuantities)",
          "column": "AmountsPerAllowableQuantities",
          "aggregation": "SUM",
          "business_meaning": "Sum of amounts mapped per allowable quantity (aggregated amounts tied to allowable quantity groupings)."
        },
        {
          "name": "ItemDetailCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Count of pricelist item detail rows (number of detail records)."
        }
      ],
      "foreign_keys": [
        {
          "column": "PricelistItemID",
          "references": "dbo.PricelistItem.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "KitID",
          "references": "dbo.ProductKit.ID"
        },
        {
          "column": "MeasurementType",
          "references": "dbo.PriceListMeasurementType.ID"
        },
        {
          "column": "ProductPartID",
          "references": "dbo.ProductPart.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Product",
      "source": "dbo.Product",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ProductCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of product records"
        },
        {
          "name": "TotalMinMembers",
          "expression": "SUM(MinMembers)",
          "column": "MinMembers",
          "aggregation": "SUM",
          "business_meaning": "Sum of minimum members across products (useful for capacity/size totals)"
        },
        {
          "name": "AverageMinMembers",
          "expression": "AVG(MinMembers)",
          "column": "MinMembers",
          "aggregation": "AVG",
          "business_meaning": "Average minimum members per product"
        },
        {
          "name": "TotalMaxMembers",
          "expression": "SUM(MaxMembers)",
          "column": "MaxMembers",
          "aggregation": "SUM",
          "business_meaning": "Sum of maximum members across products"
        },
        {
          "name": "AverageMaxMembers",
          "expression": "AVG(MaxMembers)",
          "column": "MaxMembers",
          "aggregation": "AVG",
          "business_meaning": "Average maximum members per product"
        },
        {
          "name": "TotalMaxAllowedChanges",
          "expression": "SUM(MaxAllowedChanges)",
          "column": "MaxAllowedChanges",
          "aggregation": "SUM",
          "business_meaning": "Total allowed change allowances across products"
        },
        {
          "name": "AverageMaxAllowedChanges",
          "expression": "AVG(MaxAllowedChanges)",
          "column": "MaxAllowedChanges",
          "aggregation": "AVG",
          "business_meaning": "Average allowed changes per product"
        }
      ],
      "foreign_keys": [
        {
          "column": "CanvasPlanningGroupID",
          "references": "dbo.CanvasPlanningGroup.ID"
        },
        {
          "column": "DiscountPolicyID",
          "references": "dbo.DiscountPolicy.ID"
        },
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "TargetValueID",
          "references": "dbo.ProductPart.ID"
        },
        {
          "column": "ProductTypeID",
          "references": "dbo.ProductType.ID"
        },
        {
          "column": "UdacID",
          "references": "dbo.Udac.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ProductionCaseProduct",
      "source": "dbo.ProductionCaseProduct",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of ProductionCaseProduct records (rows)"
        },
        {
          "name": "DistinctPricelistItemCount",
          "expression": "COUNT(DISTINCT PricelistItemID)",
          "column": "PricelistItemID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique pricelist items represented (e.g., per reporting grain such as Case)"
        },
        {
          "name": "DistinctCaseCount",
          "expression": "COUNT(DISTINCT CaseID)",
          "column": "CaseID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique production cases represented"
        }
      ],
      "foreign_keys": [
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "PricelistItemID",
          "references": "dbo.PricelistItem.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ProductKit",
      "source": "dbo.ProductKit",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rows (product-kit membership records) in the ProductKit table."
        },
        {
          "name": "ItemsPerKit",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Count of items (members) assigned to a kit. Use when grouping by KitID to get items per kit."
        },
        {
          "name": "DistinctKits",
          "expression": "COUNT(DISTINCT KitID)",
          "column": "KitID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique kits represented in the ProductKit table."
        },
        {
          "name": "DistinctMembers",
          "expression": "COUNT(DISTINCT MemberID)",
          "column": "MemberID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique members/items referenced across all kits."
        },
        {
          "name": "MandatoryCount",
          "expression": "SUM(CASE WHEN IsMandatory = 1 THEN 1 ELSE 0 END)",
          "column": "IsMandatory",
          "aggregation": "SUM",
          "business_meaning": "Number of items marked as mandatory within kits."
        },
        {
          "name": "MandatoryRate",
          "expression": "AVG(CAST(IsMandatory AS FLOAT))",
          "column": "IsMandatory",
          "aggregation": "AVG",
          "business_meaning": "Proportion of items that are mandatory (useful as a percentage when multiplied by 100)."
        },
        {
          "name": "AvgFillOrder",
          "expression": "AVG(FillOrder)",
          "column": "FillOrder",
          "aggregation": "AVG",
          "business_meaning": "Average fill order position for items within kits (useful to understand typical ordering/priority)."
        },
        {
          "name": "MinFillOrder",
          "expression": "MIN(FillOrder)",
          "column": "FillOrder",
          "aggregation": "MIN",
          "business_meaning": "Minimum fill order value observed (earliest/highest-priority position)."
        },
        {
          "name": "MaxFillOrder",
          "expression": "MAX(FillOrder)",
          "column": "FillOrder",
          "aggregation": "MAX",
          "business_meaning": "Maximum fill order value observed (latest/lowest-priority position)."
        }
      ],
      "foreign_keys": [
        {
          "column": "KitID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "MemberID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ProductPart",
      "source": "dbo.ProductPart",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PartRecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of product part records (rows) in the table"
        },
        {
          "name": "DistinctProductCount",
          "expression": "COUNT(DISTINCT ProductID)",
          "column": "ProductID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct products that have parts defined"
        },
        {
          "name": "TotalMinOccurrence",
          "expression": "SUM(MinOccurence)",
          "column": "MinOccurence",
          "aggregation": "SUM",
          "business_meaning": "Total of minimum required occurrences across all product parts"
        },
        {
          "name": "AverageMinOccurrence",
          "expression": "AVG(MinOccurence)",
          "column": "MinOccurence",
          "aggregation": "AVG",
          "business_meaning": "Average minimum required occurrences per product part"
        },
        {
          "name": "TotalMaxOccurrence",
          "expression": "SUM(MaxOccurence)",
          "column": "MaxOccurence",
          "aggregation": "SUM",
          "business_meaning": "Total of maximum allowed occurrences across all product parts"
        },
        {
          "name": "AverageMaxOccurrence",
          "expression": "AVG(MaxOccurence)",
          "column": "MaxOccurence",
          "aggregation": "AVG",
          "business_meaning": "Average maximum allowed occurrences per product part"
        },
        {
          "name": "MinFillOrder",
          "expression": "MIN(FillOrder)",
          "column": "FillOrder",
          "aggregation": "MIN",
          "business_meaning": "Lowest fill order value (useful to find the highest-priority position)"
        },
        {
          "name": "MaxFillOrder",
          "expression": "MAX(FillOrder)",
          "column": "FillOrder",
          "aggregation": "MAX",
          "business_meaning": "Highest fill order value (useful to find the lowest-priority position)"
        }
      ],
      "foreign_keys": [
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "ProductPartDefinitionID",
          "references": "dbo.ProductPartDefinition.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "ProductPartDefinition",
      "source": "dbo.ProductPartDefinition",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "DMKey",
          "expression": "SUM(DMKey)",
          "column": "DMKey",
          "aggregation": "SUM",
          "business_meaning": "SUM of DMKey"
        },
        {
          "name": "EditorType",
          "expression": "SUM(EditorType)",
          "column": "EditorType",
          "aggregation": "SUM",
          "business_meaning": "SUM of EditorType"
        }
      ],
      "foreign_keys": [
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "UdacPartDefinitionID",
          "references": "dbo.UdacPartDefinition.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "RuleCondition",
      "source": "dbo.RuleCondition",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ConditionCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rule condition records (rows) in the RuleCondition table"
        },
        {
          "name": "DistinctRuleCount",
          "expression": "COUNT(DISTINCT RuleMasterID)",
          "column": "RuleMasterID",
          "aggregation": "DISTINCTCOUNT",
          "business_meaning": "Number of distinct rules (RuleMaster) that have one or more conditions"
        },
        {
          "name": "DistinctConditionDefinitionCount",
          "expression": "COUNT(DISTINCT RuleConditionDefinitionID)",
          "column": "RuleConditionDefinitionID",
          "aggregation": "DISTINCTCOUNT",
          "business_meaning": "Number of distinct condition definitions referenced by rule conditions"
        }
      ],
      "foreign_keys": [
        {
          "column": "RuleConditionDefinitionID",
          "references": "dbo.RuleConditionDefinition.ID"
        },
        {
          "column": "RuleConditionOperandID",
          "references": "dbo.RuleConditionOperand.ID"
        },
        {
          "column": "RuleMasterID",
          "references": "dbo.RuleMaster.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "RuleConditionDefinition",
      "source": "dbo.RuleConditionDefinition",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ConditionRows",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rule condition definition rows (total conditions defined)"
        },
        {
          "name": "DistinctRulesReferenced",
          "expression": "COUNT(DISTINCT RuleDefinitionID)",
          "column": "RuleDefinitionID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct rule definitions that have one or more conditions"
        },
        {
          "name": "DistinctColumnsReferenced",
          "expression": "COUNT(DISTINCT ColumnID)",
          "column": "ColumnID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct data columns referenced by rule conditions"
        },
        {
          "name": "DistinctLookupTablesReferenced",
          "expression": "COUNT(DISTINCT LookupTableID)",
          "column": "LookupTableID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct lookup tables referenced by rule conditions"
        },
        {
          "name": "ConditionsWithLookup",
          "expression": "COUNT(LookupTableID)",
          "column": "LookupTableID",
          "aggregation": "COUNT",
          "business_meaning": "Count of conditions that reference a lookup table (non-null LookupTableID)"
        }
      ],
      "foreign_keys": [
        {
          "column": "ColumnID",
          "references": "dbo.SQLColumn.ID"
        },
        {
          "column": "LookupTableID",
          "references": "dbo.SQLObject.ID"
        },
        {
          "column": "RuleDefinitionID",
          "references": "dbo.RuleDefinition.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "RuleConditionDefinitionJoin",
      "source": "dbo.RuleConditionDefinitionJoin",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Record Count",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rows in the RuleConditionDefinitionJoin table"
        },
        {
          "name": "Count of RuleConditionDefinition References",
          "expression": "COUNT(RuleConditionDefinitionID)",
          "column": "RuleConditionDefinitionID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows that reference a RuleConditionDefinition (non-null)"
        },
        {
          "name": "Distinct RuleConditionDefinition Count",
          "expression": "COUNT(DISTINCT RuleConditionDefinitionID)",
          "column": "RuleConditionDefinitionID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique RuleConditionDefinition entries referenced"
        },
        {
          "name": "Count of LeftColumnID",
          "expression": "COUNT(LeftColumnID)",
          "column": "LeftColumnID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows with a non-null LeftColumnID"
        },
        {
          "name": "Distinct LeftColumnID Count",
          "expression": "COUNT(DISTINCT LeftColumnID)",
          "column": "LeftColumnID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique LeftColumnIDs referenced"
        },
        {
          "name": "Count of RightColumnID",
          "expression": "COUNT(RightColumnID)",
          "column": "RightColumnID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows with a non-null RightColumnID"
        },
        {
          "name": "Distinct RightColumnID Count",
          "expression": "COUNT(DISTINCT RightColumnID)",
          "column": "RightColumnID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique RightColumnIDs referenced"
        },
        {
          "name": "Complete Left-Right Pair Count",
          "expression": "SUM(CASE WHEN LeftColumnID IS NOT NULL AND RightColumnID IS NOT NULL THEN 1 ELSE 0 END)",
          "column": "LeftColumnID,RightColumnID",
          "aggregation": "SUM",
          "business_meaning": "Number of rows where both LeftColumnID and RightColumnID are present"
        }
      ],
      "foreign_keys": [
        {
          "column": "RuleConditionDefinitionID",
          "references": "dbo.RuleConditionDefinition.ID"
        },
        {
          "column": "LeftColumnID",
          "references": "dbo.SQLColumn.ID"
        },
        {
          "column": "RightColumnID",
          "references": "dbo.SQLColumn.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "RuleMaster",
      "source": "dbo.RuleMaster",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Total Quantity",
          "expression": "SUM(Quantity)",
          "column": "Quantity",
          "aggregation": "SUM",
          "business_meaning": "Total of the Quantity field across all rules (sum of units/occurrences specified by rules)."
        },
        {
          "name": "Average Quantity",
          "expression": "AVG(Quantity)",
          "column": "Quantity",
          "aggregation": "AVG",
          "business_meaning": "Average Quantity per rule record."
        },
        {
          "name": "Minimum Quantity",
          "expression": "MIN(Quantity)",
          "column": "Quantity",
          "aggregation": "MIN",
          "business_meaning": "Minimum Quantity value among rules."
        },
        {
          "name": "Maximum Quantity",
          "expression": "MAX(Quantity)",
          "column": "Quantity",
          "aggregation": "MAX",
          "business_meaning": "Maximum Quantity value among rules."
        },
        {
          "name": "Rule Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rule records (rows) in the RuleMaster table."
        }
      ],
      "foreign_keys": [
        {
          "column": "RuleDefinitionID",
          "references": "dbo.RuleDefinition.ID"
        },
        {
          "column": "SQLCommandID",
          "references": "dbo.SQLCommand.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "SalesCollection",
      "source": "dbo.SalesCollection",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "column": "Amount",
          "aggregation": "SUM",
          "business_meaning": "Total monetary value collected across all sales collections"
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "column": "Amount",
          "aggregation": "AVG",
          "business_meaning": "Average monetary value per sales collection (mean collection amount)"
        },
        {
          "name": "MinAmount",
          "expression": "MIN(Amount)",
          "column": "Amount",
          "aggregation": "MIN",
          "business_meaning": "Minimum single collection amount recorded"
        },
        {
          "name": "MaxAmount",
          "expression": "MAX(Amount)",
          "column": "Amount",
          "aggregation": "MAX",
          "business_meaning": "Maximum single collection amount recorded"
        },
        {
          "name": "CollectionsCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of collection records (total receipts/transactions)"
        },
        {
          "name": "DistinctContractsCount",
          "expression": "COUNT(DISTINCT ContractID)",
          "column": "ContractID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique contracts represented in the collections"
        },
        {
          "name": "DistinctBusinessPointsCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique business points/locations that have collections"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ModifiedByID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "SalesManTargeting",
      "source": "dbo.SalesManTargeting",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalWorkingDays",
          "expression": "SUM(TotalWorkingDays)",
          "column": "TotalWorkingDays",
          "aggregation": "SUM",
          "business_meaning": "Sum of working days across the records (total working days for salesmen in the reporting period)."
        },
        {
          "name": "TotalVisits",
          "expression": "SUM(TotalVisits)",
          "column": "TotalVisits",
          "aggregation": "SUM",
          "business_meaning": "Total number of visits (all visit types combined)."
        },
        {
          "name": "COVisits",
          "expression": "SUM(COVisits)",
          "column": "COVisits",
          "aggregation": "SUM",
          "business_meaning": "Total number of CO visits."
        },
        {
          "name": "NewVisits",
          "expression": "SUM(NewVisits)",
          "column": "NewVisits",
          "aggregation": "SUM",
          "business_meaning": "Total number of new visits."
        },
        {
          "name": "COCustomers",
          "expression": "SUM(COCustomers)",
          "column": "COCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total count of CO customers."
        },
        {
          "name": "COAmount",
          "expression": "SUM(COAmount)",
          "column": "COAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount (revenue) associated with CO customers."
        },
        {
          "name": "LossCustomers",
          "expression": "SUM(LossCustomers)",
          "column": "LossCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of lost customers."
        },
        {
          "name": "LossAmount",
          "expression": "SUM(LossAmount)",
          "column": "LossAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount (revenue) lost due to customer losses."
        },
        {
          "name": "IncreaseCustomers",
          "expression": "SUM(IncreaseCustomers)",
          "column": "IncreaseCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customers with increased purchases."
        },
        {
          "name": "IncreaseAmount",
          "expression": "SUM(IncreaseAmount)",
          "column": "IncreaseAmount",
          "aggregation": "SUM",
          "business_meaning": "Total increased amount (additional revenue) from customers who increased purchases."
        },
        {
          "name": "ReductionCustomers",
          "expression": "SUM(ReductionCustomers)",
          "column": "ReductionCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customers with reduced purchases."
        },
        {
          "name": "ReductionAmount",
          "expression": "SUM(ReductionAmount)",
          "column": "ReductionAmount",
          "aggregation": "SUM",
          "business_meaning": "Total reduction amount (revenue decrease) from customers who reduced purchases."
        },
        {
          "name": "NoChangesCustomers",
          "expression": "SUM(NoChangesCustomers)",
          "column": "NoChangesCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customers with no change in purchase behavior."
        },
        {
          "name": "NoChangesAmount",
          "expression": "SUM(NoChangesAmount)",
          "column": "NoChangesAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount associated with customers who had no change in purchases."
        },
        {
          "name": "ROCOCustomers",
          "expression": "SUM(ROCOCustomers)",
          "column": "ROCOCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of ROCO customers."
        },
        {
          "name": "ROCOAmount",
          "expression": "SUM(ROCOAmount)",
          "column": "ROCOAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount associated with ROCO customers."
        },
        {
          "name": "NewCustomers",
          "expression": "SUM(NewCustomers)",
          "column": "NewCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total count of new customers acquired."
        },
        {
          "name": "NewAmount",
          "expression": "SUM(NewAmount)",
          "column": "NewAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount (revenue) from new customers."
        },
        {
          "name": "TotalCustomers",
          "expression": "SUM(TotalCustomers)",
          "column": "TotalCustomers",
          "aggregation": "SUM",
          "business_meaning": "Total number of customers (aggregate across records)."
        },
        {
          "name": "TotalAmount",
          "expression": "SUM(TotalAmount)",
          "column": "TotalAmount",
          "aggregation": "SUM",
          "business_meaning": "Total sales amount / revenue for the record set."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "GroupID",
          "references": "dbo.CampaignGroup.ID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.CampaignSegment.ID"
        },
        {
          "column": "SalesManID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SuperVisorID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "SalesTreeHistory",
      "source": "dbo.SalesTreeHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of rows (records) in the SalesTreeHistory table"
        },
        {
          "name": "DistinctSalesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "column": "SalesmanID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique salesmen represented in the history"
        },
        {
          "name": "DistinctSupervisors",
          "expression": "COUNT(DISTINCT SupervisorID)",
          "column": "SupervisorID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique supervisors represented in the history"
        },
        {
          "name": "DistinctManagers",
          "expression": "COUNT(DISTINCT ManagerID)",
          "column": "ManagerID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique managers represented in the history"
        },
        {
          "name": "DistinctSegments",
          "expression": "COUNT(DISTINCT SegmentID)",
          "column": "SegmentID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique segments represented in the history"
        },
        {
          "name": "DeletedRows",
          "expression": "SUM(CASE WHEN IsDeleted = 1 THEN 1 ELSE 0 END)",
          "column": "IsDeleted",
          "aggregation": "SUM",
          "business_meaning": "Count of rows marked as deleted"
        },
        {
          "name": "ActiveRows",
          "expression": "SUM(CASE WHEN IsDeleted = 0 THEN 1 ELSE 0 END)",
          "column": "IsDeleted",
          "aggregation": "SUM",
          "business_meaning": "Count of rows not marked as deleted (active records)"
        },
        {
          "name": "EarliestCreatedOn",
          "expression": "MIN(CreatedOn)",
          "column": "CreatedOn",
          "aggregation": "MIN",
          "business_meaning": "Earliest creation timestamp in the set of records"
        },
        {
          "name": "LatestCreatedOn",
          "expression": "MAX(CreatedOn)",
          "column": "CreatedOn",
          "aggregation": "MAX",
          "business_meaning": "Latest creation timestamp in the set of records"
        },
        {
          "name": "MinYear",
          "expression": "MIN(Year)",
          "column": "Year",
          "aggregation": "MIN",
          "business_meaning": "Earliest Year value present in the records"
        },
        {
          "name": "MaxYear",
          "expression": "MAX(Year)",
          "column": "Year",
          "aggregation": "MAX",
          "business_meaning": "Latest Year value present in the records"
        },
        {
          "name": "DistinctYears",
          "expression": "COUNT(DISTINCT Year)",
          "column": "Year",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct years represented in the history"
        }
      ],
      "foreign_keys": [
        {
          "column": "ManagerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SupervisorID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "SQLJoinConditionRule",
      "source": "dbo.SQLJoinConditionRule",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "JoinConditionRuleCount",
          "expression": "COUNT(*)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of join condition rule records (row count)"
        },
        {
          "name": "DistinctJoinConditionCount",
          "expression": "COUNT(DISTINCT SQLJoinConditionID)",
          "column": "SQLJoinConditionID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct SQL join conditions referenced by rules"
        },
        {
          "name": "DistinctLeftColumnCount",
          "expression": "COUNT(DISTINCT LeftColumnID)",
          "column": "LeftColumnID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct left-side columns used in join condition rules"
        },
        {
          "name": "DistinctRightColumnCount",
          "expression": "COUNT(DISTINCT RightColumnID)",
          "column": "RightColumnID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct right-side columns used in join condition rules"
        }
      ],
      "foreign_keys": [
        {
          "column": "LeftColumnID",
          "references": "dbo.SQLColumn.ID"
        },
        {
          "column": "RightColumnID",
          "references": "dbo.SQLColumn.ID"
        },
        {
          "column": "SQLJoinConditionID",
          "references": "dbo.SQLJoinCondition.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "SQLSearchConditionRule",
      "source": "dbo.SQLSearchConditionRule",
      "grain": [
        "ID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "LeftColumnID",
          "references": "dbo.SQLColumn.ID"
        },
        {
          "column": "RightColumnID",
          "references": "dbo.SQLColumn.ID"
        },
        {
          "column": "SQLSearchConditionID",
          "references": "dbo.SQLSearchCondition.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "SQLSelectList",
      "source": "dbo.SQLSelectList",
      "grain": [
        "SQLSelctStatementID",
        "ColumnID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "SQLSelctStatementID",
          "references": "dbo.SQLSelectStatement.SQLCommandID"
        },
        {
          "column": "ColumnID",
          "references": "dbo.SQLColumn.ID"
        }
      ],
      "business_meaning": "Transactional data at SQLSelctStatementID, ColumnID grain"
    },
    {
      "name": "SQLTableSource",
      "source": "dbo.SQLTableSource",
      "grain": [
        "SQLCommandID",
        "ObjectID"
      ],
      "measures": [],
      "foreign_keys": [
        {
          "column": "SQLCommandID",
          "references": "dbo.SQLCommand.ID"
        },
        {
          "column": "ObjectID",
          "references": "dbo.SQLObject.ID"
        }
      ],
      "business_meaning": "Transactional data at SQLCommandID, ObjectID grain"
    },
    {
      "name": "SubChannel",
      "source": "dbo.SubChannel",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "SubChannelCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of sub-channel records (row count)"
        },
        {
          "name": "ActiveSubChannelCount",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Number of sub-channels that are active (IsActive = 1)"
        },
        {
          "name": "DistinctChannelTypeCount",
          "expression": "COUNT(DISTINCT ChannelTypeID)",
          "column": "ChannelTypeID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct channel types represented by these sub-channels"
        }
      ],
      "foreign_keys": [
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        },
        {
          "column": "DefaultSalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TargetChannel",
      "source": "dbo.TargetChannel",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "OnSiteTotalAgents",
          "expression": "SUM(OnSiteTotalAgents)",
          "column": "OnSiteTotalAgents",
          "aggregation": "SUM",
          "business_meaning": "Total number of on-site agents across the selected rows"
        },
        {
          "name": "OffSiteTotalAgents",
          "expression": "SUM(OffSiteTotalAgents)",
          "column": "OffSiteTotalAgents",
          "aggregation": "SUM",
          "business_meaning": "Total number of off-site agents across the selected rows"
        },
        {
          "name": "TotalAgents",
          "expression": "SUM(OnSiteTotalAgents) + SUM(OffSiteTotalAgents)",
          "column": "OnSiteTotalAgents+OffSiteTotalAgents",
          "aggregation": "SUM",
          "business_meaning": "Combined total agents (on-site + off-site) across the selected rows"
        },
        {
          "name": "OnSiteWorkingDays",
          "expression": "SUM(OnSiteWorkingDays)",
          "column": "OnSiteWorkingDays",
          "aggregation": "SUM",
          "business_meaning": "Total on-site working days"
        },
        {
          "name": "OffSiteWorkingDays",
          "expression": "SUM(OffSiteWorkingDays)",
          "column": "OffSiteWorkingDays",
          "aggregation": "SUM",
          "business_meaning": "Total off-site working days"
        },
        {
          "name": "TotalWorkingDays",
          "expression": "SUM(OnSiteWorkingDays) + SUM(OffSiteWorkingDays)",
          "column": "OnSiteWorkingDays+OffSiteWorkingDays",
          "aggregation": "SUM",
          "business_meaning": "Combined working days (on-site + off-site)"
        },
        {
          "name": "OnSiteGrossManDays",
          "expression": "SUM(OnSiteGrossManDays)",
          "column": "OnSiteGrossManDays",
          "aggregation": "SUM",
          "business_meaning": "Total gross man-days for on-site resources"
        },
        {
          "name": "OffSiteGrossManDays",
          "expression": "SUM(OffSiteGrossManDays)",
          "column": "OffSiteGrossManDays",
          "aggregation": "SUM",
          "business_meaning": "Total gross man-days for off-site resources"
        },
        {
          "name": "TotalGrossManDays",
          "expression": "SUM(OnSiteGrossManDays) + SUM(OffSiteGrossManDays)",
          "column": "OnSiteGrossManDays+OffSiteGrossManDays",
          "aggregation": "SUM",
          "business_meaning": "Combined gross man-days (on-site + off-site)"
        },
        {
          "name": "OnSiteNetManDays",
          "expression": "SUM(OnSiteNetManDays)",
          "column": "OnSiteNetManDays",
          "aggregation": "SUM",
          "business_meaning": "Total net man-days for on-site resources"
        },
        {
          "name": "OffSiteNetManDays",
          "expression": "SUM(OffSiteNetManDays)",
          "column": "OffSiteNetManDays",
          "aggregation": "SUM",
          "business_meaning": "Total net man-days for off-site resources"
        },
        {
          "name": "TotalNetManDays",
          "expression": "SUM(OnSiteNetManDays) + SUM(OffSiteNetManDays)",
          "column": "OnSiteNetManDays+OffSiteNetManDays",
          "aggregation": "SUM",
          "business_meaning": "Combined net man-days (on-site + off-site)"
        },
        {
          "name": "AvgOnSiteIllnessRate",
          "expression": "AVG(OnSiteIllnessRate)",
          "column": "OnSiteIllnessRate",
          "aggregation": "AVG",
          "business_meaning": "Average on-site illness rate (arithmetic mean across records)"
        },
        {
          "name": "AvgOffSiteIllnessRate",
          "expression": "AVG(OffSiteIllnessRate)",
          "column": "OffSiteIllnessRate",
          "aggregation": "AVG",
          "business_meaning": "Average off-site illness rate (arithmetic mean across records)"
        },
        {
          "name": "WeightedIllnessRateByAgents",
          "expression": "(SUM(OnSiteIllnessRate * OnSiteTotalAgents) + SUM(OffSiteIllnessRate * OffSiteTotalAgents)) / NULLIF(SUM(OnSiteTotalAgents) + SUM(OffSiteTotalAgents), 0)",
          "column": "OnSiteIllnessRate,OffSiteIllnessRate,OnSiteTotalAgents,OffSiteTotalAgents",
          "aggregation": "CALCULATED",
          "business_meaning": "Illness rate weighted by agent count (gives a combined illness rate reflecting agent distribution)"
        },
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of TargetChannel records in the result set"
        }
      ],
      "foreign_keys": [
        {
          "column": "SubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "TargetSettingCriteriaID",
          "references": "dbo.TargetSetting.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TargetGroupItem",
      "source": "dbo.TargetGroupItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TargetItemCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of target group items (rows) in the table"
        },
        {
          "name": "PaymentRefusalCount",
          "expression": "SUM(PaymentRefusal)",
          "column": "PaymentRefusal",
          "aggregation": "SUM",
          "business_meaning": "Total number of items flagged as payment refusal (assumes PaymentRefusal is stored as 0/1)"
        },
        {
          "name": "PaymentRefusalRate",
          "expression": "AVG(PaymentRefusal)",
          "column": "PaymentRefusal",
          "aggregation": "AVG",
          "business_meaning": "Proportion of items flagged as payment refusal (0..1), useful as a rate or percentage when multiplied by 100"
        },
        {
          "name": "DisappearedCount",
          "expression": "SUM(Disappeared)",
          "column": "Disappeared",
          "aggregation": "SUM",
          "business_meaning": "Total number of items marked as disappeared (assumes Disappeared is stored as 0/1)"
        },
        {
          "name": "DisappearedRate",
          "expression": "AVG(Disappeared)",
          "column": "Disappeared",
          "aggregation": "AVG",
          "business_meaning": "Proportion of items marked as disappeared (0..1)"
        },
        {
          "name": "PrecariousnessLegalCount",
          "expression": "SUM(PrecariousnessLegal)",
          "column": "PrecariousnessLegal",
          "aggregation": "SUM",
          "business_meaning": "Total number of items flagged for legal precariousness (assumes 0/1 encoding)"
        },
        {
          "name": "PrecariousnessLegalRate",
          "expression": "AVG(PrecariousnessLegal)",
          "column": "PrecariousnessLegal",
          "aggregation": "AVG",
          "business_meaning": "Proportion of items flagged for legal precariousness"
        },
        {
          "name": "ContinuousPaymentRefusalCount",
          "expression": "SUM(ContinuousPaymentRefusal)",
          "column": "ContinuousPaymentRefusal",
          "aggregation": "SUM",
          "business_meaning": "Total number of items with continuous payment refusal (assumes 0/1 encoding)"
        },
        {
          "name": "ContinuousPaymentRefusalRate",
          "expression": "AVG(ContinuousPaymentRefusal)",
          "column": "ContinuousPaymentRefusal",
          "aggregation": "AVG",
          "business_meaning": "Proportion of items with continuous payment refusal"
        },
        {
          "name": "SealedCheckCount",
          "expression": "SUM(SealedCheck)",
          "column": "SealedCheck",
          "aggregation": "SUM",
          "business_meaning": "Total number of items flagged with sealed check (assumes 0/1 encoding)"
        },
        {
          "name": "SealedCheckRate",
          "expression": "AVG(SealedCheck)",
          "column": "SealedCheck",
          "aggregation": "AVG",
          "business_meaning": "Proportion of items flagged with sealed check"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SourceCampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TargetGroupItemPeriod",
      "source": "dbo.TargetGroupItemPeriod",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows/records in the TargetGroupItemPeriod table"
        },
        {
          "name": "DistinctTargetGroupItemValueCount",
          "expression": "COUNT(DISTINCT TargetGroupItemValueID)",
          "column": "TargetGroupItemValueID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Count of unique TargetGroupItemValue entries represented in the period/product scope"
        },
        {
          "name": "DistinctContractProductCount",
          "expression": "COUNT(DISTINCT ContractProductID)",
          "column": "ContractProductID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Count of unique ContractProduct entries represented in the period/group"
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractProductID",
          "references": "dbo.ContractProduct.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemInfo.TargetGroupItemValueID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TargetGroupItemValue",
      "source": "dbo.TargetGroupItemValue",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalTargetValue",
          "expression": "SUM(TargetValue)",
          "column": "TargetValue",
          "aggregation": "SUM",
          "business_meaning": "Total target value assigned to the target group item (monetary/quantitative target aggregated across rows)."
        },
        {
          "name": "AverageTargetValue",
          "expression": "AVG(TargetValue)",
          "column": "TargetValue",
          "aggregation": "AVG",
          "business_meaning": "Average target value per target group item (useful to understand typical target size)."
        },
        {
          "name": "TotalChannelTargetValue",
          "expression": "SUM(ChannelTargetValue)",
          "column": "ChannelTargetValue",
          "aggregation": "SUM",
          "business_meaning": "Total portion of the target value allocated to channels."
        },
        {
          "name": "TotalUserTargetValue",
          "expression": "SUM(UserTargetValue)",
          "column": "UserTargetValue",
          "aggregation": "SUM",
          "business_meaning": "Total portion of the target value allocated to users/owners."
        },
        {
          "name": "TotalRequestedDiscountAmount",
          "expression": "SUM(RequestedDiscountAmount)",
          "column": "RequestedDiscountAmount",
          "aggregation": "SUM",
          "business_meaning": "Total amount of discounts requested across target group items."
        },
        {
          "name": "AverageRequestedDiscountPercentage",
          "expression": "AVG(RequestedDiscountPercentage)",
          "column": "RequestedDiscountPercentage",
          "aggregation": "AVG",
          "business_meaning": "Average requested discount rate (percentage) across items."
        },
        {
          "name": "TotalFixOfferDiffValue",
          "expression": "SUM(FixOfferDiffValue)",
          "column": "FixOfferDiffValue",
          "aggregation": "SUM",
          "business_meaning": "Total difference value when fixed offers were applied (monetary impact)."
        },
        {
          "name": "TotalVisits",
          "expression": "SUM(Visits)",
          "column": "Visits",
          "aggregation": "SUM",
          "business_meaning": "Total number of visits/interactions recorded for the target group items."
        },
        {
          "name": "TotalLossPrintedNew",
          "expression": "SUM(LossPrintedNew)",
          "column": "LossPrintedNew",
          "aggregation": "SUM",
          "business_meaning": "Aggregate count of 'LossPrintedNew' occurrences (usage depends on business definition)."
        },
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "column": "*",
          "aggregation": "COUNT",
          "business_meaning": "Number of target group item value rows (useful for volumes and completeness checks)."
        }
      ],
      "foreign_keys": [
        {
          "column": "AltOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "FixOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "HandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialHandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "NegationReasonID",
          "references": "dbo.NegationReason.ID"
        },
        {
          "column": "NoCommReasonID",
          "references": "dbo.NoCommReason.ID"
        },
        {
          "column": "PendingReasonId",
          "references": "dbo.PendingReason.ID"
        },
        {
          "column": "PostponeReasonID",
          "references": "dbo.PostponeReason.ID"
        },
        {
          "column": "PresaleFormTaskId",
          "references": "dbo.Task.ID"
        },
        {
          "column": "ProposedHandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ProposedTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "Supervisor",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialSubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "CampaignAllocationPlanID",
          "references": "dbo.CampaignAllocationPlan.ID"
        },
        {
          "column": "RequestedDiscountOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "TargetGroupItemID",
          "references": "dbo.TargetGroupItem.ID"
        },
        {
          "column": "TargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "PXKEditorUserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Task",
      "source": "dbo.Task",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TaskCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of tasks (row count)"
        },
        {
          "name": "DistinctCaseCount",
          "expression": "COUNT(DISTINCT CaseID)",
          "column": "CaseID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique cases represented by tasks"
        },
        {
          "name": "CompletedTaskCount",
          "expression": "COUNT(CompletedOn)",
          "column": "CompletedOn",
          "aggregation": "COUNT",
          "business_meaning": "Number of tasks that have a completion timestamp (completed tasks)"
        },
        {
          "name": "OpenTaskCount",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "column": "CompletedOn",
          "aggregation": "SUM",
          "business_meaning": "Number of tasks not yet completed"
        },
        {
          "name": "AvgCompletionDays",
          "expression": "AVG(DATEDIFF(day, CreatedOn, CompletedOn))",
          "column": "CreatedOn, CompletedOn",
          "aggregation": "AVG",
          "business_meaning": "Average number of days between task creation and completion (for completed tasks)"
        },
        {
          "name": "AvgTimeToOwnerChangeHours",
          "expression": "AVG(DATEDIFF(hour, CreatedOn, ActualOwnerModifiedOn))",
          "column": "CreatedOn, ActualOwnerModifiedOn",
          "aggregation": "AVG",
          "business_meaning": "Average hours between task creation and the first change to the actual owner"
        },
        {
          "name": "DistinctOwnerCount",
          "expression": "COUNT(DISTINCT ActualOwnerID)",
          "column": "ActualOwnerID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct actual owners who have been assigned tasks"
        },
        {
          "name": "DistinctTaskTypeCount",
          "expression": "COUNT(DISTINCT TaskTypeID)",
          "column": "TaskTypeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct task types present in the data"
        }
      ],
      "foreign_keys": [
        {
          "column": "CompletedById",
          "references": "dbo.User.ID"
        },
        {
          "column": "TaskTypeID",
          "references": "dbo.TaskType.ID"
        },
        {
          "column": "ActualOwnerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "SenderID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TaskAssignment",
      "source": "dbo.TaskAssignment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AssignmentCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of task assignment records (rows) in the TaskAssignment table."
        },
        {
          "name": "UniqueUsersAssigned",
          "expression": "COUNT(DISTINCT UserID)",
          "column": "UserID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct users who have been assigned to one or more tasks."
        },
        {
          "name": "UniqueTasksAssigned",
          "expression": "COUNT(DISTINCT TaskID)",
          "column": "TaskID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct tasks that have at least one assignment."
        },
        {
          "name": "UniqueRolesAssigned",
          "expression": "COUNT(DISTINCT RoleID)",
          "column": "RoleID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct roles used in task assignments."
        }
      ],
      "foreign_keys": [
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TaskTarget",
      "source": "dbo.TaskTarget",
      "grain": [
        "TaskID",
        "TargetCaseID"
      ],
      "measures": [
        {
          "name": "DMKey",
          "expression": "SUM(DMKey)",
          "column": "DMKey",
          "aggregation": "SUM",
          "business_meaning": "SUM of DMKey"
        }
      ],
      "foreign_keys": [
        {
          "column": "TargetCaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        }
      ],
      "business_meaning": "Transactional data at TaskID, TargetCaseID grain"
    },
    {
      "name": "TaskTransition",
      "source": "dbo.TaskTransition",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Transition Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of task transition records (rows) in the table"
        },
        {
          "name": "Default Transition Count",
          "expression": "SUM(CASE WHEN IsDefault = 1 THEN 1 ELSE 0 END)",
          "column": "IsDefault",
          "aggregation": "SUM",
          "business_meaning": "Number of transitions marked as the default path"
        },
        {
          "name": "Default Transition Rate",
          "expression": "AVG(CASE WHEN IsDefault = 1 THEN 1.0 ELSE 0.0 END)",
          "column": "IsDefault",
          "aggregation": "AVG",
          "business_meaning": "Proportion of transitions that are default (range 0\u20131)"
        },
        {
          "name": "Distinct Source Task Types",
          "expression": "COUNT(DISTINCT SourceTaskTypeID)",
          "column": "SourceTaskTypeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique source task types participating in transitions"
        },
        {
          "name": "Distinct Target Task Types",
          "expression": "COUNT(DISTINCT TargetTaskTypeID)",
          "column": "TargetTaskTypeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique target task types participating in transitions"
        },
        {
          "name": "Latest Transition Version",
          "expression": "MAX(Version)",
          "column": "Version",
          "aggregation": "MAX",
          "business_meaning": "Highest version number of task transitions (most recent definition)"
        }
      ],
      "foreign_keys": [
        {
          "column": "SourceTaskTypeID",
          "references": "dbo.TaskType.ID"
        },
        {
          "column": "TargetTaskTypeID",
          "references": "dbo.TaskType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TaskType",
      "source": "dbo.TaskType",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "DMKey",
          "expression": "SUM(DMKey)",
          "column": "DMKey",
          "aggregation": "SUM",
          "business_meaning": "SUM of DMKey"
        },
        {
          "name": "Version",
          "expression": "SUM(Version)",
          "column": "Version",
          "aggregation": "SUM",
          "business_meaning": "SUM of Version"
        }
      ],
      "foreign_keys": [
        {
          "column": "CaseTypeID",
          "references": "dbo.CaseType.ID"
        },
        {
          "column": "TargetCaseTypeID",
          "references": "dbo.CaseType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TaskTypeAssignment",
      "source": "dbo.TaskTypeAssignment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AssignmentCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of task type assignments (row count). Use this to measure overall assignment volume."
        },
        {
          "name": "DistinctRoleCount",
          "expression": "COUNT(DISTINCT RoleID)",
          "column": "RoleID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique roles that have been assigned to task types."
        },
        {
          "name": "DistinctTaskTypeCount",
          "expression": "COUNT(DISTINCT TaskTypeID)",
          "column": "TaskTypeID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique task types that have one or more assignments."
        }
      ],
      "foreign_keys": [
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "TaskTypeID",
          "references": "dbo.TaskType.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TaxCode",
      "source": "dbo.TaxCode",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Record Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of rows (tax code records) in the TaxCode table"
        },
        {
          "name": "Distinct Tax Codes",
          "expression": "COUNT(DISTINCT TaxCode)",
          "column": "TaxCode",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique TaxCode values defined in the table"
        }
      ],
      "foreign_keys": [
        {
          "column": "ID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CountryID",
          "references": "dbo.Country.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Ticket",
      "source": "dbo.Ticket",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Ticket Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of tickets (rows) in the table"
        },
        {
          "name": "Distinct Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "column": "BusinessPointID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of unique business points that have tickets"
        },
        {
          "name": "Total Credit Amount",
          "expression": "SUM(CreditAmount)",
          "column": "CreditAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of all credit amounts applied to tickets"
        },
        {
          "name": "Average Credit Amount",
          "expression": "AVG(CreditAmount)",
          "column": "CreditAmount",
          "aggregation": "AVG",
          "business_meaning": "Average credit amount per ticket (includes tickets with NULL credit if DB AVG semantics apply)"
        },
        {
          "name": "Total Cancel Amount",
          "expression": "SUM(CancelAmount)",
          "column": "CancelAmount",
          "aggregation": "SUM",
          "business_meaning": "Sum of all cancellation amounts recorded on tickets"
        },
        {
          "name": "Average Cancel Amount",
          "expression": "AVG(CancelAmount)",
          "column": "CancelAmount",
          "aggregation": "AVG",
          "business_meaning": "Average cancellation amount per ticket"
        },
        {
          "name": "Total Requested Changes",
          "expression": "SUM(RequestedChanges)",
          "column": "RequestedChanges",
          "aggregation": "SUM",
          "business_meaning": "Total number of requested changes across all tickets"
        },
        {
          "name": "Average Requested Changes",
          "expression": "AVG(RequestedChanges)",
          "column": "RequestedChanges",
          "aggregation": "AVG",
          "business_meaning": "Average number of requested changes per ticket"
        },
        {
          "name": "Tickets with Credit (count)",
          "expression": "SUM(CASE WHEN CreditAmount IS NOT NULL AND CreditAmount <> 0 THEN 1 ELSE 0 END)",
          "column": "CreditAmount",
          "aggregation": "SUM (conditional)",
          "business_meaning": "Count of tickets that have a non-zero credit amount"
        },
        {
          "name": "Tickets with Cancellation Amount (count)",
          "expression": "SUM(CASE WHEN CancelAmount IS NOT NULL AND CancelAmount <> 0 THEN 1 ELSE 0 END)",
          "column": "CancelAmount",
          "aggregation": "SUM (conditional)",
          "business_meaning": "Count of tickets that have a non-zero cancellation amount"
        }
      ],
      "foreign_keys": [
        {
          "column": "LastAssignRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "LastAssignUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InParallelRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.Name"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.CustomerID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ContractID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.SalesmanID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.TicketID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "SerialRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "SerialTicketTypdeID",
          "references": "dbo.TicketType.ID"
        },
        {
          "column": "RelatedContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "SelectedSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "TargetCampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "TargetSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "TargetSubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "TargetSupervisorID",
          "references": "dbo.User.ID"
        },
        {
          "column": "RelatedSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "BusinessPointIdentificationId",
          "references": "dbo.BusinessPointIdentification.ID"
        },
        {
          "column": "CancellationResonID",
          "references": "dbo.TicketCancellationReason.ID"
        },
        {
          "column": "ChargeOfResponsibilityID",
          "references": "dbo.TicketChargeOfResponsibility.ID"
        },
        {
          "column": "CompletedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "HandlerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "PriorityID",
          "references": "dbo.TicketPriority.ID"
        },
        {
          "column": "RequestReasonID",
          "references": "dbo.TicketRequestReason.ID"
        },
        {
          "column": "ResolutionMethodID",
          "references": "dbo.TicketResolutionMethod.ID"
        },
        {
          "column": "SourceTypeID",
          "references": "dbo.TicketSourceType.ID"
        },
        {
          "column": "TicketTypeID",
          "references": "dbo.TicketType.ID"
        },
        {
          "column": "WebChangesContractID",
          "references": "dbo.Contract.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TicketAdvertisementHistory",
      "source": "dbo.TicketAdvertisementHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of history records in TicketAdvertisementHistory"
        },
        {
          "name": "WorkDoneInProductionCount",
          "expression": "SUM(CASE WHEN IsWorkDoneInProduction = 1 THEN 1 ELSE 0 END)",
          "column": "IsWorkDoneInProduction",
          "aggregation": "SUM",
          "business_meaning": "Number of history records where work was done in production"
        },
        {
          "name": "WorkDoneInProductionRate",
          "expression": "AVG(CAST(IsWorkDoneInProduction AS FLOAT))",
          "column": "IsWorkDoneInProduction",
          "aggregation": "AVG",
          "business_meaning": "Proportion of history records where work was done in production (rate between 0 and 1)"
        }
      ],
      "foreign_keys": [
        {
          "column": "AdvertisementID",
          "references": "dbo.Advertisement.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "TicketID",
          "references": "dbo.Ticket.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "TicketResult",
      "source": "dbo.TicketResult",
      "grain": [
        "TicketID",
        "TaskID"
      ],
      "measures": [
        {
          "name": "TicketResult Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of TicketResult records (rows) in the table"
        },
        {
          "name": "Distinct Tickets",
          "expression": "COUNT(DISTINCT TicketID)",
          "column": "TicketID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct tickets that have one or more result records"
        },
        {
          "name": "Sum of Result",
          "expression": "SUM(Result)",
          "column": "Result",
          "aggregation": "SUM",
          "business_meaning": "Aggregate (total) of the Result values \u2014 use only if Result represents a numeric amount or score"
        },
        {
          "name": "Average Result",
          "expression": "AVG(Result)",
          "column": "Result",
          "aggregation": "AVG",
          "business_meaning": "Average of the Result values \u2014 useful when Result is a numeric measurement or score"
        },
        {
          "name": "Results Count by Performer",
          "expression": "COUNT(PerformedByID)",
          "column": "PerformedByID",
          "aggregation": "COUNT",
          "business_meaning": "Number of result records that have an associated performer (counts performed actions)"
        },
        {
          "name": "Distinct Performers",
          "expression": "COUNT(DISTINCT PerformedByID)",
          "column": "PerformedByID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of distinct performers who have created result records"
        }
      ],
      "foreign_keys": [
        {
          "column": "InParallelRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.Name"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.CustomerID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ContractID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.SalesmanID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "TicketID",
          "references": "dbo.Ticket.ID"
        },
        {
          "column": "ResolutionMethodID",
          "references": "dbo.TicketResolutionMethod.ID"
        },
        {
          "column": "PerformedByID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at TicketID, TaskID grain"
    },
    {
      "name": "TicketTypeRoles",
      "source": "dbo.TicketTypeRoles",
      "grain": [
        "TicketTypeID",
        "RoleID"
      ],
      "measures": [
        {
          "name": "RoleAssignmentsCount",
          "expression": "COUNT(*)",
          "column": null,
          "aggregation": "COUNT",
          "business_meaning": "Count of role assignment rows (number of role entries) in the TicketTypeRoles table"
        }
      ],
      "foreign_keys": [
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "TicketTypeID",
          "references": "dbo.TicketType.ID"
        }
      ],
      "business_meaning": "Transactional data at TicketTypeID, RoleID grain"
    },
    {
      "name": "Udac",
      "source": "dbo.Udac",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "UdacRecordCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of Udac records (row count)"
        },
        {
          "name": "AverageMinMembers",
          "expression": "AVG(MinMembers)",
          "column": "MinMembers",
          "aggregation": "AVG",
          "business_meaning": "Average of the minimum members defined on Udac records"
        },
        {
          "name": "AverageMaxMembers",
          "expression": "AVG(MaxMembers)",
          "column": "MaxMembers",
          "aggregation": "AVG",
          "business_meaning": "Average of the maximum members defined on Udac records"
        },
        {
          "name": "TotalAddOnCount",
          "expression": "SUM(IsAddOn)",
          "column": "IsAddOn",
          "aggregation": "SUM",
          "business_meaning": "Number of Udac records marked as add-ons (assumes IsAddOn = 1 for true)"
        },
        {
          "name": "AddOnRate",
          "expression": "AVG(IsAddOn)",
          "column": "IsAddOn",
          "aggregation": "AVG",
          "business_meaning": "Proportion of Udac records that are add-ons (average of the boolean flag)"
        },
        {
          "name": "AverageMaxAllowedChanges",
          "expression": "AVG(MaxAllowedChanges)",
          "column": "MaxAllowedChanges",
          "aggregation": "AVG",
          "business_meaning": "Average number of allowed changes defined per Udac"
        },
        {
          "name": "AverageDeadline",
          "expression": "AVG(Deadline)",
          "column": "Deadline",
          "aggregation": "AVG",
          "business_meaning": "Average deadline value for Udac (interpretation depends on how Deadline is stored \u2014 e.g., days)"
        }
      ],
      "foreign_keys": [
        {
          "column": "NewSubscriptionUdacId",
          "references": "dbo.Udac.ID"
        },
        {
          "column": "CanvasPlanningGroupID",
          "references": "dbo.CanvasPlanningGroup.ID"
        },
        {
          "column": "ProductTypeID",
          "references": "dbo.ProductType.ID"
        },
        {
          "column": "NewUdacID",
          "references": "dbo.Udac.ID"
        },
        {
          "column": "DiscountPolicyID",
          "references": "dbo.UdacDiscountPolicy.ID"
        },
        {
          "column": "TargetValueID",
          "references": "dbo.UdacPart.ID"
        },
        {
          "column": "ProdWorkflowID",
          "references": "dbo.ProductionWorkflow.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "UdacKit",
      "source": "dbo.UdacKit",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "DMKey",
          "expression": "SUM(DMKey)",
          "column": "DMKey",
          "aggregation": "SUM",
          "business_meaning": "SUM of DMKey"
        },
        {
          "name": "FillOrder",
          "expression": "SUM(FillOrder)",
          "column": "FillOrder",
          "aggregation": "SUM",
          "business_meaning": "SUM of FillOrder"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "KitID",
          "references": "dbo.Udac.ID"
        },
        {
          "column": "MemberID",
          "references": "dbo.Udac.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "UdacPart",
      "source": "dbo.UdacPart",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalMinOccurence",
          "expression": "SUM(MinOccurence)",
          "column": "MinOccurence",
          "aggregation": "SUM",
          "business_meaning": "Sum of the minimum occurrences required across all Udac parts (total minimum quantity)"
        },
        {
          "name": "TotalMaxOccurence",
          "expression": "SUM(MaxOccurence)",
          "column": "MaxOccurence",
          "aggregation": "SUM",
          "business_meaning": "Sum of the maximum occurrences allowed across all Udac parts (total maximum capacity)"
        },
        {
          "name": "AverageMinOccurence",
          "expression": "AVG(MinOccurence)",
          "column": "MinOccurence",
          "aggregation": "AVG",
          "business_meaning": "Average minimum occurrence per Udac part"
        },
        {
          "name": "AverageMaxOccurence",
          "expression": "AVG(MaxOccurence)",
          "column": "MaxOccurence",
          "aggregation": "AVG",
          "business_meaning": "Average maximum occurrence per Udac part"
        },
        {
          "name": "MinOfMinOccurence",
          "expression": "MIN(MinOccurence)",
          "column": "MinOccurence",
          "aggregation": "MIN",
          "business_meaning": "Smallest minimum occurrence value among Udac parts"
        },
        {
          "name": "MaxOfMaxOccurence",
          "expression": "MAX(MaxOccurence)",
          "column": "MaxOccurence",
          "aggregation": "MAX",
          "business_meaning": "Largest maximum occurrence value among Udac parts"
        },
        {
          "name": "PartRowCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of UdacPart records (rows) in the dataset"
        },
        {
          "name": "DistinctUdacCount",
          "expression": "COUNT(DISTINCT UdacID)",
          "column": "UdacID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct Udac entities represented by parts"
        }
      ],
      "foreign_keys": [
        {
          "column": "UdacPartDefinitionID",
          "references": "dbo.UdacPartDefinition.ID"
        },
        {
          "column": "UdacID",
          "references": "dbo.Udac.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "UdacProdRole",
      "source": "dbo.UdacProdRole",
      "grain": [
        "RoleID",
        "UdacID"
      ],
      "measures": [
        {
          "name": "DMKey",
          "expression": "SUM(DMKey)",
          "column": "DMKey",
          "aggregation": "SUM",
          "business_meaning": "SUM of DMKey"
        }
      ],
      "foreign_keys": [
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "UdacID",
          "references": "dbo.Udac.ID"
        }
      ],
      "business_meaning": "Transactional data at RoleID, UdacID grain"
    },
    {
      "name": "UdacRelationship",
      "source": "dbo.UdacRelationship",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RelationshipCount",
          "expression": "COUNT(1)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of relationship records (row count) in the table"
        },
        {
          "name": "ActiveRelationshipCount",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Number of relationships currently marked active"
        },
        {
          "name": "DeactivatedRelationshipCount",
          "expression": "SUM(CASE WHEN DeactivationDate IS NOT NULL OR IsActive = 0 THEN 1 ELSE 0 END)",
          "column": "DeactivationDate",
          "aggregation": "SUM",
          "business_meaning": "Number of relationships that have been deactivated"
        },
        {
          "name": "DistinctSourceUdacCount",
          "expression": "COUNT(DISTINCT SourceUdacID)",
          "column": "SourceUdacID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique source UDACs participating in relationships"
        },
        {
          "name": "DistinctTargetUdacCount",
          "expression": "COUNT(DISTINCT TargetUdacID)",
          "column": "TargetUdacID",
          "aggregation": "COUNT DISTINCT",
          "business_meaning": "Number of unique target UDACs participating in relationships"
        },
        {
          "name": "AverageRelationshipDurationDays",
          "expression": "AVG(DATEDIFF(day, InsertionDate, ISNULL(DeactivationDate, GETDATE())))",
          "column": "DurationDays",
          "aggregation": "AVG",
          "business_meaning": "Average lifespan of relationships in days (uses current date for active relationships)"
        },
        {
          "name": "TotalRelationshipDurationDays",
          "expression": "SUM(DATEDIFF(day, InsertionDate, ISNULL(DeactivationDate, GETDATE())))",
          "column": "DurationDays",
          "aggregation": "SUM",
          "business_meaning": "Total accumulated relationship duration in days (sums durations of all relationships)"
        },
        {
          "name": "ActiveRelationshipRate",
          "expression": "CASE WHEN COUNT(1) = 0 THEN 0 ELSE SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(1) END",
          "column": "IsActive",
          "aggregation": "RATE",
          "business_meaning": "Proportion of relationships that are active (active count / total relationships)"
        }
      ],
      "foreign_keys": [
        {
          "column": "TargetUdacID",
          "references": "dbo.Udac.ID"
        },
        {
          "column": "SourceUdacID",
          "references": "dbo.Udac.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "Unit",
      "source": "dbo.Unit",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "UnitCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of units/records in the Unit table"
        },
        {
          "name": "DistinctUnitCount",
          "expression": "COUNT(DISTINCT ID)",
          "column": "ID",
          "aggregation": "COUNT(DISTINCT)",
          "business_meaning": "Number of unique units"
        },
        {
          "name": "ActiveUnitCount",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Count of units currently marked as active"
        },
        {
          "name": "AvgHierarchySpan",
          "expression": "AVG(RightIndex - LeftIndex)",
          "column": "LeftIndex, RightIndex",
          "aggregation": "AVG",
          "business_meaning": "Average span of the nested-set indexes (proxy for average subtree size)"
        },
        {
          "name": "MaxRightIndex",
          "expression": "MAX(RightIndex)",
          "column": "RightIndex",
          "aggregation": "MAX",
          "business_meaning": "Maximum RightIndex value (useful to understand tree extent/size)"
        },
        {
          "name": "MinLeftIndex",
          "expression": "MIN(LeftIndex)",
          "column": "LeftIndex",
          "aggregation": "MIN",
          "business_meaning": "Minimum LeftIndex value (useful to understand tree indexing range)"
        }
      ],
      "foreign_keys": [
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.Name"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.CustomerID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ContractID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.SalesmanID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.TicketID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.CanvasPlanningHistory.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "User",
      "source": "dbo.User",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "User Count",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of users (rows) in the User table"
        },
        {
          "name": "Distinct Unit Count",
          "expression": "COUNT(DISTINCT UnitID)",
          "column": "UnitID",
          "aggregation": "COUNT_DISTINCT",
          "business_meaning": "Number of distinct units associated with users"
        },
        {
          "name": "Active Users",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Count of users marked as active"
        },
        {
          "name": "Paused Users",
          "expression": "SUM(CASE WHEN IsPaused = 1 THEN 1 ELSE 0 END)",
          "column": "IsPaused",
          "aggregation": "SUM",
          "business_meaning": "Count of users currently paused"
        },
        {
          "name": "Unit Managers",
          "expression": "SUM(CASE WHEN IsUnitManager = 1 THEN 1 ELSE 0 END)",
          "column": "IsUnitManager",
          "aggregation": "SUM",
          "business_meaning": "Count of users who are flagged as unit managers"
        },
        {
          "name": "Stop Sales Count",
          "expression": "SUM(CASE WHEN StopSales = 1 THEN 1 ELSE 0 END)",
          "column": "StopSales",
          "aggregation": "SUM",
          "business_meaning": "Count of users marked with StopSales flag"
        }
      ],
      "foreign_keys": [
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.Name"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.CustomerID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ContractID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.SalesmanID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.TicketID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "UnitID",
          "references": "dbo.CanvasPlanningHistory.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "UserRole",
      "source": "dbo.UserRole",
      "grain": [
        "UserID",
        "RoleID"
      ],
      "measures": [
        {
          "name": "DMKey",
          "expression": "SUM(DMKey)",
          "column": "DMKey",
          "aggregation": "SUM",
          "business_meaning": "SUM of DMKey"
        }
      ],
      "foreign_keys": [
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.User.ID"
        }
      ],
      "business_meaning": "Transactional data at UserID, RoleID grain"
    },
    {
      "name": "VersionGroupItem",
      "source": "dbo.VersionGroupItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ItemCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Number of VersionGroupItem rows (total items)"
        },
        {
          "name": "ActiveItemCount",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "column": "IsActive",
          "aggregation": "SUM",
          "business_meaning": "Count of items marked active"
        },
        {
          "name": "ActiveRate",
          "expression": "AVG(CAST(IsActive AS FLOAT))",
          "column": "IsActive",
          "aggregation": "AVG",
          "business_meaning": "Proportion (rate) of items that are active (0..1)"
        }
      ],
      "foreign_keys": [
        {
          "column": "SourceGroupItemID",
          "references": "dbo.VersionGroupItem.ID"
        },
        {
          "column": "SourceGeoID",
          "references": "dbo.MasterGeoAreaGroup.ID"
        },
        {
          "column": "SourceHeadingID",
          "references": "dbo.MasterHeading.ID"
        },
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.VersionGroupItem.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    },
    {
      "name": "VersionSection",
      "source": "dbo.VersionSection",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "SectionCount",
          "expression": "COUNT(ID)",
          "column": "ID",
          "aggregation": "COUNT",
          "business_meaning": "Total number of VersionSection rows (total sections)"
        },
        {
          "name": "SeqNo_Sum",
          "expression": "SUM(SeqNo)",
          "column": "SeqNo",
          "aggregation": "SUM",
          "business_meaning": "Sum of sequence numbers for sections (rarely used, can support checksum or aggregate ordering analyses)"
        },
        {
          "name": "SeqNo_Avg",
          "expression": "AVG(SeqNo)",
          "column": "SeqNo",
          "aggregation": "AVG",
          "business_meaning": "Average sequence number of sections (useful to understand typical position within parent)"
        },
        {
          "name": "SeqNo_Min",
          "expression": "MIN(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MIN",
          "business_meaning": "Lowest sequence number present (earliest position)"
        },
        {
          "name": "SeqNo_Max",
          "expression": "MAX(SeqNo)",
          "column": "SeqNo",
          "aggregation": "MAX",
          "business_meaning": "Highest sequence number present (latest position)"
        }
      ],
      "foreign_keys": [
        {
          "column": "MasterSectionID",
          "references": "dbo.MasterSection.ID"
        },
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "VersionGroupItemID",
          "references": "dbo.VersionGroupItem.ID"
        },
        {
          "column": "ParentID",
          "references": "dbo.VersionSection.ID"
        }
      ],
      "business_meaning": "Transactional data at ID grain"
    }
  ],
  "relationships": [
    {
      "from": "dbo.Address.CountryID",
      "to": "dbo.Country.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Address references one Country via CountryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AdvancedPaymentMethod.SalesCollectionID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AdvancedPaymentMethod references one SalesCollection via SalesCollectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AdvancedPaymentMethod.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AdvancedPaymentMethod references one Bank via BankID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AdvancedPaymentMethod.CreditCardTypeID",
      "to": "dbo.CreditCardType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AdvancedPaymentMethod references one CreditCardType via CreditCardTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AdvancedPaymentMethod.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AdvancedPaymentMethod references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AdvancedPaymentMethod.ID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AdvancedPaymentMethod references one Contract via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AdvancedPaymentSalesCollection.AdvancedPaymentMethodID",
      "to": "dbo.AdvancedPaymentMethod.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AdvancedPaymentSalesCollection references one AdvancedPaymentMethod via AdvancedPaymentMethodID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AdvancedPaymentSalesCollection.SalesCollectionID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AdvancedPaymentSalesCollection references one SalesCollection via SalesCollectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.CaseAttachmentID",
      "to": "dbo.CaseAttachment.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one CaseAttachment via CaseAttachmentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one ContractProduct via ContractProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.ProductKitID",
      "to": "dbo.ProductKit.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one ProductKit via ProductKitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.HeadingID",
      "to": "dbo.VersionGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one VersionGroupItem via HeadingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.ReactivatedContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one Contract via ReactivatedContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Advertisement.RelatedAdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Advertisement references one Advertisement via RelatedAdvertisementID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ArchivedNumber.CreateById",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ArchivedNumber references one User via CreateById",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AuditLog.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AuditLog references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AvailableConditionOperands.RuleConditionOperandID",
      "to": "dbo.RuleConditionOperand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AvailableConditionOperands references one RuleConditionOperand via RuleConditionOperandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.AvailableConditionOperands.RuleConditionDefinitionID",
      "to": "dbo.RuleConditionDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each AvailableConditionOperands references one RuleConditionDefinition via RuleConditionDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BankDepositDetail.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BankDepositDetail references one Bank via BankID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BankDepositDetail.ID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BankDepositDetail references one SalesCollection via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BroaderArea.AddressID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BroaderArea references one Address via AddressID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BroaderAreaLookUp.MasterGeoAreaGroupID",
      "to": "dbo.MasterGeoAreaGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BroaderAreaLookUp references one MasterGeoAreaGroup via MasterGeoAreaGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.GLSeqCodeID",
      "to": "dbo.GLSeqCode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one GLSeqCode via GLSeqCodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.KEPYOStatusID",
      "to": "dbo.KEPYOStatus.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one KEPYOStatus via KEPYOStatusID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.BillingAddressID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one Address via BillingAddressID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.SalesNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one ClassifierNode via SalesNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.SalesContactID",
      "to": "dbo.Contact.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one Contact via SalesContactID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.ActivityClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one ClassifierNode via ActivityClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.LocationAddressID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one Address via LocationAddressID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.LocationNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one ClassifierNode via LocationNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.CustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one CustomerSource via CustomerSourceID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.LegalFormID",
      "to": "dbo.LegalForm.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one LegalForm via LegalFormID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.TaxOfficeID",
      "to": "dbo.TaxOffice.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one TaxOffice via TaxOfficeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.VatCategoryID",
      "to": "dbo.VatCategory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one VatCategory via VatCategoryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.SalesAddressID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one Address via SalesAddressID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.CustomerUpdateID",
      "to": "dbo.CustomerUpdate.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one CustomerUpdate via CustomerUpdateID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.CustomerSolvencyID",
      "to": "dbo.CustomerSolvency.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one CustomerSolvency via CustomerSolvencyID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPoint.InitialCustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPoint references one CustomerSource via InitialCustomerSourceID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointComment.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointComment references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointComment.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointComment references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointCommentAttachment.CommentID",
      "to": "dbo.BusinessPointComment.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointCommentAttachment references one BusinessPointComment via CommentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointConfirmationHistory.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointConfirmationHistory references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointConfirmationHistory.BusinessPointIdentificationID",
      "to": "dbo.BusinessPointIdentification.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointConfirmationHistory references one BusinessPointIdentification via BusinessPointIdentificationID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointConfirmationHistory.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointConfirmationHistory references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointConfirmationHistory.PerformedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointConfirmationHistory references one User via PerformedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointCustomAttributeValue.BusinessPointListingID",
      "to": "dbo.BusinessPointListing.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointCustomAttributeValue references one BusinessPointListing via BusinessPointListingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointErpInfo.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointErpInfo references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointIdentification.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointIdentification references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointIdentification.RejectionReasonId",
      "to": "dbo.RejectionReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointIdentification references one RejectionReason via RejectionReasonId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointListing.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointListing references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointListing.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointListing references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointListing.CreatedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointListing references one User via CreatedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointListing.ModifiedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointListing references one User via ModifiedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointListingLog.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointListingLog references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.BusinessPointListingLog.PerformerID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each BusinessPointListingLog references one User via PerformerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Campaign.CampaignTypeID",
      "to": "dbo.CampaignType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Campaign references one CampaignType via CampaignTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Campaign.SourceCampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Campaign references one Campaign via SourceCampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Campaign.GeographicDestinationID",
      "to": "dbo.GeographicDestination.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Campaign references one GeographicDestination via GeographicDestinationID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Campaign.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Campaign references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Campaign.SelectedAllocationPlanID",
      "to": "dbo.CampaignAllocationPlan.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Campaign references one CampaignAllocationPlan via SelectedAllocationPlanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAllocationPlan.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAllocationPlan references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAllocationPlanChannel.CampaignAllocationPlanID",
      "to": "dbo.CampaignAllocationPlan.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAllocationPlanChannel references one CampaignAllocationPlan via CampaignAllocationPlanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAllocationPlanChannel.SubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAllocationPlanChannel references one SubChannel via SubChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAllocationPlanUser.CampaignAllocationPlanID",
      "to": "dbo.CampaignAllocationPlan.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAllocationPlanUser references one CampaignAllocationPlan via CampaignAllocationPlanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAllocationPlanUser.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAllocationPlanUser references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAllocationPlanUser.SubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAllocationPlanUser references one SubChannel via SubChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentBPLossRequestDetail.BPID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentBPLossRequestDetail references one BusinessPoint via BPID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentBPLossRequestDetail.RequestID",
      "to": "dbo.CampaignAssignmentRequest.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentBPLossRequestDetail references one CampaignAssignmentRequest via RequestID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequest.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequest references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequest.CreatedByUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequest references one User via CreatedByUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequest.PerformerID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequest references one User via PerformerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequest.ReasonID",
      "to": "dbo.CampaignAssignmentRequestReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequest references one CampaignAssignmentRequestReason via ReasonID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequest.RequestedSalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequest references one User via RequestedSalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequestDetail.BucketID",
      "to": "dbo.CampaignBucket.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequestDetail references one CampaignBucket via BucketID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequestDetail.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequestDetail references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequestDetail.NewSalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequestDetail references one User via NewSalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequestDetail.OldSalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequestDetail references one User via OldSalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentRequestDetail.RequestID",
      "to": "dbo.CampaignAssignmentRequest.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentRequestDetail references one CampaignAssignmentRequest via RequestID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentToBPRequestDetail.BPID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentToBPRequestDetail references one BusinessPoint via BPID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignAssignmentToBPRequestDetail.RequestID",
      "to": "dbo.CampaignAssignmentRequest.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignAssignmentToBPRequestDetail references one CampaignAssignmentRequest via RequestID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignBucket.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignBucket references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignBucket.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignBucket references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignBucket.FileID",
      "to": "dbo.CampaignBucketFileUploadHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignBucket references one CampaignBucketFileUploadHistory via FileID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignBucketFileUploadHistory.CreatedByUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignBucketFileUploadHistory references one User via CreatedByUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignBucketFileUploadHistory.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignBucketFileUploadHistory references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignBucketFileUploadHistoryDetail.FileID",
      "to": "dbo.CampaignBucketFileUploadHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignBucketFileUploadHistoryDetail references one CampaignBucketFileUploadHistory via FileID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignCalendar.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignCalendar references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignChannelType.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignChannelType references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignChannelType.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignChannelType references one ChannelType via ChannelTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignFixedOffer.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignFixedOffer references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignFixedOffer.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignFixedOffer references one ChannelType via ChannelTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignFixedOfferProduct.PricelistItemID",
      "to": "dbo.PricelistItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignFixedOfferProduct references one PricelistItem via PricelistItemID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignFixedOfferProduct.CampaignFixedOfferID",
      "to": "dbo.CampaignFixedOffer.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignFixedOfferProduct references one CampaignFixedOffer via CampaignFixedOfferID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignFixedOfferProductDetail.CampaignFixedOfferProductID",
      "to": "dbo.CampaignFixedOfferProduct.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignFixedOfferProductDetail references one CampaignFixedOfferProduct via CampaignFixedOfferProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignFixedOfferProductDetail.PriceListItemDetailID",
      "to": "dbo.PricelistItemDetail.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignFixedOfferProductDetail references one PricelistItemDetail via PriceListItemDetailID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignGroup.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignGroup references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignGroup.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignGroup references one ChannelType via ChannelTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignHoliday.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignHoliday references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignMediumType.CampaignTypeID",
      "to": "dbo.CampaignType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignMediumType references one CampaignType via CampaignTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignMediumType.MediumTypeID",
      "to": "dbo.MediumType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignMediumType references one MediumType via MediumTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomer.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomer references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomer.RuleID",
      "to": "dbo.CampaignNewLossCustomerRule.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomer references one CampaignNewLossCustomerRule via RuleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRule.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRule references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRule.CreatorUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRule references one User via CreatorUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRule.DialerGroupID",
      "to": "dbo.DialerGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRule references one DialerGroup via DialerGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleCustomerIndicator.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleCustomerIndicator references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleCustomerIndicator.RuleID",
      "to": "dbo.CampaignNewLossCustomerRule.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleCustomerIndicator references one CampaignNewLossCustomerRule via RuleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleCustomerSource.CustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleCustomerSource references one CustomerSource via CustomerSourceID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleCustomerSource.RuleID",
      "to": "dbo.CampaignNewLossCustomerRule.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleCustomerSource references one CampaignNewLossCustomerRule via RuleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleMainActivity.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleMainActivity references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleMainActivity.RuleID",
      "to": "dbo.CampaignNewLossCustomerRule.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleMainActivity references one CampaignNewLossCustomerRule via RuleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleRegion.BroaderAreaID",
      "to": "dbo.BroaderAreaLookUp.BroaderAreaID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleRegion references one BroaderAreaLookUp via BroaderAreaID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleRegion.GeoModelVersion",
      "to": "dbo.BroaderAreaLookUp.GeoModelVersion",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleRegion references one BroaderAreaLookUp via GeoModelVersion",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleRegion.RuleID",
      "to": "dbo.CampaignNewLossCustomerRule.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleRegion references one CampaignNewLossCustomerRule via RuleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleSalesman.RuleID",
      "to": "dbo.CampaignNewLossCustomerRule.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleSalesman references one CampaignNewLossCustomerRule via RuleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleSalesman.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossCustomerRuleSalesman references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossPremiseCustomerItem.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossPremiseCustomerItem references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossPremiseCustomerItem.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossPremiseCustomerItem references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossSalesmenCustomer.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossSalesmenCustomer references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossSalesmenCustomer.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossSalesmenCustomer references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossSalesmenCustomer.RuleID",
      "to": "dbo.CampaignNewLossCustomerRule.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossSalesmenCustomer references one CampaignNewLossCustomerRule via RuleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignNewLossSalesmenCustomer.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignNewLossSalesmenCustomer references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignOrgModel.ParentID",
      "to": "dbo.CampaignOrgModel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignOrgModel references one CampaignOrgModel via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignOrgModel.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignOrgModel references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignOrgModel.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignOrgModel references one Role via RoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignOrgModelLog.PerformerID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignOrgModelLog references one User via PerformerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignOrgPerson.CampaignOrgModelID",
      "to": "dbo.CampaignOrgModel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignOrgPerson references one CampaignOrgModel via CampaignOrgModelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignOrgPerson.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignOrgPerson references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignRange.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignRange references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignRegion.BroaderAreaID",
      "to": "dbo.BroaderAreaLookUp.BroaderAreaID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignRegion references one BroaderAreaLookUp via BroaderAreaID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignRegion.GeoModelVersion",
      "to": "dbo.BroaderAreaLookUp.GeoModelVersion",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignRegion references one BroaderAreaLookUp via GeoModelVersion",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignRegion.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignRegion references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesman.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesman references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesman.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesman references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesmanBeginEndDate.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesmanBeginEndDate references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesmanBeginEndDate.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesmanBeginEndDate references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesmanNewCustomerTarget.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesmanNewCustomerTarget references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesmanNewCustomerTarget.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesmanNewCustomerTarget references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesMarketCalandar.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesMarketCalandar references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesMarketCalandar.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesMarketCalandar references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesmenAbsence.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesmenAbsence references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSalesmenAbsence.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSalesmenAbsence references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreCustomerBehaviourSnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreCustomerBehaviourSnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreHistoryDetail.CampaignScoreHistoryID",
      "to": "dbo.CampaignScoreHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreHistoryDetail references one CampaignScoreHistory via CampaignScoreHistoryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreMainActivity.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreMainActivity references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreMainActivity.CampaignScoreMainActivityGroupID",
      "to": "dbo.CampaignScoreMainActivityGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreMainActivity references one CampaignScoreMainActivityGroup via CampaignScoreMainActivityGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreMainActivityGroupSnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreMainActivityGroupSnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreMainActivityGroupSnapshot.CampaignScoreMainActivityGroupID",
      "to": "dbo.CampaignScoreMainActivityGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreMainActivityGroupSnapshot references one CampaignScoreMainActivityGroup via CampaignScoreMainActivityGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreMaxInvestmentMediumSnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreMaxInvestmentMediumSnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreMediumCombinationSnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreMediumCombinationSnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreProductCombinationSnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreProductCombinationSnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreReport.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreReport references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreReport.MangerID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreReport references one User via MangerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreReport.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreReport references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreReport.SupervisorID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreReport references one User via SupervisorID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreSalesmanManagementSnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreSalesmanManagementSnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreSeniority.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreSeniority references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreSenioritySnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreSenioritySnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreSenioritySnapshot.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreSenioritySnapshot references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignScoreValueBillingRangeSnapshot.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignScoreValueBillingRangeSnapshot references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSegment.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSegment references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSegmentMediumROCO.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSegmentMediumROCO references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSegmentSalesman.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSegmentSalesman references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignSegmentStatus.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignSegmentStatus references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignTargetingNewCustomerHistory.CreatedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignTargetingNewCustomerHistory references one User via CreatedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignTargetingNewCustomerHistoryDetail.CampaignTargetingNewCustomerHistoryID",
      "to": "dbo.CampaignTargetingNewCustomerHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignTargetingNewCustomerHistoryDetail references one CampaignTargetingNewCustomerHistory via CampaignTargetingNewCustomerHistoryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignUDFString1.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignUDFString1 references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignUDFString2.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignUDFString2 references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignUDFString3.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignUDFString3 references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignUDFString4.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignUDFString4 references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CampaignUDFString5.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CampaignUDFString5 references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CanvasPlanningCalendar.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CanvasPlanningCalendar references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Case.ReferencePointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Case references one BusinessPoint via ReferencePointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Case.InitiatorID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Case references one User via InitiatorID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Case.OwnerUser",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Case references one User via OwnerUser",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Case.MasterCaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Case references one Case via MasterCaseID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Case.ParentTaskId",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Case references one Task via ParentTaskId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Case.PermanentOwnerId",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Case references one User via PermanentOwnerId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Case.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Case references one CaseType via CaseTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CaseAttachment.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CaseAttachment references one Case via CaseID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CaseAttachment.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CaseAttachment references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CaseAttachment.CaseAttachmentTypeID",
      "to": "dbo.CaseAttachmentType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CaseAttachment references one CaseAttachmentType via CaseAttachmentTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CaseComment.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CaseComment references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CaseComment.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CaseComment references one Case via CaseID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ChannelTargeting.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ChannelTargeting references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ChannelTargeting.ChannelID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ChannelTargeting references one ChannelType via ChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ChannelType.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ChannelType references one CaseType via CaseTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CheckDetail.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CheckDetail references one Bank via BankID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CheckDetail.ID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CheckDetail references one SalesCollection via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Classification.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Classification references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Classification.ClassifierID",
      "to": "dbo.Classifier.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Classification references one Classifier via ClassifierID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Classification.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Classification references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Classifier.ClassifierTreeID",
      "to": "dbo.ClassifierTree.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Classifier references one ClassifierTree via ClassifierTreeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Classifier.DefaultNodeId",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Classifier references one ClassifierNode via DefaultNodeId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClassifierNode.ParentNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClassifierNode references one ClassifierNode via ParentNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClassifierNode.ClassifierTreeID",
      "to": "dbo.ClassifierTree.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClassifierNode references one ClassifierTree via ClassifierTreeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClassifierNodeMasterHeadings.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClassifierNodeMasterHeadings references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClassifierNodeMasterHeadings.MasterHeadingID",
      "to": "dbo.MasterHeading.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClassifierNodeMasterHeadings references one MasterHeading via MasterHeadingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClickToCallHarmonyHistory.TgivID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClickToCallHarmonyHistory references one TargetGroupItemValue via TgivID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClickToCallHarmonyHistory.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClickToCallHarmonyHistory references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClickToCallHarmonyHistory.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClickToCallHarmonyHistory references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ClickToCallHarmonyHistoryDetail.ClickToCallHarmonyHistoryID",
      "to": "dbo.ClickToCallHarmonyHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ClickToCallHarmonyHistoryDetail references one ClickToCallHarmonyHistory via ClickToCallHarmonyHistoryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contact.ContactAddressID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contact references one Address via ContactAddressID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContactEmail.ContactID",
      "to": "dbo.Contact.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContactEmail references one Contact via ContactID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContactPhone.ContactID",
      "to": "dbo.Contact.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContactPhone references one Contact via ContactID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContactPhone.Number",
      "to": "dbo.Phone.Number",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContactPhone references one Phone via Number",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContactRelationship.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContactRelationship references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContactRelationship.ContactID",
      "to": "dbo.Contact.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContactRelationship references one Contact via ContactID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContactRelationship.ContactRelationshipTypeID",
      "to": "dbo.ContactRelationshipType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContactRelationship references one ContactRelationshipType via ContactRelationshipTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContentAttributeDefinition.ProductPartDefinitionID",
      "to": "dbo.ProductPartDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContentAttributeDefinition references one ProductPartDefinition via ProductPartDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContentAttributeValue.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContentAttributeValue references one ContractProduct via ContractProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContentAttributeValue.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContentAttributeValue references one Advertisement via AdvertisementID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContentAttributeValue.ContentAttributeDefinitionID",
      "to": "dbo.ContentAttributeDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContentAttributeValue references one ContentAttributeDefinition via ContentAttributeDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContentAttributeValue.ProductPartID",
      "to": "dbo.ProductPart.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContentAttributeValue references one ProductPart via ProductPartID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.BillingPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one BusinessPoint via BillingPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.ShippingPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one BusinessPoint via ShippingPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.ActualBPOwnerID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one BusinessPoint via ActualBPOwnerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.CampaignTargetUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one User via CampaignTargetUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one ChannelType via ChannelTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.BillingEmailID",
      "to": "dbo.ContactEmail.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one ContactEmail via BillingEmailID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.ArchivedNumberID",
      "to": "dbo.ArchivedNumber.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one ArchivedNumber via ArchivedNumberID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.PdfID",
      "to": "dbo.ContractDocument.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one ContractDocument via PdfID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.SubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one SubChannel via SubChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.InitialSubscriptionContractId",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one Contract via InitialSubscriptionContractId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.OrigionalContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one Contract via OrigionalContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.ShippingFaxID",
      "to": "dbo.PointPhone.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one PointPhone via ShippingFaxID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.ShippingEmailID",
      "to": "dbo.PointEmail.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one PointEmail via ShippingEmailID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Contract.SalesManID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Contract references one User via SalesManID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractArchivedNumberChangeHistory.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractArchivedNumberChangeHistory references one Contract via ContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractArchivedNumberChangeHistory.NewArchivedNumber",
      "to": "dbo.ArchivedNumber.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractArchivedNumberChangeHistory references one ArchivedNumber via NewArchivedNumber",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractArchivedNumberChangeHistory.OldArchivedNumber",
      "to": "dbo.ArchivedNumber.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractArchivedNumberChangeHistory references one ArchivedNumber via OldArchivedNumber",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractArchivedNumberChangeHistory.CreatedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractArchivedNumberChangeHistory references one User via CreatedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractDocument.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractDocument references one Contract via ContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractOffer.CreatedByUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractOffer references one User via CreatedByUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractOffer.ModifiedUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractOffer references one User via ModifiedUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractOfferDetail.ContractOfferID",
      "to": "dbo.ContractOffer.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractOfferDetail references one ContractOffer via ContractOfferID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractOfferDetail.UdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractOfferDetail references one Udac via UdacID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractProduct.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractProduct references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractProduct.SalesTypeID",
      "to": "dbo.AdvertisementSalesType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractProduct references one AdvertisementSalesType via SalesTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractProduct.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractProduct references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractProduct.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractProduct references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractProduct.RelatedContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractProduct references one Contract via RelatedContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractProduct.PaymentMethodID",
      "to": "dbo.PaymentMethod.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractProduct references one PaymentMethod via PaymentMethodID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ContractProduct.SourceContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ContractProduct references one ContractProduct via SourceContractProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CreditCardOffLineDetail.ID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CreditCardOffLineDetail references one SalesCollection via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CreditCardOffLineDetail.CreditCardTypeID",
      "to": "dbo.CreditCardType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CreditCardOffLineDetail references one CreditCardType via CreditCardTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CreditCardOnLineDetail.ID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CreditCardOnLineDetail references one SalesCollection via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CustomerCareCase.CustomerCareTaskActionId",
      "to": "dbo.CustomerCareTaskAction.Id",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CustomerCareCase references one CustomerCareTaskAction via CustomerCareTaskActionId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CustomerCareCase.AgentId",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CustomerCareCase references one User via AgentId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CustomerCareCase.BusinessPointId",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CustomerCareCase references one BusinessPoint via BusinessPointId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CustomerCareCase.CaseId",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CustomerCareCase references one Case via CaseId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.CustomerCareCase.CustomerCareTaskResultId",
      "to": "dbo.CustomerCareTaskResult.Id",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each CustomerCareCase references one CustomerCareTaskResult via CustomerCareTaskResultId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DialerRequestLogEntry.DialerRequestLogID",
      "to": "dbo.DialerRequestLog.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DialerRequestLogEntry references one DialerRequestLog via DialerRequestLogID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DialerTask.CurrentTaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DialerTask references one Task via CurrentTaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DialerTask.BusinessPointID",
      "to": "dbo.DialerBusinessPoint.BusinessPointID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DialerTask references one DialerBusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DialerTask.SourceTaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DialerTask references one Task via SourceTaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DialerTask.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DialerTask references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DialerTask.DialerGroupID",
      "to": "dbo.DialerGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DialerTask references one DialerGroup via DialerGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DialerXomeCall.UserId",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DialerXomeCall references one User via UserId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DiscountPolicyItem.DiscountPolicyID",
      "to": "dbo.DiscountPolicy.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DiscountPolicyItem references one DiscountPolicy via DiscountPolicyID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DistributionCampaignCriteria.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DistributionCampaignCriteria references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.DistributionCampaignCriteria.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each DistributionCampaignCriteria references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroup.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroup references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroupItem.FreeListingGroupID",
      "to": "dbo.FreeListingGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroupItem references one FreeListingGroup via FreeListingGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroupItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroupItem references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroupTemplate.TemplateID",
      "to": "dbo.FreeListingTemplate.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroupTemplate references one FreeListingTemplate via TemplateID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroupTemplate.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroupTemplate references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroupTemplate.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroupTemplate references one ClassifierNode via ClassifierNodeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroupTemplate.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroupTemplate references one Medium via MediumID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeListingGroupTemplate.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeListingGroupTemplate references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplate.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplate references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplate.SalesTypeID",
      "to": "dbo.AdvertisementSalesType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplate references one AdvertisementSalesType via SalesTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplate.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplate references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplate.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplate references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplate.PaymentMethodID",
      "to": "dbo.PaymentMethod.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplate references one PaymentMethod via PaymentMethodID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAdvertisement.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAdvertisement references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAdvertisement.CaseAttachmentID",
      "to": "dbo.CaseAttachment.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAdvertisement references one CaseAttachment via CaseAttachmentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAdvertisement.FreeTemplateID",
      "to": "dbo.FreeTemplate.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAdvertisement references one FreeTemplate via FreeTemplateID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAdvertisement.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAdvertisement references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAdvertisement.ProductKitID",
      "to": "dbo.ProductKit.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAdvertisement references one ProductKit via ProductKitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAdvertisement.HeadingID",
      "to": "dbo.VersionGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAdvertisement references one VersionGroupItem via HeadingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAttributeValue.FreeTemplateID",
      "to": "dbo.FreeTemplate.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAttributeValue references one FreeTemplate via FreeTemplateID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAttributeValue.FreeTemplateAdvertisementID",
      "to": "dbo.FreeTemplateAdvertisement.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAttributeValue references one FreeTemplateAdvertisement via FreeTemplateAdvertisementID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAttributeValue.ContentAttributeDefinitionID",
      "to": "dbo.ContentAttributeDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAttributeValue references one ContentAttributeDefinition via ContentAttributeDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.FreeTemplateAttributeValue.ProductPartID",
      "to": "dbo.ProductPart.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each FreeTemplateAttributeValue references one ProductPart via ProductPartID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.GroupTargeting.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each GroupTargeting references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.GroupTargeting.GroupID",
      "to": "dbo.CampaignGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each GroupTargeting references one CampaignGroup via GroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.GroupTargeting.ChannelID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each GroupTargeting references one ChannelType via ChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.HeadingReference.MasterHeadingID",
      "to": "dbo.MasterHeading.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each HeadingReference references one MasterHeading via MasterHeadingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.HeadingSynonym.SourceID",
      "to": "dbo.MasterHeading.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each HeadingSynonym references one MasterHeading via SourceID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.HeadingSynonym.TargetID",
      "to": "dbo.MasterHeading.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each HeadingSynonym references one MasterHeading via TargetID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InternalProduct.ProductTypeID",
      "to": "dbo.InternalProductType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InternalProduct references one InternalProductType via ProductTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InternalProductCommunication.InternalProductID",
      "to": "dbo.InternalProduct.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InternalProductCommunication references one InternalProduct via InternalProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InternalProductDocument.InternalProductID",
      "to": "dbo.InternalProduct.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InternalProductDocument references one InternalProduct via InternalProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InternalProductTypeRole.ProductTypeID",
      "to": "dbo.InternalProductType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InternalProductTypeRole references one InternalProductType via ProductTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InternalProductTypeRole.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InternalProductTypeRole references one Role via RoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.SalesCollectionID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one SalesCollection via SalesCollectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.InvoicePolicyID",
      "to": "dbo.InvoicePolicy.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one InvoicePolicy via InvoicePolicyID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one Bank via BankID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.CreditCardTypeID",
      "to": "dbo.CreditCardType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one CreditCardType via CreditCardTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.BillingEmailID",
      "to": "dbo.ContactEmail.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one ContactEmail via BillingEmailID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.PaymentPhoneID",
      "to": "dbo.PointPhone.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one PointPhone via PaymentPhoneID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentMethod.ID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentMethod references one Contract via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentSalesCollection.InvoicePaymentMethodID",
      "to": "dbo.InvoicePaymentMethod.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentSalesCollection references one InvoicePaymentMethod via InvoicePaymentMethodID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePaymentSalesCollection.SalesCollectionID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePaymentSalesCollection references one SalesCollection via SalesCollectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePolicy.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePolicy references one Medium via MediumID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePolicy.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePolicy references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePolicy.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePolicy references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePolicy.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePolicy references one ChannelType via ChannelTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePolicy.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePolicy references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.InvoicePolicy.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each InvoicePolicy references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Listing.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Listing references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Listing.LocalityID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Listing references one Address via LocalityID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MappingWinUserToUser.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MappingWinUserToUser references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MasterGeoAreaGroup.BroaderAreaID",
      "to": "dbo.BroaderAreaLookUp.BroaderAreaID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MasterGeoAreaGroup references one BroaderAreaLookUp via BroaderAreaID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MasterGeoAreaGroup.GeoModelVersion",
      "to": "dbo.BroaderAreaLookUp.GeoModelVersion",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MasterGeoAreaGroup references one BroaderAreaLookUp via GeoModelVersion",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MasterGeoAreaGroup.ParentGeoAreaGroupID",
      "to": "dbo.MasterGeoAreaGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MasterGeoAreaGroup references one MasterGeoAreaGroup via ParentGeoAreaGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MasterHeading.ParentHeadingID",
      "to": "dbo.MasterHeading.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MasterHeading references one MasterHeading via ParentHeadingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MasterHeadingGroup.MasterHeadingID",
      "to": "dbo.MasterHeading.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MasterHeadingGroup references one MasterHeading via MasterHeadingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Medium.MediumKindID",
      "to": "dbo.MediumKind.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Medium references one MediumKind via MediumKindID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Medium.MediumTypeID",
      "to": "dbo.MediumType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Medium references one MediumType via MediumTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Medium.CompanyID",
      "to": "dbo.Company.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Medium references one Company via CompanyID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Medium.GeographicalDefinitionID",
      "to": "dbo.GeographicalDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Medium references one GeographicalDefinition via GeographicalDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumKind.MediumTypeID",
      "to": "dbo.MediumType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumKind references one MediumType via MediumTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersion.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersion references one Medium via MediumID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionBroaderArea.BroaderAreaID",
      "to": "dbo.BroaderAreaLookUp.BroaderAreaID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionBroaderArea references one BroaderAreaLookUp via BroaderAreaID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionBroaderArea.GeoModelVersion",
      "to": "dbo.BroaderAreaLookUp.GeoModelVersion",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionBroaderArea references one BroaderAreaLookUp via GeoModelVersion",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionBroaderArea.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionBroaderArea references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionColor.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionColor references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionColor.ProductionColorID",
      "to": "dbo.ProductionColor.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionColor references one ProductionColor via ProductionColorID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionDistribution.MediumVersionPrintVersionID",
      "to": "dbo.MediumVersionPrintVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionDistribution references one MediumVersionPrintVersion via MediumVersionPrintVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionDistributionInset.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionDistributionInset references one Advertisement via AdvertisementID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionDistributionInset.MediumVersionDistributionID",
      "to": "dbo.MediumVersionDistribution.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionDistributionInset references one MediumVersionDistribution via MediumVersionDistributionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionFont.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionFont references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionFont.ProductionFontID",
      "to": "dbo.ProductionFont.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionFont references one ProductionFont via ProductionFontID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionPrintVersion.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionPrintVersion references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionPrintVersionSection.MediumVersionPrintVersionID",
      "to": "dbo.MediumVersionPrintVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionPrintVersionSection references one MediumVersionPrintVersion via MediumVersionPrintVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.MediumVersionPrintVersionSection.VesrionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each MediumVersionPrintVersionSection references one VersionSection via VesrionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OBPSBatchRun.BatchSearchId",
      "to": "dbo.OBPSBatchSearch.Id",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OBPSBatchRun references one OBPSBatchSearch via BatchSearchId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OBPSBatchSearchText.BatchSearchId",
      "to": "dbo.OBPSBatchSearch.Id",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OBPSBatchSearchText references one OBPSBatchSearch via BatchSearchId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OBPSIndividualSearch.BatchRunId",
      "to": "dbo.OBPSBatchRun.Id",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OBPSIndividualSearch references one OBPSBatchRun via BatchRunId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OBPSSearchResult.BusinessPointId",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OBPSSearchResult references one BusinessPoint via BusinessPointId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OBPSSearchResult.IndividualSearchId",
      "to": "dbo.OBPSIndividualSearch.Id",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OBPSSearchResult references one OBPSIndividualSearch via IndividualSearchId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryAreaHeader.OteDirectoryDakID",
      "to": "dbo.OteDirectoryDak.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryAreaHeader references one OteDirectoryDak via OteDirectoryDakID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryAreaHeader.OteAreaHeaderTypeID",
      "to": "dbo.OteAreaHeaderType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryAreaHeader references one OteAreaHeaderType via OteAreaHeaderTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryDak.OteDirectoryID",
      "to": "dbo.OteDirectory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryDak references one OteDirectory via OteDirectoryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryShippingPoint.OteDirectoryID",
      "to": "dbo.OteDirectory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryShippingPoint references one OteDirectory via OteDirectoryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryShippingPoint.OteShippingPointID",
      "to": "dbo.OteShippingPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryShippingPoint references one OteShippingPoint via OteShippingPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryVersion.OteDirectoryID",
      "to": "dbo.OteDirectory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryVersion references one OteDirectory via OteDirectoryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryVersionProgressPoint.OteDirectoryVersionID",
      "to": "dbo.OteDirectoryVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryVersionProgressPoint references one OteDirectoryVersion via OteDirectoryVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryVersionProgressPoint.OteProgressPointID",
      "to": "dbo.OteProgressPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryVersionProgressPoint references one OteProgressPoint via OteProgressPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryVersionProgressPoint.RelatedID",
      "to": "dbo.OteDirectoryVersionProgressPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryVersionProgressPoint references one OteDirectoryVersionProgressPoint via RelatedID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryVersionShipping.OteDirectoryVersionID",
      "to": "dbo.OteDirectoryVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryVersionShipping references one OteDirectoryVersion via OteDirectoryVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.OteDirectoryVersionShipping.OteShippingPointID",
      "to": "dbo.OteShippingPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each OteDirectoryVersionShipping references one OteShippingPoint via OteShippingPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PaymentDatePolicy.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PaymentDatePolicy references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PaymentMethod.BillingEmailID",
      "to": "dbo.ContactEmail.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PaymentMethod references one ContactEmail via BillingEmailID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PaymentMethod.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PaymentMethod references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PaymentMethod.PaymentPhoneID",
      "to": "dbo.PointPhone.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PaymentMethod references one PointPhone via PaymentPhoneID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PaymentMethodType.SubscriptionPaymentMethodTypeId",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PaymentMethodType references one PaymentMethodType via SubscriptionPaymentMethodTypeId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PaymentPolicy.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PaymentPolicy references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PointEmail.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PointEmail references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PointPhone.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PointPhone references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PointPhone.Number",
      "to": "dbo.Phone.Number",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PointPhone references one Phone via Number",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PointRelationship.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PointRelationship references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PointRelationship.TargetBussinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PointRelationship references one BusinessPoint via TargetBussinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PointUrl.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PointUrl references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PresaleForm.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PresaleForm references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItem.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItem references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItem.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItem references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItemDetail.PricelistItemID",
      "to": "dbo.PricelistItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItemDetail references one PricelistItem via PricelistItemID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItemDetail.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItemDetail references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItemDetail.KitID",
      "to": "dbo.ProductKit.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItemDetail references one ProductKit via KitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItemDetail.MeasurementType",
      "to": "dbo.PriceListMeasurementType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItemDetail references one PriceListMeasurementType via MeasurementType",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItemDetail.ProductPartID",
      "to": "dbo.ProductPart.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItemDetail references one ProductPart via ProductPartID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.PricelistItemDetailPriceRange.PriceListItemDetailID",
      "to": "dbo.PricelistItemDetail.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each PricelistItemDetailPriceRange references one PricelistItemDetail via PriceListItemDetailID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Product.CanvasPlanningGroupID",
      "to": "dbo.CanvasPlanningGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Product references one CanvasPlanningGroup via CanvasPlanningGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Product.DiscountPolicyID",
      "to": "dbo.DiscountPolicy.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Product references one DiscountPolicy via DiscountPolicyID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Product.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Product references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Product.TargetValueID",
      "to": "dbo.ProductPart.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Product references one ProductPart via TargetValueID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Product.ProductTypeID",
      "to": "dbo.ProductType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Product references one ProductType via ProductTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Product.UdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Product references one Udac via UdacID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductExportTemplate.ID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductExportTemplate references one Product via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductionCaseProduct.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductionCaseProduct references one Case via CaseID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductionCaseProduct.PricelistItemID",
      "to": "dbo.PricelistItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductionCaseProduct references one PricelistItem via PricelistItemID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductKit.KitID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductKit references one Product via KitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductKit.MemberID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductKit references one Product via MemberID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductKit.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductKit references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductPart.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductPart references one Product via ProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductPart.ProductPartDefinitionID",
      "to": "dbo.ProductPartDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductPart references one ProductPartDefinition via ProductPartDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductPartDefinition.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductPartDefinition references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ProductPartDefinition.UdacPartDefinitionID",
      "to": "dbo.UdacPartDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each ProductPartDefinition references one UdacPartDefinition via UdacPartDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RelatedContract.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RelatedContract references one Contract via ContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Role.ParentID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Role references one Role via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleCondition.RuleConditionDefinitionID",
      "to": "dbo.RuleConditionDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleCondition references one RuleConditionDefinition via RuleConditionDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleCondition.RuleConditionOperandID",
      "to": "dbo.RuleConditionOperand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleCondition references one RuleConditionOperand via RuleConditionOperandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleCondition.RuleMasterID",
      "to": "dbo.RuleMaster.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleCondition references one RuleMaster via RuleMasterID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleConditionDefinition.ColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleConditionDefinition references one SQLColumn via ColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleConditionDefinition.LookupTableID",
      "to": "dbo.SQLObject.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleConditionDefinition references one SQLObject via LookupTableID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleConditionDefinition.RuleDefinitionID",
      "to": "dbo.RuleDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleConditionDefinition references one RuleDefinition via RuleDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleConditionDefinitionJoin.RuleConditionDefinitionID",
      "to": "dbo.RuleConditionDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleConditionDefinitionJoin references one RuleConditionDefinition via RuleConditionDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleConditionDefinitionJoin.LeftColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleConditionDefinitionJoin references one SQLColumn via LeftColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleConditionDefinitionJoin.RightColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleConditionDefinitionJoin references one SQLColumn via RightColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleDefinition.SourceObjectID",
      "to": "dbo.SQLObject.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleDefinition references one SQLObject via SourceObjectID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleMaster.RuleDefinitionID",
      "to": "dbo.RuleDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleMaster references one RuleDefinition via RuleDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.RuleMaster.SQLCommandID",
      "to": "dbo.SQLCommand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each RuleMaster references one SQLCommand via SQLCommandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesCollection.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesCollection references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesCollection.CreatedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesCollection references one User via CreatedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesCollection.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesCollection references one Contract via ContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesCollection.ModifiedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesCollection references one User via ModifiedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesManTargeting.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesManTargeting references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesManTargeting.GroupID",
      "to": "dbo.CampaignGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesManTargeting references one CampaignGroup via GroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesManTargeting.SegmentID",
      "to": "dbo.CampaignSegment.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesManTargeting references one CampaignSegment via SegmentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesManTargeting.SalesManID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesManTargeting references one User via SalesManID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesManTargeting.SuperVisorID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesManTargeting references one User via SuperVisorID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesTreeHistory.ManagerID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesTreeHistory references one User via ManagerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesTreeHistory.SalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesTreeHistory references one User via SalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SalesTreeHistory.SupervisorID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SalesTreeHistory references one User via SupervisorID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLColumn.SQLObjectID",
      "to": "dbo.SQLObject.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLColumn references one SQLObject via SQLObjectID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLCommandText.SQLCommandID",
      "to": "dbo.SQLCommand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLCommandText references one SQLCommand via SQLCommandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLJoinCondition.SQLCommandID",
      "to": "dbo.SQLCommand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLJoinCondition references one SQLCommand via SQLCommandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLJoinConditionRule.LeftColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLJoinConditionRule references one SQLColumn via LeftColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLJoinConditionRule.RightColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLJoinConditionRule references one SQLColumn via RightColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLJoinConditionRule.SQLJoinConditionID",
      "to": "dbo.SQLJoinCondition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLJoinConditionRule references one SQLJoinCondition via SQLJoinConditionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLSearchCondition.SQLCommandID",
      "to": "dbo.SQLCommand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLSearchCondition references one SQLCommand via SQLCommandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLSearchConditionRule.LeftColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLSearchConditionRule references one SQLColumn via LeftColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLSearchConditionRule.RightColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLSearchConditionRule references one SQLColumn via RightColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLSearchConditionRule.SQLSearchConditionID",
      "to": "dbo.SQLSearchCondition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLSearchConditionRule references one SQLSearchCondition via SQLSearchConditionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLSelectList.SQLSelctStatementID",
      "to": "dbo.SQLSelectStatement.SQLCommandID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLSelectList references one SQLSelectStatement via SQLSelctStatementID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLSelectList.ColumnID",
      "to": "dbo.SQLColumn.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLSelectList references one SQLColumn via ColumnID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLSelectStatement.SQLCommandID",
      "to": "dbo.SQLCommand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLSelectStatement references one SQLCommand via SQLCommandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLTableSource.SQLCommandID",
      "to": "dbo.SQLCommand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLTableSource references one SQLCommand via SQLCommandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLTableSource.ObjectID",
      "to": "dbo.SQLObject.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLTableSource references one SQLObject via ObjectID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SQLUpdateStatement.SQLCommandID",
      "to": "dbo.SQLCommand.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SQLUpdateStatement references one SQLCommand via SQLCommandID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SubChannel.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SubChannel references one ChannelType via ChannelTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.SubChannel.DefaultSalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each SubChannel references one User via DefaultSalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetChannel.SubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetChannel references one SubChannel via SubChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetChannel.TargetSettingCriteriaID",
      "to": "dbo.TargetSetting.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetChannel references one TargetSetting via TargetSettingCriteriaID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetChannelArea.TargetChannelID",
      "to": "dbo.TargetChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetChannelArea references one TargetChannel via TargetChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItem.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItem references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItem.SourceCampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItem references one Campaign via SourceCampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItem references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItem.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItem references one Case via CaseID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemInfo.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemInfo references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemPeriod.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemPeriod references one ContractProduct via ContractProductID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemPeriod.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemInfo.TargetGroupItemValueID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemPeriod references one TargetGroupItemInfo via TargetGroupItemValueID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.AltOfferID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one Contract via AltOfferID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one Contract via ContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.FixOfferID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one Contract via FixOfferID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.HandlerUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via HandlerUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.InitialHandlerUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via InitialHandlerUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.InitialTargetUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via InitialTargetUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.NegationReasonID",
      "to": "dbo.NegationReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one NegationReason via NegationReasonID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one NoCommReason via NoCommReasonID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.PendingReasonId",
      "to": "dbo.PendingReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one PendingReason via PendingReasonId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.PostponeReasonID",
      "to": "dbo.PostponeReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one PostponeReason via PostponeReasonID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.PresaleFormTaskId",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one Task via PresaleFormTaskId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.ProposedHandlerUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via ProposedHandlerUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.ProposedTargetUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via ProposedTargetUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.SubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one SubChannel via SubChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.Supervisor",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via Supervisor",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.InitialSubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one SubChannel via InitialSubChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.CampaignAllocationPlanID",
      "to": "dbo.CampaignAllocationPlan.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one CampaignAllocationPlan via CampaignAllocationPlanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.RequestedDiscountOfferID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one Contract via RequestedDiscountOfferID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one TargetGroupItem via TargetGroupItemID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.TargetUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via TargetUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetGroupItemValue.PXKEditorUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetGroupItemValue references one User via PXKEditorUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TargetSetting.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TargetSetting references one Campaign via CampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Task.CompletedById",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Task references one User via CompletedById",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Task.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Task references one TaskType via TaskTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Task.ActualOwnerID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Task references one User via ActualOwnerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Task.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Task references one Case via CaseID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Task.SenderID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Task references one User via SenderID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskActionLog.TaskId",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskActionLog references one Task via TaskId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskAssignment.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskAssignment references one Role via RoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskAssignment.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskAssignment references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskAssignment.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskAssignment references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskLog.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskLog references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskTarget.TargetCaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskTarget references one Case via TargetCaseID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskTarget.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskTarget references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskTransition.SourceTaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskTransition references one TaskType via SourceTaskTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskTransition.TargetTaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskTransition references one TaskType via TargetTaskTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskType.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskType references one CaseType via CaseTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskType.TargetCaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskType references one CaseType via TargetCaseTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskTypeAssignment.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskTypeAssignment references one Role via RoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaskTypeAssignment.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaskTypeAssignment references one TaskType via TaskTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaxCode.ID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaxCode references one BusinessPoint via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TaxCode.CountryID",
      "to": "dbo.Country.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TaxCode references one Country via CountryID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.LastAssignRoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one Role via LastAssignRoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.LastAssignUserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via LastAssignUserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.InParallelRoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one Role via InParallelRoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one BusinessPoint via BusinessPointID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.Name",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.CustomerID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ContractID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.SalesmanID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.TicketID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.SerialRoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one Role via SerialRoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.SerialTicketTypdeID",
      "to": "dbo.TicketType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketType via SerialTicketTypdeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.RelatedContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one Contract via RelatedContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.SelectedSalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via SelectedSalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.TargetCampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one Campaign via TargetCampaignID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.TargetSalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via TargetSalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.TargetSubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one SubChannel via TargetSubChannelID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.TargetSupervisorID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via TargetSupervisorID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.RelatedSalesmanID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via RelatedSalesmanID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.BusinessPointIdentificationId",
      "to": "dbo.BusinessPointIdentification.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one BusinessPointIdentification via BusinessPointIdentificationId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.CancellationResonID",
      "to": "dbo.TicketCancellationReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketCancellationReason via CancellationResonID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ChargeOfResponsibilityID",
      "to": "dbo.TicketChargeOfResponsibility.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketChargeOfResponsibility via ChargeOfResponsibilityID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.CompletedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via CompletedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.CreatedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via CreatedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.HandlerID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one User via HandlerID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.PriorityID",
      "to": "dbo.TicketPriority.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketPriority via PriorityID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.RequestReasonID",
      "to": "dbo.TicketRequestReason.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketRequestReason via RequestReasonID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.ResolutionMethodID",
      "to": "dbo.TicketResolutionMethod.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketResolutionMethod via ResolutionMethodID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.SourceTypeID",
      "to": "dbo.TicketSourceType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketSourceType via SourceTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.TicketTypeID",
      "to": "dbo.TicketType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one TicketType via TicketTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Ticket.WebChangesContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Ticket references one Contract via WebChangesContractID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketAdvertisementHistory.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketAdvertisementHistory references one Advertisement via AdvertisementID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketAdvertisementHistory.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketAdvertisementHistory references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketAdvertisementHistory.TicketID",
      "to": "dbo.Ticket.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketAdvertisementHistory references one Ticket via TicketID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketCommunication.TicketID",
      "to": "dbo.Ticket.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketCommunication references one Ticket via TicketID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.InParallelRoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one Role via InParallelRoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.Name",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.CustomerID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ContractID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.SalesmanID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResultCommTypeID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one CanvasPlanningHistory via ResultCommTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one Task via TaskID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.TicketID",
      "to": "dbo.Ticket.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one Ticket via TicketID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.ResolutionMethodID",
      "to": "dbo.TicketResolutionMethod.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one TicketResolutionMethod via ResolutionMethodID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketResult.PerformedByID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketResult references one User via PerformedByID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketType.ParentID",
      "to": "dbo.TicketType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketType references one TicketType via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketTypeRoles.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketTypeRoles references one Role via RoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.TicketTypeRoles.TicketTypeID",
      "to": "dbo.TicketType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each TicketTypeRoles references one TicketType via TicketTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Udac.NewSubscriptionUdacId",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Udac references one Udac via NewSubscriptionUdacId",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Udac.CanvasPlanningGroupID",
      "to": "dbo.CanvasPlanningGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Udac references one CanvasPlanningGroup via CanvasPlanningGroupID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Udac.ProductTypeID",
      "to": "dbo.ProductType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Udac references one ProductType via ProductTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Udac.NewUdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Udac references one Udac via NewUdacID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Udac.DiscountPolicyID",
      "to": "dbo.UdacDiscountPolicy.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Udac references one UdacDiscountPolicy via DiscountPolicyID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Udac.TargetValueID",
      "to": "dbo.UdacPart.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Udac references one UdacPart via TargetValueID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Udac.ProdWorkflowID",
      "to": "dbo.ProductionWorkflow.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Udac references one ProductionWorkflow via ProdWorkflowID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacContentAttributeDefinition.UdacPartDefinitionID",
      "to": "dbo.UdacPartDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacContentAttributeDefinition references one UdacPartDefinition via UdacPartDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacDiscountPolicyItem.DiscountPolicyID",
      "to": "dbo.UdacDiscountPolicy.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacDiscountPolicyItem references one UdacDiscountPolicy via DiscountPolicyID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacExportTemplate.ID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacExportTemplate references one Udac via ID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacKit.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacKit references one VersionSection via VersionSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacKit.KitID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacKit references one Udac via KitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacKit.MemberID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacKit references one Udac via MemberID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacPart.UdacPartDefinitionID",
      "to": "dbo.UdacPartDefinition.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacPart references one UdacPartDefinition via UdacPartDefinitionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacPart.UdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacPart references one Udac via UdacID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacProdRole.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacProdRole references one Role via RoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacProdRole.UdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacProdRole references one Udac via UdacID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacRelationship.TargetUdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacRelationship references one Udac via TargetUdacID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UdacRelationship.SourceUdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UdacRelationship references one Udac via SourceUdacID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one ChannelType via ChannelTypeID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.Name",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.CustomerID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ContractID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.SalesmanID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.TicketID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.Unit.ParentID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each Unit references one CanvasPlanningHistory via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.Name",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.CustomerID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ContractID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.SalesmanID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.TicketID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.CanvasPlanningHistory.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each User references one CanvasPlanningHistory via UnitID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UserLog.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UserLog references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UserRole.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UserRole references one Role via RoleID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UserRole.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UserRole references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.UserSearchCriteria.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each UserSearchCriteria references one User via UserID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionGroupItem.SourceGroupItemID",
      "to": "dbo.VersionGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionGroupItem references one VersionGroupItem via SourceGroupItemID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionGroupItem.SourceGeoID",
      "to": "dbo.MasterGeoAreaGroup.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionGroupItem references one MasterGeoAreaGroup via SourceGeoID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionGroupItem.SourceHeadingID",
      "to": "dbo.MasterHeading.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionGroupItem references one MasterHeading via SourceHeadingID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionGroupItem.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionGroupItem references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionGroupItem.ParentID",
      "to": "dbo.VersionGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionGroupItem references one VersionGroupItem via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionSection.MasterSectionID",
      "to": "dbo.MasterSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionSection references one MasterSection via MasterSectionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionSection.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionSection references one MediumVersion via MediumVersionID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionSection.VersionGroupItemID",
      "to": "dbo.VersionGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionSection references one VersionGroupItem via VersionGroupItemID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.VersionSection.ParentID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "foreign_key",
      "business_meaning": "Each VersionSection references one VersionSection via ParentID",
      "confidence": 1.0,
      "source": "foreign_key_constraint"
    },
    {
      "from": "dbo.ActiveCampaignSalesman.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ActiveCampaignSalesman references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.AdvancedPaymentMethod20230517.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each AdvancedPaymentMethod20230517 references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.AdvancedPaymentMethod20230517.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each AdvancedPaymentMethod20230517 references one Bank via BankID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.AdvancedPaymentMethod20230517.CreditCardTypeID",
      "to": "dbo.CreditCardType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each AdvancedPaymentMethod20230517 references one CreditCardType via CreditCardTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.AdvancedPaymentMethod20230517.SalesCollectionID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each AdvancedPaymentMethod20230517 references one SalesCollection via SalesCollectionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BroaderAreaLookUpV1.BroaderAreaID",
      "to": "dbo.BroaderArea.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BroaderAreaLookUpV1 references one BroaderArea via BroaderAreaID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BroaderAreaLookUpV1.MasterGeoAreaGroupID",
      "to": "dbo.MasterGeoAreaGroup.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BroaderAreaLookUpV1 references one MasterGeoAreaGroup via MasterGeoAreaGroupID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BusinessPointListingLog.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BusinessPointListingLog references one ClassifierNode via ClassifierNodeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BusinessPointListingLog.BusinessPointListingID",
      "to": "dbo.BusinessPointListing.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BusinessPointListingLog references one BusinessPointListing via BusinessPointListingID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignBucket.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignBucket references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignBucket.CampaignScoreAvgROCOHistoryID",
      "to": "dbo.CampaignScoreAvgROCOHistory.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignBucket references one CampaignScoreAvgROCOHistory via CampaignScoreAvgROCOHistoryID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignBucketFileUploadHistoryDetail.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignBucketFileUploadHistoryDetail references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignContractProduct.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignContractProduct references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignContractProduct.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignContractProduct references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignContractProduct.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignContractProduct references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignContractProduct.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignContractProduct references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignContractProduct.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignContractProduct references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewBIs.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewBIs references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewBIs.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewBIs references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewBPsAlter.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewBPsAlter references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewBPsAlter.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewBPsAlter references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewCustomerTarget.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewCustomerTarget references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRule.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewLossCustomerRule references one ChannelType via ChannelTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewLossCustomerRuleRegion.BroaderAreaID",
      "to": "dbo.BroaderArea.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewLossCustomerRuleRegion references one BroaderArea via BroaderAreaID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewLossPremiseCustomerItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewLossPremiseCustomerItem references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewLossTeleCustomerTemp.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewLossTeleCustomerTemp references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignOrgModelLog.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignOrgModelLog references one User via UserID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReport.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReport references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReport.CampaignSegmentID",
      "to": "dbo.CampaignSegment.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReport references one CampaignSegment via CampaignSegmentID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReport.CampaignChannelTypeID",
      "to": "dbo.CampaignChannelType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReport references one CampaignChannelType via CampaignChannelTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReport.CampaignGroupID",
      "to": "dbo.CampaignGroup.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReport references one CampaignGroup via CampaignGroupID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReport.CampaignSalesmanID",
      "to": "dbo.CampaignSalesman.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReport references one CampaignSalesman via CampaignSalesmanID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignRegion.BroaderAreaID",
      "to": "dbo.BroaderArea.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignRegion references one BroaderArea via BroaderAreaID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignResolveDiffForClassification.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignResolveDiffForClassification references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketItem.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketItem references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketItem.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketItem references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketItem references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketItem.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketItem references one ChannelType via ChannelTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketItem.CustomerSolvencyID",
      "to": "dbo.CustomerSolvency.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketItem references one CustomerSolvency via CustomerSolvencyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketItem.CustomerUpdateID",
      "to": "dbo.CustomerUpdate.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketItem references one CustomerUpdate via CustomerUpdateID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignScoreAvgROCOHistory.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignScoreAvgROCOHistory references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignScoreHistory.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignScoreHistory references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignScoreHistoryDetail.CampaignBucketID",
      "to": "dbo.CampaignBucket.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignScoreHistoryDetail references one CampaignBucket via CampaignBucketID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignScoreHistoryDetail.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignScoreHistoryDetail references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignScoreHistoryDetail.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignScoreHistoryDetail references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignScoreHistoryDetail.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignScoreHistoryDetail references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignTargetGroup.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignTargetGroup references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignTargetingNewCustomerHistory.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignTargetingNewCustomerHistory references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignTargetingNewCustomerHistoryDetail.CampaignSalesmanNewCustomerTargetID",
      "to": "dbo.CampaignSalesmanNewCustomerTarget.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignTargetingNewCustomerHistoryDetail references one CampaignSalesmanNewCustomerTarget via CampaignSalesmanNewCustomerTargetID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignTargetingNewCustomerHistoryDetail.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignTargetingNewCustomerHistoryDetail references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignTargetMonitorGrouping.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignTargetMonitorGrouping references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignTargetMonitoring.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignTargetMonitoring references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1AddressLocation.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1AddressLocation references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1AddressLocation.BroaderAreaID",
      "to": "dbo.BroaderArea.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1AddressLocation references one BroaderArea via BroaderAreaID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1AddressSale.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1AddressSale references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1AddressSale.BroaderAreaID",
      "to": "dbo.BroaderArea.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1AddressSale references one BroaderArea via BroaderAreaID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1BusinessPoint.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1BusinessPoint references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1BusinessPoint.CustomerUpdateID",
      "to": "dbo.CustomerUpdate.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1BusinessPoint references one CustomerUpdate via CustomerUpdateID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1BusinessPoint.CustomerSolvencyID",
      "to": "dbo.CustomerSolvency.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1BusinessPoint references one CustomerSolvency via CustomerSolvencyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1BusinessPoint.CustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1BusinessPoint references one CustomerSource via CustomerSourceID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1BusinessPoint.LegalFormID",
      "to": "dbo.LegalForm.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1BusinessPoint references one LegalForm via LegalFormID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1Classification.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1Classification references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1Classification.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1Classification references one ClassifierNode via ClassifierNodeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1Classification.ClassifierID",
      "to": "dbo.Classifier.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1Classification references one Classifier via ClassifierID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1ContractDetail.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1ContractDetail references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1ContractDetail.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1ContractDetail references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1ContractDetail.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1ContractDetail references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1ContractDetail.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1ContractDetail references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1ContractDetail.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1ContractDetail references one Medium via MediumID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1ContractDetail.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1ContractDetail references one MediumVersion via MediumVersionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CanvasStage1ContractDetail.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CanvasStage1ContractDetail references one VersionSection via VersionSectionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ContractOffer.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ContractOffer references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ContractProduct.RelatedContractID",
      "to": "dbo.RelatedContract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ContractProduct references one RelatedContract via RelatedContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.DialerBusinessPoint.SubchannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerBusinessPoint references one Subchannel via SubchannelID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.DialerRequestLog.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerRequestLog references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.DialerRequestLogEntry.UserID",
      "to": "dbo.User.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerRequestLogEntry references one User via UserID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.DialerTask.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerTask references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.DialerTask.DialerCampaignID",
      "to": "dbo.DialerCampaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerTask references one DialerCampaign via DialerCampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.DialerTask.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerTask references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpCustomerAddressBridgeBuffer.AddressID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpCustomerAddressBridgeBuffer references one Address via AddressID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpCustomerContractBridgeBuffer.CompanyID",
      "to": "dbo.Company.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpCustomerContractBridgeBuffer references one Company via CompanyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpCustomerContractBridgeBuffer.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpCustomerContractBridgeBuffer references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpCustomerContractLinesBridgeBuffer.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpCustomerContractLinesBridgeBuffer references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpCustomerContractLinesBridgeBuffer.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpCustomerContractLinesBridgeBuffer references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpCustomerContractLinesBridgeBuffer.UdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpCustomerContractLinesBridgeBuffer references one Udac via UdacID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpCustomerContractLinesBridgeBuffer.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpCustomerContractLinesBridgeBuffer references one Medium via MediumID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ERPSalesCollectionBridgeBuffer.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ERPSalesCollectionBridgeBuffer references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ERPSalesCollectionBridgeBuffer.CreditCardTypeID",
      "to": "dbo.CreditCardType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ERPSalesCollectionBridgeBuffer references one CreditCardType via CreditCardTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ERPSalesCollectionBridgeBuffer.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ERPSalesCollectionBridgeBuffer references one Bank via BankID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FreeListingSearchItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FreeListingSearchItem references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FreeListingSearchItem.CustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FreeListingSearchItem references one CustomerSource via CustomerSourceID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FreeListingSearchItem.CustomerUpdateID",
      "to": "dbo.CustomerUpdate.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FreeListingSearchItem references one CustomerUpdate via CustomerUpdateID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FreeTemplateUdacMapping.UdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FreeTemplateUdacMapping references one Udac via UdacID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.InternalProduct.ProductTypeID",
      "to": "dbo.ProductType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each InternalProduct references one ProductType via ProductTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.InternalProductTypeRole.ProductTypeID",
      "to": "dbo.ProductType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each InternalProductTypeRole references one ProductType via ProductTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.InvoicePaymentMonthExceptionLog.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each InvoicePaymentMonthExceptionLog references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.MasterGeoAreaGroup.BroaderAreaID",
      "to": "dbo.BroaderArea.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each MasterGeoAreaGroup references one BroaderArea via BroaderAreaID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.RelatedContract.RelatedContractID",
      "to": "dbo.RelatedContract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each RelatedContract references one RelatedContract via RelatedContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.TargetGroupItemPeriod.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each TargetGroupItemPeriod references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Ticket.RelatedContractID",
      "to": "dbo.RelatedContract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Ticket references one RelatedContract via RelatedContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Udac.DiscountPolicyID",
      "to": "dbo.DiscountPolicy.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Udac references one DiscountPolicy via DiscountPolicyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.UdacDiscountPolicyItem.DiscountPolicyID",
      "to": "dbo.DiscountPolicy.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each UdacDiscountPolicyItem references one DiscountPolicy via DiscountPolicyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.User.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each User references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BusinessPointIdentificationWithReportAnErrorData.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BusinessPointIdentificationWithReportAnErrorData references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BusinessPointIdentificationWithThirdPartyData.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BusinessPointIdentificationWithThirdPartyData references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BusinessPointIdentificationWithThirdPartyData_DEV19616.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BusinessPointIdentificationWithThirdPartyData_DEV19616 references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BusinessPointIdentificationWithThirdPartyDataAttribute.BusinessPointIdentificationID",
      "to": "dbo.BusinessPointIdentification.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BusinessPointIdentificationWithThirdPartyDataAttribute references one BusinessPointIdentification via BusinessPointIdentificationID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.BusinessPointIdentificationWithThirdPartyDataAttribute.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each BusinessPointIdentificationWithThirdPartyDataAttribute references one ClassifierNode via ClassifierNodeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalsysisPerProductView.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalsysisPerProductView references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalsysisPerProductView.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalsysisPerProductView references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalsysisPreviousCampaignView.CustomerSolvencyID",
      "to": "dbo.CustomerSolvency.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalsysisPreviousCampaignView references one CustomerSolvency via CustomerSolvencyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalsysisPreviousCampaignView.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalsysisPreviousCampaignView references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalysisByGroupView.CustomerSolvencyID",
      "to": "dbo.CustomerSolvency.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalysisByGroupView references one CustomerSolvency via CustomerSolvencyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalysisByGroupView.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalysisByGroupView references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalysisBySubChannelView.CustomerSolvencyID",
      "to": "dbo.CustomerSolvency.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalysisBySubChannelView references one CustomerSolvency via CustomerSolvencyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalysisBySubChannelView.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalysisBySubChannelView references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalysisPerProductView.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalysisPerProductView references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignAnalysisPerProductView.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignAnalysisPerProductView references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignBucketFileUploadHistoryStatusView.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignBucketFileUploadHistoryStatusView references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewLossPremiseCustomerView.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewLossPremiseCustomerView references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignNewLossPremiseCustomerView.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignNewLossPremiseCustomerView references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReportViewItem.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReportViewItem references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReportViewItem.CampaignSegmentID",
      "to": "dbo.CampaignSegment.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReportViewItem references one CampaignSegment via CampaignSegmentID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReportViewItem.CampaignChannelTypeID",
      "to": "dbo.CampaignChannelType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReportViewItem references one CampaignChannelType via CampaignChannelTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReportViewItem.CampaignGroupID",
      "to": "dbo.CampaignGroup.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReportViewItem references one CampaignGroup via CampaignGroupID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignPivotReportViewItem.CampaignSalesmanID",
      "to": "dbo.CampaignSalesman.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignPivotReportViewItem references one CampaignSalesman via CampaignSalesmanID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one CaseType via CaseTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.ChannelTypeID",
      "to": "dbo.ChannelType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one ChannelType via ChannelTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.CustomerSolvencyID",
      "to": "dbo.CustomerSolvency.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one CustomerSolvency via CustomerSolvencyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.CustomerUpdateID",
      "to": "dbo.CustomerUpdate.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one CustomerUpdate via CustomerUpdateID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignSalesMarketViewItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignSalesMarketViewItem references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.CampaignScoreReportView.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each CampaignScoreReportView references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.COMPToYPSDenyToPay.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each COMPToYPSDenyToPay references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.COMPToYPSDenyToPay.TicketTypeID",
      "to": "dbo.TicketType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each COMPToYPSDenyToPay references one TicketType via TicketTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.COMPToYPSDenyToPay_BCKP_20250516_Devops12007.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each COMPToYPSDenyToPay_BCKP_20250516_Devops12007 references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.COMPToYPSDenyToPay_BCKP_20250516_Devops12007.TicketTypeID",
      "to": "dbo.TicketType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each COMPToYPSDenyToPay_BCKP_20250516_Devops12007 references one TicketType via TicketTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.DialerViewReasonsPerTask.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerViewReasonsPerTask references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpContractsView.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpContractsView references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpContractsView.CompanyID",
      "to": "dbo.Company.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpContractsView references one Company via CompanyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpContractsView_BCK_20250424.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpContractsView_BCK_20250424 references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ErpContractsView_BCK_20250424.CompanyID",
      "to": "dbo.Company.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ErpContractsView_BCK_20250424 references one Company via CompanyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullActiveMediumVersion.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullActiveMediumVersion references one Medium via MediumID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullAddressView.CountryID",
      "to": "dbo.Country.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullAddressView references one Country via CountryID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullAddressViewV2.CountryID",
      "to": "dbo.Country.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullAddressViewV2 references one Country via CountryID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullVGIView.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullVGIView references one MediumVersion via MediumVersionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullVGIView.BroaderAreaID",
      "to": "dbo.BroaderArea.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullVGIView references one BroaderArea via BroaderAreaID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullVSView.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullVSView references one MediumVersion via MediumVersionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullVSView.MasterSectionID",
      "to": "dbo.MasterSection.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullVSView references one MasterSection via MasterSectionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.FullVSView.VersionGroupItemID",
      "to": "dbo.VersionGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each FullVSView references one VersionGroupItem via VersionGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Get_Adids.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Get_Adids references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Get_Adids.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Get_Adids references one Product via ProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Get_Adids.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Get_Adids references one VersionSection via VersionSectionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Get_Adids.CaseAttachmentID",
      "to": "dbo.CaseAttachment.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Get_Adids references one CaseAttachment via CaseAttachmentID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Get_Adids.ProductKitID",
      "to": "dbo.ProductKit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Get_Adids references one ProductKit via ProductKitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Internet_Products.ProductID",
      "to": "dbo.Product.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Internet_Products references one Product via ProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Internet_Products.ProductPartID",
      "to": "dbo.ProductPart.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Internet_Products references one ProductPart via ProductPartID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Internet_Products.ProductPartDefinitionID",
      "to": "dbo.ProductPartDefinition.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Internet_Products references one ProductPartDefinition via ProductPartDefinitionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Internet_Products.UdacPartDefinitionID",
      "to": "dbo.UdacPartDefinition.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Internet_Products references one UdacPartDefinition via UdacPartDefinitionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Internet_Udacs.ProductTypeID",
      "to": "dbo.ProductType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Internet_Udacs references one ProductType via ProductTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Internet_Udacs.DiscountPolicyID",
      "to": "dbo.DiscountPolicy.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Internet_Udacs references one DiscountPolicy via DiscountPolicyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.Internet_Udacs.CanvasPlanningGroupID",
      "to": "dbo.CanvasPlanningGroup.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each Internet_Udacs references one CanvasPlanningGroup via CanvasPlanningGroupID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.TimingView.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each TimingView references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.View_FO_FullProductMap.ProductPartID",
      "to": "dbo.ProductPart.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each View_FO_FullProductMap references one ProductPart via ProductPartID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.View_FO_VSMap.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each View_FO_VSMap references one Medium via MediumID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.View_FO_VSMap.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each View_FO_VSMap references one MediumVersion via MediumVersionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.View_FO_VSMap.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each View_FO_VSMap references one VersionSection via VersionSectionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.View_SR_VSMap.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each View_SR_VSMap references one Medium via MediumID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.View_SR_VSMap.MediumVersionID",
      "to": "dbo.MediumVersion.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each View_SR_VSMap references one MediumVersion via MediumVersionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.View_SR_VSMap.VersionSectionID",
      "to": "dbo.VersionSection.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each View_SR_VSMap references one VersionSection via VersionSectionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewBatchActionAnalysis.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewBatchActionAnalysis references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewBatchActionAnalysis.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewBatchActionAnalysis references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewBatchActionAnalysis.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewBatchActionAnalysis references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewBPLastSalesAssignmentDate.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewBPLastSalesAssignmentDate references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewBusinessPointReportAnErrorItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewBusinessPointReportAnErrorItem references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewBusinessPointReportAnErrorItem_bcp20211108.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewBusinessPointReportAnErrorItem_bcp20211108 references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewCampaignBucketWithPreviousSD.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewCampaignBucketWithPreviousSD references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewCampaignBucketWithPreviousSD.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewCampaignBucketWithPreviousSD references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewCampaignBucketWithPreviousSD.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewCampaignBucketWithPreviousSD references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewClassifierNodeMasterHeading.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewClassifierNodeMasterHeading references one ClassifierNode via ClassifierNodeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewCommunicationActionsFromXO.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewCommunicationActionsFromXO references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewFixOfferFailure.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewFixOfferFailure references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewFixOfferFailure.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewFixOfferFailure references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewFixOfferFailure.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewFixOfferFailure references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewFreeListing.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewFreeListing references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewFreeListing.CustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewFreeListing references one CustomerSource via CustomerSourceID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewFreeListing.CustomerUpdateID",
      "to": "dbo.CustomerUpdate.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewFreeListing references one CustomerUpdate via CustomerUpdateID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewLastBusinessPointIdentification.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewLastBusinessPointIdentification references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewLastBusinessPointIdentification.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewLastBusinessPointIdentification references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewListOfContractSalesman.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewListOfContractSalesman references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewMarketItem.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewMarketItem references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewMarketItem.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewMarketItem references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewMarketItem.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewMarketItem references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewMarketItem.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewMarketItem references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewMarketItem.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewMarketItem references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewMarketItem.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewMarketItem references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewMarketItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewMarketItem references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewOteDVPP.OteDirectoryVersionID",
      "to": "dbo.OteDirectoryVersion.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewOteDVPP references one OteDirectoryVersion via OteDirectoryVersionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewOteDVPP.OteProgressPointID",
      "to": "dbo.OteProgressPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewOteDVPP references one OteProgressPoint via OteProgressPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewPhonesFlatting.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewPhonesFlatting references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewPrefectureBPDtls.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewPrefectureBPDtls references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewPrefectureBPDtls.CustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewPrefectureBPDtls references one CustomerSource via CustomerSourceID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNew.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNew references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNew.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNew references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNew.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNew references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNew.TicketID",
      "to": "dbo.Ticket.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNew references one Ticket via TicketID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNewADV.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNewADV references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNewADV.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNewADV references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNewADV.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNewADV references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewProductionTaskInfoNewADV.TicketID",
      "to": "dbo.Ticket.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewProductionTaskInfoNewADV references one Ticket via TicketID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewReleaseTaskInfo.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewReleaseTaskInfo references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewReleaseTaskInfo.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewReleaseTaskInfo references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewReleaseTaskInfo.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewReleaseTaskInfo references one CaseType via CaseTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewRenewalFailure.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewRenewalFailure references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewRenewalFailure.ContractProductID",
      "to": "dbo.ContractProduct.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewRenewalFailure references one ContractProduct via ContractProductID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewRenewalFailure.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewRenewalFailure references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketActiveCampaign.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketActiveCampaign references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisAnamoniMaketas.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisAnamoniMaketas references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisAnamoniMaketas.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisAnamoniMaketas references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisAnamoniPromaketas.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisAnamoniPromaketas references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisAnamoniPromaketas.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisAnamoniPromaketas references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisCompleted.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisCompleted references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisCompleted.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisCompleted references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisLosings.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisLosings references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisLosings.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisLosings references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisPending.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisPending references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisPending.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisPending references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisTargetAmount.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisTargetAmount references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketAnalysisTargetAmount.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketAnalysisTargetAmount references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItem.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItem references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemAndOthers.PostponeReasonID",
      "to": "dbo.PostponeReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemAndOthers references one PostponeReason via PostponeReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwner_BOM_New.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwner_BOM_New references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwnerBasic.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwnerBasic references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwnerBasic.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwnerBasic references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwnerForCounter.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwnerForCounter references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwnerForCounter.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwnerForCounter references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwnerForCounter.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwnerForCounter references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwnerForCounter.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwnerForCounter references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemPotentialOwnerForCounter.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemPotentialOwnerForCounter references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolder_BOM.NoCommReasonID",
      "to": "dbo.NoCommReason.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolder_BOM references one NoCommReason via NoCommReasonID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketItemStakeHolderBasic.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketItemStakeHolderBasic references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketTaskAndOwner.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketTaskAndOwner references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketTaskAndOwner.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketTaskAndOwner references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketTaskBasic.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketTaskBasic references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewSalesMarketTaskBasic.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewSalesMarketTaskBasic references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTargetGroupItemInfo.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTargetGroupItemInfo references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTargetGroupItemInfo.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTargetGroupItemInfo references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTargetGroupItemInfo.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTargetGroupItemInfo references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTargetGroupItemInfo.SubChannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTargetGroupItemInfo references one SubChannel via SubChannelID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTargetGroupItemInfo.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTargetGroupItemInfo references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTargetGroupItemInfo.CampaignAllocationPlanID",
      "to": "dbo.CampaignAllocationPlan.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTargetGroupItemInfo references one CampaignAllocationPlan via CampaignAllocationPlanID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfo.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfo references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfo.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfo references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfo.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfo references one CaseType via CaseTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoAndContractSalesman.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoAndContractSalesman references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoAndContractSalesman.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoAndContractSalesman references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoAndContractSalesman.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoAndContractSalesman references one CaseType via CaseTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoAndContractSalesman.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoAndContractSalesman references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoBasic.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoBasic references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoBasic.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoBasic references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoBasic.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoBasic references one CaseType via CaseTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoRoleAssigned.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoRoleAssigned references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoRoleAssigned.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoRoleAssigned references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoRoleAssigned.CaseTypeID",
      "to": "dbo.CaseType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoRoleAssigned references one CaseType via CaseTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskInfoRoleAssigned.RoleID",
      "to": "dbo.Role.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskInfoRoleAssigned references one Role via RoleID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskListForDialer.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskListForDialer references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskListForDialer.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskListForDialer references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskListForDialer.TargetGroupItemValueID",
      "to": "dbo.TargetGroupItemValue.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskListForDialer references one TargetGroupItemValue via TargetGroupItemValueID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskListForDialer.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskListForDialer references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.ViewTaskListForDialer.SubchannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewTaskListForDialer references one Subchannel via SubchannelID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwAgora.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwAgora references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.UnitID",
      "to": "dbo.Unit.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one Unit via UnitID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.TargetGroupItemID",
      "to": "dbo.TargetGroupItem.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one TargetGroupItem via TargetGroupItemID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.CaseID",
      "to": "dbo.Case.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one Case via CaseID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.TaskTypeID",
      "to": "dbo.TaskType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one TaskType via TaskTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.vwMarketValueContract.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each vwMarketValueContract references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.WorkflowContractView.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each WorkflowContractView references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.WorkflowContractView.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each WorkflowContractView references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.WorkflowContractView_Bug180.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each WorkflowContractView_Bug180 references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.WorkflowContractView_Bug180.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each WorkflowContractView_Bug180 references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSTimingArchivedView.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSTimingArchivedView references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSTimingView.TaskID",
      "to": "dbo.Task.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSTimingView references one Task via TaskID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToCollectionDocuments.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToCollectionDocuments references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToCollectionDocuments_BCKP_20250516_Devops12007.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToCollectionDocuments_BCKP_20250516_Devops12007 references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToCollectionDocuments_BCKP_20250604_DEV20327.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToCollectionDocuments_BCKP_20250604_DEV20327 references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSContractLines.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSContractLines references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSContractLines.AdvertisementID",
      "to": "dbo.Advertisement.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSContractLines references one Advertisement via AdvertisementID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSContractLines.UdacID",
      "to": "dbo.Udac.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSContractLines references one Udac via UdacID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSContractLines.MediumID",
      "to": "dbo.Medium.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSContractLines references one Medium via MediumID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSContracts.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSContracts references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSContracts.CompanyID",
      "to": "dbo.Company.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSContracts references one Company via CompanyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSContracts.CampaignID",
      "to": "dbo.Campaign.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSContracts references one Campaign via CampaignID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSCustomerAddress.AddressID",
      "to": "dbo.Address.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSCustomerAddress references one Address via AddressID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSCustomerData.CompanyID",
      "to": "dbo.Company.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSCustomerData references one Company via CompanyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSSalesCollection.ContractID",
      "to": "dbo.Contract.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSSalesCollection references one Contract via ContractID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSSalesCollection.CreditCardTypeID",
      "to": "dbo.CreditCardType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSSalesCollection references one CreditCardType via CreditCardTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "dbo.YPSToEBSSalesCollection.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each YPSToEBSSalesCollection references one Bank via BankID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\cstraitchof.DEV12867ClassificationBackup.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DEV12867ClassificationBackup references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\cstraitchof.DEV12867ClassificationBackup.ClassifierID",
      "to": "dbo.Classifier.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DEV12867ClassificationBackup references one Classifier via ClassifierID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\cstraitchof.DEV12867ClassificationBackup.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DEV12867ClassificationBackup references one ClassifierNode via ClassifierNodeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\cstraitchof.DEV15648ClassificationBackup.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DEV15648ClassificationBackup references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\cstraitchof.DEV15648ClassificationBackup.ClassifierID",
      "to": "dbo.Classifier.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DEV15648ClassificationBackup references one Classifier via ClassifierID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\cstraitchof.DEV15648ClassificationBackup.ClassifierNodeID",
      "to": "dbo.ClassifierNode.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DEV15648ClassificationBackup references one ClassifierNode via ClassifierNodeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth.PaymentMethodTypeID",
      "to": "dbo.PaymentMethodType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each devops11385_InvoicePaymentMethod_NULL_PaymentMonth references one PaymentMethodType via PaymentMethodTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth.BankID",
      "to": "dbo.Bank.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each devops11385_InvoicePaymentMethod_NULL_PaymentMonth references one Bank via BankID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth.CreditCardTypeID",
      "to": "dbo.CreditCardType.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each devops11385_InvoicePaymentMethod_NULL_PaymentMonth references one CreditCardType via CreditCardTypeID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth.SalesCollectionID",
      "to": "dbo.SalesCollection.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each devops11385_InvoicePaymentMethod_NULL_PaymentMonth references one SalesCollection via SalesCollectionID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth.InvoicePolicyID",
      "to": "dbo.InvoicePolicy.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each devops11385_InvoicePaymentMethod_NULL_PaymentMonth references one InvoicePolicy via InvoicePolicyID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\spitsaris.ViewPrefectureBPDtls.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewPrefectureBPDtls references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\spitsaris.ViewPrefectureBPDtls.CustomerSourceID",
      "to": "dbo.CustomerSource.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each ViewPrefectureBPDtls references one CustomerSource via CustomerSourceID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31672.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerBusinessPoint_20240704_31672 references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31672.SubchannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerBusinessPoint_20240704_31672 references one Subchannel via SubchannelID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31673.BusinessPointID",
      "to": "dbo.BusinessPoint.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerBusinessPoint_20240704_31673 references one BusinessPoint via BusinessPointID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31673.SubchannelID",
      "to": "dbo.SubChannel.ID",
      "cardinality": "many-to-one",
      "type": "inferred_from_naming",
      "business_meaning": "Each DialerBusinessPoint_20240704_31673 references one Subchannel via SubchannelID",
      "confidence": 0.7,
      "source": "naming_pattern"
    },
    {
      "from": "None.em.customerid",
      "to": "None.bp.id",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 6 views/stored procedures",
      "confidence": 1.0,
      "source": "view:dbo.YPSToCollectionCustomerPhoneEmail_BCKP_20250516_Devops12007",
      "usage_count": 6
    },
    {
      "from": "None.ph.customerid",
      "to": "None.bp.ID",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 6 views/stored procedures",
      "confidence": 1.0,
      "source": "view:dbo.YPSToCollectionCustomerPhoneEmail_BCKP_20250516_Devops12007",
      "usage_count": 6
    },
    {
      "from": "None.m.customerid",
      "to": "None.bp.ID /* DEV-9163 changed 2 to 1 // 20161209 */",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 6 views/stored procedures",
      "confidence": 1.0,
      "source": "view:dbo.YPSToCollectionCustomerPhoneEmail_BCKP_20250516_Devops12007",
      "usage_count": 6
    },
    {
      "from": "None.ph2.businesspointid",
      "to": "None.bp.id /* DEV-9163 changed 2 to 1 // 20161209 */",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 6 views/stored procedures",
      "confidence": 1.0,
      "source": "view:dbo.YPSToCollectionCustomerPhoneEmail_BCKP_20250516_Devops12007",
      "usage_count": 6
    },
    {
      "from": "None.ph3.businesspointid",
      "to": "None.bp.id /* DEV-9163 changed 3 to 2 // 20161209 */",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 6 views/stored procedures",
      "confidence": 1.0,
      "source": "view:dbo.YPSToCollectionCustomerPhoneEmail_BCKP_20250516_Devops12007",
      "usage_count": 6
    },
    {
      "from": "None.ins.ID",
      "to": "None.cd.id",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 1 views/stored procedures",
      "confidence": 0.9,
      "source": "view:dbo.YPSToCollectionDocuments_BCKP_20250516_Devops12007",
      "usage_count": 1
    },
    {
      "from": "None.bph.BusinessPointIdentificationID",
      "to": "None.bpi.ID",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 1 views/stored procedures",
      "confidence": 0.9,
      "source": "view:dbo.ViewLastBusinessPointIdentification",
      "usage_count": 1
    },
    {
      "from": "None.tgiv.ID",
      "to": "None.ts.CaseContextEntityID",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 1 views/stored procedures",
      "confidence": 0.9,
      "source": "view:dbo.ViewSalesMarketItemPotentialOwner_BOM_New",
      "usage_count": 1
    },
    {
      "from": "None.t6.EventGroup",
      "to": "None.t1.EventGroup",
      "cardinality": "many-to-one",
      "type": "semantic_from_views",
      "business_meaning": "Relationship used in 1 views/stored procedures",
      "confidence": 0.9,
      "source": "view:dbo.TimingView",
      "usage_count": 1
    }
  ],
  "metrics": [
    {
      "name": "Customer Lifetime Value (CLV)",
      "logic": "Sum the revenue generated by a customer across time: SUM(SalesCollection.TotalAmount) grouped by Customer (Business Point) over a chosen time window (lifetime). Optionally normalize per active days using Calendar (generic) to compute average revenue per active period.",
      "required_entities": [
        "Customer (Business Point)",
        "SalesCollection",
        "Calendar (generic)"
      ],
      "required_measures": [
        "TotalAmount"
      ],
      "business_value": "Identifies highest-value customers to prioritize retention, upsell and tailored marketing; informs CAC / payback calculations and segmentation."
    },
    {
      "name": "Advertisement ROI (by Campaign / Ad)",
      "logic": "Calculate return on advertising spend by attribution: ROI = SUM(revenue attributed to ads) / SUM(Advertisement.TotalActualSpentBudget). Revenue attribution can use direct links (Advertisement -> Campaign -> Contract/SalesCollection) or an attribution model (first-touch/last-touch/proportional). Compute per Advertisement, per Campaign and over time using Calendar (generic).",
      "required_entities": [
        "Advertisement",
        "Campaign",
        "SalesCollection",
        "Calendar (generic)"
      ],
      "required_measures": [
        "TotalActualSpentBudget",
        "TotalAmount"
      ],
      "business_value": "Measures effectiveness of ad spend, helps shift budget to highest-return campaigns/ads and optimize media mix and pricing."
    },
    {
      "name": "Campaign Churn & New-Loss Rate",
      "logic": "Monitor campaign-level customer churn and new-loss dynamics using campaign rules: Suspended Rate = CampaignNewLossCustomer.SuspendedRate (or SuspendedCount / RecordCount). New Loss Rate = CampaignNewLossCustomer.NewRecordRate. Compute trend over campaign periods to detect failing campaigns or pockets of customer loss.",
      "required_entities": [
        "Campaign",
        "CampaignNewLossCustomer",
        "CampaignCalendar"
      ],
      "required_measures": [
        "SuspendedRate",
        "SuspendedCount",
        "NewRecordRate",
        "RecordCount"
      ],
      "business_value": "Provides early warning for campaigns that are causing customer attrition or failing to retain newly-targeted customers; supports campaign tuning and remediation workflows."
    },
    {
      "name": "Customer Engagement Index",
      "logic": "Composite score per Business Point combining interaction and verification signals: normalize and weight components per customer and compute weighted sum. Example: Engagement = 0.40 * normalized(BusinessPointComment.TotalComments) + 0.30 * normalized(BusinessPointConfirmationHistory.Confirmation Count) + 0.20 * normalized(BusinessPointListing.Listing Count) + 0.10 * normalized(BusinessPointComment.AverageCommentsPerUser). Use Calendar (generic) to compute recent-window engagement (e.g., 90 days).",
      "required_entities": [
        "Customer (Business Point)",
        "BusinessPointComment",
        "BusinessPointConfirmationHistory",
        "BusinessPointListing",
        "Calendar (generic)"
      ],
      "required_measures": [
        "TotalComments",
        "AverageCommentsPerUser",
        "Confirmation Count",
        "Average Confirmations per Business Point",
        "Listing Count"
      ],
      "business_value": "Ranks customers by their level of interaction and trust signals to prioritize customer service, remarketing, verification efforts and upsell outreach."
    }
  ],
  "audit": {
    "dialect": "tsql",
    "generated_at": "2025-10-26T14:18:41.396947",
    "table_count": 678,
    "entity_count": 8,
    "dimension_count": 33,
    "fact_count": 133,
    "relationship_count": 1062,
    "semantic_relationship_count": 9,
    "view_enriched": 9
  }
}