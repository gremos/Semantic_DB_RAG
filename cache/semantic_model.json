{
  "entities": [
    {
      "name": "Address",
      "source": "dbo.Address",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Address",
        "default_label_column": "Line1En",
        "default_search_columns": [
          "Line1En",
          "Line1",
          "Line3En",
          "GeoModelQueryString",
          "NumericZip",
          "GeoModelLocTextEn",
          "ID"
        ],
        "default_sort": {
          "column": "Line1En",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "AddressID",
            "AddrID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the address record"
        },
        {
          "name": "Line1",
          "role": "attribute",
          "semantic_type": "address_line",
          "aliases": [
            "AddressLine1",
            "Line1GR",
            "Addr_Line1"
          ],
          "description": "Primary address line in original language (Greek). Often street + number."
        },
        {
          "name": "Line2",
          "role": "attribute",
          "semantic_type": "address_line",
          "aliases": [
            "AddressLine2",
            "Line2GR"
          ],
          "description": "Secondary address line in original language (Greek) — apartment, building or addition."
        },
        {
          "name": "Line3",
          "role": "attribute",
          "semantic_type": "address_line",
          "aliases": [
            "AddressLine3",
            "LocalityLine",
            "Line3GR"
          ],
          "description": "Tertiary address line (often locality, city and postal code) in original language."
        },
        {
          "name": "Line4",
          "role": "attribute",
          "semantic_type": "country",
          "aliases": [
            "CountryName",
            "Line4GR"
          ],
          "description": "Country name in original language (Greek)."
        },
        {
          "name": "Longitude",
          "role": "attribute",
          "semantic_type": "longitude",
          "aliases": [
            "Lon",
            "X",
            "LongitudeRaw"
          ],
          "description": "Longitude coordinate (numeric). May be in a local projection or raw provider units."
        },
        {
          "name": "Latitude",
          "role": "attribute",
          "semantic_type": "latitude",
          "aliases": [
            "Lat",
            "Y",
            "LatitudeRaw"
          ],
          "description": "Latitude coordinate (numeric). May be in a local projection or raw provider units."
        },
        {
          "name": "GeoModelType",
          "role": "attribute",
          "semantic_type": "geocode_type",
          "aliases": [
            "GeocodeType",
            "GeoType"
          ],
          "description": "Integer code indicating geocoding result type/provider classification (e.g., point/building/approx)."
        },
        {
          "name": "GeoModelVersion",
          "role": "attribute",
          "semantic_type": "geocode_version",
          "aliases": [
            "GeocodeVersion",
            "GeoVersion"
          ],
          "description": "Version of the geocoding model/service used for this address."
        },
        {
          "name": "GeoModelSearchDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "GeocodeDate",
            "GeoSearchDate"
          ],
          "description": "Timestamp when the geocoding lookup was performed."
        },
        {
          "name": "GeoModelScore",
          "role": "attribute",
          "semantic_type": "geocode_confidence",
          "aliases": [
            "GeocodeScore",
            "GeoScore",
            "MatchScore"
          ],
          "description": "Geocoding confidence/score (higher = better match)."
        },
        {
          "name": "GeoModelStreet1ID",
          "role": "attribute",
          "semantic_type": "geocode_identifier",
          "aliases": [
            "GeoStreet1ID",
            "Street1ID"
          ],
          "description": "Provider identifier for the primary matched street (if available)."
        },
        {
          "name": "GeoModelStreet2ID",
          "role": "attribute",
          "semantic_type": "geocode_identifier",
          "aliases": [
            "GeoStreet2ID",
            "Street2ID"
          ],
          "description": "Provider identifier for the secondary matched street (if available)."
        },
        {
          "name": "GeoModelLocID",
          "role": "attribute",
          "semantic_type": "geocode_identifier",
          "aliases": [
            "GeoLocationID",
            "LocID"
          ],
          "description": "Provider identifier for the matched locality (city/municipality) when available."
        },
        {
          "name": "GeoModelZip",
          "role": "attribute",
          "semantic_type": "postal_code_text",
          "aliases": [
            "GeoZip",
            "ZipText"
          ],
          "description": "Postal/ZIP code as returned by geocoding provider (text)."
        },
        {
          "name": "CountryID",
          "role": "foreign_key",
          "semantic_type": "country_id",
          "aliases": [
            "CountryFK",
            "CountryCodeID"
          ],
          "description": "Foreign key referencing Country table ID."
        },
        {
          "name": "GeoModelQueryString",
          "role": "attribute",
          "semantic_type": "address_search_string",
          "aliases": [
            "GeocodeQuery",
            "QueryString"
          ],
          "description": "Original query string sent to geocoding service (concatenated address components)."
        },
        {
          "name": "GeoModelStreet1Text",
          "role": "attribute",
          "semantic_type": "street_name",
          "aliases": [
            "GeoStreet1Text",
            "Street1TextGR"
          ],
          "description": "Street name extracted by geocoder (original language)."
        },
        {
          "name": "GeoModelStreet1Num",
          "role": "attribute",
          "semantic_type": "street_number",
          "aliases": [
            "GeoStreet1Number",
            "Street1Num"
          ],
          "description": "Street number extracted by geocoder (original language)."
        },
        {
          "name": "GeoModelStreet2Text",
          "role": "attribute",
          "semantic_type": "street_name",
          "aliases": [
            "GeoStreet2Text",
            "Street2TextGR"
          ],
          "description": "Secondary street name extracted by geocoder (original language)."
        },
        {
          "name": "GeoModelStreet2Num",
          "role": "attribute",
          "semantic_type": "street_number",
          "aliases": [
            "GeoStreet2Number",
            "Street2Num"
          ],
          "description": "Secondary street number extracted by geocoder (original language)."
        },
        {
          "name": "GeoModelLocText",
          "role": "attribute",
          "semantic_type": "place_name",
          "aliases": [
            "GeoLocationText",
            "LocTextGR"
          ],
          "description": "Locality/city name extracted by geocoder (original language)."
        },
        {
          "name": "GeoModelLongitude",
          "role": "attribute",
          "semantic_type": "longitude",
          "aliases": [
            "GeoLonText",
            "GeoLongitudeStr"
          ],
          "description": "Longitude returned by geocoder (string representation)."
        },
        {
          "name": "GeoModelLatitude",
          "role": "attribute",
          "semantic_type": "latitude",
          "aliases": [
            "GeoLatText",
            "GeoLatitudeStr"
          ],
          "description": "Latitude returned by geocoder (string representation)."
        },
        {
          "name": "GeoBroaderAreas",
          "role": "attribute",
          "semantic_type": "geography_hierarchy",
          "aliases": [
            "GeoAreas",
            "BroaderAreas"
          ],
          "description": "Hierarchical area codes or region tokens returned by the geocoding provider."
        },
        {
          "name": "NumericZip",
          "role": "attribute",
          "semantic_type": "postal_code",
          "aliases": [
            "PostalCode",
            "Zip",
            "ZipNumeric"
          ],
          "description": "Postal/ZIP code stored as numeric where applicable."
        },
        {
          "name": "GeoModelDistrict",
          "role": "attribute",
          "semantic_type": "administrative_area",
          "aliases": [
            "GeoDistrict",
            "DistrictGR"
          ],
          "description": "Administrative district/prefecture as returned by geocoder (original language)."
        },
        {
          "name": "GeoModelArea",
          "role": "attribute",
          "semantic_type": "neighborhood",
          "aliases": [
            "GeoArea",
            "AreaGR"
          ],
          "description": "Smaller area/neighborhood returned by the geocoding model (original language)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "source_system_id",
          "aliases": [
            "DataMartKey",
            "DM_Key"
          ],
          "description": "Key used by ETL/data-mart processes to indicate source record mapping."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "source_table_name",
          "aliases": [
            "DataMartTable",
            "DM_Table"
          ],
          "description": "Name of the source table or dataset from which this address row originated."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "source_system_key_text",
          "aliases": [
            "DM_CharKey",
            "DMKeyText"
          ],
          "description": "Optional character key from the source system used for mapping or lookups."
        },
        {
          "name": "GeoModelGC_Type",
          "role": "attribute",
          "semantic_type": "geocode_classification",
          "aliases": [
            "GeoGCType",
            "GeocodeClass"
          ],
          "description": "Single-character code classifying geocode result (provider-specific)."
        },
        {
          "name": "UserOverrideLine1",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Line1UserOverride",
            "UserOverrodeLine1"
          ],
          "description": "Flag indicating whether the primary address line (Line1) was manually overridden by a user."
        },
        {
          "name": "Line1En",
          "role": "label",
          "semantic_type": "address_line",
          "aliases": [
            "AddressLine1En",
            "Line1_ENG",
            "AddrLine1En"
          ],
          "description": "Primary address line in English (transliterated/translated). Recommended default label for displays."
        },
        {
          "name": "Line2En",
          "role": "attribute",
          "semantic_type": "address_line",
          "aliases": [
            "AddressLine2En",
            "Line2_ENG"
          ],
          "description": "Secondary address line in English (transliterated/translated)."
        },
        {
          "name": "Line3En",
          "role": "attribute",
          "semantic_type": "address_line",
          "aliases": [
            "AddressLine3En",
            "LocalityLineEn"
          ],
          "description": "Tertiary address line in English (city and postal code typically)."
        },
        {
          "name": "Line4En",
          "role": "attribute",
          "semantic_type": "country",
          "aliases": [
            "CountryNameEn",
            "Line4_ENG"
          ],
          "description": "Country name in English."
        },
        {
          "name": "GeoModelStreet1TextEn",
          "role": "attribute",
          "semantic_type": "street_name",
          "aliases": [
            "GeoStreet1TextEn",
            "Street1Text_ENG"
          ],
          "description": "Primary matched street name in English (transliterated/translated)."
        },
        {
          "name": "GeoModelStreet2TextEn",
          "role": "attribute",
          "semantic_type": "street_name",
          "aliases": [
            "GeoStreet2TextEn",
            "Street2Text_ENG"
          ],
          "description": "Secondary matched street name in English (transliterated/translated)."
        },
        {
          "name": "GeoModelLocTextEn",
          "role": "attribute",
          "semantic_type": "place_name",
          "aliases": [
            "GeoLocTextEn",
            "LocalityEn"
          ],
          "description": "Locality/city name in English (transliterated/translated)."
        },
        {
          "name": "GeoModelDistrictEn",
          "role": "attribute",
          "semantic_type": "administrative_area",
          "aliases": [
            "GeoDistrictEn",
            "DistrictEn"
          ],
          "description": "Administrative district/prefecture in English."
        },
        {
          "name": "GeoModelAreaEn",
          "role": "attribute",
          "semantic_type": "neighborhood",
          "aliases": [
            "GeoAreaEn",
            "AreaEn"
          ],
          "description": "Area/neighborhood in English."
        },
        {
          "name": "UserOverrideLine1En",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Line1UserOverrideEn",
            "UserOverrodeLine1En"
          ],
          "description": "Flag indicating whether the English primary address line (Line1En) was manually overridden."
        },
        {
          "name": "GeoModelStreet1NumEn",
          "role": "attribute",
          "semantic_type": "street_number",
          "aliases": [
            "GeoStreet1NumEn",
            "Street1NumEn"
          ],
          "description": "Street number for the primary street in English representation."
        },
        {
          "name": "GeoModelStreet2NumEn",
          "role": "attribute",
          "semantic_type": "street_number",
          "aliases": [
            "GeoStreet2NumEn",
            "Street2NumEn"
          ],
          "description": "Street number for the secondary street in English representation."
        }
      ]
    },
    {
      "name": "Bank",
      "source": "dbo.Bank",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Bank",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "BankID",
            "ID"
          ],
          "description": "Unique identifier for the bank record."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "organization_name",
          "aliases": [
            "BankName",
            "Name",
            "DescriptionEn"
          ],
          "description": "Official bank name or description (may be in Greek or English). Recommended display label for bank entities."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ActiveFlag",
            "BankIsActive"
          ],
          "description": "Indicator whether the bank is active (True) or inactive (False)."
        }
      ]
    },
    {
      "name": "Bank Deposit Detail",
      "source": "dbo.BankDepositDetail",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Bank Deposit Detail",
        "default_label_column": "BankDepositNumber",
        "default_search_columns": [
          "BankDepositNumber",
          "BankDepositDate",
          "ID"
        ],
        "default_sort": {
          "column": "BankDepositDate",
          "direction": "desc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "DepositDetailID",
            "BankDepositDetailID",
            "ID"
          ],
          "description": "Surrogate primary key for the bank deposit detail record. Also used as a foreign key reference to SalesCollection.ID."
        },
        {
          "name": "BankID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "BankId",
            "Bank_ID",
            "FK_Bank"
          ],
          "description": "Foreign key referencing the bank entity (dbo.Bank.ID). Identifies which bank received the deposit."
        },
        {
          "name": "BankDepositNumber",
          "role": "label",
          "semantic_type": "identifier",
          "aliases": [
            "DepositNumber",
            "BankDepositNo",
            "DepositRef",
            "ReferenceNumber"
          ],
          "description": "Human-facing deposit reference or receipt number supplied by the bank. Often used for reconciliation and search."
        },
        {
          "name": "BankDepositDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "DepositDate",
            "DateDeposited",
            "BankDepositTimestamp"
          ],
          "description": "Date and time when the deposit was posted at the bank. Useful for ordering and settlement timelines."
        }
      ]
    },
    {
      "name": "Company",
      "source": "dbo.Company",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Company",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CompanyID",
            "CompID",
            "ID"
          ],
          "description": "Unique identifier for the company record."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "CompanyCode",
            "CompCode",
            "CustCode"
          ],
          "description": "Short alphanumeric company code used for reporting and keyed lookups (e.g., '001', '003')."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "organization_name",
          "aliases": [
            "CompanyName",
            "LegalName",
            "NameEN"
          ],
          "description": "Full legal or display name of the company. Values may include localized (Greek) text or English equivalents."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DimensionKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used for mapping to downstream data-mart or dimensional model. Currently null for all rows in sample."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMartTable",
            "DM_Table"
          ],
          "description": "Optional name of the target data-mart table for the DMKey mapping. Typically used in ETL lineage; null in current data."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMartCharKey",
            "DMChar_Key"
          ],
          "description": "Optional character key used for mapping to external systems or dimensional models. Empty in current sample."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ActiveFlag",
            "Is_Active",
            "Enabled"
          ],
          "description": "Boolean flag indicating whether the company is active (True) or inactive (False) in the system."
        }
      ]
    },
    {
      "name": "Country",
      "source": "dbo.Country",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Country",
        "default_label_column": "DescriptionEn",
        "default_search_columns": [
          "DescriptionEn",
          "Description",
          "Code",
          "TaxNumberCode",
          "ID"
        ],
        "default_sort": {
          "column": "DescriptionEn",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CountryID",
            "ID",
            "Country_Key"
          ],
          "description": "Surrogate unique identifier for the country (primary key). Internal integer-like id represented as text in source sample."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "country_code",
          "aliases": [
            "CountryCode",
            "ISOCode",
            "ISO2"
          ],
          "description": "Short country code (usually ISO 2-letter code). Example values: GR, CY, CH."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "country_name",
          "aliases": [
            "LocalName",
            "NameLocal",
            "DescriptionLocal"
          ],
          "description": "Country name in the local language or local script (Greek in samples)."
        },
        {
          "name": "CountryTelephoneCode",
          "role": "attribute",
          "semantic_type": "phone_country_code",
          "aliases": [
            "PhoneCode",
            "TelCode",
            "IntlDialingCode"
          ],
          "description": "International dialing prefix for the country (often with leading zeros). Example: 0030, 00357."
        },
        {
          "name": "TaxNumberCode",
          "role": "attribute",
          "semantic_type": "tax_country_code",
          "aliases": [
            "VATPrefix",
            "TaxCode",
            "TaxCountryPrefix"
          ],
          "description": "Country prefix used in tax or VAT identifiers (e.g., EL for Greece)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataModelKey",
            "DM_Id"
          ],
          "description": "Mapping key to a downstream data mart or classification (sparse, many nulls)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataModelTable",
            "DM_Table"
          ],
          "description": "Name of the downstream/master table this country maps to (where DMKey applies)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DM_CharKey",
            "DataModelCharKey"
          ],
          "description": "Optional character key for data-mart mapping; currently all null in sample."
        },
        {
          "name": "MinLongitude",
          "role": "attribute",
          "semantic_type": "float",
          "aliases": [
            "BBoxMinLongitude",
            "LonMin"
          ],
          "description": "Minimum longitude of an approximate bounding box for the country (map units as stored)."
        },
        {
          "name": "MinLatitude",
          "role": "attribute",
          "semantic_type": "float",
          "aliases": [
            "BBoxMinLatitude",
            "LatMin"
          ],
          "description": "Minimum latitude of an approximate bounding box for the country (map units as stored)."
        },
        {
          "name": "MaxLongitude",
          "role": "attribute",
          "semantic_type": "float",
          "aliases": [
            "BBoxMaxLongitude",
            "LonMax"
          ],
          "description": "Maximum longitude of an approximate bounding box for the country (map units as stored)."
        },
        {
          "name": "MaxLatitude",
          "role": "attribute",
          "semantic_type": "float",
          "aliases": [
            "BBoxMaxLatitude",
            "LatMax"
          ],
          "description": "Maximum latitude of an approximate bounding box for the country (map units as stored)."
        },
        {
          "name": "DescriptionEn",
          "role": "label",
          "semantic_type": "country_name",
          "aliases": [
            "NameEn",
            "EnglishName",
            "Description_EN"
          ],
          "description": "Country name in English. Preferred human-friendly label for UI and search (e.g., Greece, Cyprus)."
        }
      ]
    },
    {
      "name": "Credit Card Type",
      "source": "dbo.CreditCardType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Credit Card Type",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CreditCardTypeID",
            "ID",
            "CCTypeID"
          ],
          "description": "Unique identifier for the credit card type (primary key)."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "string",
          "aliases": [
            "Name",
            "CardTypeName",
            "DescriptionText"
          ],
          "description": "Readable name/description of the credit card type (e.g., Mastercard, Visa). Used as the display label."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active",
            "Enabled"
          ],
          "description": "Flag indicating whether the credit card type is currently active/usable."
        }
      ]
    },
    {
      "name": "CAD Default Value",
      "source": "dbo.CADDefaultValue",
      "primary_key": [
        "BusinessPointID",
        "ContentAttributeDefinitionID"
      ],
      "display": {
        "display_name": "CAD Default Value",
        "default_label_column": "DefaultValue",
        "default_search_columns": [
          "DefaultValue",
          "BusinessPointID",
          "ContentAttributeDefinitionID"
        ],
        "default_sort": {
          "column": "BusinessPointID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "BusinessPointID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "BusinessPoint_Id",
            "BPID",
            "BusinessPointID_FK"
          ],
          "description": "Identifier of the business point to which the default value applies. Part of the composite primary key."
        },
        {
          "name": "ContentAttributeDefinitionID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ContentAttributeDefinition_Id",
            "CADefinitionID",
            "AttributeDefinitionID"
          ],
          "description": "Identifier of the content attribute definition for which this default value is defined. Part of the composite primary key."
        },
        {
          "name": "DefaultValue",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Value",
            "Default_Value",
            "CADDefault"
          ],
          "description": "Default textual value for the specified content attribute at the given business point. Up to 500 characters."
        }
      ]
    },
    {
      "name": "Configuration Parameter",
      "source": "dbo.ConfigurationParameter",
      "primary_key": [
        "Name"
      ],
      "display": {
        "display_name": "Configuration Parameter",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Parameter",
          "DMTable"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "Name",
          "role": "primary_key",
          "semantic_type": "code",
          "aliases": [
            "ParameterName",
            "ConfigName",
            "Key"
          ],
          "description": "Unique name/key of the configuration parameter. Examples: 'ActivityClassifierID', 'BackOffice.LedgerYear'. Serves as the primary identifier for configuration entries."
        },
        {
          "name": "Parameter",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Value",
            "ParameterValue",
            "ConfigValue"
          ],
          "description": "Value of the configuration parameter. Stored as text; may contain numeric values, comma separated lists or other textual configuration values."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataModelKey",
            "DM_Key",
            "ReferenceKey"
          ],
          "description": "Optional numeric key referencing a data model record. Often null in this dataset; reserved for linking a parameter to a numeric DM entity."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelTable",
            "DM_Table",
            "ReferenceTable"
          ],
          "description": "Optional name of the data model table related to DMKey. Mostly null in samples; used when a parameter links to a specific table in a data model."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelCharKey",
            "DM_CharKey",
            "ReferenceCharKey"
          ],
          "description": "Optional character/string key for referencing a data model record. Present when the link uses a string identifier rather than numeric DMKey."
        }
      ]
    },
    {
      "name": "Content Attribute Definition",
      "source": "dbo.ContentAttributeDefinition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Content Attribute Definition",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "ID",
          "DMTable"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "AttrDefID",
            "ContentAttributeDefinitionID",
            "ID"
          ],
          "description": "Unique identifier for the content attribute definition."
        },
        {
          "name": "ProductPartDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ProductPartDefID",
            "PartDefinitionID"
          ],
          "description": "Reference to the product part definition this attribute definition belongs to (foreign key to dbo.ProductPartDefinition.ID)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "AttributeName",
            "Label",
            "Name"
          ],
          "description": "Friendly name of the attribute (e.g., 'Customer Name', 'Address', 'Phone'). Used as the display label for the attribute."
        },
        {
          "name": "Type",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataType",
            "AttributeType"
          ],
          "description": "Numeric code representing the attribute's data type (system-defined)."
        },
        {
          "name": "IsRequired",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Required",
            "IsMandatory"
          ],
          "description": "Indicates whether this attribute must have a value (true = required)."
        },
        {
          "name": "DefaultValue",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Default",
            "DefaultVal"
          ],
          "description": "Default value used when no value is supplied for this attribute."
        },
        {
          "name": "MinValue",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MinimumValue",
            "Min"
          ],
          "description": "Minimum numeric value permitted for the attribute (when applicable)."
        },
        {
          "name": "MaxValue",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaximumValue",
            "Max"
          ],
          "description": "Maximum numeric value permitted for the attribute (when applicable)."
        },
        {
          "name": "IsReadonly",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Readonly",
            "IsReadOnly"
          ],
          "description": "Indicates whether the attribute is read-only (cannot be edited)."
        },
        {
          "name": "VisibilityMask",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Visibility",
            "VisMask"
          ],
          "description": "4-character mask controlling attribute visibility in different UI contexts (encoded permissions/visibility flags)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMapKey",
            "DM_Key"
          ],
          "description": "Numeric key used by data migration or mapping processes (domain-specific mapping key)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapTable",
            "DM_Table"
          ],
          "description": "Name of the source or target table used by migration/mapping processes (e.g., 'Migration')."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapCharKey",
            "DMChar"
          ],
          "description": "Optional character key used for migration or mapping when a string key is required."
        },
        {
          "name": "FillOrder",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Order",
            "FillSequence"
          ],
          "description": "Defines the ordering or sequence for populating attributes (lower numbers fill earlier)."
        },
        {
          "name": "MaxLength",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Length",
            "MaxLen"
          ],
          "description": "Maximum length (characters) allowed for text-based attribute values."
        },
        {
          "name": "LookupTableName",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "LookupTable",
            "LookupSource"
          ],
          "description": "Name of a lookup table providing allowed values for this attribute (if applicable)."
        },
        {
          "name": "EnableValidationRules",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ValidationEnabled",
            "HasValidationRules"
          ],
          "description": "Flag indicating whether validation rules are enforced for this attribute."
        },
        {
          "name": "EnableKeyphraseCreation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "KeyphraseEnabled",
            "AllowKeyphraseCreation"
          ],
          "description": "Flag indicating whether keyword/keyphrase extraction or generation is enabled for this attribute."
        },
        {
          "name": "LookupFiltered",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "LookupFilter",
            "FilteredLookup"
          ],
          "description": "Filter expression applied to the lookup source when retrieving allowed values for this attribute."
        },
        {
          "name": "DDLLookupFiltered",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DDLLookupFilter",
            "DDLFilter"
          ],
          "description": "Filter expression specifically used for drop-down list (DDL) lookup population."
        },
        {
          "name": "IsLocation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "LocationFlag",
            "IsGeoLocation"
          ],
          "description": "Indicates whether this attribute represents a location/geo attribute."
        }
      ]
    },
    {
      "name": "Content Attribute Value",
      "source": "dbo.ContentAttributeValue",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Content Attribute Value",
        "default_label_column": "Value",
        "default_search_columns": [
          "Value",
          "ID",
          "ProductPartID",
          "ContentAttributeDefinitionID",
          "AdvertisementID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "desc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ContentAttributeValueID",
            "AttrValueID",
            "ID"
          ],
          "description": "Unique identifier for this attribute value record."
        },
        {
          "name": "ContractProductID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ContractProdID",
            "ContractProduct"
          ],
          "description": "Reference to the contract-product context for this attribute value (foreign key to dbo.ContractProduct.ID)."
        },
        {
          "name": "ContentAttributeDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "AttrDefID",
            "ContentAttributeDefinitionID"
          ],
          "description": "Reference to the attribute definition that describes this value (foreign key to dbo.ContentAttributeDefinition.ID)."
        },
        {
          "name": "ProductPartID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "PartID",
            "ProductPart"
          ],
          "description": "Identifier of the product part instance this value is associated with (foreign key to dbo.ProductPart.ID)."
        },
        {
          "name": "Value",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "AttributeValue",
            "Val",
            "TextValue"
          ],
          "description": "The stored value for the attribute (text). May contain free text, URLs or HTML; values observed include long descriptive Greek text and links."
        },
        {
          "name": "SeqNo",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "SequenceNumber",
            "Seq"
          ],
          "description": "Sequence number used to order attribute values when multiple values exist for the same attribute/part."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMapKey",
            "DM_Key"
          ],
          "description": "Optional mapping key used by migration or data mapping processes for this value."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapTable",
            "DM_Table"
          ],
          "description": "Optional table name associated with this value for migration/data mapping purposes."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapCharKey",
            "DMChar"
          ],
          "description": "Optional character key used by migration/mapping processes for this value."
        },
        {
          "name": "AdvertisementID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "AdID",
            "Advertisement"
          ],
          "description": "Optional reference to an advertisement record this attribute value is associated with (foreign key to dbo.Advertisement.ID)."
        },
        {
          "name": "QA",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "QualityAssurance",
            "IsQA"
          ],
          "description": "Quality assurance flag indicating whether this value has passed QA checks."
        },
        {
          "name": "HeaderLabel",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Header",
            "HeaderText",
            "Header_Label"
          ],
          "description": "Optional header label associated with the value for display/grouping purposes."
        }
      ]
    },
    {
      "name": "GL Sequence Code",
      "source": "dbo.GLSeqCode",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "GL Sequence Code",
        "default_label_column": "Description",
        "default_search_columns": [
          "Code",
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "GLSeqCodeID",
            "ID",
            "SeqID"
          ],
          "description": "Surrogate unique identifier for the GL sequence code row."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "GLCode",
            "SeqCode",
            "Code"
          ],
          "description": "Formatted general ledger / sequence code (hierarchical account-like code). Example: 30.00.00.0000."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "Label",
            "Description"
          ],
          "description": "Human-readable name or description of the GL sequence code (display label). Typically in Greek in this dataset."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DM_ID",
            "DMKey"
          ],
          "description": "Optional numeric key linking to an external data mart or mapping table (currently null)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DM_Table",
            "DMTableName",
            "DMTable"
          ],
          "description": "Optional name of the external data mart table that DMKey refers to (currently null)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_CharKey",
            "DMCharKey"
          ],
          "description": "Optional character/string key for external mapping (currently null)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActive",
            "Is_Active"
          ],
          "description": "Flag indicating whether this GL sequence code is active (True) or inactive (False)."
        }
      ]
    },
    {
      "name": "KEPYO Status",
      "source": "dbo.KEPYOStatus",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "KEPYO Status",
        "default_label_column": "Description",
        "default_search_columns": [
          "Code",
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "KEPYOStatusID",
            "ID"
          ],
          "description": "Unique identifier for the status lookup row."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [
            "StatusCode",
            "Code"
          ],
          "description": "Numeric status code used for KEPYO classification. Use this value in joins and logic to determine the status."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "Label",
            "Description"
          ],
          "description": "Human-readable description of the KEPYO status (e.g., Greek labels). Displayed in UIs and reports."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DM_ID",
            "DMKey"
          ],
          "description": "Optional numeric key for external data mart mapping (all null in sample)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DM_Table",
            "DMTableName",
            "DMTable"
          ],
          "description": "Optional external data mart table name for DMKey (currently empty)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_CharKey",
            "DMCharKey"
          ],
          "description": "Optional character/string key used for external mapping (currently empty)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActive",
            "Is_Active"
          ],
          "description": "Indicates whether this status value is currently active (True) or deprecated/inactive (False)."
        }
      ]
    },
    {
      "name": "LegalForm",
      "source": "dbo.LegalForm",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Legal Form",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "DMKey"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "LegalFormID",
            "LF_ID",
            "ID"
          ],
          "description": "Surrogate key / unique identifier for the legal form."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "LegalFormName",
            "Description"
          ],
          "description": "Human-readable name or abbreviation of the legal form (e.g., ΑΕ, Ε.Π.Ε., O.E.). Used as the display label for the legal form."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataModelKey",
            "DimensionKey",
            "DM_Key"
          ],
          "description": "Numeric key used by an upstream/legacy data model or ETL process to map this legal form to a dimension (often used for migration or lookups). Nullable."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelTable",
            "DM_Table",
            "SourceTable"
          ],
          "description": "Name of the source or dimension table that provided the DMKey/DMCharKey mapping (e.g., CM11D_CompanyLegalForms). Helps trace ETL source."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelCharKey",
            "DM_Char_Key",
            "CharKey"
          ],
          "description": "Optional character key from an upstream data model. Currently all null in samples; reserved for string-based mapping keys."
        }
      ]
    },
    {
      "name": "MasterGeoAreaGroup",
      "source": "dbo.MasterGeoAreaGroup",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Master Geo Area Group",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "Code",
          "BroaderAreaID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "GeoAreaGroupID",
            "GroupID",
            "ID"
          ],
          "description": "Unique identifier for the geo area group."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "GroupCode",
            "GeoCode",
            "Code"
          ],
          "description": "Optional short code for the geo area group. May be blank for many rows."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "GroupName",
            "Description"
          ],
          "description": "Human-readable name or description of the geo area group (e.g., 'Dummy Group', '0-9'). Primary display label for the entity."
        },
        {
          "name": "ParentGeoAreaGroupID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ParentID",
            "ParentGroupID",
            "ParentGeoAreaGroupID"
          ],
          "description": "Reference to the parent geo area group (self-referential FK). Used to build hierarchical groupings. Nullable when group has no parent."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataModelKey",
            "DimensionKey",
            "DM_Key"
          ],
          "description": "Numeric key used by upstream data model or ETL for classification or mapping purposes. Nullable."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelTable",
            "DM_Table",
            "SourceTable"
          ],
          "description": "Name of the source/table in the data model that provided DMKey values (e.g., 'HD11E_Sections', 'Migration')."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelCharKey",
            "DM_Char_Key",
            "CharKey"
          ],
          "description": "Optional character key from an upstream data model. Samples show this column unused (all null)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ActiveFlag",
            "Is_Active",
            "Enabled"
          ],
          "description": "Indicator whether the geo area group is active (True) or inactive (False)."
        },
        {
          "name": "GeoModelVersion",
          "role": "attribute",
          "semantic_type": "version",
          "aliases": [
            "GeoVersion",
            "ModelVersion",
            "GeoModelVersion"
          ],
          "description": "Version identifier for the geography model used for this group. Nullable and sparsely populated."
        },
        {
          "name": "BroaderAreaID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "BroaderArea",
            "BroaderAreaCode",
            "BroaderAreaID"
          ],
          "description": "Identifier of a broader geographic area. Foreign key to dbo.BroaderAreaLookUp.BroaderAreaID. Nullable when not assigned."
        }
      ]
    },
    {
      "name": "Master Heading",
      "source": "dbo.MasterHeading",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Master Heading",
        "default_label_column": "Description",
        "default_search_columns": [
          "Code",
          "Description",
          "DescriptionEN",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "HeadingID",
            "MasterHeadingID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the heading (primary key). Values are integers stored as text in source samples."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "HeadingCode",
            "HDCode"
          ],
          "description": "Short alphanumeric code for the heading (business classification code). Many rows have a 7-character numeric code or 'None'. Useful for lookups and joins."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "DescriptionGR",
            "HeadingDescription"
          ],
          "description": "Primary (Greek) description of the heading. This is the human-readable label shown to users and used for display and navigation."
        },
        {
          "name": "ParentHeadingID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [
            "ParentID",
            "ParentHeading"
          ],
          "description": "Reference to parent heading (hierarchical relationship). Null for top-level headings."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMigrationKey",
            "SourceDMKey"
          ],
          "description": "Numeric key indicating origin or domain mapping (used by data migration or master data management). Low cardinality (few distinct values)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "SourceTable",
            "DMTableName"
          ],
          "description": "Name of the source table or system that provided the heading row (metadata). Useful for lineage/tracing."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DMChar",
            "DMCharKey"
          ],
          "description": "Optional character key from source system (seldom populated)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag"
          ],
          "description": "Flag indicating whether the heading is active (True) or inactive (False)."
        },
        {
          "name": "DescriptionEN",
          "role": "attribute",
          "semantic_type": "multilingual_text",
          "aliases": [
            "DescriptionEnglish",
            "HeadingDescriptionEN"
          ],
          "description": "English translation of the heading description. Many rows are null — used as an alternate display label when available."
        },
        {
          "name": "IsThematicModule",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ThematicModuleFlag",
            "IsThematic"
          ],
          "description": "Boolean flag indicating whether the heading belongs to a thematic module (business grouping)."
        }
      ]
    },
    {
      "name": "Master Section",
      "source": "dbo.MasterSection",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Master Section",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "SectionID",
            "ID"
          ],
          "description": "Unique identifier for the section (primary key). Small integer values (1..n)."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "DescriptionGR",
            "SectionDescription"
          ],
          "description": "Human-readable description of the section (often Greek, occasionally English). Used as the primary display label."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMigrationKey",
            "SourceDMKey"
          ],
          "description": "Metadata numeric key reserved for data migration or master data mapping. Column appears to be unused (nulls)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "SourceTable",
            "DMTableName"
          ],
          "description": "Source table name from upstream system (metadata). Column appears to be unused (nulls)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DMChar",
            "DMCharKey"
          ],
          "description": "Optional character key from the source system (metadata). Column appears to be unused (nulls)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag"
          ],
          "description": "Indicates whether the section is currently active (True) or retired/inactive (False)."
        }
      ]
    },
    {
      "name": "Medium",
      "source": "dbo.Medium",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Medium",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MediumID",
            "ID",
            "Medium_Id"
          ],
          "description": "Surrogate unique identifier for the medium"
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "MediumCode",
            "Code"
          ],
          "description": "Short alphanumeric code used to reference the medium"
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "MediumName",
            "Name"
          ],
          "description": "Human-readable name of the medium (display label)"
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "MediumDescription",
            "Descr"
          ],
          "description": "Longer descriptive text about the medium"
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "Created",
            "CreatedDate",
            "CreationDate"
          ],
          "description": "Date and time when the medium record was created"
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Creator",
            "CreatedByUser"
          ],
          "description": "User or system account that created the record"
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "Modified",
            "ModifiedDate",
            "LastModifiedOn"
          ],
          "description": "Date and time when the record was last modified (if any)"
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Modifier",
            "LastModifiedBy"
          ],
          "description": "User account that last modified the record (if any)"
        },
        {
          "name": "GeographicalDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "GeoDefID",
            "GeographyID",
            "GeographicalDefinition_Id"
          ],
          "description": "Reference to GeographicalDefinition (defines geographic scope for this medium)"
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active"
          ],
          "description": "Flag indicating whether the medium is active (true) or inactive (false)"
        },
        {
          "name": "MediumKindID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MediumKind",
            "MediumKind_Id"
          ],
          "description": "Reference to MediumKind (categorizes the medium at a sub-type level)"
        },
        {
          "name": "MediumTypeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MediumType",
            "MediumType_Id"
          ],
          "description": "Reference to MediumType (broad classification of medium)"
        },
        {
          "name": "CompanyID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "Company",
            "Company_Id",
            "OrganisationID"
          ],
          "description": "Reference to Company that owns or manages this medium"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "external_id",
          "aliases": [
            "DataMartKey",
            "DM_Key"
          ],
          "description": "Legacy / data-mart numeric key (nullable). Used for external DW mapping."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "DataMartTable",
            "DM_Table"
          ],
          "description": "Name of the external data-mart table this record maps to (nullable)"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "external_id",
          "aliases": [
            "DataMartCharKey",
            "DM_CharKey"
          ],
          "description": "Legacy / data-mart character key (nullable). Used for external DW mapping."
        }
      ]
    },
    {
      "name": "Medium Kind",
      "source": "dbo.MediumKind",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Medium Kind",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MediumKindID",
            "ID"
          ],
          "description": "Unique identifier for the medium kind"
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "description",
          "aliases": [
            "MediumKindDescription",
            "Name",
            "Descr"
          ],
          "description": "Human-readable description/name of the medium kind"
        },
        {
          "name": "MediumTypeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MediumType",
            "MediumType_Id"
          ],
          "description": "Reference to MediumType (associates this kind with a broader medium type)"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "external_id",
          "aliases": [
            "DataMartKey",
            "DM_Key"
          ],
          "description": "Legacy / data-mart numeric key (nullable). Used for external DW mapping."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "DataMartTable",
            "DM_Table"
          ],
          "description": "Name of the external data-mart table this record maps to (nullable)"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "external_id",
          "aliases": [
            "DataMartCharKey",
            "DM_CharKey"
          ],
          "description": "Legacy / data-mart character key (nullable). Used for external DW mapping."
        }
      ]
    },
    {
      "name": "Medium Type",
      "source": "dbo.MediumType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Medium Type",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "DMCharKey"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MediumTypeID",
            "TypeID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the medium type."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "MediumTypeName",
            "Description"
          ],
          "description": "Human-friendly name/description of the medium type (e.g., Internet, Print)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "DM_Id"
          ],
          "description": "Legacy numeric key used by a data migration or external system (mostly empty)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DM_Table"
          ],
          "description": "Name of the source/legacy table referenced by data migration processes (nullable)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "DataMigrationCharKey",
            "DM_StringKey"
          ],
          "description": "Legacy composite/string key used for data-migration or cross-reference (nullable)."
        }
      ]
    },
    {
      "name": "Medium Version",
      "source": "dbo.MediumVersion",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Medium Version",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID",
          "DMCharKey"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MediumVersionID",
            "ID"
          ],
          "description": "Unique identifier for the specific version/edition of a medium."
        },
        {
          "name": "MediumID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "Medium_ID",
            "ParentMediumID"
          ],
          "description": "Reference to the parent Medium (dbo.Medium.ID). Links this version to the Medium master record."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "VersionCode",
            "ShortCode"
          ],
          "description": "Short code or numeric code that identifies the version (business code)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "VersionName",
            "Title"
          ],
          "description": "Business name of the medium version (e.g., BUSINESS TO BUSINESS). Used as the primary display label."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Details",
            "VersionDescription"
          ],
          "description": "Longer description of the medium version, for display and reporting."
        },
        {
          "name": "Year",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "EditionYear",
            "YearCode"
          ],
          "description": "Year associated with this version (often a 2-digit or business-year code)."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "Created",
            "CreatedDate"
          ],
          "description": "Date and time when this medium version record was created."
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Creator",
            "CreatedByUser"
          ],
          "description": "User or system account that created the record."
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "Modified",
            "ModifiedDate"
          ],
          "description": "Date and time when this medium version record was last modified."
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Modifier",
            "ModifiedByUser"
          ],
          "description": "User or system account that last modified the record."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active"
          ],
          "description": "Flag indicating whether this medium version is active (true) or inactive (false)."
        },
        {
          "name": "ImportContractsStartDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ContractsImportStart",
            "ImportStartDate"
          ],
          "description": "Start date used when importing contracts for this medium version."
        },
        {
          "name": "ImportContractsEndDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ContractsImportEnd",
            "ImportEndDate"
          ],
          "description": "End date used when importing contracts for this medium version."
        },
        {
          "name": "SalesEndDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "EndOfSales",
            "SalesEnd"
          ],
          "description": "Date when sales for this version ended (nullable)."
        },
        {
          "name": "ChangesCompletionDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ChangesCompleteDate",
            "ChangeCompletion"
          ],
          "description": "Date when planned changes for this version were completed."
        },
        {
          "name": "PublishDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "PublicationDate",
            "PublishedOn"
          ],
          "description": "Date when the medium version was published (nullable)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "DM_Id"
          ],
          "description": "Numeric data-migration key from a legacy system (mostly null)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DM_Table"
          ],
          "description": "Legacy table identifier used by the migration process (example: DirectoryID-DR10_Code)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "DataMigrationCharKey",
            "DM_StringKey"
          ],
          "description": "Composite/string key used by the migration process (example values: '1-14', '1-15')."
        }
      ]
    },
    {
      "name": "Message",
      "source": "dbo.Message",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Message",
        "default_label_column": "Title",
        "default_search_columns": [
          "Title",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Title",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MessageID",
            "MsgID",
            "ID"
          ],
          "description": "Primary key: unique identifier for the message record (integer)."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "MessageCode",
            "CodeID",
            "MsgCode"
          ],
          "description": "Short business code for the message (string). Often used for quick lookups or mapping to external message catalogs."
        },
        {
          "name": "Title",
          "role": "label",
          "semantic_type": "short_text",
          "aliases": [
            "MessageTitle",
            "Subject",
            "TitleText"
          ],
          "description": "Brief, human-readable title of the message (sample values are in Greek). Used as the primary display label for the message."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "MessageDescription",
            "Body",
            "Details"
          ],
          "description": "Full descriptive text of the message (longer text, sample values in Greek). Explains the message content or instructions."
        }
      ]
    },
    {
      "name": "PaymentMethodType",
      "source": "dbo.PaymentMethodType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Payment Method Type",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "DMTable"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "PaymentMethodTypeID",
            "PMTID",
            "ID"
          ],
          "description": "Primary key: unique identifier for the payment method type (integer)."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "short_text",
          "aliases": [
            "Name",
            "Label",
            "DescriptionText"
          ],
          "description": "Human-readable name or description of the payment method type (often in Greek). May be null for many records (high null rate). Used as the display label."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsEnabled",
            "Enabled"
          ],
          "description": "Flag indicating whether this payment method type is currently active."
        },
        {
          "name": "InstallmentSequence",
          "role": "attribute",
          "semantic_type": "list_of_integers_as_string",
          "aliases": [
            "Installments",
            "InstallmentTerms",
            "InstallmentSequenceString"
          ],
          "description": "Comma-separated list of allowed installment counts (e.g. '1,2,3,4'). Nullable and frequently empty; represents available installment options for this payment method."
        },
        {
          "name": "AdvancedPaymentPermited",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "AdvancedPaymentPermitted",
            "PermitsAdvancePayment",
            "AdvancePermitted"
          ],
          "description": "Flag indicating whether advanced/prepaid payments are permitted for this payment method type."
        },
        {
          "name": "PaymentWay",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [
            "PaymentWayCode",
            "PaymentCategory",
            "Way"
          ],
          "description": "Numeric code representing the payment way/category (e.g. sample values include 1, 5). Interpreted as an enumerated type in business logic."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "external_reference_id",
          "aliases": [
            "DataMapKey",
            "DM_Id",
            "MappingKey"
          ],
          "description": "Integer key used for data-migration or mapping to an external system. Mostly null in the current dataset."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "external_table_name",
          "aliases": [
            "DataMapTable",
            "DM_Table",
            "MappingTable"
          ],
          "description": "Name of the external mapping table/system used for data migration or synchronization (e.g. 'DPS2YPSPaymentMethodTypeMapping'). Frequently null."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "external_reference_text",
          "aliases": [
            "DMChar",
            "DM_CharKey",
            "MappingCharKey"
          ],
          "description": "Character/string key used for external mapping. Currently all null in samples."
        },
        {
          "name": "AdvancedPaymentAvailable",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "AdvanceAvailable",
            "HasAdvancedPayment",
            "AdvancedAvailable"
          ],
          "description": "Flag that indicates whether advanced payment functionality is available for this payment method type (distinct from permitted flag)."
        },
        {
          "name": "SubscriptionPaymentMethodTypeId",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SubscriptionPMTID",
            "SubscriptionPaymentMethod",
            "SubscriptionTypeId"
          ],
          "description": "Optional foreign key referencing a subscription-specific payment method type (self-referential to PaymentMethodType.ID). Often null; used to link a regular payment method type to its subscription variant."
        }
      ]
    },
    {
      "name": "Payment Method",
      "source": "dbo.PaymentMethod",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Payment Method",
        "default_label_column": "ID",
        "default_search_columns": [
          "ID",
          "PaymentPhoneAccount",
          "PaymentPhoneID",
          "PaymentCreditTransactionCode"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "PaymentMethodID",
            "PMID",
            "ID"
          ],
          "description": "Unique identifier for the payment method record."
        },
        {
          "name": "PaymentMethodTypeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "PaymentTypeID",
            "PaymentMethodType"
          ],
          "description": "Reference to the type of payment method. Foreign key to dbo.PaymentMethodType.ID."
        },
        {
          "name": "Installments",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InstallmentCount",
            "NoOfInstallments"
          ],
          "description": "Number of installments for the payment (e.g., 1 for a single payment)."
        },
        {
          "name": "Interval",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InstallmentInterval",
            "IntervalMonths"
          ],
          "description": "Interval between installments (units depend on business rules, commonly months)."
        },
        {
          "name": "PaymentMonth",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [
            "ScheduledPaymentMonth",
            "PaymentDueMonth"
          ],
          "description": "Optional scheduled month for the payment. Nullable when not specified."
        },
        {
          "name": "AdvancedPayment",
          "role": "attribute",
          "semantic_type": "currency",
          "aliases": [
            "Prepayment",
            "AdvanceAmount"
          ],
          "description": "Amount paid in advance toward this payment method (monetary value)."
        },
        {
          "name": "IsExchangeSale",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ExchangeSaleFlag",
            "IsExchange"
          ],
          "description": "Flag indicating whether this payment is related to an exchange sale."
        },
        {
          "name": "PaymentPhoneAccount",
          "role": "attribute",
          "semantic_type": "phone",
          "aliases": [
            "PhoneAccount",
            "PhoneAccountNumber"
          ],
          "description": "Phone/account identifier used for phone-based payments (may be empty or null)."
        },
        {
          "name": "PaymentPhoneID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "PointPhoneID",
            "PhoneID"
          ],
          "description": "Reference to the phone/point-of-payment record. Foreign key to dbo.PointPhone.ID."
        },
        {
          "name": "PaymentCreditTransactionCode",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "CreditTransactionCode",
            "TxnCode"
          ],
          "description": "Provider/processor credit transaction code for the payment (internal tracking)."
        },
        {
          "name": "BillingEmailID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "BillingEmail",
            "ContactEmailID",
            "EmailID"
          ],
          "description": "Reference to the billing contact email. Foreign key to dbo.ContactEmail.ID."
        },
        {
          "name": "NumberOfInvoices",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InvoiceCount",
            "NoOfInvoices"
          ],
          "description": "Number of invoices generated for this payment method (typically 0 or more)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "DM_Key"
          ],
          "description": "Numeric key used by data migration processes to link migrated records back to source."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DM_Table"
          ],
          "description": "Source table name used during data migration (identifies origin of the migrated row)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character key used by data migration to identify source record (nullable)."
        },
        {
          "name": "UserSpecifiedPaymentMonth",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "PaymentMonthSpecified",
            "UserPaymentMonthFlag"
          ],
          "description": "Flag indicating whether the payment month was explicitly specified by a user."
        }
      ]
    },
    {
      "name": "Price List Measurement Type",
      "source": "dbo.PriceListMeasurementType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Price List Measurement Type",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MeasurementTypeID",
            "PLMTypeID",
            "ID"
          ],
          "description": "Unique identifier for the measurement type used on price lists."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "Label",
            "Description"
          ],
          "description": "Human-readable name/description of the measurement type (e.g., '100/άδα', 'Μήνας')."
        },
        {
          "name": "AdvertisementEndDateFactor",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "AdEndDateFactor",
            "EndDateFactor"
          ],
          "description": "Factor used when calculating advertisement end date (business-specific multiplier)."
        },
        {
          "name": "CalculateUsingQuantity",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "CalcUsingQty",
            "UseQuantityInCalc"
          ],
          "description": "Flag indicating whether price calculations for this measurement type use quantity."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Enabled",
            "IsActive"
          ],
          "description": "Indicator whether this measurement type is currently active and available for use."
        }
      ]
    },
    {
      "name": "Pricelist Item",
      "source": "dbo.PricelistItem",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Pricelist Item",
        "default_label_column": "ProductID",
        "default_search_columns": [
          "ProductID",
          "VersionSectionID",
          "ID"
        ],
        "default_sort": {
          "column": "ProductID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "PricelistItemID",
            "ID",
            "PK_ID"
          ],
          "description": "Primary key: unique identifier for the pricelist item row."
        },
        {
          "name": "VersionSectionID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [
            "VersionSectionId",
            "VersionID",
            "SectionID"
          ],
          "description": "Reference to the versioned section that groups pricelist items."
        },
        {
          "name": "ProductID",
          "role": "foreign_key",
          "semantic_type": "product_id",
          "aliases": [
            "ProductId",
            "ProdID",
            "ItemProductID"
          ],
          "description": "Reference to the product associated with this pricelist item."
        },
        {
          "name": "ApplyToSection",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ApplyToSectionFlag",
            "ApplySection"
          ],
          "description": "Boolean flag: when true the price applies to the whole section."
        },
        {
          "name": "ApplyToSubSection",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ApplyToSubSectionFlag",
            "ApplySubSection"
          ],
          "description": "Boolean flag: when true the price applies to sub-sections of the section."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMapKey",
            "DM_Key"
          ],
          "description": "Data-mapping numeric key (appears unused / all null in samples)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapTable",
            "DM_Table"
          ],
          "description": "Data-mapping table name (appears unused / all null in samples)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapCharKey",
            "DM_CharKey"
          ],
          "description": "Data-mapping character key (appears unused / all null in samples)."
        },
        {
          "name": "IsInactive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Inactive",
            "IsActiveFlag"
          ],
          "description": "Indicator whether this pricelist item is inactive (nullable)."
        }
      ]
    },
    {
      "name": "Pricelist Item Detail",
      "source": "dbo.PricelistItemDetail",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Pricelist Item Detail",
        "default_label_column": "ProductID",
        "default_search_columns": [
          "ProductID",
          "PricelistItemID",
          "ProductPartID",
          "ID"
        ],
        "default_sort": {
          "column": "PricelistItemID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "PricelistItemDetailID",
            "ID",
            "PK_ID"
          ],
          "description": "Primary key: unique identifier for the pricelist item detail row."
        },
        {
          "name": "PricelistItemID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [
            "PricelistItemId",
            "PriceListItemID",
            "ParentPricelistID"
          ],
          "description": "Foreign key to the parent pricelist item."
        },
        {
          "name": "ProductID",
          "role": "foreign_key",
          "semantic_type": "product_id",
          "aliases": [
            "ProductId",
            "ProdID",
            "DetailProductID"
          ],
          "description": "Product referenced in this detail row."
        },
        {
          "name": "ProductPartID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [
            "ProductPartId",
            "PartID",
            "ComponentID"
          ],
          "description": "Optional reference to a product part or sub-component."
        },
        {
          "name": "KitID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [
            "KitId",
            "ProductKitID"
          ],
          "description": "Optional kit identifier (samples show this column unused)."
        },
        {
          "name": "MeasurementType",
          "role": "foreign_key",
          "semantic_type": "lookup_id",
          "aliases": [
            "MeasurementTypeID",
            "MeasureType"
          ],
          "description": "Lookup reference indicating the measurement or pricing type (e.g., unit, weight)."
        },
        {
          "name": "UnitAmount",
          "role": "attribute",
          "semantic_type": "decimal",
          "aliases": [
            "UnitAmount",
            "AmountPerUnit",
            "UnitQty"
          ],
          "description": "Numeric amount associated with the measurement type (decimal, e.g., price or unit quantity)."
        },
        {
          "name": "ComplexPrice",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "ComplexPriceDefinition",
            "Complex_Price"
          ],
          "description": "Serialized complex pricing rules or expression (often empty)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMapKey",
            "DM_Key"
          ],
          "description": "Data-mapping numeric key (appears unused / all null in samples)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapTable",
            "DM_Table"
          ],
          "description": "Data-mapping table name (appears unused / all null in samples)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMapCharKey",
            "DM_CharKey"
          ],
          "description": "Data-mapping character key (appears unused / all null in samples)."
        },
        {
          "name": "AllowableQuantities",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "AllowableQty",
            "AllowedQuantities"
          ],
          "description": "Serialized list or pattern of allowable quantities for this pricing row (nullable / often empty)."
        },
        {
          "name": "AmountsPerAllowableQuantities",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "AmountsPerAllowableQty",
            "AmountsPerAllowedQuantities"
          ],
          "description": "Serialized amounts corresponding to AllowableQuantities (nullable / often empty)."
        }
      ]
    },
    {
      "name": "Product",
      "source": "dbo.Product",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Product",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID",
          "UdacID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ProductID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the product record."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "ProductCode",
            "SKU",
            "Code"
          ],
          "description": "Short product code or SKU used to identify the product (case-sensitive collation)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "ProductName",
            "Name",
            "DisplayName"
          ],
          "description": "Human‑readable product name shown in catalogs and UI."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "ProductDescription",
            "Description"
          ],
          "description": "Longer text describing the product; may contain marketing or bundle details."
        },
        {
          "name": "IsComposite",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "CompositeFlag",
            "IsComposite"
          ],
          "description": "Flag indicating whether this product is composed of other parts (true) or is atomic (false)."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreatedOn"
          ],
          "description": "Timestamp when the product record was created."
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_system_name",
          "aliases": [
            "CreatedByUser",
            "CreatedBy"
          ],
          "description": "User or system account that created the product record."
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "ModifiedOn"
          ],
          "description": "Timestamp of the last modification to the product record."
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "person_or_system_name",
          "aliases": [
            "ModifiedByUser",
            "ModifiedBy"
          ],
          "description": "User or system account that last modified the product record."
        },
        {
          "name": "ProductTypeID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "ProductTypeId",
            "ProductTypeID"
          ],
          "description": "Reference to the product type classification."
        },
        {
          "name": "DiscountPolicyID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "DiscountPolicyId",
            "DiscountPolicyID"
          ],
          "description": "Reference to a discount policy applicable to this product (nullable)."
        },
        {
          "name": "MinMembers",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MinimumMembers",
            "MinMembers"
          ],
          "description": "Minimum number of members/items required when this product is used as a bundle."
        },
        {
          "name": "MaxMembers",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaximumMembers",
            "MaxMembers"
          ],
          "description": "Maximum number of members/items allowed when this product is used as a bundle."
        },
        {
          "name": "TargetValueType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "TargetValueType"
          ],
          "description": "Optional type code used together with TargetValueID to classify target value (currently unused / null)."
        },
        {
          "name": "TargetValueID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "TargetValueId",
            "TargetValueID"
          ],
          "description": "Optional reference to a product part or target entity used by targeting rules."
        },
        {
          "name": "HasOptionalMembers",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "HasOptionalMembers"
          ],
          "description": "Flag indicating if the product bundle can include optional members/items."
        },
        {
          "name": "IsDependent",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "DependentFlag",
            "IsDependent"
          ],
          "description": "Flag indicating if this product depends on other product(s) or context."
        },
        {
          "name": "IsDeleted",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "DeletedFlag",
            "IsDeleted"
          ],
          "description": "Soft-delete flag; true when the product has been marked deleted but retained in the database."
        },
        {
          "name": "UdacID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "UdacId",
            "UdacID"
          ],
          "description": "Reference to the UDAC (unit/activity category) associated with this product."
        },
        {
          "name": "MediumVersionID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "MediumVersionId",
            "MediumVersionID"
          ],
          "description": "Reference to media/version context for which this product record applies."
        },
        {
          "name": "CanvasPlanningGroupID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "CanvasPlanningGroupId",
            "CanvasPlanningGroupID"
          ],
          "description": "Optional reference to a planning group used in canvas or campaign planning."
        },
        {
          "name": "Characterization",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Characterisation",
            "Characterization"
          ],
          "description": "Numeric code describing a product characterization / category (domain-specific)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMigrationKey",
            "DMKey"
          ],
          "description": "Legacy/data-migration key used to link to external or legacy data tables."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DMTable"
          ],
          "description": "Name of the legacy or external table used during data migration or ETL."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationCharKey",
            "DMCharKey"
          ],
          "description": "Character key used in data migration mapping (often a version or char identifier)."
        },
        {
          "name": "NameCIAI",
          "role": "attribute",
          "semantic_type": "locale_independent_name",
          "aliases": [
            "Name_CIAI",
            "NameCIAI"
          ],
          "description": "Accent- and case-insensitive variant of the Name for searches and comparisons."
        },
        {
          "name": "CodeCIAI",
          "role": "attribute",
          "semantic_type": "locale_independent_code",
          "aliases": [
            "Code_CIAI",
            "CodeCIAI"
          ],
          "description": "Accent- and case-insensitive variant of the Code used for matching across locales."
        },
        {
          "name": "LineEditorEnabled",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "LineEditorFlag",
            "LineEditorEnabled"
          ],
          "description": "Flag indicating whether line-level editor features are enabled for this product."
        },
        {
          "name": "MaxAllowedChanges",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaxChanges",
            "MaxAllowedChanges"
          ],
          "description": "Maximum number of allowed changes for the product (0 = no changes allowed)."
        },
        {
          "name": "EnableValidationRules",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ValidationRulesEnabled",
            "EnableValidationRules"
          ],
          "description": "Flag controlling whether validation rules are enforced for this product."
        },
        {
          "name": "EnableKeyphraseCreation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "KeyphraseCreationEnabled",
            "EnableKeyphraseCreation"
          ],
          "description": "Flag indicating whether automated keyphrase creation is enabled for this product."
        },
        {
          "name": "HasPriceRanges",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "PriceRangesEnabled",
            "HasPriceRanges"
          ],
          "description": "Flag indicating whether this product supports price ranges."
        },
        {
          "name": "IsBudgetAmountExcluded",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "BudgetExcluded",
            "IsBudgetAmountExcluded"
          ],
          "description": "Flag indicating whether the product's amount should be excluded from budget calculations."
        }
      ]
    },
    {
      "name": "Product Part Definition",
      "source": "dbo.ProductPartDefinition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Product Part Definition",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ProductPartDefinitionID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the product part definition."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "PartCode",
            "Code"
          ],
          "description": "Short code for the product part definition (locale-specific collation)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "PartName",
            "Name",
            "DisplayName"
          ],
          "description": "Human-readable name of the product part definition (often localized)."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "PartDescription",
            "Description"
          ],
          "description": "Longer descriptive text for the product part definition."
        },
        {
          "name": "UdacPartDefinitionID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "UdacPartDefinitionId",
            "UdacPartDefinitionID"
          ],
          "description": "Reference to the UDAC part definition associated with this part."
        },
        {
          "name": "MediumVersionID",
          "role": "foreign_key",
          "semantic_type": "fk",
          "aliases": [
            "MediumVersionId",
            "MediumVersionID"
          ],
          "description": "Reference to the media/version context for which the part definition applies."
        },
        {
          "name": "SingleAppearance",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "SingleAppearance"
          ],
          "description": "Flag indicating whether this part may appear only once within a bundle or composition."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMigrationKey",
            "DMKey"
          ],
          "description": "Legacy/data-migration numeric key used to map to external systems."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DMTable"
          ],
          "description": "Legacy table name used in migration/ETL processes."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationCharKey",
            "DMCharKey"
          ],
          "description": "Character key used for migration/version mapping; often equals MediumVersionID in examples."
        },
        {
          "name": "EditorType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "EditorType"
          ],
          "description": "Numeric code indicating the editor UI type used for this part (domain-specific enumeration)."
        }
      ]
    },
    {
      "name": "Product Part",
      "source": "dbo.ProductPart",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Product Part",
        "default_label_column": "ID",
        "default_search_columns": [
          "ID",
          "ProductID",
          "ProductPartDefinitionID"
        ],
        "default_sort": {
          "column": "FillOrder",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ProductPartID",
            "PartID",
            "ID"
          ],
          "description": "Surrogate primary key for the product part record."
        },
        {
          "name": "ProductID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ProdID",
            "Product_ID"
          ],
          "description": "Reference to the parent product. Foreign key to dbo.Product.ID."
        },
        {
          "name": "ProductPartDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "PartDefinitionID",
            "ProductPartDefID",
            "PartDefID"
          ],
          "description": "Reference to the part definition (metadata about this part). Foreign key to dbo.ProductPartDefinition.ID."
        },
        {
          "name": "IsAddon",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "AddonFlag",
            "Is_AddOn",
            "IsAddOn"
          ],
          "description": "Indicates whether this product part is an add-on (true) or part of the base product (false)."
        },
        {
          "name": "MinOccurence",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MinOccur",
            "MinOccurrence",
            "MinQty"
          ],
          "description": "Minimum number of times this part may occur for the product. Typically 1."
        },
        {
          "name": "MaxOccurence",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaxOccur",
            "MaxOccurrence",
            "MaxQty"
          ],
          "description": "Maximum allowed occurrences of this part for the product. Null or 0 may indicate unlimited in some contexts."
        },
        {
          "name": "PriceMode",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Price_Mode",
            "PricingMode"
          ],
          "description": "Code indicating how the part is priced (e.g., included, additional, per-unit). Stored as integer codes; consult business codebook for values."
        },
        {
          "name": "ContentAttributePermittedValues",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "PermittedValues",
            "ContentAttributeValues"
          ],
          "description": "If defined, lists permitted values for a content attribute associated with this part. Often empty (null) in current data."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "DM_Key"
          ],
          "description": "Legacy / data-migration numeric key. Present when part rows are mapped from an external system; frequently null."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_Table",
            "DMTableName"
          ],
          "description": "Name of the external or legacy table used for data-migration mapping. Typically null for modern records."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_CharKey",
            "DMCharKey"
          ],
          "description": "Character/string key from a legacy or external system used in data-migration scenarios."
        },
        {
          "name": "FillOrder",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DisplayOrder",
            "SortOrder"
          ],
          "description": "Determines ordering / presentation priority of parts within a product. Used as default sort for product parts."
        },
        {
          "name": "ColumnNames",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Columns",
            "ColumnList"
          ],
          "description": "Optional CSV or delimited list of column names relevant to this part (metadata). Commonly null."
        }
      ]
    },
    {
      "name": "Product Type",
      "source": "dbo.ProductType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Product Type",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ProductTypeID",
            "TypeID",
            "ID"
          ],
          "description": "Surrogate identifier for the product type."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "TypeDescription",
            "Name",
            "Description"
          ],
          "description": "Human-readable name or description of the product type (often includes channel or category). Used as the primary display label."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "DM_Key"
          ],
          "description": "Legacy or external-system numeric key for mapping product types; usually null."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_Table",
            "DMTableName"
          ],
          "description": "Name of legacy/external table used as a source for this type mapping. Mostly null in current data."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_CharKey",
            "DMCharKey"
          ],
          "description": "Legacy or external character key used for product type mapping; often null."
        }
      ]
    },
    {
      "name": "Production Color",
      "source": "dbo.ProductionColor",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Production Color",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ColorID",
            "ProductionColorID",
            "ID"
          ],
          "description": "Surrogate primary key: unique identifier for the production color."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "color_name",
          "aliases": [
            "Name",
            "ColorName",
            "Description"
          ],
          "description": "Human-readable name/description of the color (e.g., 'Black', 'Red', 'Orange'). This is the friendly label for the color."
        },
        {
          "name": "Cyan",
          "role": "attribute",
          "semantic_type": "percentage",
          "aliases": [
            "C",
            "CyanPercent",
            "CyanValue"
          ],
          "description": "Cyan component value expressed as an integer percentage (0-100) used for print/production color definitions."
        },
        {
          "name": "Yellow",
          "role": "attribute",
          "semantic_type": "percentage",
          "aliases": [
            "Y",
            "YellowPercent",
            "YellowValue"
          ],
          "description": "Yellow component value expressed as an integer percentage (0-100) used for print/production color definitions."
        },
        {
          "name": "Magenta",
          "role": "attribute",
          "semantic_type": "percentage",
          "aliases": [
            "M",
            "MagentaPercent",
            "MagentaValue"
          ],
          "description": "Magenta component value expressed as an integer percentage (0-100) used for print/production color definitions."
        },
        {
          "name": "Black",
          "role": "attribute",
          "semantic_type": "percentage",
          "aliases": [
            "K",
            "BlackPercent",
            "BlackValue"
          ],
          "description": "Black (Key) component value expressed as an integer percentage (0-100) used for print/production color definitions."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active",
            "Enabled"
          ],
          "description": "Flag indicating whether this color is active/available for selection in production processes."
        },
        {
          "name": "IsDefault",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Default",
            "Is_Default",
            "DefaultFlag"
          ],
          "description": "Flag indicating whether this color is considered a default choice for new items or templates."
        }
      ]
    },
    {
      "name": "Production Font",
      "source": "dbo.ProductionFont",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Production Font",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "FontID",
            "ProductionFontID",
            "ID"
          ],
          "description": "Surrogate primary key: unique identifier for the production font."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "font_name",
          "aliases": [
            "Name",
            "FontName",
            "Description"
          ],
          "description": "Human-readable name of the font (e.g., 'UBHelveticaCondeuro'). Used as the display label for the font."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active",
            "Enabled"
          ],
          "description": "Flag indicating whether this font is active/available for selection in production processes."
        },
        {
          "name": "IsDefault",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Default",
            "Is_Default",
            "DefaultFlag"
          ],
          "description": "Flag indicating whether this font is considered the default for new items or templates."
        }
      ]
    },
    {
      "name": "Production Case Product",
      "source": "dbo.ProductionCaseProduct",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Production Case Product",
        "default_label_column": "PricelistItemID",
        "default_search_columns": [
          "PricelistItemID",
          "CaseID",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ProdCaseProductID",
            "ProductionCaseProductID",
            "ID"
          ],
          "description": "Surrogate primary key for the ProductionCaseProduct record (unique identifier)."
        },
        {
          "name": "CaseID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "CaseId",
            "FK_Case",
            "ProductionCaseID"
          ],
          "description": "Foreign key referencing the production case (dbo.Case.ID). Identifies the case/order this product is associated with."
        },
        {
          "name": "PricelistItemID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "PriceListItemId",
            "PricelistItem",
            "ProductPricelistItemID"
          ],
          "description": "Foreign key referencing the pricelist item or product definition (dbo.PricelistItem.ID). Represents which product/pricelist entry is part of the case."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integration_id",
          "aliases": [
            "DataMartKey",
            "DM_Key",
            "DMKeyId"
          ],
          "description": "Numeric key used by downstream data mart / integration processes to link or reconcile this row with external systems."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DM_Table",
            "DataMartTable",
            "DMTableName"
          ],
          "description": "Name of the source/target table used by data-mart or ETL processes. Useful for integration lineage and processing rules."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "DM_CharKey",
            "DataMartCharKey",
            "DMChar"
          ],
          "description": "Character key used by integration or reporting processes (alternative to DMKey). Typically used when an alphanumeric identifier is required for external systems."
        }
      ]
    },
    {
      "name": "Production Workflow",
      "source": "dbo.ProductionWorkflow",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Production Workflow",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "Output",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "WorkflowID",
            "ID"
          ],
          "description": "Unique identifier for the workflow entry."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "WorkflowDescription",
            "Name",
            "WorkflowName"
          ],
          "description": "Human-readable name or description of the production workflow (often localized). Used as the display label for the workflow."
        },
        {
          "name": "Output",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "OutputCode",
            "ResultCode",
            "WorkflowOutput"
          ],
          "description": "Short code or abbreviation representing the workflow's output/destination/category. Example values: single-letter codes or short keys."
        }
      ]
    },
    {
      "name": "Role",
      "source": "dbo.Role",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Role",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "LoginUrl"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "RoleID",
            "Role_Id",
            "ID"
          ],
          "description": "Unique identifier for the role"
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "role_name",
          "aliases": [
            "RoleName",
            "Name",
            "Description"
          ],
          "description": "Human-readable name or description of the role (often localized)"
        },
        {
          "name": "Permissions",
          "role": "attribute",
          "semantic_type": "permission_bitmap",
          "aliases": [
            "PermissionBits",
            "AccessRights",
            "PermissionsMask"
          ],
          "description": "Serialized permission bitmask or string that encodes feature/access rights for this role"
        },
        {
          "name": "MaxDiscount",
          "role": "attribute",
          "semantic_type": "decimal",
          "aliases": [
            "MaxDiscountPct",
            "MaximumDiscount",
            "MaxDisc"
          ],
          "description": "Maximum discount allowed for users in this role. Stored as decimal (likely percentage or currency depending on application)"
        },
        {
          "name": "DiscountIsFixedAmount",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "IsDiscountFixed",
            "DiscountFixedAmount",
            "DiscountIsFixedAmount"
          ],
          "description": "Flag indicating whether MaxDiscount is a fixed monetary amount (true) or a percentage (false)"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMartKey",
            "DM_Key",
            "DMKey"
          ],
          "description": "External data-mart integer key mapping (mostly null in sample). Used for reporting/ETL mappings"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartTable",
            "DM_Table",
            "DMTable"
          ],
          "description": "External data-mart table name for mapping (rarely populated)"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey",
            "DMCharKey"
          ],
          "description": "External data-mart character key for mapping (rarely populated)"
        },
        {
          "name": "ForwardFromContractChange",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ForwardOnContractChange",
            "ForwardFromContractChange"
          ],
          "description": "Flag indicating whether items (e.g., notifications or tasks) should be forwarded when a contract changes"
        },
        {
          "name": "ForwardInternalProduct",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ForwardOnInternalProduct",
            "ForwardInternalProduct"
          ],
          "description": "Flag controlling forwarding behavior for internal product-related events"
        },
        {
          "name": "ForwardTicketType",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ForwardOnTicketType",
            "ForwardTicketType"
          ],
          "description": "Flag indicating whether tickets of certain types should be forwarded for this role"
        },
        {
          "name": "LoginUrl",
          "role": "attribute",
          "semantic_type": "url",
          "aliases": [
            "LoginURL",
            "LoginLink",
            "RoleLoginUrl"
          ],
          "description": "Optional URL template or link used when a user with this role logs in (may include placeholder tokens like @userid)"
        },
        {
          "name": "ParentID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ParentRoleID",
            "Parent_ID",
            "ParentRole"
          ],
          "description": "Identifier of the parent role (self-referencing hierarchy). Points to dbo.Role.ID"
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActive",
            "ActiveFlag"
          ],
          "description": "Flag indicating whether the role is active and can be assigned to users"
        },
        {
          "name": "InboxViewType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InboxView",
            "InboxType",
            "InboxViewType"
          ],
          "description": "Numeric code indicating default inbox view/type for users with this role (enumeration)"
        }
      ]
    },
    {
      "name": "Rule Condition Operand",
      "source": "dbo.RuleConditionOperand",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Rule Condition Operand",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Text",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "OperandID",
            "ID"
          ],
          "description": "Unique identifier for the operand (used in rule engine)"
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "code",
          "aliases": [
            "OperatorName",
            "Name"
          ],
          "description": "Canonical (usually English) name of the operand/operator (e.g., EQUALS, IN)"
        },
        {
          "name": "Text",
          "role": "attribute",
          "semantic_type": "localized_text",
          "aliases": [
            "DisplayText",
            "LocalizedText",
            "Text"
          ],
          "description": "Localized/display text for the operand suitable for UI (sample values show Greek translations)"
        },
        {
          "name": "OperandAsSQL",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "SQLCode",
            "OperandAsSQL",
            "SqlOperandCode"
          ],
          "description": "Numeric code or mapping used to translate the operand into SQL or internal evaluation logic"
        }
      ]
    },
    {
      "name": "Rule Condition Definition",
      "source": "dbo.RuleConditionDefinition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Rule Condition Definition",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Text",
          "ID",
          "RuleDefinitionID",
          "ColumnID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "Id",
            "RuleConditionID",
            "ConditionID"
          ],
          "description": "Surrogate primary key. Unique identifier for the rule condition definition."
        },
        {
          "name": "RuleDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "RuleDefID",
            "RuleID",
            "RDID"
          ],
          "description": "References the parent rule definition (dbo.RuleDefinition.ID). Associates this condition with a rule."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "ConditionName",
            "ConditionLabel",
            "Name_EN"
          ],
          "description": "Short human-readable identifier for the condition. Used as the primary display label for the condition."
        },
        {
          "name": "Text",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Description",
            "LocalizedText",
            "LabelText"
          ],
          "description": "Localized descriptive text for the condition (often displayed to users). Appears to contain Greek language text in this dataset."
        },
        {
          "name": "ColumnID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SQLColumnID",
            "ColumnRefID",
            "ColID"
          ],
          "description": "References a column definition in dbo.SQLColumn (dbo.SQLColumn.ID). Indicates which data column the condition applies to."
        },
        {
          "name": "ConditionType",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [
            "Type",
            "ConditionTypeCode"
          ],
          "description": "Numeric code representing the kind of condition (e.g., equality, range, lookup). Small set of discrete values."
        },
        {
          "name": "LookupTableID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "LookupID",
            "LookupObjectID",
            "ReferenceTableID"
          ],
          "description": "Optional reference to a lookup object/table (dbo.SQLObject.ID). Used when the condition compares against a lookup set."
        },
        {
          "name": "FromDefaultValue",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "FromDefault",
            "DefaultFromValue"
          ],
          "description": "Optional default lower-bound or 'from' value for range-style conditions. Nullable."
        },
        {
          "name": "ToDefaultValue",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "ToDefault",
            "DefaultToValue"
          ],
          "description": "Optional default upper-bound or 'to' value for range-style conditions. Nullable (currently entirely null in samples)."
        },
        {
          "name": "ConditionCategory",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [
            "Category",
            "ConditionCategoryID"
          ],
          "description": "Optional category/classification code for the condition. Mostly null in the observed data."
        }
      ]
    },
    {
      "name": "Rule Definition",
      "source": "dbo.RuleDefinition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Rule Definition",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Text",
          "ID",
          "RuleEditor"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "Id",
            "RuleDefinitionID",
            "RuleID"
          ],
          "description": "Surrogate primary key. Unique identifier for the rule definition."
        },
        {
          "name": "RuleType",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [
            "Type",
            "RuleTypeCode"
          ],
          "description": "Numeric code indicating the rule type (e.g., validation, transformation). Small set of known values."
        },
        {
          "name": "SourceObjectID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SourceID",
            "SourceObject",
            "SourceObjectRef"
          ],
          "description": "References the source object in dbo.SQLObject (dbo.SQLObject.ID). Identifies the object/table the rule applies to."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "RuleName",
            "DisplayName"
          ],
          "description": "Human-friendly name for the rule. Used as the primary display label for rules."
        },
        {
          "name": "Text",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Description",
            "LocalizedText"
          ],
          "description": "Localized descriptive text for the rule (often displayed to users). Contains Greek text in samples."
        },
        {
          "name": "RuleDefinitionCategory",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [
            "Category",
            "RuleCategory",
            "RuleDefinitionCategoryID"
          ],
          "description": "Category code for the rule definition. Used to group rules into predefined categories."
        },
        {
          "name": "RuleEditor",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "EditorID",
            "ModifiedBy",
            "RuleOwner"
          ],
          "description": "Identifier of the editor/authoring tool or user responsible for the rule. Referenced as an integer code."
        },
        {
          "name": "RuleExpression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Expression",
            "RuleLogic",
            "RuleScript"
          ],
          "description": "Optional textual expression or serialized logic for the rule (e.g., formula or script). Mostly null in current samples."
        }
      ]
    },
    {
      "name": "RuleMaster",
      "source": "dbo.RuleMaster",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Rules",
        "default_label_column": "Code",
        "default_search_columns": [
          "Code",
          "Expression",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "RuleID",
            "MasterID",
            "ID"
          ],
          "description": "Primary key: unique identifier for the rule record."
        },
        {
          "name": "RuleCategory",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Category",
            "RuleType",
            "RuleCategoryID"
          ],
          "description": "Categorization of the rule (small domain of values). Represents the business grouping or type for the rule."
        },
        {
          "name": "RuleContextEntityID",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "ContextEntityID",
            "EntityContextID",
            "RuleContextID"
          ],
          "description": "Identifier of the entity/context this rule applies to (references the business entity/context)."
        },
        {
          "name": "RuleDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "DefinitionID",
            "RuleDefID",
            "RuleDefinitionID"
          ],
          "description": "Foreign key to the rule definition record that provides the formal definition/metadata for this rule."
        },
        {
          "name": "Code",
          "role": "label",
          "semantic_type": "code",
          "aliases": [
            "RuleCode",
            "ShortCode",
            "Code"
          ],
          "description": "Short business code or mnemonic for the rule (used as the primary display label). Examples: CSS_CHANNEL_TYPEID, CSS_IN_CAMPAIGN."
        },
        {
          "name": "Expression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "RuleExpression",
            "Condition",
            "Expression"
          ],
          "description": "Logical expression or textual definition used by the rule. Can contain code-like tokens, conditions, or human-readable descriptions."
        },
        {
          "name": "Quantity",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Qty",
            "Count",
            "Quantity"
          ],
          "description": "Numeric value associated with the rule, often used as a count, threshold or indicator (small integer domain)."
        },
        {
          "name": "SQLCommandID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SQLID",
            "SQLCommandRef",
            "SQLCommandID"
          ],
          "description": "Optional foreign key to an SQL command record that can be executed by this rule. Null indicates no associated SQL command."
        },
        {
          "name": "State",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Status",
            "ActiveFlag",
            "State"
          ],
          "description": "Record state or status flag (for example active/inactive). Small integer enumerating lifecycle state of the rule."
        }
      ]
    },
    {
      "name": "SequenceGenerator",
      "source": "dbo.SequenceGenerator",
      "primary_key": [
        "Code"
      ],
      "display": {
        "display_name": "Sequence Generator",
        "default_label_column": "Description",
        "default_search_columns": [
          "Code",
          "Description",
          "DMTable"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "Code",
          "role": "primary_key",
          "semantic_type": "code",
          "aliases": [
            "SeqCode",
            "SequenceCode",
            "Code"
          ],
          "description": "Unique code that identifies the sequence generator. Used as the primary lookup key for the sequence configuration."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "SeqDescription",
            "Description",
            "Label"
          ],
          "description": "Human-friendly description of what the sequence generator is used for (display label)."
        },
        {
          "name": "SeqNo",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "CurrentValue",
            "SequenceNumber",
            "SeqNo"
          ],
          "description": "Current numeric value of the sequence (next or current sequence number depending on implementation)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataModelKey",
            "DMKey",
            "RelatedKey"
          ],
          "description": "Optional numeric key linking the sequence to a specific data model record or business entity identifier."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelTable",
            "TableName",
            "DMTable"
          ],
          "description": "Optional name of the target table in the data model that this sequence is associated with."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataModelCharKey",
            "CharKey",
            "DMCharKey"
          ],
          "description": "Optional character key or composite key value used to associate the sequence with a non-numeric business identifier."
        }
      ]
    },
    {
      "name": "SQL Command",
      "source": "dbo.SQLCommand",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "SQL Command",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CommandID",
            "CmdID",
            "ID"
          ],
          "description": "Unique identifier for the SQL command."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "CommandName",
            "SQLCommandName",
            "Name"
          ],
          "description": "Short internal name or code for the command (used as the default display label)."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "CmdDescription",
            "Details",
            "Description"
          ],
          "description": "Human-readable description of what the command does or when to use it."
        },
        {
          "name": "CommandType",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Type",
            "CmdType",
            "CommandType"
          ],
          "description": "Numeric code indicating the command type or execution category (enumeration)."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreatedTimestamp",
            "CreatedOn"
          ],
          "description": "Date and time when the command record was created."
        },
        {
          "name": "CommandCategory",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Category",
            "CmdCategory",
            "CommandCategory"
          ],
          "description": "Numeric category grouping for the command (business-defined classification)."
        }
      ]
    },
    {
      "name": "SQL Object",
      "source": "dbo.SQLObject",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "SQL Object",
        "default_label_column": "Text",
        "default_search_columns": [
          "Name",
          "Text",
          "Alias",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ObjectID",
            "ID"
          ],
          "description": "Unique identifier for the SQL object (surrogate key)."
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [
            "ObjectName",
            "SystemName",
            "Name"
          ],
          "description": "Technical/system name of the object (e.g., CanvasStage1AddressSale). Useful for lookups and joins."
        },
        {
          "name": "Text",
          "role": "label",
          "semantic_type": "display_name",
          "aliases": [
            "DisplayText",
            "FriendlyName",
            "Text"
          ],
          "description": "Human-friendly display text for the object (used as the primary label in UIs)."
        },
        {
          "name": "ObjectType",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Type",
            "ObjType",
            "ObjectType"
          ],
          "description": "Numeric code indicating the kind of object (for example: 0 = table-like, 2 = view/other)."
        },
        {
          "name": "Alias",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "ShortName",
            "ObjectAlias",
            "Alias"
          ],
          "description": "Short alias or shorthand identifier for the object (useful in queries or UI shortcuts)."
        }
      ]
    },
    {
      "name": "SQL Column",
      "source": "dbo.SQLColumn",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "SQL Column",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Text",
          "ColumnType"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "SqlColumnID",
            "ColID",
            "ID"
          ],
          "description": "Surrogate primary key for this column record (unique identifier within dbo.SQLColumn)."
        },
        {
          "name": "SQLObjectID",
          "role": "foreign_key",
          "semantic_type": "reference_id",
          "aliases": [
            "ObjectID",
            "SQLObject_Id",
            "ParentObjectID"
          ],
          "description": "Reference to the SQL object (table/view/proc) that owns this column. Foreign key to dbo.SQLObject.ID."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "sql_identifier",
          "aliases": [
            "ColumnName",
            "ColName",
            "Name"
          ],
          "description": "Logical name of the column (identifier used in the SQL object). Commonly used as the primary display label for this entity."
        },
        {
          "name": "Text",
          "role": "attribute",
          "semantic_type": "sql_identifier",
          "aliases": [
            "ColumnText",
            "DisplayText",
            "Text"
          ],
          "description": "Human readable or alternative text for the column; often matches Name but can hold display/description text."
        },
        {
          "name": "ColumnType",
          "role": "attribute",
          "semantic_type": "data_type",
          "aliases": [
            "DataType",
            "Type",
            "ColumnDataType"
          ],
          "description": "SQL data type family for the column (e.g., INT, NVARCHAR)."
        },
        {
          "name": "Length",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Size",
            "MaxLength",
            "Length"
          ],
          "description": "Declared length/size for the column when applicable (for character types or precision where relevant)."
        },
        {
          "name": "UserDataType",
          "role": "attribute",
          "semantic_type": "sql_definition_text",
          "aliases": [
            "Nullability",
            "Constraint",
            "UserDataType"
          ],
          "description": "Additional column definition details such as nullability or user-defined type information (e.g., 'NOT NULL')."
        }
      ]
    },
    {
      "name": "SQL Command Text",
      "source": "dbo.SQLCommandText",
      "primary_key": [
        "SQLCommandID"
      ],
      "display": {
        "display_name": "SQL Command Text",
        "default_label_column": "FreeSQLText",
        "default_search_columns": [
          "FreeSQLText",
          "SQLCommandID"
        ],
        "default_sort": {
          "column": "SQLCommandID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "SQLCommandID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CommandID",
            "SQLCmdID",
            "SQLCommandID"
          ],
          "description": "Identifier for the SQL command; primary key of this table and a foreign key referencing dbo.SQLCommand.ID (represents the command that owns this free-form SQL text)."
        },
        {
          "name": "FreeSQLText",
          "role": "label",
          "semantic_type": "sql_text",
          "aliases": [
            "SQLText",
            "CommandText",
            "FreeSQLText"
          ],
          "description": "Free-form SQL text associated with the SQL command (full SQL script or fragment stored as NVARCHAR). Useful for searching and display."
        }
      ]
    },
    {
      "name": "SQL Select List Item",
      "source": "dbo.SQLSelectList",
      "primary_key": [
        "SQLSelctStatementID",
        "ColumnID"
      ],
      "display": {
        "display_name": "SQL Select List Item",
        "default_label_column": "Alias",
        "default_search_columns": [
          "Alias",
          "ColumnID",
          "SQLSelctStatementID"
        ],
        "default_sort": {
          "column": "ColumnID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "SQLSelctStatementID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "SQLSelectStatementID",
            "SQLCommandID",
            "SelectStmtID"
          ],
          "description": "Identifier of the parent SELECT statement (FK to dbo.SQLSelectStatement.SQLCommandID)."
        },
        {
          "name": "ColumnID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "ColID",
            "SQLColumnID",
            "ColumnRef"
          ],
          "description": "Identifier of the referenced column definition (FK to dbo.SQLColumn.ID)."
        },
        {
          "name": "Alias",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "ColumnAlias",
            "AS",
            "AliasName"
          ],
          "description": "Optional alias applied to the column in the SELECT list (the name after AS)."
        }
      ]
    },
    {
      "name": "SQL Select Statement",
      "source": "dbo.SQLSelectStatement",
      "primary_key": [
        "SQLCommandID"
      ],
      "display": {
        "display_name": "SQL Select Statement",
        "default_label_column": "FreeSQLText",
        "default_search_columns": [
          "FreeSQLText",
          "SQLCommandID"
        ],
        "default_sort": {
          "column": "SQLCommandID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "SQLCommandID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "CommandID",
            "SQLCmdID"
          ],
          "description": "Unique identifier for this SELECT statement (also FK to dbo.SQLCommand.ID)."
        },
        {
          "name": "RowsToFetch",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "FetchRows",
            "TopN",
            "LimitRows"
          ],
          "description": "Optional limit on number of rows to return for this SELECT (e.g., TOP or LIMIT)."
        },
        {
          "name": "SelectDistinct",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "IsDistinct",
            "DistinctSelect"
          ],
          "description": "Flag indicating whether the SELECT uses DISTINCT to remove duplicate rows."
        },
        {
          "name": "IsCountSelect",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "CountOnly",
            "IsCount"
          ],
          "description": "Flag indicating this SELECT is a COUNT aggregation (returns row count rather than full rows)."
        },
        {
          "name": "FreeSQLText",
          "role": "attribute",
          "semantic_type": "sql",
          "aliases": [
            "CustomSQL",
            "FreeText",
            "RawSQL"
          ],
          "description": "Free-form SQL snippet or custom SELECT text associated with this statement (up to 1024 chars)."
        }
      ]
    },
    {
      "name": "SQL Join Condition",
      "source": "dbo.SQLJoinCondition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "SQL Join Condition",
        "default_label_column": "FreeSQLText",
        "default_search_columns": [
          "FreeSQLText",
          "ID",
          "SQLCommandID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": [
            "primary_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "JoinConditionID",
            "ConditionID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the join condition row."
        },
        {
          "name": "SQLCommandID",
          "role": [
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "SQLCmdID",
            "CommandID",
            "SQLCommand_Id"
          ],
          "description": "Reference to the SQL command (query) this join condition belongs to. Foreign key to dbo.SQLCommand.ID."
        },
        {
          "name": "FreeSQLText",
          "role": [
            "label",
            "attribute"
          ],
          "semantic_type": "sql_text",
          "aliases": [
            "ConditionText",
            "JoinPredicate",
            "PredicateText"
          ],
          "description": "Free-form SQL snippet that expresses the join condition or predicate. Typical content is the ON or WHERE clause fragment that defines the join."
        }
      ]
    },
    {
      "name": "SQL Table Source",
      "source": "dbo.SQLTableSource",
      "primary_key": [
        "SQLCommandID",
        "ObjectID"
      ],
      "display": {
        "display_name": "SQL Table Source",
        "default_label_column": "Alias",
        "default_search_columns": [
          "Alias",
          "SQLCommandID",
          "ObjectID"
        ],
        "default_sort": {
          "column": "SQLCommandID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "SQLCommandID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "SQLCmdID",
            "CommandID",
            "SQLCommand_Id"
          ],
          "description": "Identifier of the SQL command (query) that includes this table source. Part of the composite primary key. Foreign key to dbo.SQLCommand.ID."
        },
        {
          "name": "ObjectID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "TableObjectID",
            "Object_Id",
            "SourceObjectID"
          ],
          "description": "Identifier of the referenced database object (table, view, subquery object). Part of the composite primary key. Foreign key to dbo.SQLObject.ID."
        },
        {
          "name": "Alias",
          "role": [
            "label",
            "attribute"
          ],
          "semantic_type": "text",
          "aliases": [
            "TableAlias",
            "SourceAlias",
            "AliasName"
          ],
          "description": "Optional alias assigned to the table or source in the SQL statement (e.g., 't' in FROM Table AS t). Useful for resolving references in predicates."
        }
      ]
    },
    {
      "name": "SQL Join Condition Rule",
      "source": "dbo.SQLJoinConditionRule",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "SQL Join Condition Rule",
        "default_label_column": "OperandExpression",
        "default_search_columns": [
          "OperandExpression",
          "LeftObjectAlias",
          "RightObjectAlias",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "RuleID",
            "SQLJoinConditionRuleID",
            "ID"
          ],
          "description": "Unique identifier for this join condition rule."
        },
        {
          "name": "SQLJoinConditionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SQLJoinCondition_ID",
            "JoinConditionID"
          ],
          "description": "Foreign key to the parent SQL join condition group (references dbo.SQLJoinCondition.ID)."
        },
        {
          "name": "LeftColumnID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "LeftColID",
            "LColumnID"
          ],
          "description": "Foreign key referencing the left-side column in the join (references dbo.SQLColumn.ID)."
        },
        {
          "name": "LeftObjectAlias",
          "role": "attribute",
          "semantic_type": "alias",
          "aliases": [
            "LeftAlias",
            "L_Alias",
            "LeftObject"
          ],
          "description": "Optional SQL alias/name used in the query for the left-side object (table or derived table)."
        },
        {
          "name": "RightColumnID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "RightColID",
            "RColumnID"
          ],
          "description": "Foreign key referencing the right-side column in the join (references dbo.SQLColumn.ID)."
        },
        {
          "name": "RightObjectAlias",
          "role": "attribute",
          "semantic_type": "alias",
          "aliases": [
            "RightAlias",
            "R_Alias",
            "RightObject"
          ],
          "description": "Optional SQL alias/name used in the query for the right-side object (table or derived table)."
        },
        {
          "name": "OperandExpression",
          "role": "label",
          "semantic_type": "sql_expression",
          "aliases": [
            "Operand",
            "Expression",
            "Operator"
          ],
          "description": "The expression/operator used to compare left and right columns for this rule (e.g., '=', '>', 'LIKE', or a more complex SQL expression)."
        }
      ]
    },
    {
      "name": "SQL Search Condition",
      "source": "dbo.SQLSearchCondition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "SQL Search Condition",
        "default_label_column": "FreeSQLText",
        "default_search_columns": [
          "FreeSQLText",
          "PlaceHolderName",
          "Alias",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "SearchConditionID",
            "ID"
          ],
          "description": "Unique identifier for the search condition."
        },
        {
          "name": "SQLCommandID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SQLCommand_ID",
            "CommandID"
          ],
          "description": "Foreign key to the SQL command or statement this condition belongs to (references dbo.SQLCommand.ID)."
        },
        {
          "name": "FreeSQLText",
          "role": "label",
          "semantic_type": "sql_text",
          "aliases": [
            "SQLText",
            "ConditionText",
            "WhereClause"
          ],
          "description": "Free-form SQL snippet representing the search condition (typically a WHERE clause fragment or predicate)."
        },
        {
          "name": "PlaceHolderName",
          "role": "attribute",
          "semantic_type": "identifier",
          "aliases": [
            "Placeholder",
            "ParamName",
            "PlaceHolder"
          ],
          "description": "Optional placeholder/parameter name used for parameterized conditions (e.g., @Status)."
        },
        {
          "name": "Alias",
          "role": "attribute",
          "semantic_type": "alias",
          "aliases": [
            "CondAlias",
            "ConditionAlias",
            "Name"
          ],
          "description": "Optional user-friendly alias or short name for the search condition."
        }
      ]
    },
    {
      "name": "SQL Search Condition Rule",
      "source": "dbo.SQLSearchConditionRule",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "SQL Search Condition Rule",
        "default_label_column": "OperandExpression",
        "default_search_columns": [
          "LeftObjectAlias",
          "RightObjectAlias",
          "OperandExpression",
          "WhearSearchValue",
          "WhereSearchValueForBetween",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": [
            "primary_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "RuleID",
            "ID"
          ],
          "description": "Unique identifier for this search condition rule."
        },
        {
          "name": "SQLSearchConditionID",
          "role": [
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "SearchConditionID",
            "SQLSearchCondID"
          ],
          "description": "Reference to the parent search condition that groups one or more rules."
        },
        {
          "name": "LeftColumnID",
          "role": [
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "LeftColID",
            "LColumnID"
          ],
          "description": "Reference to the column on the left side of the rule (usually a table column)."
        },
        {
          "name": "LeftObjectAlias",
          "role": [
            "attribute"
          ],
          "semantic_type": "table_alias",
          "aliases": [
            "LeftAlias",
            "LObjAlias"
          ],
          "description": "Optional alias used for the left object/table in the SQL expression (e.g., 't1')."
        },
        {
          "name": "RightColumnID",
          "role": [
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "RightColID",
            "RColumnID"
          ],
          "description": "Reference to the column on the right side of the rule (may be null when using literal values)."
        },
        {
          "name": "RightObjectAlias",
          "role": [
            "attribute"
          ],
          "semantic_type": "table_alias",
          "aliases": [
            "RightAlias",
            "RObjAlias"
          ],
          "description": "Optional alias used for the right object/table in the SQL expression."
        },
        {
          "name": "OperandExpression",
          "role": [
            "attribute",
            "label"
          ],
          "semantic_type": "sql_operator",
          "aliases": [
            "Operator",
            "Expression"
          ],
          "description": "Operator or expression used to compare left and right sides (examples: '=', '<>', 'IN', 'LIKE', 'BETWEEN')."
        },
        {
          "name": "WhearSearchValue",
          "role": [
            "attribute"
          ],
          "semantic_type": "sql_literal",
          "aliases": [
            "WhereSearchValue",
            "SearchValue",
            "WhearValue"
          ],
          "description": "Literal or pattern value used in the WHERE clause for the rule. (Note: column name appears misspelled in source as 'WhearSearchValue'.)"
        },
        {
          "name": "WhereSearchValueForBetween",
          "role": [
            "attribute"
          ],
          "semantic_type": "sql_literal",
          "aliases": [
            "BetweenValue",
            "WhereSearchValueForBetween"
          ],
          "description": "Secondary literal value used when the operand is BETWEEN (upper or lower bound depending on implementation)."
        }
      ]
    },
    {
      "name": "SQL Update Statement",
      "source": "dbo.SQLUpdateStatement",
      "primary_key": [
        "SQLCommandID"
      ],
      "display": {
        "display_name": "SQL Update Statement",
        "default_label_column": "FreeSQLText",
        "default_search_columns": [
          "FreeSQLText",
          "SQLCommandID"
        ],
        "default_sort": {
          "column": "SQLCommandID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "SQLCommandID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "SQLCmdID",
            "CommandID"
          ],
          "description": "Identifier of the SQL command; also a foreign key reference to the parent SQLCommand record."
        },
        {
          "name": "FreeSQLText",
          "role": [
            "attribute",
            "label"
          ],
          "semantic_type": "sql_text",
          "aliases": [
            "FreeText",
            "SQLText",
            "CustomSQL"
          ],
          "description": "Optional free-form SQL text for the UPDATE statement. Used to store custom or raw SQL override for the command."
        }
      ]
    },
    {
      "name": "System Unique Number",
      "source": "dbo.SystemUniqueNum",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "System Unique Number",
        "default_label_column": "ID",
        "default_search_columns": [
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CustID",
            "UniqueNum",
            "SystemID",
            "Seq"
          ],
          "description": "System-generated unique numeric identifier. Monotonic/sequential identifier used to uniquely distinguish rows in the SystemUniqueNum table."
        }
      ]
    },
    {
      "name": "Theamatics",
      "source": "dbo.Theamatics",
      "primary_key": [
        "Name"
      ],
      "display": {
        "display_name": "Theamatics",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "category",
          "aliases": [
            "ThematicName",
            "Theme",
            "CategoryName"
          ],
          "description": "Human-readable name of a thematic category or topic. Stored with Greek case-insensitive collation (Greek_CI_AS). Values appear to be non-null in practice (null_rate: 0.0)."
        }
      ]
    },
    {
      "name": "Unit",
      "source": "dbo.Unit",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Unit",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "DMTable"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "UnitID",
            "UID",
            "ID"
          ],
          "description": "Surrogate primary key: unique identifier for the unit/organizational node."
        },
        {
          "name": "ParentID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ParentUnitID",
            "ParentID",
            "Parent_Unit_ID"
          ],
          "description": "Reference to the parent unit in the unit hierarchy (nullable). Often used to model organizational tree relationships."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "UnitName",
            "Description"
          ],
          "description": "Human readable name or description of the unit (used as the display label)."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreatedAt"
          ],
          "description": "Date and time when the unit record was created."
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Creator",
            "CreatedByUser"
          ],
          "description": "User or process that created the record."
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "ModifiedAt"
          ],
          "description": "Date and time when the unit record was last modified (nullable)."
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "ModifiedByUser",
            "LastModifiedBy"
          ],
          "description": "User who last modified the record (nullable)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active"
          ],
          "description": "Flag indicating whether the unit is active (true) or inactive (false)."
        },
        {
          "name": "ChannelTypeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ChannelTypeID",
            "ChannelID"
          ],
          "description": "Optional reference to channel type (links to ChannelType table)."
        },
        {
          "name": "LeftIndex",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Lft",
            "Left",
            "LeftIndex"
          ],
          "description": "Left index for nested-set representation of the hierarchy (used for fast tree queries)."
        },
        {
          "name": "RightIndex",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Rgt",
            "Right",
            "RightIndex"
          ],
          "description": "Right index for nested-set representation of the hierarchy (used for fast tree queries)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used by data migration/import processes."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DM_Table"
          ],
          "description": "Name of source/table used during data migration or import (nullable)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DMCharKey",
            "DataMigrationCharKey"
          ],
          "description": "Optional character key used by migration tools (nullable)."
        }
      ]
    },
    {
      "name": "User",
      "source": "dbo.User",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "User",
        "default_label_column": "UserName",
        "default_search_columns": [
          "UserName",
          "FirstName",
          "LastName",
          "Email",
          "ID"
        ],
        "default_sort": {
          "column": "UserName",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "UserID",
            "ID"
          ],
          "description": "Unique user identifier (surrogate key)."
        },
        {
          "name": "UserName",
          "role": "label",
          "semantic_type": "account_name",
          "aliases": [
            "Username",
            "Login",
            "User_Name"
          ],
          "description": "User login name / account identifier used to sign-in or reference the user."
        },
        {
          "name": "Password",
          "role": "attribute",
          "semantic_type": "hashed_password",
          "aliases": [
            "PasswordHash",
            "Pwd"
          ],
          "description": "Stored password hash (sensitive). Values appear hashed; original plaintext passwords are not stored."
        },
        {
          "name": "FirstName",
          "role": "attribute",
          "semantic_type": "given_name",
          "aliases": [
            "First_Name",
            "GivenName"
          ],
          "description": "User's given/first name (nullable)."
        },
        {
          "name": "LastName",
          "role": "attribute",
          "semantic_type": "family_name",
          "aliases": [
            "Last_Name",
            "Surname"
          ],
          "description": "User's family/last name."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreatedAt"
          ],
          "description": "Timestamp when the user account was created (nullable)."
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "CreatedByUser",
            "Creator"
          ],
          "description": "User or process that created this account (nullable)."
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "ModifiedAt"
          ],
          "description": "Timestamp when the user account was last modified (nullable)."
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "ModifiedByUser",
            "LastModifiedBy"
          ],
          "description": "User who last modified this account (nullable)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active"
          ],
          "description": "Flag indicating if the user account is active."
        },
        {
          "name": "UnitID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "UnitID",
            "Unit_Id",
            "AssignedUnitID"
          ],
          "description": "Reference to the assigned Unit (organizational/branch). Links the user to a Unit record."
        },
        {
          "name": "SalesCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "SalesCode",
            "Sales_Code"
          ],
          "description": "Optional sales identifier/code associated with the user (nullable)."
        },
        {
          "name": "IsUnitManager",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "UnitManager",
            "Is_Unit_Manager"
          ],
          "description": "Flag indicating whether the user is a manager of the assigned unit."
        },
        {
          "name": "SalesTeleCode",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "SalesTeleCode",
            "TeleSalesCode"
          ],
          "description": "Optional tele-sales code (rarely populated)."
        },
        {
          "name": "Comments",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Notes",
            "Comments"
          ],
          "description": "Free-text comments about the user (nullable)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used by data migration/import processes (nullable)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DM_Table"
          ],
          "description": "Name of source/table used during data migration or import (nullable)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DMCharKey",
            "DataMigrationCharKey"
          ],
          "description": "Optional character key used by migration tools (nullable)."
        },
        {
          "name": "StopSales",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "StopSales",
            "Stop_Sales"
          ],
          "description": "Business flag to indicate if the user is prevented from making sales."
        },
        {
          "name": "Phone",
          "role": "attribute",
          "semantic_type": "phone",
          "aliases": [
            "PhoneNumber",
            "Phone",
            "Mobile"
          ],
          "description": "Primary phone number for the user (nullable)."
        },
        {
          "name": "Email",
          "role": "attribute",
          "semantic_type": "email",
          "aliases": [
            "EmailAddress",
            "Email"
          ],
          "description": "User's email address (nullable). Useful for contact and login recovery."
        },
        {
          "name": "IsPaused",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Paused",
            "Is_Paused"
          ],
          "description": "Flag indicating if the user's account is temporarily paused/suspended."
        }
      ]
    },
    {
      "name": "User Role",
      "source": "dbo.UserRole",
      "primary_key": [
        "UserID",
        "RoleID"
      ],
      "display": {
        "display_name": "User Role",
        "default_label_column": "RoleID",
        "default_search_columns": [
          "UserID",
          "RoleID"
        ],
        "default_sort": {
          "column": "UserID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "UserID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "UserId",
            "UID",
            "User_ID"
          ],
          "description": "Identifier of the user. Part of the composite primary key for this join table. Foreign key referencing dbo.User.ID."
        },
        {
          "name": "RoleID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "RoleId",
            "RID",
            "Role_ID"
          ],
          "description": "Identifier of the role assigned to the user. Part of the composite primary key. Foreign key referencing dbo.Role.ID."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataModelKey",
            "DM_Key",
            "ExternalKey"
          ],
          "description": "Optional numeric key for mapping to an external data model or legacy lookup. Highly sparse in this table."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DM_Table",
            "DataModelTable",
            "ExternalTable"
          ],
          "description": "Name of the external/data-mart table associated with DMKey when present. Mostly null in current data."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DM_CharKey",
            "DMKeyChar",
            "ExternalCharKey"
          ],
          "description": "Optional character/string key for external mapping. No values observed in samples."
        }
      ]
    },
    {
      "name": "VAT Category",
      "source": "dbo.VatCategory",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "VAT Category",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "VatCategoryID",
            "VATID",
            "ID"
          ],
          "description": "Unique identifier for the VAT category."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "VatCode",
            "Code",
            "VAT_Code"
          ],
          "description": "Numeric code representing the VAT regime used in transactions and accounting."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "Name",
            "Description_gr",
            "VatDescription"
          ],
          "description": "Human-readable name/description of the VAT category (sample values are in Greek). Used as the default display label."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataModelKey",
            "DM_Key",
            "ExternalKey"
          ],
          "description": "Optional mapping key to an external data model (e.g., GL04D_VatRegimes). Partially populated."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DM_Table",
            "DataModelTable",
            "ExternalTable"
          ],
          "description": "Name of the external/data-mart table associated with DMKey when present (sample shows GL04D_VatRegimes)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DM_CharKey",
            "DMKeyChar",
            "ExternalCharKey"
          ],
          "description": "Optional character key for external mapping. No values observed in sample data."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag",
            "Enabled"
          ],
          "description": "Boolean flag indicating whether the VAT category is active and available for selection."
        }
      ]
    },
    {
      "name": "Version Section",
      "source": "dbo.VersionSection",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Version Section",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID",
          "DMKey"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "VersionSectionID",
            "VSectionID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the version section."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "SectionCode",
            "Code"
          ],
          "description": "Short code or numeric string that identifies the section (may be business-specific). Nullable."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "title",
          "aliases": [
            "SectionName",
            "Name",
            "Title"
          ],
          "description": "Human-readable name or title of the section. Commonly used as the display label."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "Details",
            "SectionDescription"
          ],
          "description": "Longer textual description or notes about the section. Nullable."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreatedAt"
          ],
          "description": "Timestamp when the section record was created. Nullable."
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "CreatedByUser",
            "CreatedBy"
          ],
          "description": "Name or identifier of the user/process that created the record. Nullable."
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "ModifiedAt"
          ],
          "description": "Timestamp of the last modification to the record. Nullable."
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "ModifiedByUser",
            "ModifiedBy"
          ],
          "description": "Name or identifier of the user/process that last modified the record. Nullable."
        },
        {
          "name": "ParentID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ParentSectionID",
            "ParentID"
          ],
          "description": "Reference to the parent VersionSection (hierarchical relationship). Nullable. FK -> dbo.VersionSection.ID"
        },
        {
          "name": "SeqNo",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "SequenceNumber",
            "SeqNo"
          ],
          "description": "Sequence number used to order sections within the same parent or context."
        },
        {
          "name": "CatalogType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "CatalogType",
            "Type"
          ],
          "description": "Integer code representing the catalog or classification type for the section."
        },
        {
          "name": "VersionGroupItemID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "VersionGroupItemID",
            "VGroupItemID"
          ],
          "description": "Link to a version group item if this section is associated with a group. Nullable. FK -> dbo.VersionGroupItem.ID"
        },
        {
          "name": "MediumVersionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MediumVersionID",
            "MediumID"
          ],
          "description": "Identifier of the medium version that this section belongs to (e.g., edition/version). Not nullable. FK -> dbo.MediumVersion.ID"
        },
        {
          "name": "MasterSectionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MasterSectionID",
            "MasterID"
          ],
          "description": "Reference to a canonical/master section definition if applicable. Nullable. FK -> dbo.MasterSection.ID"
        },
        {
          "name": "HasSuperHeadings",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "HasSuperHeadings",
            "ContainsSuperHeadings"
          ],
          "description": "Flag indicating whether this section contains super-headings or grouped headings."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DMKey",
            "DataMigrationKey"
          ],
          "description": "Legacy/data-migration integer key used to correlate records with the source system. Nullable."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DMTable",
            "SourceTable"
          ],
          "description": "Name of the source table in the data-migration/origin system. Nullable."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DMCharKey",
            "DataMigrationCharKey"
          ],
          "description": "Optional character key from the legacy/source system. Always null in current sample set."
        },
        {
          "name": "Stylesheet",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Stylesheet",
            "CSS"
          ],
          "description": "Optional stylesheet or styling instructions associated with the section. Nullable."
        }
      ]
    },
    {
      "name": "Xac Codes",
      "source": "dbo.Xac",
      "primary_key": [
        "Code"
      ],
      "display": {
        "display_name": "Xac Codes",
        "default_label_column": "Code",
        "default_search_columns": [
          "Code"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "Code",
          "role": "primary_key",
          "semantic_type": "code",
          "aliases": [
            "XacCode",
            "Code"
          ],
          "description": "Numeric classification code. Acts as the primary key for the Xac code list."
        }
      ]
    },
    {
      "name": "Bank",
      "source": "dbo.Bank",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Bank",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "BankID",
            "ID",
            "BK_ID"
          ],
          "description": "Surrogate unique identifier for the bank record."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "organization_name",
          "aliases": [
            "BankName",
            "Name",
            "Description"
          ],
          "description": "Official bank name or description. Values include Greek and Latin script names (e.g., ALPHA BANK, EUROBANK)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag",
            "Enabled"
          ],
          "description": "Flag indicating whether the bank is active (True) or inactive (False)."
        }
      ]
    },
    {
      "name": "Company",
      "source": "dbo.Company",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Company",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CompanyID",
            "ID"
          ],
          "description": "Unique identifier for the company record."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "CompanyCode",
            "Code"
          ],
          "description": "Short company code used internally (e.g., '001', '003'). Often used for quick lookups and mapping."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "organization_name",
          "aliases": [
            "CompanyName",
            "Name",
            "LegalName"
          ],
          "description": "Full company name. Contains Greek and Latin characters and may include legal suffixes."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMartKey",
            "DM_Key"
          ],
          "description": "Nullable numeric key used for mapping to an external data-mart or ETL process. Currently contains no values in sample."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartTable",
            "DM_Table"
          ],
          "description": "Nullable name of the data-mart table used for mapping or ETL. Appears unused in current data (null values)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey",
            "DMCharKey"
          ],
          "description": "Nullable character key used for mapping to an external system. Presently null in samples."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag",
            "Enabled"
          ],
          "description": "Indicator whether the company is active (True) or inactive (False)."
        }
      ]
    },
    {
      "name": "Configuration Parameter",
      "source": "dbo.ConfigurationParameter",
      "primary_key": [
        "Name"
      ],
      "display": {
        "display_name": "Configuration Parameter",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Parameter"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "Name",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ParameterName",
            "ConfigKey",
            "NameKey"
          ],
          "description": "Unique configuration parameter key. Used to identify a specific system/configuration setting (e.g., 'BackOffice.LedgerYear', 'ActivityClassifierID')."
        },
        {
          "name": "Parameter",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Value",
            "ParameterValue",
            "ConfigValue"
          ],
          "description": "The value assigned to the configuration parameter. Stored as text; may contain numeric values, comma-separated lists or strings depending on the parameter."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DimensionKey",
            "DimKey"
          ],
          "description": "Optional numeric key linking this parameter to a reference/dimension table in the data model (when applicable). Many rows are null indicating no mapping."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DimensionTable",
            "DimTable"
          ],
          "description": "Optional name of the dimension/reference table associated with DMKey when the parameter maps to a lookup table (e.g., 'LC01D_Countries')."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DimensionCharKey",
            "DimCharKey"
          ],
          "description": "Optional character key for mapping to a dimension table. Used when the mapping key is non-numeric; typically null for most parameters in this dataset."
        }
      ]
    },
    {
      "name": "Country",
      "source": "dbo.Country",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Country",
        "default_label_column": "DescriptionEn",
        "default_search_columns": [
          "DescriptionEn",
          "Description",
          "Code",
          "TaxNumberCode",
          "CountryTelephoneCode"
        ],
        "default_sort": {
          "column": "DescriptionEn",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CountryID",
            "ID"
          ],
          "description": "Surrogate numeric identifier for the country."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "country_code",
          "aliases": [
            "CountryCode",
            "ISOCode",
            "ISO2"
          ],
          "description": "Short country code (typically ISO 2-letter code, e.g., 'GR', 'CY')."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "country_name_local",
          "aliases": [
            "LocalName",
            "DescriptionLocal",
            "CountryNameLocal"
          ],
          "description": "Country name in the local language (stored in Greek for this dataset). Useful for localised displays."
        },
        {
          "name": "CountryTelephoneCode",
          "role": "attribute",
          "semantic_type": "phone_country_code",
          "aliases": [
            "TelephoneCode",
            "IntlDialCode",
            "CallingCode"
          ],
          "description": "International telephone dialing code for the country (formatted like '0030', '00357'). Some entries may be null."
        },
        {
          "name": "TaxNumberCode",
          "role": "attribute",
          "semantic_type": "tax_code",
          "aliases": [
            "VATPrefix",
            "TaxPrefix",
            "TaxNumberPrefix"
          ],
          "description": "Country-specific tax number prefix or code used for fiscal identifiers (e.g., 'EL' for Greece)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DimensionKey",
            "DimKey"
          ],
          "description": "Optional numeric key referencing a related dimension table (LC01D_Countries). Not populated for all countries."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DimensionTable",
            "DimTable"
          ],
          "description": "Name of the dimension/reference table that DMKey refers to (e.g., 'LC01D_Countries')."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DimensionCharKey",
            "DimCharKey"
          ],
          "description": "Optional character-based key for dimension mapping. Not used in the current sample rows."
        },
        {
          "name": "MinLongitude",
          "role": "attribute",
          "semantic_type": "longitude",
          "aliases": [
            "LongitudeMin",
            "MinLon"
          ],
          "description": "Minimum longitude of the country's bounding box (projected or raw coordinate). Used for simple spatial extent checks."
        },
        {
          "name": "MinLatitude",
          "role": "attribute",
          "semantic_type": "latitude",
          "aliases": [
            "LatitudeMin",
            "MinLat"
          ],
          "description": "Minimum latitude of the country's bounding box (projected or raw coordinate)."
        },
        {
          "name": "MaxLongitude",
          "role": "attribute",
          "semantic_type": "longitude",
          "aliases": [
            "LongitudeMax",
            "MaxLon"
          ],
          "description": "Maximum longitude of the country's bounding box (projected or raw coordinate). Large placeholder values indicate unknown/unspecified extents."
        },
        {
          "name": "MaxLatitude",
          "role": "attribute",
          "semantic_type": "latitude",
          "aliases": [
            "LatitudeMax",
            "MaxLat"
          ],
          "description": "Maximum latitude of the country's bounding box (projected or raw coordinate)."
        },
        {
          "name": "DescriptionEn",
          "role": "label",
          "semantic_type": "country_name",
          "aliases": [
            "EnglishName",
            "Description_EN",
            "CountryName"
          ],
          "description": "Country name in English (preferred label for displays and sorting)."
        }
      ]
    },
    {
      "name": "Credit Card Installment",
      "source": "dbo.CreditCardInstallment",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Credit Card Installment",
        "default_label_column": "Number",
        "default_search_columns": [
          "Number",
          "ID"
        ],
        "default_sort": {
          "column": "Number",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "InstallmentID",
            "ID",
            "CreditCardInstallmentID"
          ],
          "description": "Unique identifier for the credit card installment option"
        },
        {
          "name": "Number",
          "role": "label",
          "semantic_type": "integer",
          "aliases": [
            "InstallmentNumber",
            "Installments",
            "Months"
          ],
          "description": "Number of installments (e.g., 1, 2, 3...) representing how many payments the purchase is split into"
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsEnabled",
            "Enabled"
          ],
          "description": "Indicates whether this installment option is currently available for use"
        }
      ]
    },
    {
      "name": "Credit Card Type",
      "source": "dbo.CreditCardType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Credit Card Type",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "TypeID",
            "CardTypeID",
            "ID"
          ],
          "description": "Unique identifier for the credit card type/brand"
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "CardBrand",
            "Brand",
            "Name"
          ],
          "description": "Human-readable name of the card type or brand (e.g., Visa, Mastercard, Maestro)"
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsEnabled",
            "Enabled"
          ],
          "description": "Flag indicating whether this card type is currently accepted or available"
        }
      ]
    },
    {
      "name": "ERP Collector Bridge (Buffer)",
      "source": "dbo.ErpCollectorBridgeBuffer",
      "primary_key": [
        "CollectorID"
      ],
      "display": {
        "display_name": "ERP Collector Bridge (Buffer)",
        "default_label_column": "FullName",
        "default_search_columns": [
          "FullName",
          "Code",
          "CollectorID"
        ],
        "default_sort": {
          "column": "FullName",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "CollectorID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CollectorId",
            "Collector_Key",
            "ID"
          ],
          "description": "Unique identifier for the collector record in the buffer (surrogate key from source ERP)."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "CollectorCode",
            "ERPCode",
            "ExternalCode"
          ],
          "description": "Collector code as provided by the ERP system (business code / external identifier)."
        },
        {
          "name": "FullName",
          "role": "label",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "CollectorName",
            "Name",
            "DisplayName"
          ],
          "description": "Full descriptive name of the collector (human readable). Often used as the display label for the collector."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active"
          ],
          "description": "Flag indicating whether the collector is active (true) or inactive (false) in the ERP source."
        },
        {
          "name": "LastModifiedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "LastUpdated",
            "UpdateTimestamp"
          ],
          "description": "Timestamp of the last modification of this record in the source ERP."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DW_Key",
            "StagingKey"
          ],
          "description": "Data-mart / warehouse key (destination mapping). Currently null for all rows in the buffer."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartTable",
            "DW_Table"
          ],
          "description": "Name of target data-mart table where this record would be mapped. Presently unused (null)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey",
            "DW_CharKey"
          ],
          "description": "Alternate character key for downstream mapping (string key). Currently unused."
        }
      ]
    },
    {
      "name": "ERP Customer Bridge (Buffer)",
      "source": "dbo.ErpCustomerBridgeBuffer",
      "primary_key": [
        "CustomerID"
      ],
      "display": {
        "display_name": "ERP Customer Bridge (Buffer)",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "BrandName",
          "Code",
          "TaxRegistrationNumber",
          "CustomerID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "CustomerID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "CustomerId",
            "CustID",
            "Customer_Key"
          ],
          "description": "Unique identifier for the customer record in the buffer (surrogate key from source ERP)."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "CustomerCode",
            "ERPCode",
            "ExternalCode"
          ],
          "description": "Primary customer code from the ERP system (business identifier)."
        },
        {
          "name": "AlternativeCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "AltCode",
            "AlternateCustomerCode",
            "LegacyCode"
          ],
          "description": "Alternate or legacy customer code (secondary identifier from ERP). May be null if not provided."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "CustomerName",
            "LegalName",
            "NameFull"
          ],
          "description": "Legal / primary name of the customer (human-readable). Preferred display label for customer records."
        },
        {
          "name": "TaxRegistrationNumber",
          "role": "attribute",
          "semantic_type": "tax_id",
          "aliases": [
            "TaxID",
            "VATNumber",
            "TRN"
          ],
          "description": "Customer tax registration number (VAT or national tax identifier). Used for tax and compliance purposes."
        },
        {
          "name": "TaxOfficeCode",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "TaxOfficeId",
            "TaxOffice",
            "TEF"
          ],
          "description": "Numeric code for the tax office associated with the customer (local tax office identifier)."
        },
        {
          "name": "Occupation",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "BusinessActivity",
            "Industry",
            "OccupationDescription"
          ],
          "description": "Description of the customer's occupation, business activity or trade as recorded in the ERP."
        },
        {
          "name": "KEPYOStatus",
          "role": "attribute",
          "semantic_type": "status",
          "aliases": [
            "KEPYO",
            "KEPYO_Flag"
          ],
          "description": "Numeric status flag related to KEPYO classification (business-specific status code)."
        },
        {
          "name": "VATStatus",
          "role": "attribute",
          "semantic_type": "status",
          "aliases": [
            "VAT_Status",
            "VAT_Flag"
          ],
          "description": "Indicator of VAT registration status; numeric-coded (e.g., 1 = registered)."
        },
        {
          "name": "GLSeqCode",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "GLSeq",
            "GLSequenceCode"
          ],
          "description": "General ledger sequence code used for accounting mapping (ERP-specific GL grouping)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active"
          ],
          "description": "Flag indicating whether the customer is active (true) or inactive (false) in the ERP source."
        },
        {
          "name": "LastModifiedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "LastUpdated",
            "UpdateTimestamp"
          ],
          "description": "Timestamp when the customer record was last modified in the ERP source."
        },
        {
          "name": "LegalForm",
          "role": "attribute",
          "semantic_type": "organization_type",
          "aliases": [
            "CompanyLegalForm",
            "LegalStructure"
          ],
          "description": "Legal form or business type of the customer (e.g., O.E., E.E., sole proprietor)."
        },
        {
          "name": "BrandName",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "TradeName",
            "CommercialName",
            "Brand"
          ],
          "description": "Commercial or brand name of the customer, when different from the legal Name."
        },
        {
          "name": "CompanyId",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "CompanyID",
            "Company_Key",
            "TenantId"
          ],
          "description": "Identifier of the company/tenant owning this ERP dataset. Often constant for single-tenant imports."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DW_Key",
            "StagingKey"
          ],
          "description": "Data-mart / warehouse key (destination mapping). Currently not populated in the buffer."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartTable",
            "DW_Table"
          ],
          "description": "Target data-mart table name for mapping this customer. Presently unused (null)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey",
            "DW_CharKey"
          ],
          "description": "Character alternative key used for downstream mapping. Currently unused."
        },
        {
          "name": "BatchID",
          "role": "attribute",
          "semantic_type": "guid",
          "aliases": [
            "ImportBatchID",
            "BatchGUID"
          ],
          "description": "GUID identifying the import batch that introduced or updated the record. Not populated in current buffer extracts."
        },
        {
          "name": "NoTaxVat",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "NoTaxVAT",
            "ExemptFromVAT"
          ],
          "description": "Boolean flag indicating if the customer is recorded as not subject to VAT (true = no VAT)."
        }
      ]
    },
    {
      "name": "Customer Address Bridge (ERP) - Buffer",
      "source": "dbo.ErpCustomerAddressBridgeBuffer",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Customer Address Bridge (ERP)",
        "default_label_column": "Address",
        "default_search_columns": [
          "Address",
          "PostalCode",
          "City",
          "CustomerCode",
          "CustomerID",
          "Email"
        ],
        "default_sort": {
          "column": "LastModifiedDate",
          "direction": "desc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "BridgeID",
            "ErpAddressBridgeID",
            "ID"
          ],
          "description": "Surrogate primary key for the buffer record; unique row identifier in the bridge buffer."
        },
        {
          "name": "AddressID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ErpAddressID",
            "AddrID"
          ],
          "description": "ERP address identifier (likely FK to the ERP Address master)."
        },
        {
          "name": "MainCustomerID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MainCustID",
            "ParentCustomerID"
          ],
          "description": "Identifier of the main/parent customer in the ERP (may reference the master customer record)."
        },
        {
          "name": "MainCustomerCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "MainCustCode",
            "ParentCustomerCode"
          ],
          "description": "Alphanumeric code for the main/parent customer in the ERP."
        },
        {
          "name": "CustomerID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "CustID",
            "ErpCustomerID"
          ],
          "description": "ERP identifier for the customer associated with this address (may be same as MainCustomerID for primary addresses)."
        },
        {
          "name": "CustomerCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "CustCode",
            "CustomerNumber"
          ],
          "description": "Alphanumeric customer code in the ERP corresponding to CustomerID."
        },
        {
          "name": "AddressType",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "AddrType",
            "AddressKind"
          ],
          "description": "Type/category of the address (e.g., billing, shipping). Values appear localized (Greek)."
        },
        {
          "name": "Address",
          "role": "label",
          "semantic_type": "address",
          "aliases": [
            "StreetAddress",
            "AddressLine"
          ],
          "description": "Full street address / address line used to identify delivery or billing location."
        },
        {
          "name": "PostalCode",
          "role": "attribute",
          "semantic_type": "postal_code",
          "aliases": [
            "ZipCode",
            "Postcode"
          ],
          "description": "Postal / ZIP code for the address."
        },
        {
          "name": "City",
          "role": "attribute",
          "semantic_type": "city",
          "aliases": [
            "Town",
            "Municipality"
          ],
          "description": "City or town where the address is located."
        },
        {
          "name": "Area",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "Neighborhood",
            "Suburb"
          ],
          "description": "Sub-area or neighborhood; this column is mostly empty in the buffer."
        },
        {
          "name": "District",
          "role": "attribute",
          "semantic_type": "region",
          "aliases": [
            "County",
            "AdministrativeDistrict"
          ],
          "description": "Administrative district or district name for the address."
        },
        {
          "name": "Country",
          "role": "attribute",
          "semantic_type": "country",
          "aliases": [
            "Nation",
            "CountryName"
          ],
          "description": "Country name for the address (values indicate Greece in the sample)."
        },
        {
          "name": "Phone1",
          "role": "attribute",
          "semantic_type": "phone",
          "aliases": [
            "PrimaryPhone",
            "Telephone1"
          ],
          "description": "Primary contact phone number for this address (landline/mobile)."
        },
        {
          "name": "Phone2",
          "role": "attribute",
          "semantic_type": "phone",
          "aliases": [
            "SecondaryPhone",
            "Telephone2"
          ],
          "description": "Secondary contact phone number (often mobile)."
        },
        {
          "name": "Fax",
          "role": "attribute",
          "semantic_type": "fax",
          "aliases": [
            "FaxNumber"
          ],
          "description": "Fax number associated with the address."
        },
        {
          "name": "Email",
          "role": "attribute",
          "semantic_type": "email",
          "aliases": [
            "ContactEmail",
            "PrimaryEmail"
          ],
          "description": "General contact email for the address."
        },
        {
          "name": "InvoiceEmail",
          "role": "attribute",
          "semantic_type": "email",
          "aliases": [
            "BillingEmail",
            "InvoiceToEmail"
          ],
          "description": "Email address used for invoicing (billing email)."
        },
        {
          "name": "ContactCode",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ContactID",
            "ErpContactID"
          ],
          "description": "Identifier that likely references a contact or address record in ERP (sample values match AddressID in many rows)."
        },
        {
          "name": "LastModifiedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "UpdatedAt"
          ],
          "description": "Timestamp when the buffer row was last modified; useful for incremental processing."
        },
        {
          "name": "CategoryId",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "AddressCategoryID",
            "CategoryID"
          ],
          "description": "Reference to a category/classification for the address (some values are null)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMgmtKey",
            "DM_Key"
          ],
          "description": "Staging/data-management numeric key (empty in samples)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DM_Table",
            "DataMgmtTable"
          ],
          "description": "Staging/data-management table name (empty in samples)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DM_CharKey"
          ],
          "description": "Staging/data-management character key (empty in samples)."
        },
        {
          "name": "BatchID",
          "role": "attribute",
          "semantic_type": "guid",
          "aliases": [
            "BatchGuid",
            "LoadBatchID"
          ],
          "description": "GUID identifying the load or batch process (not populated in sample rows)."
        },
        {
          "name": "ScoreId",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "ScoringID",
            "AddressScoreID"
          ],
          "description": "Identifier referencing a scoring/segment value for the address (used for analytics or risk scoring)."
        }
      ]
    },
    {
      "name": "Customer Contract Bridge (ERP) - Buffer",
      "source": "dbo.ErpCustomerContractBridgeBuffer",
      "primary_key": [
        "ContractID"
      ],
      "display": {
        "display_name": "Customer Contract Bridge (ERP)",
        "default_label_column": "ContractID",
        "default_search_columns": [
          "ContractID",
          "MainCustomerBillingCode",
          "CustomerBillingCode",
          "SalesmanCode"
        ],
        "default_sort": {
          "column": "CreatedDate",
          "direction": "desc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ContractID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ErpContractID",
            "Contract_ID"
          ],
          "description": "ERP contract unique identifier."
        },
        {
          "name": "CompanyID",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "Company",
            "Company_ID"
          ],
          "description": "Identifier of the company/tenant that owns the contract (sample shows single company id = 1)."
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "ContractName",
            "Title"
          ],
          "description": "Human-friendly name/title for the contract (not populated in sample rows)."
        },
        {
          "name": "RelativeContractID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ParentContractID",
            "RelatedContractID"
          ],
          "description": "Reference to another contract related to this one (e.g., amendment or linked agreement)."
        },
        {
          "name": "MainCustomerBillingID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MainBillingCustID",
            "BillingCustomerMainID"
          ],
          "description": "ERP identifier for the main billing customer associated with the contract."
        },
        {
          "name": "MainCustomerBillingCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "MainBillingCustCode",
            "BillingCustomerMainCode"
          ],
          "description": "Alphanumeric code of the main billing customer."
        },
        {
          "name": "CustomerBillingID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "BillingCustomerID",
            "CustBillingID"
          ],
          "description": "ERP identifier for the billing customer (may match MainCustomerBillingID for primary billing)."
        },
        {
          "name": "CustomerBillingCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "BillingCustomerCode",
            "CustBillingCode"
          ],
          "description": "Alphanumeric billing customer code in the ERP."
        },
        {
          "name": "ShippingAddressID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ShipAddrID",
            "ShippingAddrID"
          ],
          "description": "Reference to the shipping address for the contract (mostly empty in samples)."
        },
        {
          "name": "SignedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ContractSignedDate",
            "DateSigned"
          ],
          "description": "Date the contract was signed by parties."
        },
        {
          "name": "StartDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ContractStartDate",
            "EffectiveDate"
          ],
          "description": "Contract effective start date (not populated in samples)."
        },
        {
          "name": "EndDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ContractEndDate",
            "ExpiryDate"
          ],
          "description": "Contract end/expiry date (not populated in samples)."
        },
        {
          "name": "CampaignID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MarketingCampaignID",
            "Campaign"
          ],
          "description": "Identifier for related marketing/sales campaign (some records reference campaigns)."
        },
        {
          "name": "SalesmanCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "SalesRepCode",
            "SalespersonCode"
          ],
          "description": "Code identifying the salesman or sales representative associated with the contract."
        },
        {
          "name": "Status",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "ContractStatus",
            "State"
          ],
          "description": "Contract status (values appear localized; e.g., active)."
        },
        {
          "name": "SalesChannelId",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ChannelID",
            "SalesChannel"
          ],
          "description": "Identifier for the sales channel through which the contract was sold."
        },
        {
          "name": "CreatedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ContractCreatedDate",
            "CreatedAt"
          ],
          "description": "Timestamp when the contract record was created in the ERP."
        },
        {
          "name": "LastModifiedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "UpdatedAt"
          ],
          "description": "Timestamp when the contract buffer row was last updated."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMgmtKey",
            "DM_Key"
          ],
          "description": "Staging/data-management numeric key (not populated in samples)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DM_Table",
            "DataMgmtTable"
          ],
          "description": "Staging/data-management table name (not populated in samples)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DM_CharKey"
          ],
          "description": "Staging/data-management character key (not populated in samples)."
        },
        {
          "name": "RelatedTicket",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SupportTicketID",
            "RelatedIssueID"
          ],
          "description": "Reference to a related support/service ticket (often null)."
        },
        {
          "name": "TicketType",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "SupportTicketType",
            "IssueType"
          ],
          "description": "Type/category of the related ticket (if any)."
        },
        {
          "name": "ContractAlteredAmount",
          "role": "attribute",
          "semantic_type": "currency",
          "aliases": [
            "AlteredAmount",
            "ContractAdjustmentAmount"
          ],
          "description": "Monetary amount representing contract alterations or adjustments. Unit hint in source indicates currency (USD)."
        }
      ]
    },
    {
      "name": "Customer Contract Line (ERP Bridge Buffer)",
      "source": "dbo.ErpCustomerContractLinesBridgeBuffer",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Customer Contract Line",
        "default_label_column": "AdvertisementID",
        "default_search_columns": [
          "ID",
          "ContractID",
          "AdvertisementID",
          "ProfessionalCategory",
          "UdacCode"
        ],
        "default_sort": {
          "column": "LastModifiedDate",
          "direction": "desc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "LineID",
            "ContractLineID",
            "ID"
          ],
          "description": "Surrogate primary key for the contract line record."
        },
        {
          "name": "ContractID",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "ContractId",
            "ContractRef"
          ],
          "description": "Identifier of the parent customer contract (external ERP contract reference)."
        },
        {
          "name": "AdvertisementID",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "AdID",
            "AdvertisementRef"
          ],
          "description": "Identifier of the advertisement or placement associated with this contract line."
        },
        {
          "name": "UdacID",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "UDAC_ID",
            "UdacId"
          ],
          "description": "Numeric identifier for UDAC (a classification or sales unit code)."
        },
        {
          "name": "MediumID",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MediumId",
            "MediaID"
          ],
          "description": "Identifier for the medium/channel (e.g., print, online, TV) where the advertisement runs."
        },
        {
          "name": "ProfessionalCategory",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [
            "ProfCategory",
            "ProfessionalCat"
          ],
          "description": "Professional or industry category associated with the advertisement (often localized text)."
        },
        {
          "name": "NetAmount",
          "role": "attribute",
          "semantic_type": "currency",
          "aliases": [
            "AmountNet",
            "NetValue"
          ],
          "description": "Net monetary amount for this contract line (currency unit indicated by source)."
        },
        {
          "name": "StartDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [
            "Start",
            "EffectiveStartDate"
          ],
          "description": "Start date when this contract line or placement becomes effective."
        },
        {
          "name": "EndDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [
            "End",
            "EffectiveEndDate"
          ],
          "description": "End date when this contract line or placement expires."
        },
        {
          "name": "PaymentChannel",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "PayChannel",
            "PaymentMethod"
          ],
          "description": "Payment channel or method code (localized string)."
        },
        {
          "name": "AdvancedPayment",
          "role": "attribute",
          "semantic_type": "currency",
          "aliases": [
            "AdvancePayment",
            "Prepayment"
          ],
          "description": "Amount paid in advance for this line (prepayment)."
        },
        {
          "name": "FirstInvoiceDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [
            "FirstInvoice",
            "InitialInvoiceDate"
          ],
          "description": "Date of the first invoice associated with this contract line."
        },
        {
          "name": "InvoiceQuantity",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InvoicesCount",
            "InvoiceQty"
          ],
          "description": "Number of invoices expected or scheduled for this contract line."
        },
        {
          "name": "InstallmentsPerInvoice",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InstPerInvoice",
            "InstallmentsEachInvoice"
          ],
          "description": "Number of installment payments contained in each invoice."
        },
        {
          "name": "InstallmentSequence",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InstSequence",
            "InstallmentNo"
          ],
          "description": "Sequence number of the installment for this record (if installmentized billing)."
        },
        {
          "name": "BillingPhoneNumber",
          "role": "attribute",
          "semantic_type": "phone",
          "aliases": [
            "BillingPhone",
            "Phone"
          ],
          "description": "Phone number recorded for billing/contact purposes for this contract line."
        },
        {
          "name": "ParentAdvertisementID",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "ParentAdID",
            "ParentAdvertisementRef"
          ],
          "description": "Reference to a parent advertisement (used when this line is a sub-placement); may be null."
        },
        {
          "name": "LastModifiedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "UpdatedAt"
          ],
          "description": "Timestamp of the last update to this record."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DWKey"
          ],
          "description": "Data-mart / data-warehouse numeric key (presently null in buffer)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMartTable",
            "DWTable"
          ],
          "description": "Data-mart / data-warehouse table name placeholder (presently null in buffer)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMartCharKey",
            "DWCharKey"
          ],
          "description": "Character key for data-mart mapping (presently null in buffer)."
        },
        {
          "name": "IsRenewable",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Renewable",
            "CanRenew"
          ],
          "description": "Flag indicating whether this contract line is renewable."
        },
        {
          "name": "UdacCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "UDACCode",
            "UdacCd"
          ],
          "description": "Alphanumeric code for the UDAC classification (human-readable code)."
        },
        {
          "name": "Status",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [
            "ContractStatus",
            "LineStatus"
          ],
          "description": "Current status of the contract line (localized status text)."
        },
        {
          "name": "InterruptionDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [
            "SuspensionDate",
            "StopDate"
          ],
          "description": "Date the contract line was interrupted or suspended (mostly null in buffer)."
        },
        {
          "name": "AlteredAmount",
          "role": "attribute",
          "semantic_type": "currency",
          "aliases": [
            "AdjustedAmount",
            "AlterationAmount"
          ],
          "description": "Adjusted amount for this line when an alteration was applied (sparse)."
        },
        {
          "name": "Score",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "LineScore",
            "QualityScore"
          ],
          "description": "Placeholder for a quality/score metric (not populated in buffer)."
        }
      ]
    },
    {
      "name": "Salesman (ERP Bridge Buffer)",
      "source": "dbo.ErpSalesmanBridgeBuffer",
      "primary_key": [
        "SalesmanID"
      ],
      "display": {
        "display_name": "Salesman",
        "default_label_column": "FullName",
        "default_search_columns": [
          "FullName",
          "Code",
          "SalesmanID"
        ],
        "default_sort": {
          "column": "FullName",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "SalesmanID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "SalespersonID",
            "SalesmanId",
            "ID"
          ],
          "description": "Unique identifier for the salesman/sales agent in the ERP system."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "SalesmanCode",
            "RepCode"
          ],
          "description": "Short code used to identify the salesman (may match SalesmanID in many cases)."
        },
        {
          "name": "FullName",
          "role": "label",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Name",
            "SalesmanName",
            "Full_Name"
          ],
          "description": "Full display name of the salesman (often includes localization and system suffixes)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag"
          ],
          "description": "Flag indicating whether the salesman is currently active."
        },
        {
          "name": "LastModifiedDate",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "UpdatedAt"
          ],
          "description": "Timestamp for the last update of this salesman record."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DWKey"
          ],
          "description": "Data-mart / data-warehouse numeric key placeholder (not populated in buffer)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMartTable",
            "DWTable"
          ],
          "description": "Data-mart / data-warehouse table name placeholder (not populated in buffer)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMartCharKey",
            "DWCharKey"
          ],
          "description": "Character key for data-mart mapping (not populated in buffer)."
        }
      ]
    },
    {
      "name": "GL Sequence Code",
      "source": "dbo.GLSeqCode",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "GL Sequence Code",
        "default_label_column": "Code",
        "default_search_columns": [
          "Code",
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "SeqID",
            "GLSeqID",
            "ID"
          ],
          "description": "Surrogate primary key for the GL sequence code record."
        },
        {
          "name": "Code",
          "role": "label",
          "semantic_type": "code",
          "aliases": [
            "GLCode",
            "SequenceCode",
            "AccountCode"
          ],
          "description": "Accounting sequence or account code (structured string). Examples: 30.00.00.0000."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "Desc",
            "LongDescription",
            "Name"
          ],
          "description": "Human readable description of the GL sequence code. Values observed are Greek-language descriptions."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DM_ID",
            "DMKey"
          ],
          "description": "Optional numeric key used for linking to a data-mart/ETL target (currently null for all rows)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartTable",
            "DM_Table",
            "DMTable"
          ],
          "description": "Optional data-mart table name for ETL mapping (currently null for all rows)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey",
            "DMChar",
            "DMCharKey"
          ],
          "description": "Optional character key used for data-mart linking (currently null for all rows)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag",
            "Enabled"
          ],
          "description": "Flag indicating whether the GL sequence code is active (True/False)."
        }
      ]
    },
    {
      "name": "Internal Product",
      "source": "dbo.InternalProduct",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Internal Product",
        "default_label_column": "ID",
        "default_search_columns": [
          "ID",
          "ProductTypeID",
          "CreatedBy"
        ],
        "default_sort": {
          "column": "CreatedOn",
          "direction": "desc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "InternalProductID",
            "ProdID",
            "ID"
          ],
          "description": "Surrogate primary key for the internal product."
        },
        {
          "name": "ProductTypeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ProdTypeID",
            "ProductType",
            "ProductTypeID"
          ],
          "description": "Foreign key referencing the product type for this internal product."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreatedOn",
            "CreationTimestamp"
          ],
          "description": "Timestamp when the internal product record was created."
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Creator",
            "CreatedByUser",
            "CreatedBy"
          ],
          "description": "User account or username that created the record (system user). Example: 'gdimitriou'."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DM_ID",
            "DMKey"
          ],
          "description": "Optional numeric key used for linking to a data-mart/ETL target (all values currently null)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartTable",
            "DM_Table",
            "DMTable"
          ],
          "description": "Optional name of the target data-mart table for ETL mapping (currently null)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey",
            "DMChar",
            "DMCharKey"
          ],
          "description": "Optional character key used for data-mart linking (currently null)."
        }
      ]
    },
    {
      "name": "Internal Product Document",
      "source": "dbo.InternalProductDocument",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Internal Product Document",
        "default_label_column": "Filename",
        "default_search_columns": [
          "Filename",
          "CreatedBy",
          "ID"
        ],
        "default_sort": {
          "column": "CreatedOn",
          "direction": "desc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "InternalProductDocumentID",
            "DocID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the document record."
        },
        {
          "name": "InternalProductID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ProductID",
            "InternalProdID",
            "InternalProduct_Id"
          ],
          "description": "Reference to the internal product this document belongs to (foreign key to InternalProduct.ID)."
        },
        {
          "name": "Filename",
          "role": "label",
          "semantic_type": "file_name",
          "aliases": [
            "FileName",
            "DocumentName",
            "FilePath"
          ],
          "description": "Stored filename or path of the document (often includes encoded path segments and a generated file identifier)."
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreatedAt",
            "DateCreated"
          ],
          "description": "Timestamp when the document record was created."
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "Creator",
            "CreatedByUser",
            "CreatedByAccount"
          ],
          "description": "User account name (username) of the person who uploaded or created the document record."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMgmtKey",
            "DM_Key"
          ],
          "description": "Optional data management numeric key; appears unused (all values null in sample)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMgmtTable",
            "DM_Table"
          ],
          "description": "Optional data management table name placeholder; currently null in sample data."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMgmtCharKey",
            "DM_CharKey"
          ],
          "description": "Optional data management character key; currently null in sample data."
        }
      ]
    },
    {
      "name": "Internal Product Type",
      "source": "dbo.InternalProductType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Internal Product Type",
        "default_label_column": "Code",
        "default_search_columns": [
          "Code",
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "InternalProductTypeID",
            "TypeID",
            "ID"
          ],
          "description": "Unique identifier for the internal product type."
        },
        {
          "name": "Code",
          "role": "label",
          "semantic_type": "code",
          "aliases": [
            "TypeCode",
            "CodeName"
          ],
          "description": "Short code or name for the product type (used as the display label). Examples include 'Print 1' and 'WEEKLY MESSAGE'."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "TypeDescription",
            "DescriptionText"
          ],
          "description": "Human-readable description of the product type. Contains longer text (sample values include Greek-language descriptions)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActiveFlag"
          ],
          "description": "Indicates whether this product type is active (True/False)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMgmtKey",
            "DM_Key"
          ],
          "description": "Optional numeric data management key; currently null in sample data."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMgmtTable",
            "DM_Table"
          ],
          "description": "Optional data management table name placeholder; currently null in sample data."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMgmtCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character data management key; currently null in sample data."
        }
      ]
    },
    {
      "name": "Internal Product Communication",
      "source": "dbo.InternalProductCommunication",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Internal Product Communication",
        "default_label_column": "CommunicationText",
        "default_search_columns": [
          "CommunicationText",
          "InternalProductID",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "InternalProductCommunicationID",
            "CommID",
            "ID"
          ],
          "description": "Surrogate primary key. Unique identifier for this communication record."
        },
        {
          "name": "InternalProductID",
          "role": "foreign_key",
          "semantic_type": "foreign_id",
          "aliases": [
            "InternalProdID",
            "ProductID",
            "IntProductID"
          ],
          "description": "Reference to the internal product this communication is associated with (FK -> dbo.InternalProduct.ID)."
        },
        {
          "name": "CommunicationText",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Message",
            "Notes",
            "CommText",
            "Description"
          ],
          "description": "Main communication text or notes for the internal product. Contains multi-line descriptive instructions or messaging (sample data in Greek)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used for external/data-mart mapping. Mostly null in current data."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMartTable",
            "DM_Table"
          ],
          "description": "Optional name of the external/data-mart table used with DMKey. Typically null for this dataset."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMartCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character key used for external/data-mart mapping when a string key is required."
        }
      ]
    },
    {
      "name": "Role",
      "source": "dbo.Role",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Role",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "LoginUrl"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "RoleID",
            "ID"
          ],
          "description": "Unique identifier for the role."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "RoleName",
            "Title",
            "Label"
          ],
          "description": "Human-readable role title or short description (e.g., 'Offerings Product Manager')."
        },
        {
          "name": "Permissions",
          "role": "attribute",
          "semantic_type": "permissions_bitmap",
          "aliases": [
            "PermissionBits",
            "Perms",
            "PermissionsMask"
          ],
          "description": "Packed permission bitmask representing the actions/features allowed for the role. Stored as a fixed-format string/bitmap."
        },
        {
          "name": "MaxDiscount",
          "role": "attribute",
          "semantic_type": "decimal",
          "aliases": [
            "MaxDisc",
            "MaximumDiscount"
          ],
          "description": "Maximum discount applicable for this role. Interpretation (amount vs percent) depends on DiscountIsFixedAmount."
        },
        {
          "name": "DiscountIsFixedAmount",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "IsFixedDiscount",
            "DiscountFixed"
          ],
          "description": "Flag indicating whether MaxDiscount is a fixed currency amount (true) or a percentage (false)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMartKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used for external/data-mart mapping. Mostly null in current data."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMartTable",
            "DM_Table"
          ],
          "description": "Optional name of the external/data-mart table used in conjunction with DMKey."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMartCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character key for external/data-mart mapping when a string key is required."
        },
        {
          "name": "ForwardFromContractChange",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ForwardFromContractChangeFlag",
            "FwdFromContractChange"
          ],
          "description": "Flag indicating whether communications (or notifications) should be forwarded when a contract change occurs."
        },
        {
          "name": "ForwardInternalProduct",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ForwardInternalProductFlag",
            "FwdInternalProduct"
          ],
          "description": "Flag indicating whether items related to internal products should be auto-forwarded for this role."
        },
        {
          "name": "ForwardTicketType",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ForwardTicketTypeFlag",
            "FwdTicketType"
          ],
          "description": "Flag indicating whether tickets of a certain type should be forwarded for this role."
        },
        {
          "name": "LoginUrl",
          "role": "attribute",
          "semantic_type": "url",
          "aliases": [
            "LoginURL",
            "RoleLoginUrl",
            "RedirectUrl"
          ],
          "description": "Optional URL associated with the role (e.g., role-specific login/dashboard link)."
        },
        {
          "name": "ParentID",
          "role": "foreign_key",
          "semantic_type": "foreign_id",
          "aliases": [
            "ParentRoleID",
            "Parent"
          ],
          "description": "Reference to a parent role (self-referencing FK -> dbo.Role.ID). Used to build role hierarchies."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsEnabled"
          ],
          "description": "Indicates if the role is currently active and can be assigned to users."
        },
        {
          "name": "InboxViewType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "InboxView",
            "InboxViewMode"
          ],
          "description": "Numeric code representing the preferred inbox/view type for users with this role (UI preference)."
        }
      ]
    },
    {
      "name": "Tax Code",
      "source": "dbo.TaxCode",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Tax Code",
        "default_label_column": "TaxCode",
        "default_search_columns": [
          "TaxCode",
          "ID",
          "DMKey"
        ],
        "default_sort": {
          "column": "TaxCode",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "TaxCodeID",
            "ID",
            "BusinessPointID"
          ],
          "description": "Primary key for this record. Also used as the business point identifier (FK to dbo.BusinessPoint.ID)."
        },
        {
          "name": "CountryID",
          "role": "foreign_key",
          "semantic_type": "country_id",
          "aliases": [
            "CountryID",
            "Country"
          ],
          "description": "Reference to the Country for the tax code (FK to dbo.Country.ID). Appears to be constant (single country) in this dataset."
        },
        {
          "name": "TaxCode",
          "role": "label",
          "semantic_type": "tax_id",
          "aliases": [
            "TaxCode",
            "TaxNumber",
            "TaxIdentificationNumber"
          ],
          "description": "The tax identifier/code associated with the business point. This is the primary human-readable business key for this table."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "lookup_id",
          "aliases": [
            "DMKey",
            "DimensionKey",
            "MappingKey"
          ],
          "description": "Numeric key used to link to an external dimension/mapping table. Often used by reporting/ETL processes to join to a descriptive dimension (e.g., CM15E_Branches). Many rows are null."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "reference_table",
          "aliases": [
            "DMTable",
            "DimensionTable",
            "MappingTable"
          ],
          "description": "Name of the dimension or mapping table that DMKey refers to (example: CM15E_Branches). Mostly populated with the same table name for mapped rows."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DMCharKey",
            "DimensionCharKey"
          ],
          "description": "Character-based mapping key (not populated in the sampled data). Reserved for alternate string keys used by ETL/mapping processes."
        }
      ]
    },
    {
      "name": "Tax Office",
      "source": "dbo.TaxOffice",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Tax Office",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "TaxOfficeID",
            "ID"
          ],
          "description": "Unique identifier for the tax office."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "Code",
            "OfficeCode",
            "TaxOfficeCode"
          ],
          "description": "Short code/code number for the tax office (e.g., 1100, 1101). Useful for lookups and compact displays."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "string",
          "aliases": [
            "Description",
            "Name",
            "OfficeName"
          ],
          "description": "Human-readable name/description of the tax office (often localized). Recommended primary display label for this entity."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "lookup_id",
          "aliases": [
            "DMKey",
            "DimensionKey",
            "MappingKey"
          ],
          "description": "Numeric mapping key linking this tax office to an external/reporting dimension (e.g., CM13D_TaxOffices). Mostly populated."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "reference_table",
          "aliases": [
            "DMTable",
            "DimensionTable",
            "MappingTable"
          ],
          "description": "Name of the dimension or mapping table associated with DMKey (example: CM13D_TaxOffices)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DMCharKey",
            "DimensionCharKey"
          ],
          "description": "Character-based mapping key (not populated in sampled rows). Reserved for alternate mappings."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "IsActive",
            "Active",
            "Enabled"
          ],
          "description": "Flag indicating whether the tax office is active (True) or inactive (False). Useful for filtering current offices."
        }
      ]
    },
    {
      "name": "Master Heading Group",
      "source": "dbo.MasterHeadingGroup",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Master Heading Group",
        "default_label_column": "MasterHeadingID",
        "default_search_columns": [
          "MasterHeadingID",
          "ID",
          "GroupID"
        ],
        "default_sort": {
          "column": "MasterHeadingID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MasterHeadingGroupID",
            "GroupEntryID",
            "ID"
          ],
          "description": "Unique identifier for this Master Heading Group record (primary key)."
        },
        {
          "name": "MasterHeadingID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MasterHeading_ID",
            "HeadingID",
            "MasterHeadingId"
          ],
          "description": "Reference to the master heading this group entry belongs to. Foreign key to dbo.MasterHeading.ID."
        },
        {
          "name": "GroupID",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Group",
            "GroupType",
            "GroupIdentifier"
          ],
          "description": "Identifier for the group/category within the master heading. Small set of enumerated values (e.g., 1, 2, 3)."
        }
      ]
    },
    {
      "name": "VAT Category",
      "source": "dbo.VatCategory",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "VAT Category",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "VatCategoryID",
            "ID"
          ],
          "description": "Primary key for the VAT category."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "VatCode",
            "TaxCode"
          ],
          "description": "Numeric code used to represent the VAT category in transactions and accounting."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "localized_text",
          "aliases": [
            "VatDescription",
            "Name",
            "Description_Greek"
          ],
          "description": "Human-readable description of the VAT category (localized; sample values appear in Greek)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMappingKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used to map this VAT category to an external dimension or lookup table (e.g., GL04D_VatRegimes). Nullable."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMappingTable",
            "DM_Table"
          ],
          "description": "Name of the external mapping/lookup table associated with DMKey when present (e.g., GL04D_VatRegimes). Nullable."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMappingCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character-based mapping key for external systems. Currently all values appear null."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Enabled",
            "Is_Active"
          ],
          "description": "Flag indicating whether this VAT category is active and should be used in processing (True/False)."
        }
      ]
    },
    {
      "name": "Classifier",
      "source": "dbo.Classifier",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Classifier",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ClassifierID",
            "ID",
            "ClsID"
          ],
          "description": "Unique identifier for the classifier (primary key)."
        },
        {
          "name": "ClassifierTreeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ClassifierTreeId",
            "TreeID",
            "Tree_Id"
          ],
          "description": "Reference to the classifier tree this classifier belongs to (foreign key to dbo.ClassifierTree.ID)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "ClassifierName",
            "Name",
            "Title"
          ],
          "description": "Human-readable name of the classifier (e.g., Activity, CustomerIndicator). Used as the display label."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Desc",
            "Details",
            "ClassifierDescription"
          ],
          "description": "Short descriptive text explaining the purpose or meaning of the classifier."
        },
        {
          "name": "IsMultiValued",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "MultiValued",
            "AllowsMultipleValues",
            "IsMultiValue"
          ],
          "description": "Flag indicating whether the classifier allows multiple values to be selected."
        },
        {
          "name": "IsMandatory",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Mandatory",
            "IsRequired",
            "RequiredFlag"
          ],
          "description": "Flag indicating whether a value from this classifier is mandatory in contexts where it applies."
        },
        {
          "name": "IsMandatoryOnPOIs",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "MandatoryOnPOIs",
            "RequiredOnPOI",
            "MandatoryOnPointsOfInterest"
          ],
          "description": "Flag indicating whether the classifier is mandatory for POIs (Points Of Interest) specifically."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "MigrationKey",
            "DM_Id"
          ],
          "description": "Optional numeric key used for data migration mapping or integration with external data sources."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "SourceTable",
            "DM_Table"
          ],
          "description": "Name of the source table or mechanism used during data migration (e.g., DataMigration, ManualInsertion)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationCharKey",
            "DMChar",
            "DM_StringKey"
          ],
          "description": "Optional character/string key for data migration mapping. Often null in this dataset."
        },
        {
          "name": "DefaultNodeId",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "DefaultNodeID",
            "DefaultNode",
            "DefaultClassifierNodeId"
          ],
          "description": "Optional reference to a default classifier node (foreign key to dbo.ClassifierNode.ID). Indicates which node should be used by default."
        }
      ]
    },
    {
      "name": "ClassifierTree",
      "source": "dbo.ClassifierTree",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Classifier Tree",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "ID",
          "Type"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ClassifierTreeID",
            "ID",
            "TreeID"
          ],
          "description": "Unique identifier for the classifier tree (primary key)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "TreeName",
            "Name",
            "Title"
          ],
          "description": "Human-readable name of the classifier tree (e.g., Geographical, Activity). Used as the display label."
        },
        {
          "name": "Type",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [
            "TreeType",
            "TypeCode"
          ],
          "description": "Numeric code indicating the kind of classifier tree. Treat as an enumeration (business-defined values)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataMigrationKey",
            "MigrationKey",
            "DM_Id"
          ],
          "description": "Optional numeric key used for mapping this classifier tree during data migration or integration."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "SourceTable",
            "DM_Table"
          ],
          "description": "Name of the source table or mechanism used during data migration for this tree."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationCharKey",
            "DMChar",
            "DM_StringKey"
          ],
          "description": "Optional character/string key for data migration mapping for this tree. Often null in this dataset."
        }
      ]
    },
    {
      "name": "ClassifierNode",
      "source": "dbo.ClassifierNode",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Classifier Node",
        "default_label_column": "CompositeName",
        "default_search_columns": [
          "CompositeName",
          "Name",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "NodeID",
            "ClassifierNodeID",
            "ID"
          ],
          "description": "Surrogate unique identifier for the classifier node."
        },
        {
          "name": "ParentNodeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ParentID",
            "Parent Node",
            "ParentNode"
          ],
          "description": "Reference to the parent classifier node (self-referential FK). Null for root nodes."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "NodeName",
            "ShortName",
            "Name"
          ],
          "description": "Human-friendly short name of the node (category or classifier label)."
        },
        {
          "name": "CompositeName",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "FullName",
            "Composite Label",
            "CompositeName"
          ],
          "description": "Composite or fully qualified name for the node (often includes parent path or expanded label)."
        },
        {
          "name": "LeftIndex",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Lft",
            "Left",
            "LeftIndex"
          ],
          "description": "Left index used for nested-set representation of the tree. May be null if not using nested-set."
        },
        {
          "name": "RightIndex",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Rgt",
            "Right",
            "RightIndex"
          ],
          "description": "Right index used for nested-set representation of the tree. May be null if not using nested-set."
        },
        {
          "name": "ClassifierTreeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "TreeID",
            "ClassifierTree",
            "ClassifierTreeID"
          ],
          "description": "Identifier of the classifier tree this node belongs to. Links nodes to a specific tree/version."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMigrationKey",
            "DM Key",
            "DMKey"
          ],
          "description": "Legacy numeric key used during data migration or ETL processes. Often nullable once migration is complete."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DM Table",
            "DMTable"
          ],
          "description": "Name of the source table used during data migration or reconciliation. Nullable for non-migrated rows."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DMChar",
            "DataMigrationCharKey",
            "DMCharKey"
          ],
          "description": "Optional character key from migration processes (e.g., flags/markers). Nullable for most rows."
        }
      ]
    },
    {
      "name": "HeadingReference",
      "source": "dbo.HeadingReference",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Heading Reference",
        "default_label_column": "Description",
        "default_search_columns": [
          "Code",
          "Description",
          "MasterHeadingID",
          "ID"
        ],
        "default_sort": {
          "column": "Code",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "HeadingReferenceID",
            "RefID",
            "ID"
          ],
          "description": "Unique identifier for this heading reference."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "HeadingCode",
            "RefCode",
            "Code"
          ],
          "description": "Alphanumeric code associated with the heading reference. Used for categorization or mapping."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "HeadingDescription",
            "Label",
            "Description"
          ],
          "description": "Human readable description of the heading (may contain localized/Greek text)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsActive",
            "Enabled"
          ],
          "description": "Flag indicating whether the heading reference is active (true) or inactive (false)."
        },
        {
          "name": "MasterHeadingID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MasterID",
            "MasterHeading",
            "MasterHeadingID"
          ],
          "description": "Reference to the master heading entity (links this reference to the master heading table)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMigrationKey",
            "DM Key",
            "DMKey"
          ],
          "description": "Legacy numeric key used for data migration or ETL. All values appear null in the sample set."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationTable",
            "DM Table",
            "DMTable"
          ],
          "description": "Original table name from migration processes. Nullable and not populated in current sample."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMigrationCharKey",
            "DMChar",
            "DMCharKey"
          ],
          "description": "Optional migration/flag string (e.g., 'HASLOWER') used during data migration or to mark special cases."
        }
      ]
    },
    {
      "name": "Heading Synonym",
      "source": "dbo.HeadingSynonym",
      "primary_key": [
        "SourceID",
        "TargetID"
      ],
      "display": {
        "display_name": "Heading Synonym",
        "default_label_column": "SourceID",
        "default_search_columns": [
          "SourceID",
          "TargetID"
        ],
        "default_sort": {
          "column": "SourceID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "SourceID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "SrcID",
            "SourceHeadingID",
            "FromHeadingID"
          ],
          "description": "Identifier of the source heading (references dbo.MasterHeading.ID)."
        },
        {
          "name": "TargetID",
          "role": [
            "primary_key",
            "foreign_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "TgtID",
            "TargetHeadingID",
            "ToHeadingID"
          ],
          "description": "Identifier of the target (synonymous) heading (references dbo.MasterHeading.ID)."
        },
        {
          "name": "DMKey",
          "role": [
            "attribute"
          ],
          "semantic_type": "integer",
          "aliases": [
            "DataModelKey",
            "DM_Key"
          ],
          "description": "Optional integer data-model key. Column appears unused (all null in sampled data)."
        },
        {
          "name": "DMTable",
          "role": [
            "attribute"
          ],
          "semantic_type": "reference_table_name",
          "aliases": [
            "DataModelTable",
            "DM_Table"
          ],
          "description": "Optional name of referenced data-model table (metadata). Column appears unused in sampled rows."
        },
        {
          "name": "DMCharKey",
          "role": [
            "attribute"
          ],
          "semantic_type": "text",
          "aliases": [
            "DataModelCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character key used by data-model metadata. Column appears unused in sampled rows."
        }
      ]
    },
    {
      "name": "Medium Version Print Variant",
      "source": "dbo.MediumVersionPrintVersion",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Medium Version Print Variant",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "ID",
          "MediumVersionID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": [
            "primary_key"
          ],
          "semantic_type": "id",
          "aliases": [
            "PrintVersionID",
            "ID"
          ],
          "description": "Primary key — unique identifier for this print/version record."
        },
        {
          "name": "MediumVersionID",
          "role": [
            "foreign_key",
            "attribute"
          ],
          "semantic_type": "id",
          "aliases": [
            "MediumVerID",
            "Medium_Version_ID"
          ],
          "description": "Identifier of the related medium version (references dbo.MediumVersion.ID)."
        },
        {
          "name": "Name",
          "role": [
            "label",
            "attribute"
          ],
          "semantic_type": "text",
          "aliases": [
            "PrintName",
            "VersionName"
          ],
          "description": "Human-friendly name of this print/version variation (used for display)."
        },
        {
          "name": "DMKey",
          "role": [
            "attribute"
          ],
          "semantic_type": "integer",
          "aliases": [
            "DataModelKey",
            "DM_Key"
          ],
          "description": "Optional integer key used for data-model integration or mapping."
        },
        {
          "name": "DMTable",
          "role": [
            "attribute"
          ],
          "semantic_type": "reference_table_name",
          "aliases": [
            "DataModelTable",
            "DM_Table"
          ],
          "description": "Optional metadata column storing the name of a data-model table for integration purposes."
        },
        {
          "name": "DMCharKey",
          "role": [
            "attribute"
          ],
          "semantic_type": "text",
          "aliases": [
            "DataModelCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character key used for data-model mapping or integration."
        }
      ]
    },
    {
      "name": "Medium Version Print Version Section",
      "source": "dbo.MediumVersionPrintVersionSection",
      "primary_key": [
        "ID",
        "MediumVersionPrintVersionID",
        "VesrionSectionID"
      ],
      "display": {
        "display_name": "Medium Version Print Version Section",
        "default_label_column": "DMTable",
        "default_search_columns": [
          "DMTable",
          "DMCharKey",
          "DMKey",
          "MediumVersionPrintVersionID",
          "VesrionSectionID",
          "ID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MediumVersionPrintVersionSectionID",
            "MVPVSectionID",
            "ID"
          ],
          "description": "Surrogate identifier for this junction/association record. Part of the composite primary key."
        },
        {
          "name": "MediumVersionPrintVersionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MVPrintVersionID",
            "MediumVersionPrintVersion_ID",
            "MediumVersionPrintVersionID"
          ],
          "description": "Foreign key to the MediumVersionPrintVersion table (references dbo.MediumVersionPrintVersion.ID). Identifies the specific medium/version/print-version involved in the association."
        },
        {
          "name": "VesrionSectionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "VersionSectionID",
            "VSectionID",
            "Vesrion_Section_ID"
          ],
          "description": "Foreign key to the VersionSection table (references dbo.VersionSection.ID). Indicates the section within the version that is associated with the medium print version. Note: column name contains a known typo 'Vesrion' mirroring the source."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataModelKey",
            "DM_Key"
          ],
          "description": "Optional integer key used for downstream data-mapping or integration scenarios (data-management key)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_Table",
            "DataModelTable",
            "DMTableName"
          ],
          "description": "Optional name of the source/target table used in data mapping or integration processes. Typically used with DMKey/DMCharKey to reference external data."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DM_CharKey",
            "DMChar_Key"
          ],
          "description": "Optional character key used for descriptive or composite mapping in integration scenarios (a string-based mapping key)."
        }
      ]
    },
    {
      "name": "Production Font",
      "source": "dbo.ProductionFont",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Production Font",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "FontID",
            "ID"
          ],
          "description": "Unique identifier for the production font."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "FontName",
            "Description"
          ],
          "description": "Human-friendly name or description of the font (e.g., 'UBHelveticaCondeuro'). Used as the display label for the font."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "Is_Active"
          ],
          "description": "Flag indicating whether the font is active and available for production use."
        },
        {
          "name": "IsDefault",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Default",
            "Is_Default"
          ],
          "description": "Flag indicating whether this font is the default font for new productions."
        }
      ]
    },
    {
      "name": "Price List Measurement Type",
      "source": "dbo.PriceListMeasurementType",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Price List Measurement Type",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "MeasurementTypeID",
            "PriceListMeasurementTypeID",
            "ID"
          ],
          "description": "Surrogate identifier for the measurement type used in price lists."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Name",
            "MeasurementName",
            "Description_Greek"
          ],
          "description": "Human-readable name/description of the measurement type. Field uses Greek collation in source and may contain localized labels (e.g., 'Τεμάχιο')."
        },
        {
          "name": "AdvertisementEndDateFactor",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "AdEndDateFactor",
            "EndDateFactor",
            "AdvertisementFactor"
          ],
          "description": "Numeric factor applied when calculating advertisement end dates or expirations for this measurement type (units depend on business rules, often months or multiplier). Typical values observed: 12, 1."
        },
        {
          "name": "CalculateUsingQuantity",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "CalcUsingQty",
            "UseQuantity",
            "CalculateByQuantity"
          ],
          "description": "Flag indicating whether pricing calculations for this measurement type should consider item quantity (True/False)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsEnabled"
          ],
          "description": "Flag indicating whether the measurement type is active and available for selection in pricing and product configuration."
        }
      ]
    },
    {
      "name": "Production Color",
      "source": "dbo.ProductionColor",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Production Color",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ColorID",
            "ProductionColorID",
            "ID"
          ],
          "description": "Unique identifier for the production color entry."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "color_name",
          "aliases": [
            "ColorName",
            "Name",
            "Description_Greek"
          ],
          "description": "Human-readable color name (e.g., Black, Red, Orange). Stored as NVARCHAR with Greek collation in the source."
        },
        {
          "name": "Cyan",
          "role": "attribute",
          "semantic_type": "color_component_percent",
          "aliases": [
            "C",
            "CyanPercent"
          ],
          "description": "Cyan (C) component percentage of the color in CMYK representation (0-100)."
        },
        {
          "name": "Yellow",
          "role": "attribute",
          "semantic_type": "color_component_percent",
          "aliases": [
            "Y",
            "YellowPercent"
          ],
          "description": "Yellow (Y) component percentage of the color in CMYK representation (0-100)."
        },
        {
          "name": "Magenta",
          "role": "attribute",
          "semantic_type": "color_component_percent",
          "aliases": [
            "M",
            "MagentaPercent"
          ],
          "description": "Magenta (M) component percentage of the color in CMYK representation (0-100)."
        },
        {
          "name": "Black",
          "role": "attribute",
          "semantic_type": "color_component_percent",
          "aliases": [
            "K",
            "BlackPercent"
          ],
          "description": "Black (K) component percentage of the color in CMYK representation (0-100)."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsEnabled"
          ],
          "description": "Flag indicating whether this color is currently active and selectable for production."
        },
        {
          "name": "IsDefault",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Default",
            "IsDefaultColor"
          ],
          "description": "Flag indicating whether this color is considered a default option in the system."
        }
      ]
    },
    {
      "name": "Product Kit Member",
      "source": "dbo.ProductKit",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Product Kit Member",
        "default_label_column": "ID",
        "default_search_columns": [
          "ID",
          "KitID",
          "MemberID"
        ],
        "default_sort": {
          "column": "ID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ProductKitID",
            "PK_ProductKit",
            "ID"
          ],
          "description": "Surrogate primary key for the ProductKit row (unique row identifier)."
        },
        {
          "name": "KitID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "KitProductID",
            "ParentProductID",
            "ProductKit_KitID"
          ],
          "description": "Reference to the product that acts as the kit (parent product). Links to dbo.Product.ID."
        },
        {
          "name": "MemberID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ComponentProductID",
            "ChildProductID",
            "ProductKit_MemberID"
          ],
          "description": "Reference to the product that is a member/component of the kit. Links to dbo.Product.ID."
        },
        {
          "name": "IsMandatory",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Mandatory",
            "Required",
            "IsRequired"
          ],
          "description": "Indicates whether the member product is mandatory (True) or optional (False) within the kit."
        },
        {
          "name": "VersionSectionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "VersionSection",
            "SectionID",
            "ProductKit_VersionSectionID"
          ],
          "description": "Optional link to the VersionSection that scopes where or when this kit membership applies."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataManagerKey",
            "LegacyKey",
            "ExternalKey"
          ],
          "description": "Optional external/data-manager numeric key used for integration or legacy mapping. Many rows are null."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataManagerTable",
            "SourceTable",
            "ExternalTable"
          ],
          "description": "Optional name of the external/source table associated with the DMKey for integration or mapping purposes."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataManagerCharKey",
            "ExternalCharKey",
            "DMChar"
          ],
          "description": "Optional string key from an external system used together with DMTable/DMKey for mapping."
        },
        {
          "name": "FillOrder",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Order",
            "SortOrder",
            "Sequence"
          ],
          "description": "Integer indicating preferred fill/display order for members within the kit (lower = earlier)."
        }
      ]
    },
    {
      "name": "Product Part Definition",
      "source": "dbo.ProductPartDefinition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Product Part Definition",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "ProductPartDefinitionID",
            "PPD_ID",
            "ID"
          ],
          "description": "Surrogate primary key for the product part definition."
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "PartCode",
            "PPDCode",
            "Code"
          ],
          "description": "Short alphanumeric code identifying the part definition (business code)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "PartName",
            "PPDName",
            "Name"
          ],
          "description": "Human-readable name of the part definition. Suitable as the display label for the entity."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "PartDescription",
            "PPDDescription",
            "Description"
          ],
          "description": "Longer description or explanatory text for the part definition."
        },
        {
          "name": "UdacPartDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "UdacID",
            "ExternalPartDefinitionID",
            "UdacPartID"
          ],
          "description": "Reference to the related UdacPartDefinition (external/normalized part definition). Links to dbo.UdacPartDefinition.ID."
        },
        {
          "name": "MediumVersionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MediumVersion",
            "VersionID",
            "MediumVerID"
          ],
          "description": "Reference to the medium version that this part definition applies to (e.g., medium/catalog version). Links to dbo.MediumVersion.ID."
        },
        {
          "name": "SingleAppearance",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "SingleInstance",
            "SingleOccurrence",
            "SingleAppearanceFlag"
          ],
          "description": "Flag indicating whether the part should appear only once (True) or may appear multiple times (False)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [
            "DataManagerKey",
            "LegacyKey",
            "ExternalKey"
          ],
          "description": "Optional external numeric key used for integration/legacy mapping (data manager key)."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataManagerTable",
            "SourceTable",
            "ExternalTable"
          ],
          "description": "Optional name of the source/external table associated with DMKey (used for mapping/integration)."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataManagerCharKey",
            "ExternalCharKey",
            "DMChar"
          ],
          "description": "Optional character/string key from an external system used for mapping; often aligns with MediumVersion or other external id."
        },
        {
          "name": "EditorType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "EditorMode",
            "UIEditorType",
            "EditorTypeID"
          ],
          "description": "Integer code representing the editor or UI type used to manage this part definition (application-specific enum)."
        }
      ]
    },
    {
      "name": "Udac",
      "source": "dbo.Udac",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Product / UDAC",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "ID",
          "Description"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "UdacID",
            "ID",
            "ProductID"
          ],
          "description": "Surrogate unique identifier for the UDAC (product / unit of deliverable)"
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "UdacCode",
            "ProductCode",
            "SKU"
          ],
          "description": "Unique human-readable product code / catalog code (Greek collation)"
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "UdacName",
            "ProductName",
            "Title"
          ],
          "description": "Display name of the UDAC / product"
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "Details",
            "LongDescription"
          ],
          "description": "Free-text description or details about the UDAC"
        },
        {
          "name": "IsComposite",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "CompositeFlag",
            "IsBundle"
          ],
          "description": "True if this UDAC is a composite (made of multiple parts)"
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreationTimestamp"
          ],
          "description": "Date and time when the UDAC record was created"
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "user_name",
          "aliases": [
            "Creator",
            "CreatedUser"
          ],
          "description": "User who created the UDAC record"
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "LastModified"
          ],
          "description": "Date and time of the last modification"
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "user_name",
          "aliases": [
            "ModifiedUser",
            "LastModifiedBy"
          ],
          "description": "User who last modified the UDAC record"
        },
        {
          "name": "ProductTypeID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ProductType",
            "ProductTypeRef"
          ],
          "description": "FK -> ProductType.ID. Indicates the product type or category for this UDAC"
        },
        {
          "name": "DiscountPolicyID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "DiscountPolicy",
            "DiscountPolicyRef"
          ],
          "description": "FK -> UdacDiscountPolicy.ID. Associated discount policy for the UDAC (nullable)"
        },
        {
          "name": "MinMembers",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MinimumMembers",
            "MinQty"
          ],
          "description": "Minimum number of members/items required when this UDAC is used as a composite"
        },
        {
          "name": "MaxMembers",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaximumMembers",
            "MaxQty"
          ],
          "description": "Maximum number of members/items allowed for this UDAC"
        },
        {
          "name": "TargetValueType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "TargetType"
          ],
          "description": "Type code for the target value (domain-specific, currently unused / null in samples)"
        },
        {
          "name": "TargetValueID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "TargetID",
            "TargetValueRef"
          ],
          "description": "FK -> UdacPart.ID. Reference to a target part/value when applicable"
        },
        {
          "name": "HasOptionalMembers",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "OptionalMembersFlag"
          ],
          "description": "True if the composite UDAC can include optional members"
        },
        {
          "name": "IsDependent",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "DependentFlag"
          ],
          "description": "Indicates whether this UDAC depends on another entity (business-specific)"
        },
        {
          "name": "IsDeleted",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "DeletedFlag",
            "IsRemoved"
          ],
          "description": "Soft-delete flag; true when the UDAC is marked deleted"
        },
        {
          "name": "UdacType",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Type",
            "UdacTypeCode"
          ],
          "description": "Numeric type/category code for the UDAC (small domain of values)"
        },
        {
          "name": "NewUdacID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ReplacementUdacID",
            "MappedUdacID"
          ],
          "description": "FK -> Udac.ID. Points to a replacement or related UDAC (nullable)"
        },
        {
          "name": "CanvasPlanningGroupID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "PlanningGroupID",
            "CanvasGroupID"
          ],
          "description": "FK -> CanvasPlanningGroup.ID. Planning/grouping reference for canvas planning (nullable)"
        },
        {
          "name": "OldUdacCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "LegacyCode",
            "PreviousCode"
          ],
          "description": "Legacy / historical UDAC code retained for backward compatibility"
        },
        {
          "name": "Characterization",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "CharacterizationCode"
          ],
          "description": "Small numeric code describing characterization class for the UDAC"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMartKey",
            "DWKey"
          ],
          "description": "Data-mart / data-warehouse key used to join or identify this record in analytical systems"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMartTable",
            "DWTable"
          ],
          "description": "Name of the data-mart / data-warehouse table associated with DMKey"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey"
          ],
          "description": "Character key for data-mart joins (nullable)"
        },
        {
          "name": "LineEditorEnabled",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "LineEditorFlag",
            "EditorEnabled"
          ],
          "description": "True when line-editor UI is enabled for this UDAC"
        },
        {
          "name": "MaxAllowedChanges",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaxChanges",
            "AllowedChanges"
          ],
          "description": "Maximum number of allowed changes for this UDAC (business rule)"
        },
        {
          "name": "EnableValidationRules",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ValidationEnabled"
          ],
          "description": "Flag that enables validation rules for the UDAC"
        },
        {
          "name": "EnableKeyphraseCreation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "KeyphraseCreationEnabled"
          ],
          "description": "Flag that allows automatic or assisted creation of keyphrases"
        },
        {
          "name": "HasPriceRanges",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "PriceRangesFlag"
          ],
          "description": "Indicates if this UDAC supports multiple price ranges"
        },
        {
          "name": "Category",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "CategoryCode",
            "CatalogCategory"
          ],
          "description": "Top-level category code for the UDAC"
        },
        {
          "name": "ProdWorkflowID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ProductionWorkflowID",
            "WorkflowID"
          ],
          "description": "FK -> ProductionWorkflow.ID. Production workflow associated with the UDAC (nullable)"
        },
        {
          "name": "Deadline",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DeadlineDays",
            "DueBy"
          ],
          "description": "Deadline value (domain-specific; stored as integer)"
        },
        {
          "name": "IsAddOn",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "AddOnFlag",
            "IsOptionalAddOn"
          ],
          "description": "Indicates whether the UDAC is an add-on product"
        },
        {
          "name": "IsBudgetAmountExcluded",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "BudgetExcludedFlag"
          ],
          "description": "Flag to exclude UDAC amounts from budget calculations"
        },
        {
          "name": "NewSubscriptionUdacId",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SubscriptionUdacID",
            "SubscriptionReplacementID"
          ],
          "description": "FK -> Udac.ID. Points to UDAC used for subscription scenarios (nullable)"
        },
        {
          "name": "CanBeSubscribed",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "SubscribableFlag",
            "IsSubscribable"
          ],
          "description": "True when this UDAC can be subscribed to (recurring or subscription model)"
        },
        {
          "name": "IsDirProduct",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "DirectProductFlag",
            "IsDirectProduct"
          ],
          "description": "Indicates whether the UDAC is a direct product (business-specific meaning)"
        }
      ]
    },
    {
      "name": "Udac Part Definition",
      "source": "dbo.UdacPartDefinition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "UDAC Part Definition",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "Code",
          "DMKey"
        ],
        "default_sort": {
          "column": "Name",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "UdacPartDefinitionID",
            "ID"
          ],
          "description": "Unique identifier for the UDAC part definition"
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [
            "PartCode",
            "DefinitionCode"
          ],
          "description": "Short code for the UDAC part definition (Greek collation)"
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "person_or_org_name",
          "aliases": [
            "PartName",
            "DefinitionName",
            "Title"
          ],
          "description": "Display name for the UDAC part definition"
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [
            "Details",
            "LongDescription"
          ],
          "description": "Verbose description for the part definition"
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "CreatedDate",
            "CreationTimestamp"
          ],
          "description": "Record creation timestamp"
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "user_name",
          "aliases": [
            "Creator",
            "CreatedUser"
          ],
          "description": "User or system account that created the part definition"
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [
            "ModifiedDate",
            "LastModified"
          ],
          "description": "Last-modified timestamp (mostly null in sample data)"
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "user_name",
          "aliases": [
            "ModifiedUser",
            "LastModifiedBy"
          ],
          "description": "User who last modified the part definition (nullable)"
        },
        {
          "name": "SingleAppearance",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "SingleAppearanceFlag",
            "SingleOccurence"
          ],
          "description": "If true, the part should appear only once in its containing composite"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMartKey",
            "DWKey"
          ],
          "description": "Data-mart key that maps this part definition to analytical data (unique per row)"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [
            "DataMartTable"
          ],
          "description": "Name of the data-mart table where this definition is mapped (e.g., DPSBasicUdac)"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "DataMartCharKey"
          ],
          "description": "Optional character key used with the data-mart mapping (nullable)"
        },
        {
          "name": "EditorType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "EditorMode",
            "EditorTypeCode"
          ],
          "description": "Internal code for the editor type used for this part definition"
        }
      ]
    },
    {
      "name": "UdacPart",
      "source": "dbo.UdacPart",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Udac Part",
        "default_label_column": "ID",
        "default_search_columns": [
          "ID",
          "UdacID",
          "UdacPartDefinitionID"
        ],
        "default_sort": {
          "column": "FillOrder",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "Id",
            "UdacPartID",
            "PartID"
          ],
          "description": "Surrogate unique identifier for the UdacPart row"
        },
        {
          "name": "UdacID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "UdacId",
            "UDAC_ID",
            "ParentUdacID"
          ],
          "description": "Reference to the parent Udac (foreign key -> dbo.Udac.ID)"
        },
        {
          "name": "UdacPartDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "UdacPartDefinitionId",
            "PartDefinitionID",
            "DefinitionID"
          ],
          "description": "Reference to the Udac part definition (foreign key -> dbo.UdacPartDefinition.ID)"
        },
        {
          "name": "IsAddon",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Is_Addon",
            "Addon",
            "IsOptional"
          ],
          "description": "Flag indicating whether this part is an add-on (true/false)"
        },
        {
          "name": "MinOccurence",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MinOccurrence",
            "MinOccur",
            "MinimumCount"
          ],
          "description": "Minimum number of times this part can occur (may be NULL)"
        },
        {
          "name": "MaxOccurence",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaxOccurrence",
            "MaxOccur",
            "MaximumCount"
          ],
          "description": "Maximum number of times this part can occur (may be NULL)"
        },
        {
          "name": "PriceMode",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [
            "Price_Mode",
            "PricingMode"
          ],
          "description": "Pricing mode for the part (numeric code, often treated as an enumeration). Many rows are default/0."
        },
        {
          "name": "ContentAttributePermittedValues",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "ContentAttributeValues",
            "PermittedValues",
            "AllowedValues"
          ],
          "description": "Serialized or delimited list of permitted values for a content attribute (nullable)"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DmKey",
            "DimensionKey"
          ],
          "description": "Optional numeric key used for mapping to dimension/lookup tables (mostly null)"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DmTable",
            "DimensionTable"
          ],
          "description": "Optional name of a dimension/lookup table used with DMKey (nullable)"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DmCharKey",
            "DimensionCharKey"
          ],
          "description": "Optional character key for dimension mapping (nullable)"
        },
        {
          "name": "FillOrder",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Fill_Order",
            "DisplayOrder",
            "Sequence"
          ],
          "description": "Ordering value used when filling or displaying parts; commonly used for sort."
        },
        {
          "name": "ColumnNames",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Column_Names",
            "Columns"
          ],
          "description": "Optional serialized list of column names associated with this part (nullable, large text)"
        }
      ]
    },
    {
      "name": "UdacProdRole",
      "source": "dbo.UdacProdRole",
      "primary_key": [
        "RoleID",
        "UdacID"
      ],
      "display": {
        "display_name": "Udac Product Role",
        "default_label_column": "UdacID",
        "default_search_columns": [
          "UdacID",
          "RoleID"
        ],
        "default_sort": {
          "column": "UdacID",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "UdacID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "UdacId",
            "UDAC_ID",
            "ParentUdacID"
          ],
          "description": "Reference to the Udac entity (foreign key -> dbo.Udac.ID). Part of the composite primary key."
        },
        {
          "name": "RoleID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "RoleId",
            "ROLE_ID"
          ],
          "description": "Reference to the Role entity (foreign key -> dbo.Role.ID). Part of the composite primary key."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DmKey",
            "DimensionKey"
          ],
          "description": "Optional numeric key for dimension mapping (mostly null)"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DmTable",
            "DimensionTable"
          ],
          "description": "Optional name of a dimension/lookup table used with DMKey (nullable)"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DmCharKey",
            "DimensionCharKey"
          ],
          "description": "Optional character key for dimension mapping (nullable)"
        }
      ]
    },
    {
      "name": "Content Attribute Definition",
      "source": "dbo.UdacContentAttributeDefinition",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Content Attribute Definition",
        "default_label_column": "Name",
        "default_search_columns": [
          "Name",
          "ID",
          "UdacPartDefinitionID"
        ],
        "default_sort": {
          "column": "FillOrder",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "AttributeID",
            "AttrID",
            "ID"
          ],
          "description": "Unique identifier for the content attribute definition."
        },
        {
          "name": "UdacPartDefinitionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "PartDefinitionID",
            "UdacPartID",
            "PartID"
          ],
          "description": "Reference to the parent part definition that this attribute belongs to (foreign key to UdacPartDefinition.ID)."
        },
        {
          "name": "Name",
          "role": "label",
          "semantic_type": "name",
          "aliases": [
            "AttributeName",
            "Title",
            "Name"
          ],
          "description": "Human-friendly name of the attribute (used as the primary label)."
        },
        {
          "name": "Type",
          "role": "attribute",
          "semantic_type": "integer_code",
          "aliases": [
            "AttributeType",
            "TypeCode"
          ],
          "description": "Data type or input control code for the attribute (e.g., text, number, dropdown) represented as an integer code."
        },
        {
          "name": "IsRequired",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Required",
            "IsMandatory"
          ],
          "description": "Flag indicating whether the attribute must be provided (true = required)."
        },
        {
          "name": "DefaultValue",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "Default",
            "DefaultVal"
          ],
          "description": "Optional default value shown when creating or editing content for this attribute."
        },
        {
          "name": "MinValue",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MinimumValue",
            "Min"
          ],
          "description": "Minimum allowed numeric value for the attribute (if applicable). Often null when not applicable."
        },
        {
          "name": "MaxValue",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaximumValue",
            "Max"
          ],
          "description": "Maximum allowed numeric value for the attribute (if applicable). Often null when not applicable."
        },
        {
          "name": "IsReadonly",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Readonly",
            "IsReadOnly"
          ],
          "description": "Flag that indicates whether the attribute is read-only in the UI."
        },
        {
          "name": "VisibilityMask",
          "role": "attribute",
          "semantic_type": "code_mask",
          "aliases": [
            "Visibility",
            "Mask"
          ],
          "description": "4-character visibility bitmask that controls where/when the attribute is visible."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMapKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used to map this attribute to an external data map or dictionary."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMapTable",
            "DM_Table"
          ],
          "description": "Optional name of the external table or lookup used by the data mapping for this attribute."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMapCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character key used for mapping to external reference tables (when mapping uses strings)."
        },
        {
          "name": "FillOrder",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "Order",
            "DisplayOrder",
            "Fill_Order"
          ],
          "description": "Numeric order used to sequence attributes when rendering forms or lists."
        },
        {
          "name": "MaxLength",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "MaximumLength",
            "MaxLen"
          ],
          "description": "Maximum character length allowed for text attributes (0 indicates no limit or not applicable)."
        },
        {
          "name": "LookupTableName",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "LookupTable",
            "LookupTable_Name"
          ],
          "description": "Optional lookup table name for attributes that use a table-driven list of valid values."
        },
        {
          "name": "EnableValidationRules",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "ValidationEnabled",
            "EnableValidation"
          ],
          "description": "Flag to indicate whether server/client validation rules are enabled for this attribute."
        },
        {
          "name": "EnableKeyphraseCreation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "KeyphraseCreationEnabled",
            "EnableKeyphrase"
          ],
          "description": "Flag indicating whether automated keyphrase generation is enabled for this attribute."
        },
        {
          "name": "LookupFiltered",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "LookupFilter",
            "Lookup_Filter"
          ],
          "description": "Optional filter expression to apply to the lookup list when populating dropdowns (nullable)."
        },
        {
          "name": "DDLLookupFiltered",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DDLLookupFilter",
            "DDL_Filter"
          ],
          "description": "Optional filter expression specifically for dropdown lists (nullable)."
        }
      ]
    },
    {
      "name": "Version Group Item",
      "source": "dbo.VersionGroupItem",
      "primary_key": [
        "ID"
      ],
      "display": {
        "display_name": "Version Group Item",
        "default_label_column": "Description",
        "default_search_columns": [
          "Description",
          "ID",
          "SourceHeadingID",
          "DMKey"
        ],
        "default_sort": {
          "column": "Description",
          "direction": "asc"
        },
        "attribute_order": []
      },
      "columns": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "id",
          "aliases": [
            "VersionGroupItemID",
            "VGItemID",
            "ID"
          ],
          "description": "Unique identifier for the version group item."
        },
        {
          "name": "ParentID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "ParentItemID",
            "ParentVGItemID"
          ],
          "description": "Optional reference to the parent VersionGroupItem (self-referencing foreign key)."
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [
            "Title",
            "Label",
            "Description"
          ],
          "description": "Descriptive text for the group item (used as the primary display label)."
        },
        {
          "name": "Type",
          "role": "attribute",
          "semantic_type": "integer_code",
          "aliases": [
            "ItemType",
            "TypeCode"
          ],
          "description": "Type code for the group item (business-defined integer classification)."
        },
        {
          "name": "MediumVersionID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "MediumVersion",
            "MediumVersionRef"
          ],
          "description": "Reference to the medium version this item is associated with (foreign key to MediumVersion.ID)."
        },
        {
          "name": "SourceGroupItemID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SourceGroupItem",
            "SourceVGItemID"
          ],
          "description": "Optional reference to the originating group item (foreign key to VersionGroupItem.ID)."
        },
        {
          "name": "SourceHeadingID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SourceHeading",
            "HeadingID"
          ],
          "description": "Reference to the source heading that this group item maps to (foreign key to MasterHeading.ID)."
        },
        {
          "name": "SourceGeoID",
          "role": "foreign_key",
          "semantic_type": "id",
          "aliases": [
            "SourceGeo",
            "GeoAreaGroupID"
          ],
          "description": "Optional reference to a geographic area/group (foreign key to MasterGeoAreaGroup.ID)."
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "DataMapKey",
            "DM_Key"
          ],
          "description": "Optional numeric key used for mapping the group item to external data maps or dictionaries."
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMapTable",
            "DM_Table"
          ],
          "description": "Name of the data map table used for external mapping of this group item."
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [
            "DataMapCharKey",
            "DM_CharKey"
          ],
          "description": "Optional character key used for mapping to external references when a string key is required."
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [
            "Active",
            "IsEnabled"
          ],
          "description": "Flag indicating whether this group item is currently active and should be displayed/used."
        },
        {
          "name": "DescriptionCIAI",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [
            "Description_CIAI",
            "Description_CaseInsensitive"
          ],
          "description": "Alternate/case-insensitive form of the description used for searches or comparisons."
        },
        {
          "name": "RootID",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [
            "RootItemID",
            "RootID"
          ],
          "description": "Identifier of the root node in the hierarchy for this item (helps group/partition hierarchies)."
        }
      ]
    }
  ],
  "dimensions": [
    {
      "name": "AutoExtractCalendar",
      "source": "dbo.AutoExtractCalendar",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "CalendarDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "Year",
          "role": "attribute",
          "semantic_type": "year",
          "aliases": [],
          "description": null
        },
        {
          "name": "Quarter",
          "role": "attribute",
          "semantic_type": "quarter",
          "aliases": [],
          "description": null
        },
        {
          "name": "MonthNumber",
          "role": "attribute",
          "semantic_type": "month_number",
          "aliases": [],
          "description": null
        },
        {
          "name": "MonthName",
          "role": "attribute",
          "semantic_type": "month_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DayOfMonth",
          "role": "attribute",
          "semantic_type": "day",
          "aliases": [],
          "description": null
        },
        {
          "name": "WeekdayName",
          "role": "attribute",
          "semantic_type": "weekday_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Year",
          "Quarter",
          "MonthName",
          "MonthNumber",
          "DayOfMonth",
          "WeekdayName",
          "CalendarDate",
          "Description"
        ]
      }
    },
    {
      "name": "Calendar",
      "source": "dbo.Calendar",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "CalendarDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "Year",
          "role": "attribute",
          "semantic_type": "year",
          "aliases": [],
          "description": null
        },
        {
          "name": "Quarter",
          "role": "attribute",
          "semantic_type": "quarter",
          "aliases": [],
          "description": null
        },
        {
          "name": "MonthNumber",
          "role": "attribute",
          "semantic_type": "month_number",
          "aliases": [],
          "description": null
        },
        {
          "name": "MonthName",
          "role": "attribute",
          "semantic_type": "month_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DayOfMonth",
          "role": "attribute",
          "semantic_type": "day",
          "aliases": [],
          "description": null
        },
        {
          "name": "WeekdayName",
          "role": "attribute",
          "semantic_type": "weekday_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Year",
          "Quarter",
          "MonthName",
          "MonthNumber",
          "DayOfMonth",
          "WeekdayName",
          "CalendarDate",
          "Description"
        ]
      }
    },
    {
      "name": "Campaign",
      "source": "dbo.Campaign",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [],
          "description": null
        },
        {
          "name": "CampaignTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "State",
          "role": "attribute",
          "semantic_type": "status",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "StartedOn",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "StartedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "ClosedOn",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "ClosedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "CancelledOn",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "CancelledBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "PlannedStartOn",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "PlannedCloseOn",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "SourceCampaignID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "SelectedAllocationPlanID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetGroupItemNumber",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "dm_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "dm_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "dm_char_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumVersionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "GeographicDestinationID",
          "role": "attribute",
          "semantic_type": "geography_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Version",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "RequiresTargetingRecalculation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "PercentImprovementDeterioration",
          "role": "attribute",
          "semantic_type": "percentage",
          "aliases": [],
          "description": null
        },
        {
          "name": "PrintedTarget",
          "role": "attribute",
          "semantic_type": "decimal",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "Code",
          "Description",
          "CampaignTypeID",
          "State",
          "GeographicDestinationID",
          "StartedOn",
          "ClosedOn",
          "PlannedStartOn",
          "PlannedCloseOn",
          "CreatedOn"
        ]
      }
    },
    {
      "name": "Campaign Type",
      "source": "dbo.CampaignType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "dm_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "dm_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "dm_char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description"
        ]
      }
    },
    {
      "name": "Campaign Group",
      "source": "dbo.CampaignGroup",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "key",
          "aliases": [],
          "description": null
        },
        {
          "name": "CampaignID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "ChannelTypeID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludedExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "LastInitializedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "FinalizedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeAndExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludeAndExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "TotalQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludedOthersQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "ChannelTypeID",
          "CampaignID",
          "CreatedOn",
          "TotalQuantity"
        ]
      }
    },
    {
      "name": "Campaign Segment",
      "source": "dbo.CampaignSegment",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "key",
          "aliases": [],
          "description": null
        },
        {
          "name": "CampaignID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "StartDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "EndDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "WorkingDays",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludedExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "LastInitializedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "FinalizedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "AssignmentSalesmanSupervisorFromPreviousPeriod",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "SplitSalesmanSegment",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeAndExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludeAndExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "TotalQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Status",
          "role": "attribute",
          "semantic_type": "status",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludedOthersQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "SubStatus",
          "role": "attribute",
          "semantic_type": "status",
          "aliases": [],
          "description": null
        },
        {
          "name": "SecondIncludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "SecondExcludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "SecondExcludedExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "SecondIncludeExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "SecondTotalQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "StartDate",
          "EndDate",
          "Status",
          "TotalQuantity"
        ]
      }
    },
    {
      "name": "Campaign Channel Type",
      "source": "dbo.CampaignChannelType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "CampaignID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "ChannelTypeID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeExpression",
          "role": "attribute",
          "semantic_type": "expression_text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludedExpression",
          "role": "attribute",
          "semantic_type": "expression_text",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "LastInitializedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "FinalizedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeAndExpression",
          "role": "attribute",
          "semantic_type": "expression_text",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludeAndExpression",
          "role": "attribute",
          "semantic_type": "expression_text",
          "aliases": [],
          "description": null
        },
        {
          "name": "TotalQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "expression_text",
          "aliases": [],
          "description": null
        },
        {
          "name": "ExcludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "expression_text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IncludedOthersQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CampaignID",
          "ChannelTypeID",
          "IncludeExpression",
          "IncludeAssigmentExpression",
          "IncludeAndExpression",
          "IncludedQuantity",
          "IncludedOthersQuantity",
          "ExcludeAssigmentExpression",
          "ExcludeAndExpression",
          "ExcludedExpression",
          "ExcludedQuantity",
          "TotalQuantity",
          "CreatedOn",
          "LastInitializedOn",
          "FinalizedOn"
        ]
      }
    },
    {
      "name": "Campaign Region",
      "source": "dbo.CampaignRegion",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "CampaignID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "GeoModelVersion",
          "role": "attribute",
          "semantic_type": "version",
          "aliases": [],
          "description": null
        },
        {
          "name": "BroaderAreaID",
          "role": "attribute",
          "semantic_type": "area_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "GeographicalTypeID",
          "role": "attribute",
          "semantic_type": "geo_type_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "GeographicalTypeDescription",
          "role": "attribute",
          "semantic_type": "region_name",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CampaignID",
          "GeoModelVersion",
          "BroaderAreaID",
          "GeographicalTypeID",
          "GeographicalTypeDescription"
        ]
      }
    },
    {
      "name": "Campaign Medium Type",
      "source": "dbo.CampaignMediumType",
      "keys": [
        "CampaignTypeID",
        "MediumTypeID"
      ],
      "attributes": [
        {
          "name": "CampaignTypeID",
          "role": "key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumTypeID",
          "role": "key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CampaignTypeID",
          "MediumTypeID",
          "DMKey",
          "DMCharKey",
          "DMTable"
        ]
      }
    },
    {
      "name": "Campaign Range",
      "source": "dbo.CampaignRange",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "CampaignID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "RangeType",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [],
          "description": null
        },
        {
          "name": "RangeUpLimt",
          "role": "attribute",
          "semantic_type": "number",
          "aliases": [],
          "description": null
        },
        {
          "name": "RangeDownLimit",
          "role": "attribute",
          "semantic_type": "number",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CampaignID",
          "RangeType",
          "RangeDownLimit",
          "RangeUpLimt",
          "Description"
        ]
      }
    },
    {
      "name": "Channel Type",
      "source": "dbo.ChannelType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "CaseTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "CaseTypeID",
          "IsActive"
        ]
      }
    },
    {
      "name": "Sub Channel",
      "source": "dbo.SubChannel",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ChannelTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DefaultSalesmanID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "ChannelTypeID",
          "Description",
          "IsActive",
          "DefaultSalesmanID"
        ]
      }
    },
    {
      "name": "Geographical Definition",
      "source": "dbo.GeographicalDefinition",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "geo_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "localized_text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "data_model_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "data_model_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "data_model_char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ID"
        ]
      }
    },
    {
      "name": "Master Geo Area Group",
      "source": "dbo.MasterGeoAreaGroup",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "geo_group_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "group_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "group_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "ParentGeoAreaGroupID",
          "role": "hierarchy",
          "semantic_type": "parent_group_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "data_model_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "data_model_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "data_model_char_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "GeoModelVersion",
          "role": "attribute",
          "semantic_type": "model_version",
          "aliases": [],
          "description": null
        },
        {
          "name": "BroaderAreaID",
          "role": "lookup",
          "semantic_type": "broader_area_id",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "BroaderAreaID",
          "ParentGeoAreaGroupID",
          "Description",
          "Code",
          "IsActive"
        ]
      }
    },
    {
      "name": "Master Heading",
      "source": "dbo.MasterHeading",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "attribute",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": "Optional classification/code for the heading (often Greek-coded)"
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text_greek",
          "aliases": [],
          "description": "Primary description in Greek"
        },
        {
          "name": "DescriptionEN",
          "role": "attribute",
          "semantic_type": "text_english",
          "aliases": [],
          "description": "Optional English description; high null rate"
        },
        {
          "name": "ParentHeadingID",
          "role": "hierarchy",
          "semantic_type": "hierarchy_id",
          "aliases": [],
          "description": "Self-referencing parent for heading hierarchy"
        },
        {
          "name": "IsThematicModule",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Indicates active/inactive status"
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Data-migration numeric key (ETL lineage)"
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "table_name",
          "aliases": [],
          "description": "Source table name for migration/lineage"
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "text",
          "aliases": [],
          "description": "Optional character key from source (empty in this dataset)"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Code",
          "Description",
          "DescriptionEN",
          "IsThematicModule",
          "IsActive",
          "ParentHeadingID"
        ]
      }
    },
    {
      "name": "Version Section",
      "source": "dbo.VersionSection",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "attribute",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": "Optional short code for the section"
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Section name (often Greek text)"
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "ParentID",
          "role": "hierarchy",
          "semantic_type": "hierarchy_id",
          "aliases": [],
          "description": "Self-referencing parent for section hierarchy"
        },
        {
          "name": "SeqNo",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Sequence number for ordering sections"
        },
        {
          "name": "CatalogType",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [],
          "description": "Small integer representing catalog type (lookup/enum)"
        },
        {
          "name": "VersionGroupItemID",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Optional grouping id for version groups"
        },
        {
          "name": "MediumVersionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "FK to MediumVersion (represents edition/version context)"
        },
        {
          "name": "MasterSectionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "Optional FK to MasterSection"
        },
        {
          "name": "HasSuperHeadings",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Indicates whether section contains super-headings"
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "person",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "person",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Data-migration numeric key (ETL lineage); many distinct values"
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "table_name",
          "aliases": [],
          "description": "Source table name for migration/lineage"
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "Stylesheet",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Optional stylesheet/reference for rendering the section"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Code",
          "Name",
          "Description",
          "ParentID",
          "SeqNo",
          "CatalogType",
          "MediumVersionID",
          "MasterSectionID",
          "CreatedOn",
          "CreatedBy"
        ]
      }
    },
    {
      "name": "Medium",
      "source": "dbo.Medium",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "username",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "username",
          "aliases": [],
          "description": null
        },
        {
          "name": "GeographicalDefinitionID",
          "role": "foreign_key",
          "semantic_type": "geographical_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumKindID",
          "role": "foreign_key",
          "semantic_type": "medium_kind_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumTypeID",
          "role": "foreign_key",
          "semantic_type": "medium_type_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "CompanyID",
          "role": "foreign_key",
          "semantic_type": "company_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "etl_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "etl_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "etl_char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "Code",
          "MediumTypeID",
          "MediumKindID",
          "GeographicalDefinitionID",
          "CompanyID",
          "IsActive",
          "Description",
          "CreatedOn",
          "CreatedBy",
          "ModifiedOn",
          "ModifiedBy"
        ]
      }
    },
    {
      "name": "Medium Version",
      "source": "dbo.MediumVersion",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumID",
          "role": "foreign_key",
          "semantic_type": "medium_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [],
          "description": null
        },
        {
          "name": "Year",
          "role": "attribute",
          "semantic_type": "year",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "username",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "username",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "ImportContractsStartDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "ImportContractsEndDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "SalesEndDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "ChangesCompletionDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "PublishDate",
          "role": "attribute",
          "semantic_type": "date",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "etl_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "etl_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "etl_char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Year",
          "Name",
          "Code",
          "MediumID",
          "ImportContractsStartDate",
          "ImportContractsEndDate",
          "PublishDate",
          "SalesEndDate",
          "ChangesCompletionDate",
          "IsActive",
          "Description",
          "CreatedOn",
          "CreatedBy"
        ]
      }
    },
    {
      "name": "Medium Version - Broader Area",
      "source": "dbo.MediumVersionBroaderArea",
      "keys": [
        "MediumVersionID",
        "BroaderAreaID",
        "GeoModelVersion"
      ],
      "attributes": [
        {
          "name": "MediumVersionID",
          "role": "foreign_key",
          "semantic_type": "integer",
          "aliases": [],
          "description": "FK to MediumVersion.ID (identifier of the medium version)"
        },
        {
          "name": "BroaderAreaID",
          "role": "foreign_key",
          "semantic_type": "area_code",
          "aliases": [],
          "description": "Code of the broader geographic area (FK to BroaderAreaLookUp.BroaderAreaID)"
        },
        {
          "name": "GeoModelVersion",
          "role": "attribute",
          "semantic_type": "version",
          "aliases": [],
          "description": "Geographic model version that this mapping was created with"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "GeoModelVersion",
          "MediumVersionID",
          "BroaderAreaID"
        ]
      }
    },
    {
      "name": "Medium Version Distribution - Geography",
      "source": "dbo.MediumVersionDistribution",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": "Surrogate identifier for the distribution record"
        },
        {
          "name": "MediumVersionPrintVersionID",
          "role": "foreign_key",
          "semantic_type": "integer",
          "aliases": [],
          "description": "FK to MediumVersionPrintVersion.ID (links to a specific printed version of a medium)"
        },
        {
          "name": "PrefectureID",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": "Administrative prefecture code"
        },
        {
          "name": "PrefectureName",
          "role": "attribute",
          "semantic_type": "place_name",
          "aliases": [],
          "description": "Human readable name of the prefecture"
        },
        {
          "name": "GeoAreaType",
          "role": "attribute",
          "semantic_type": "geo_area_type",
          "aliases": [],
          "description": "Type of geographic area (e.g., prefecture, municipality, postal area)"
        },
        {
          "name": "GeoAreaID",
          "role": "attribute",
          "semantic_type": "area_code",
          "aliases": [],
          "description": "Identifier for the geographic area (generic area code)"
        },
        {
          "name": "GeoAreaName",
          "role": "attribute",
          "semantic_type": "area_name",
          "aliases": [],
          "description": "Human readable name of the geographic area"
        },
        {
          "name": "Quantity",
          "role": "measure",
          "semantic_type": "measure",
          "aliases": [],
          "description": "Distribution quantity (e.g., number of items distributed)"
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": "Optional data-mart key linking to a dimensional table"
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "table_name",
          "aliases": [],
          "description": "Name of the dimensional table referenced by DMKey"
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "string_key",
          "aliases": [],
          "description": "Optional character key used to link to other systems or tables"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "GeoAreaType",
          "PrefectureName",
          "GeoAreaName",
          "Quantity"
        ]
      }
    },
    {
      "name": "Medium Version Print Variant",
      "source": "dbo.MediumVersionPrintVersion",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumVersionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "MediumVersionID",
          "DMKey",
          "ID"
        ]
      }
    },
    {
      "name": "Medium Version Print Variant Section",
      "source": "dbo.MediumVersionPrintVersionSection",
      "keys": [
        "ID",
        "MediumVersionPrintVersionID",
        "VesrionSectionID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumVersionPrintVersionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "VesrionSectionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "VesrionSectionID",
          "MediumVersionPrintVersionID",
          "DMKey",
          "ID"
        ]
      }
    },
    {
      "name": "Product",
      "source": "dbo.Product",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "product_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "CodeCIAI",
          "role": "attribute",
          "semantic_type": "product_code_normalized",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "product_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "NameCIAI",
          "role": "attribute",
          "semantic_type": "product_name_normalized",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "description",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsComposite",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "HasOptionalMembers",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsDependent",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsDeleted",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "LineEditorEnabled",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "EnableValidationRules",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "EnableKeyphraseCreation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "HasPriceRanges",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsBudgetAmountExcluded",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "MinMembers",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "MaxMembers",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "MaxAllowedChanges",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Characterization",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "ProductTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DiscountPolicyID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetValueType",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetValueID",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "UdacID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumVersionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "CanvasPlanningGroupID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "Code",
          "ProductTypeID",
          "UdacID",
          "Characterization",
          "MinMembers",
          "MaxMembers",
          "IsComposite",
          "IsDeleted",
          "Description"
        ]
      }
    },
    {
      "name": "Product Type",
      "source": "dbo.ProductType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "product_type_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ID"
        ]
      }
    },
    {
      "name": "Pricelist Item",
      "source": "dbo.PricelistItem",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "VersionSectionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "References dbo.VersionSection.ID"
        },
        {
          "name": "ProductID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "References dbo.Product.ID"
        },
        {
          "name": "ApplyToSection",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Flag indicating rule applies to whole section"
        },
        {
          "name": "ApplyToSubSection",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Flag indicating rule applies to subsection"
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Data-mapping integer key (nullable, typically unused)"
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": "Data-mapping table name (nullable, typically unused)"
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": "Data-mapping character key (nullable, typically unused)"
        },
        {
          "name": "IsInactive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Soft-delete / inactive flag"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "ProductID",
          "VersionSectionID",
          "ApplyToSection",
          "ApplyToSubSection",
          "IsInactive"
        ]
      }
    },
    {
      "name": "Product Part",
      "source": "dbo.ProductPart",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "ProductID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "References dbo.Product.ID"
        },
        {
          "name": "ProductPartDefinitionID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "References dbo.ProductPartDefinition.ID"
        },
        {
          "name": "IsAddon",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Indicates part is an add-on"
        },
        {
          "name": "MinOccurence",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Minimum allowed occurrences"
        },
        {
          "name": "MaxOccurence",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Maximum allowed occurrences"
        },
        {
          "name": "PriceMode",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [],
          "description": "Pricing mode (small integer enum)"
        },
        {
          "name": "ContentAttributePermittedValues",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Allowed values for content attribute (nullable)"
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Data-mapping integer key (nullable, typically unused)"
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": "Data-mapping table name (nullable, typically unused)"
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": "Data-mapping character key (nullable, typically unused)"
        },
        {
          "name": "FillOrder",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Ordering hint for filling/assembly"
        },
        {
          "name": "ColumnNames",
          "role": "technical",
          "semantic_type": "text",
          "aliases": [],
          "description": "Serialized column names or metadata (nullable)"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "ProductID",
          "ProductPartDefinitionID",
          "IsAddon",
          "MinOccurence",
          "MaxOccurence",
          "PriceMode",
          "FillOrder"
        ]
      }
    },
    {
      "name": "Company",
      "source": "dbo.Company",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "Code",
          "IsActive"
        ]
      }
    },
    {
      "name": "Pricelist Item Detail",
      "source": "dbo.PricelistItemDetail",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "PricelistItemID",
          "role": "attribute",
          "semantic_type": "foreign_key_pricelistitem",
          "aliases": [],
          "description": null
        },
        {
          "name": "ProductID",
          "role": "attribute",
          "semantic_type": "foreign_key_product",
          "aliases": [],
          "description": null
        },
        {
          "name": "ProductPartID",
          "role": "attribute",
          "semantic_type": "foreign_key_product_part",
          "aliases": [],
          "description": null
        },
        {
          "name": "KitID",
          "role": "attribute",
          "semantic_type": "foreign_key_product_kit",
          "aliases": [],
          "description": null
        },
        {
          "name": "MeasurementType",
          "role": "attribute",
          "semantic_type": "measurement_type",
          "aliases": [],
          "description": null
        },
        {
          "name": "UnitAmount",
          "role": "measure",
          "semantic_type": "decimal",
          "aliases": [],
          "description": null
        },
        {
          "name": "ComplexPrice",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "AllowableQuantities",
          "role": "attribute",
          "semantic_type": "text_list",
          "aliases": [],
          "description": null
        },
        {
          "name": "AmountsPerAllowableQuantities",
          "role": "attribute",
          "semantic_type": "text_list",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "ProductID",
          "ProductPartID",
          "MeasurementType",
          "UnitAmount"
        ]
      }
    },
    {
      "name": "Role",
      "source": "dbo.Role",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "role_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "Permissions",
          "role": "attribute",
          "semantic_type": "bitmask",
          "aliases": [],
          "description": null
        },
        {
          "name": "MaxDiscount",
          "role": "attribute",
          "semantic_type": "decimal",
          "aliases": [],
          "description": null
        },
        {
          "name": "DiscountIsFixedAmount",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integration_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "integration_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "integration_char_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "ForwardFromContractChange",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "ForwardInternalProduct",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "ForwardTicketType",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "LoginUrl",
          "role": "attribute",
          "semantic_type": "url",
          "aliases": [],
          "description": null
        },
        {
          "name": "ParentID",
          "role": "attribute",
          "semantic_type": "hierarchy_parent",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "InboxViewType",
          "role": "attribute",
          "semantic_type": "enumeration",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "IsActive",
          "Description",
          "ParentID",
          "ID",
          "InboxViewType"
        ]
      }
    },
    {
      "name": "User",
      "source": "dbo.User",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "UserName",
          "role": "attribute",
          "semantic_type": "username",
          "aliases": [],
          "description": null
        },
        {
          "name": "Password",
          "role": "attribute",
          "semantic_type": "hashed_password",
          "aliases": [],
          "description": null
        },
        {
          "name": "FirstName",
          "role": "attribute",
          "semantic_type": "first_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "LastName",
          "role": "attribute",
          "semantic_type": "last_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "username",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "username",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "UnitID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "SalesCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsUnitManager",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "SalesTeleCode",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Comments",
          "role": "attribute",
          "semantic_type": "memo",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integration_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "integration_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "integration_char_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "StopSales",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "Phone",
          "role": "attribute",
          "semantic_type": "phone",
          "aliases": [],
          "description": null
        },
        {
          "name": "Email",
          "role": "attribute",
          "semantic_type": "email",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsPaused",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "IsActive",
          "LastName",
          "FirstName",
          "UserName",
          "Email",
          "UnitID"
        ]
      }
    },
    {
      "name": "Legal Form",
      "source": "dbo.LegalForm",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "source_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ID",
          "DMKey",
          "DMTable"
        ]
      }
    },
    {
      "name": "Organizational Unit",
      "source": "dbo.Unit",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "ParentID",
          "role": "attribute",
          "semantic_type": "hierarchy_parent",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "ChannelTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "LeftIndex",
          "role": "attribute",
          "semantic_type": "left_index",
          "aliases": [],
          "description": null
        },
        {
          "name": "RightIndex",
          "role": "attribute",
          "semantic_type": "right_index",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "source_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ParentID",
          "LeftIndex",
          "RightIndex",
          "IsActive",
          "CreatedOn",
          "CreatedBy"
        ]
      }
    },
    {
      "name": "Customer Solvency",
      "source": "dbo.CustomerSolvency",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "short_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "Code",
          "ID"
        ]
      }
    },
    {
      "name": "Customer Source",
      "source": "dbo.CustomerSource",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ID"
        ]
      }
    },
    {
      "name": "Contact Relationship Type",
      "source": "dbo.ContactRelationshipType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Surrogate / natural key for the contact relationship type"
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "relationship_type",
          "aliases": [],
          "description": "Human-readable relationship type (Greek). Examples: 'Επικηρυματαίαις', 'Υπεύθυνος Πωλήσεων', 'Υπεύθυνος Marketing'. Use for display and filtering."
        },
        {
          "name": "DMKey",
          "role": "mapping_key",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Reserved data-mart mapping key (currently all null)."
        },
        {
          "name": "DMTable",
          "role": "mapping_table",
          "semantic_type": "text",
          "aliases": [],
          "description": "Reserved data-mart mapping table name (currently all null)."
        },
        {
          "name": "DMCharKey",
          "role": "mapping_char_key",
          "semantic_type": "text",
          "aliases": [],
          "description": "Reserved data-mart mapping character key (currently all null)."
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ID"
        ]
      }
    },
    {
      "name": "Customer Update Status",
      "source": "dbo.CustomerUpdate",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Identifier for the customer update/status code."
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "update_status",
          "aliases": [],
          "description": "Status description for customer record processing (e.g., 'To Be Checked', 'Confirmed', 'To Be Deleted'). Use for display, filtering and grouping."
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ID"
        ]
      }
    },
    {
      "name": "CaseType",
      "source": "dbo.CaseType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "ContextEntityType",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "ContextEntityType2",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "ParentId",
          "role": "attribute",
          "semantic_type": "hierarchy_parent",
          "aliases": [],
          "description": null
        },
        {
          "name": "Version",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "mapping",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "mapping",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "mapping",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "Options",
          "role": "attribute",
          "semantic_type": "json",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "ParentId",
          "Description",
          "Code",
          "ContextEntityType",
          "IsActive",
          "Version"
        ]
      }
    },
    {
      "name": "TaskType",
      "source": "dbo.TaskType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "label",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "CaseTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetCaseTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "ActivityType",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "EditorType",
          "role": "attribute",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        },
        {
          "name": "Initiator",
          "role": "attribute",
          "semantic_type": "technical",
          "aliases": [],
          "description": null
        },
        {
          "name": "Outcomes",
          "role": "attribute",
          "semantic_type": "text_list",
          "aliases": [],
          "description": null
        },
        {
          "name": "OutcomeExpression",
          "role": "attribute",
          "semantic_type": "expression",
          "aliases": [],
          "description": null
        },
        {
          "name": "Renderings",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "InVariableExpressions",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "OutVariableExpressions",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "MultiInstance",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "Version",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "mapping",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "mapping",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "mapping",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "Options",
          "role": "attribute",
          "semantic_type": "json",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CaseTypeID",
          "Code",
          "Description",
          "ActivityType",
          "IsActive",
          "Version"
        ]
      }
    },
    {
      "name": "Ticket Priority",
      "source": "dbo.TicketPriority",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "label",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "external_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "external_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "external_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "IsActive"
        ]
      }
    },
    {
      "name": "Ticket Type",
      "source": "dbo.TicketType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "ParentID",
          "role": "hierarchy",
          "semantic_type": "parent_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "label",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsSerial",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsParallel",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "SLA",
          "role": "attribute",
          "semantic_type": "duration_days",
          "aliases": [],
          "description": null
        },
        {
          "name": "NeedsSupervisor",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "WebProductType",
          "role": "attribute",
          "semantic_type": "category_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "CanSellWebChanges",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsCampaignLeadIdEditable",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "SecretarySupervisorByPass",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsEditContractType",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsEditAdvertisementType",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "external_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "external_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "external_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "ParentID",
          "IsActive",
          "IsSerial",
          "IsParallel",
          "SLA"
        ]
      }
    },
    {
      "name": "Ticket Cancellation Reason",
      "source": "dbo.TicketCancellationReason",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "IsActive",
          "Description",
          "ID"
        ]
      }
    },
    {
      "name": "Ticket Source Type",
      "source": "dbo.TicketSourceType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "IsActive",
          "ID"
        ]
      }
    },
    {
      "name": "Payment Method Type",
      "source": "dbo.PaymentMethodType",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "InstallmentSequence",
          "role": "attribute",
          "semantic_type": "integer_list",
          "aliases": [],
          "description": null
        },
        {
          "name": "AdvancedPaymentPermited",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "PaymentWay",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "AdvancedPaymentAvailable",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "SubscriptionPaymentMethodTypeId",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "PaymentWay",
          "InstallmentSequence",
          "AdvancedPaymentAvailable",
          "AdvancedPaymentPermited",
          "IsActive",
          "ID"
        ]
      }
    },
    {
      "name": "Ticket Resolution Method",
      "source": "dbo.TicketResolutionMethod",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "primary_key",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "IsActive",
          "ID"
        ]
      }
    },
    {
      "name": "Payment Policy",
      "source": "dbo.PaymentPolicy",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "UdacCharacterization",
          "role": "attribute",
          "semantic_type": "category_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "PriceFrom",
          "role": "attribute",
          "semantic_type": "currency",
          "aliases": [],
          "description": null
        },
        {
          "name": "PriceTo",
          "role": "attribute",
          "semantic_type": "currency",
          "aliases": [],
          "description": null
        },
        {
          "name": "PaymentMethodTypeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "NumberOfInvoices",
          "role": "attribute",
          "semantic_type": "count",
          "aliases": [],
          "description": null
        },
        {
          "name": "Installments",
          "role": "attribute",
          "semantic_type": "count",
          "aliases": [],
          "description": null
        },
        {
          "name": "Interval",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "technical_identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "PaymentMethodTypeID",
          "UdacCharacterization",
          "PriceFrom",
          "PriceTo",
          "Installments",
          "NumberOfInvoices",
          "Interval"
        ]
      }
    },
    {
      "name": "VAT Category",
      "source": "dbo.VatCategory",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "technical",
          "semantic_type": "technical_identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "technical",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Code",
          "Description",
          "IsActive"
        ]
      }
    },
    {
      "name": "Production Workflow",
      "source": "dbo.ProductionWorkflow",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [],
          "description": null
        },
        {
          "name": "Output",
          "role": "attribute",
          "semantic_type": "category_code",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "Output"
        ]
      }
    },
    {
      "name": "Tax Office",
      "source": "dbo.TaxOffice",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "tax_office_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Code",
          "Description",
          "IsActive"
        ]
      }
    },
    {
      "name": "Classifier Tree",
      "source": "dbo.ClassifierTree",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "Type",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "Type",
          "DMTable",
          "DMKey",
          "DMCharKey"
        ]
      }
    },
    {
      "name": "Master Section",
      "source": "dbo.MasterSection",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "identifier",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Description",
          "IsActive"
        ]
      }
    },
    {
      "name": "Classifier",
      "source": "dbo.Classifier",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ClassifierTreeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsMultiValued",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsMandatory",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsMandatoryOnPOIs",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "DefaultNodeId",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Name",
          "Description",
          "IsMandatory",
          "IsMultiValued",
          "IsMandatoryOnPOIs",
          "DMTable",
          "DMKey",
          "DefaultNodeId",
          "ClassifierTreeID"
        ]
      }
    },
    {
      "name": "Classifier Node",
      "source": "dbo.ClassifierNode",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ParentNodeID",
          "role": "attribute",
          "semantic_type": "parent_reference",
          "aliases": [],
          "description": null
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "CompositeName",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "LeftIndex",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "RightIndex",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "ClassifierTreeID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CompositeName",
          "Name",
          "ParentNodeID",
          "LeftIndex",
          "RightIndex",
          "ClassifierTreeID",
          "DMTable",
          "DMKey"
        ]
      }
    },
    {
      "name": "Content Attribute Definition",
      "source": "dbo.ContentAttributeDefinition",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "ProductPartDefinitionID",
          "role": "foreign_key",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "FK to ProductPartDefinition (product part / content part identifier)"
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": "Human readable attribute name"
        },
        {
          "name": "Type",
          "role": "attribute",
          "semantic_type": "enum_integer",
          "aliases": [],
          "description": "Encoded attribute data type / editor type (integer code)"
        },
        {
          "name": "IsRequired",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DefaultValue",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": "Default value for the attribute, if any"
        },
        {
          "name": "MinValue",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Minimum numeric value (when applicable)"
        },
        {
          "name": "MaxValue",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Maximum numeric value (when applicable)"
        },
        {
          "name": "IsReadonly",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "VisibilityMask",
          "role": "attribute",
          "semantic_type": "bitmask",
          "aliases": [],
          "description": "Visibility mask / flags encoded as fixed-length string"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Data-migration or external system numeric key"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": "Source/target table name in migration / external system"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": "Data-migration or external system character key"
        },
        {
          "name": "FillOrder",
          "role": "attribute",
          "semantic_type": "order",
          "aliases": [],
          "description": "Preferred ordering / fill order for the attribute"
        },
        {
          "name": "MaxLength",
          "role": "attribute",
          "semantic_type": "length",
          "aliases": [],
          "description": "Maximum length for text values"
        },
        {
          "name": "LookupTableName",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": "Name of lookup table (if this attribute uses a lookup)"
        },
        {
          "name": "EnableValidationRules",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Whether validation rules are enabled for this attribute"
        },
        {
          "name": "EnableKeyphraseCreation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Whether keyphrase creation is enabled"
        },
        {
          "name": "LookupFiltered",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": "Filter expression applied to lookup (if any)"
        },
        {
          "name": "DDLLookupFiltered",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": "Filter expression for dropdown lookup (if any)"
        },
        {
          "name": "IsLocation",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Flag indicating if the attribute represents a location"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "ProductPartDefinitionID",
          "Name",
          "Type",
          "IsRequired",
          "IsReadonly",
          "DefaultValue"
        ]
      }
    },
    {
      "name": "UDAC Part Definition",
      "source": "dbo.UdacPartDefinition",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Code",
          "role": "attribute",
          "semantic_type": "code",
          "aliases": [],
          "description": "Short code or identifier for the part"
        },
        {
          "name": "Name",
          "role": "attribute",
          "semantic_type": "name",
          "aliases": [],
          "description": "Friendly name / title of the part"
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Longer descriptive text"
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "CreatedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "ModifiedBy",
          "role": "attribute",
          "semantic_type": "user",
          "aliases": [],
          "description": null
        },
        {
          "name": "SingleAppearance",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Indicates if the part can appear only once"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Data-migration or external numeric key"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "table_name",
          "aliases": [],
          "description": "Source/target table name in migration / external system"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "string",
          "aliases": [],
          "description": "Data-migration or external character key"
        },
        {
          "name": "EditorType",
          "role": "attribute",
          "semantic_type": "enum_integer",
          "aliases": [],
          "description": "Editor type code / UI editor enumeration"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "Code",
          "Name",
          "Description",
          "SingleAppearance",
          "CreatedOn",
          "CreatedBy"
        ]
      }
    },
    {
      "name": "Target Channel",
      "source": "dbo.TargetChannel",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetSettingCriteriaID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "SubChannelID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "OnSiteStart",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "OnSiteEnd",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteStart",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteEnd",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": null
        },
        {
          "name": "OnSiteTotalAgents",
          "role": "measure",
          "semantic_type": "person_count",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteTotalAgents",
          "role": "measure",
          "semantic_type": "person_count",
          "aliases": [],
          "description": null
        },
        {
          "name": "OnSiteWorkingDays",
          "role": "measure",
          "semantic_type": "days",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteWorkingDays",
          "role": "measure",
          "semantic_type": "days",
          "aliases": [],
          "description": null
        },
        {
          "name": "OnSiteGrossManDays",
          "role": "measure",
          "semantic_type": "man_days",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteGrossManDays",
          "role": "measure",
          "semantic_type": "man_days",
          "aliases": [],
          "description": null
        },
        {
          "name": "OnSiteNetManDays",
          "role": "measure",
          "semantic_type": "man_days",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteNetManDays",
          "role": "measure",
          "semantic_type": "man_days",
          "aliases": [],
          "description": null
        },
        {
          "name": "OnSiteIllnessRate",
          "role": "measure",
          "semantic_type": "rate_percent",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteIllnessRate",
          "role": "measure",
          "semantic_type": "rate_percent",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "legacy_dm_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "legacy_dm_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "legacy_dm_char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "SubChannelID",
          "TargetSettingCriteriaID",
          "OnSiteStart",
          "OnSiteEnd",
          "OnSiteTotalAgents",
          "OnSiteWorkingDays",
          "OnSiteGrossManDays",
          "OnSiteNetManDays",
          "OnSiteIllnessRate",
          "OffSiteStart",
          "OffSiteEnd",
          "OffSiteTotalAgents",
          "OffSiteWorkingDays",
          "OffSiteGrossManDays",
          "OffSiteNetManDays",
          "OffSiteIllnessRate"
        ]
      }
    },
    {
      "name": "Target Channel Area",
      "source": "dbo.TargetChannelArea",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "key",
          "semantic_type": "surrogate_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetChannelID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "AreaType",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "AreaID",
          "role": "attribute",
          "semantic_type": "area_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "Area",
          "role": "attribute",
          "semantic_type": "area_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "SalesMenMultitude",
          "role": "measure",
          "semantic_type": "person_count",
          "aliases": [],
          "description": null
        },
        {
          "name": "SalesMenOffSiteMultitude",
          "role": "measure",
          "semantic_type": "person_count",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteAreaType",
          "role": "attribute",
          "semantic_type": "category",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteAreaID",
          "role": "attribute",
          "semantic_type": "area_code",
          "aliases": [],
          "description": null
        },
        {
          "name": "OffSiteArea",
          "role": "attribute",
          "semantic_type": "area_name",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "metadata",
          "semantic_type": "legacy_dm_key",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "metadata",
          "semantic_type": "legacy_dm_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "metadata",
          "semantic_type": "legacy_dm_char_key",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "AreaType",
          "AreaID",
          "Area",
          "SalesMenMultitude",
          "SalesMenOffSiteMultitude",
          "OffSiteAreaType",
          "OffSiteAreaID",
          "OffSiteArea"
        ]
      }
    },
    {
      "name": "Campaign Target Group",
      "source": "dbo.CampaignTargetGroup",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "CampaignID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "Reference to campaign (dbo.Campaign.ID)"
        },
        {
          "name": "IncludeExpression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Filter expression describing included members"
        },
        {
          "name": "IncludeAndExpression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Additional include AND expression"
        },
        {
          "name": "IncludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Assignment expression used when including members"
        },
        {
          "name": "ExcludedExpression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Filter expression describing excluded members"
        },
        {
          "name": "ExcludeAndExpression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Additional exclude AND expression"
        },
        {
          "name": "ExcludeAssigmentExpression",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Assignment expression used when excluding members"
        },
        {
          "name": "IncludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Count of included entities as captured when the group was defined"
        },
        {
          "name": "ExcludedQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Count of excluded entities as captured when the group was defined"
        },
        {
          "name": "TotalQuantity",
          "role": "measure",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Total count of entities evaluated for this target group"
        },
        {
          "name": "CreatedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": "Timestamp when the target group was created"
        },
        {
          "name": "LastInitializedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": "Timestamp of last initialization (nullable)"
        },
        {
          "name": "FinalizedOn",
          "role": "attribute",
          "semantic_type": "datetime",
          "aliases": [],
          "description": "Timestamp when the group was finalized (nullable)"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CampaignID",
          "CreatedOn",
          "LastInitializedOn",
          "FinalizedOn",
          "IncludeExpression",
          "IncludeAndExpression",
          "IncludeAssigmentExpression",
          "ExcludedExpression",
          "ExcludeAndExpression",
          "ExcludeAssigmentExpression",
          "IncludedQuantity",
          "ExcludedQuantity",
          "TotalQuantity"
        ]
      }
    },
    {
      "name": "Target Setting",
      "source": "dbo.TargetSetting",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "CampaignID",
          "role": "attribute",
          "semantic_type": "foreign_key",
          "aliases": [],
          "description": "Reference to campaign (dbo.Campaign.ID)"
        },
        {
          "name": "Budget",
          "role": "measure",
          "semantic_type": "decimal",
          "aliases": [],
          "description": "Allocated budget for the campaign target (monetary amount)"
        },
        {
          "name": "PenetrationChangeDownLimit",
          "role": "measure",
          "semantic_type": "percentage",
          "aliases": [],
          "description": "Lower limit for penetration change (nullable)"
        },
        {
          "name": "PenetrationChangeUpperLimit",
          "role": "measure",
          "semantic_type": "percentage",
          "aliases": [],
          "description": "Upper limit for penetration change (nullable)"
        },
        {
          "name": "AvoChangeDownLimit",
          "role": "measure",
          "semantic_type": "percentage",
          "aliases": [],
          "description": "Lower limit for AVO change (nullable)"
        },
        {
          "name": "AvoChangeUpLimit",
          "role": "measure",
          "semantic_type": "percentage",
          "aliases": [],
          "description": "Upper limit for AVO change (nullable)"
        },
        {
          "name": "RocoDownLimit",
          "role": "measure",
          "semantic_type": "decimal",
          "aliases": [],
          "description": "Lower limit for ROCO (nullable)"
        },
        {
          "name": "RocoUpLimit",
          "role": "measure",
          "semantic_type": "decimal",
          "aliases": [],
          "description": "Upper limit for ROCO (nullable)"
        },
        {
          "name": "Comments",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Free text comments for the target setting (nullable)"
        },
        {
          "name": "OnSite",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Flag indicating if on-site targeting is enabled"
        },
        {
          "name": "OffSite",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": "Flag indicating if off-site targeting is enabled"
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": "Optional key linking to an external data mart table (nullable)"
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Name of external data mart table (nullable)"
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": "Optional character key for external linking (nullable)"
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CampaignID",
          "Budget",
          "OnSite",
          "OffSite",
          "PenetrationChangeDownLimit",
          "PenetrationChangeUpperLimit",
          "AvoChangeDownLimit",
          "AvoChangeUpLimit",
          "RocoDownLimit",
          "RocoUpLimit",
          "Comments",
          "DMKey",
          "DMTable",
          "DMCharKey"
        ]
      }
    },
    {
      "name": "Campaign Allocation Plan",
      "source": "dbo.CampaignAllocationPlan",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "CampaignID",
          "role": "attribute",
          "semantic_type": "foreign_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "SubChannelAssigned",
          "role": "attribute",
          "semantic_type": "channel_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetValueAssigned",
          "role": "attribute",
          "semantic_type": "integer",
          "aliases": [],
          "description": null
        },
        {
          "name": "PlanType",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "TargetUserAssigned",
          "role": "attribute",
          "semantic_type": "user_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "HandlerUserAssigned",
          "role": "attribute",
          "semantic_type": "user_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "SupervisorAssigned",
          "role": "attribute",
          "semantic_type": "user_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "metadata_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "metadata_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "CampaignID",
          "PlanType",
          "Description",
          "SubChannelAssigned",
          "TargetValueAssigned"
        ]
      }
    },
    {
      "name": "Version Group Item",
      "source": "dbo.VersionGroupItem",
      "keys": [
        "ID"
      ],
      "attributes": [
        {
          "name": "ID",
          "role": "attribute",
          "semantic_type": "id",
          "aliases": [],
          "description": null
        },
        {
          "name": "ParentID",
          "role": "attribute",
          "semantic_type": "parent_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "Description",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "Type",
          "role": "attribute",
          "semantic_type": "enum",
          "aliases": [],
          "description": null
        },
        {
          "name": "MediumVersionID",
          "role": "attribute",
          "semantic_type": "foreign_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "SourceGroupItemID",
          "role": "attribute",
          "semantic_type": "foreign_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "SourceHeadingID",
          "role": "attribute",
          "semantic_type": "foreign_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "SourceGeoID",
          "role": "attribute",
          "semantic_type": "geo_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMKey",
          "role": "attribute",
          "semantic_type": "metadata_id",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMTable",
          "role": "attribute",
          "semantic_type": "metadata_table",
          "aliases": [],
          "description": null
        },
        {
          "name": "DMCharKey",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "IsActive",
          "role": "attribute",
          "semantic_type": "boolean",
          "aliases": [],
          "description": null
        },
        {
          "name": "DescriptionCIAI",
          "role": "attribute",
          "semantic_type": "text",
          "aliases": [],
          "description": null
        },
        {
          "name": "RootID",
          "role": "attribute",
          "semantic_type": "root_id",
          "aliases": [],
          "description": null
        }
      ],
      "display": {
        "display_name": null,
        "default_label_column": null,
        "default_search_columns": [],
        "default_sort": null,
        "attribute_order": [
          "RootID",
          "ParentID",
          "Description",
          "Type",
          "IsActive"
        ]
      }
    }
  ],
  "facts": [
    {
      "name": "Contract",
      "source": "dbo.Contract",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Contract Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contracts (row count)."
        },
        {
          "name": "Total Final Price",
          "expression": "SUM(FinalPrice)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of FinalPrice for contracts. Null FinalPrice rows are excluded from the sum."
        },
        {
          "name": "Average Final Price",
          "expression": "AVG(FinalPrice)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average FinalPrice across contracts with a non-null FinalPrice."
        },
        {
          "name": "Total User Discount Amount",
          "expression": "SUM(UserDiscountAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of user-applied discount amounts on contracts."
        },
        {
          "name": "Average User Discount Percent",
          "expression": "AVG(UserDiscountPercent)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average user discount expressed as a percentage (based on the stored UserDiscountPercent values)."
        },
        {
          "name": "Subscription Contract Count",
          "expression": "SUM(CASE WHEN IsSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contracts flagged as subscription-based."
        },
        {
          "name": "Active Contracts",
          "expression": "COUNT(CASE WHEN CancelledOn IS NULL AND State = 1 THEN ID ELSE NULL END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of contracts that appear active (not cancelled and State = 1). Adjust business logic as needed for 'active' definition."
        },
        {
          "name": "Average Days From Created to Release",
          "expression": "AVG(DATEDIFF(day, CreatedOn, ReleaseDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days between contract creation and release. Rows with null ReleaseDate are excluded from the calculation."
        },
        {
          "name": "Percent Transferred To EBS",
          "expression": "SUM(CASE WHEN TransferDateToEBS IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of contracts that have been transferred to EBS (TransferDateToEBS is populated)."
        },
        {
          "name": "Count With PDF",
          "expression": "SUM(CASE WHEN PdfID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contracts that have an associated PDF document (PdfID is not null)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BillingPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ShippingPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ActualBPOwnerID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "CampaignTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        },
        {
          "column": "BillingEmailID",
          "references": "dbo.ContactEmail.ID"
        },
        {
          "column": "ArchivedNumberID",
          "references": "dbo.ArchivedNumber.ID"
        },
        {
          "column": "PdfID",
          "references": "dbo.ContractDocument.ID"
        },
        {
          "column": "SubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "InitialSubscriptionContractId",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "OrigionalContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ShippingFaxID",
          "references": "dbo.PointPhone.ID"
        },
        {
          "column": "ShippingEmailID",
          "references": "dbo.PointEmail.ID"
        },
        {
          "column": "SalesManID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CreatedOn.Year",
          "CreatedOn.Month",
          "ActualBPOwnerID",
          "SalesManID",
          "CampaignID",
          "Type"
        ],
        "default_filters": [
          {
            "column": "State",
            "op": "=",
            "value": "1"
          }
        ],
        "suggested_sort": {
          "measure": "Contract Count",
          "direction": "desc"
        }
      }
    },
    {
      "name": "ContractProductFact",
      "source": "dbo.ContractProduct",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "LineCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contract product lines (rows)"
        },
        {
          "name": "DistinctContracts",
          "expression": "DISTINCTCOUNT(RelatedContractID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct contracts referenced by these product lines"
        },
        {
          "name": "GrossAmount",
          "expression": "SUM(Price * Quantity)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of Price multiplied by Quantity before any discounts or alterations"
        },
        {
          "name": "TotalExplicitDiscounts",
          "expression": "SUM(COALESCE(Discount,0) + COALESCE(RulesDiscount,0) + COALESCE(PaymentDiscount,0) + COALESCE(ProductDiscount,0) + COALESCE(BundleDiscount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of all discount components recorded on the line (product discount, payment discount, bundle, rules, explicit discount)"
        },
        {
          "name": "AlteredAmountTotal",
          "expression": "SUM(COALESCE(AlteredAmount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of any manually altered amounts applied to contract product lines"
        },
        {
          "name": "NetAmount",
          "expression": "SUM( (Price * Quantity) - (COALESCE(Discount,0) + COALESCE(RulesDiscount,0) + COALESCE(PaymentDiscount,0) + COALESCE(ProductDiscount,0) + COALESCE(BundleDiscount,0)) + COALESCE(AlteredAmount,0) )",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Net revenue impact per line: gross minus discounts plus any altered amount"
        },
        {
          "name": "OneTimeAmountTotal",
          "expression": "SUM(COALESCE(OneTimeAmount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of one-time amounts associated with lines"
        },
        {
          "name": "OneTimeAmountAfterDiscountTotal",
          "expression": "SUM(COALESCE(OneTimeAmountAfterDiscount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of one-time amounts after discounts"
        },
        {
          "name": "ExtraFeeAmountTotal",
          "expression": "SUM(COALESCE(ExtraFeeAmount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of extra fee amounts recorded on lines"
        },
        {
          "name": "AvgUnitPrice",
          "expression": "AVG(Price)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average unit price across lines"
        },
        {
          "name": "AvgQuantity",
          "expression": "AVG(Quantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average quantity per line"
        },
        {
          "name": "SubscriptionLineCount",
          "expression": "SUM(CASE WHEN IsSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of lines marked as subscription-based"
        },
        {
          "name": "RenewedCount",
          "expression": "SUM(CASE WHEN IsRenewed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of lines flagged as renewed"
        },
        {
          "name": "RenewableCount",
          "expression": "SUM(CASE WHEN IsRenewable = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of lines flagged as renewable"
        },
        {
          "name": "InterruptedCount",
          "expression": "SUM(CASE WHEN IsInterruptedFromCRM = 1 OR InterruptionDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of lines that have been interrupted (flag or interruption date)"
        },
        {
          "name": "CancelledCount",
          "expression": "SUM(CASE WHEN CancelledOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of lines that have a cancellation timestamp"
        },
        {
          "name": "AverageDiscountRate",
          "expression": "SUM(COALESCE(Discount,0) + COALESCE(RulesDiscount,0) + COALESCE(PaymentDiscount,0) + COALESCE(ProductDiscount,0) + COALESCE(BundleDiscount,0)) / NULLIF(SUM(Price * Quantity),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Total explicit discounts divided by gross amount (ratio of discounts to gross)"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "SalesTypeID",
          "references": "dbo.AdvertisementSalesType.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "RelatedContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "PaymentMethodID",
          "references": "dbo.PaymentMethod.ID"
        },
        {
          "column": "SourceContractProductID",
          "references": "dbo.ContractProduct.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "ProductID",
          "BusinessPointID",
          "VersionSectionID",
          "RelatedContractID",
          "PaymentMethodID",
          "CreatedOn"
        ],
        "default_filters": [
          {
            "column": "State",
            "op": "=",
            "value": "5"
          },
          {
            "column": "IsInterruptedFromCRM",
            "op": "=",
            "value": "False"
          }
        ]
      }
    },
    {
      "name": "ContractDocument",
      "source": "dbo.ContractDocument",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "DocumentCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of document records (row count) in the ContractDocument table."
        },
        {
          "name": "DistinctContractCount",
          "expression": "COUNT(DISTINCT ContractID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct contracts that have one or more associated documents."
        },
        {
          "name": "DistinctFilenameCount",
          "expression": "COUNT(DISTINCT RTRIM(LTRIM(Filename)))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct filenames (trimmed of leading/trailing whitespace). Useful to identify duplicate file references."
        },
        {
          "name": "DocumentsWithDMCharKeyCount",
          "expression": "SUM(CASE WHEN DMCharKey IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of documents that include a non-null DMCharKey (links into external document management identifiers)."
        },
        {
          "name": "PercentWithDMCharKey",
          "expression": "SUM(CASE WHEN DMCharKey IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of documents that include a DMCharKey (percentage of total documents)."
        },
        {
          "name": "DistinctDocumentTypeCount",
          "expression": "COUNT(DISTINCT ContractDocumentType)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct values in ContractDocumentType that appear in the current result set."
        },
        {
          "name": "EarliestCreatedOn",
          "expression": "MIN(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "The earliest CreatedOn timestamp for the documents in the result set."
        },
        {
          "name": "LatestCreatedOn",
          "expression": "MAX(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "The most recent CreatedOn timestamp for the documents in the result set."
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "ContractID",
          "ContractDocumentType",
          "CreatedOn.Year"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": "is_not_null",
            "value": null
          }
        ],
        "default_measures": [
          "DocumentCount",
          "PercentWithDMCharKey"
        ],
        "default_sort": {
          "column": "CreatedOn",
          "direction": "desc"
        }
      }
    },
    {
      "name": "ContractOffer",
      "source": "dbo.ContractOffer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "OfferCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of contract offers (one row per offer)."
        },
        {
          "name": "DistinctTargetGroupItemValueCount",
          "expression": "COUNT(DISTINCT TargetGroupItemValueID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct TargetGroupItemValueID values referenced by offers."
        },
        {
          "name": "DistinctCreators",
          "expression": "COUNT(DISTINCT CreatedByUserID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct users who created offers."
        },
        {
          "name": "AverageDaysBetweenCreateAndModify",
          "expression": "AVG(DATEDIFF(day, CreatedOn, ModifiedOn))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average elapsed time in days between offer creation and last modification."
        },
        {
          "name": "LastModifiedOn",
          "expression": "MAX(ModifiedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent modification timestamp across the offers in the current filter context."
        }
      ],
      "foreign_keys": [
        {
          "column": "CreatedByUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ModifiedUserID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CreatedByUserID",
          "CreatedOn.Year",
          "TargetGroupItemValueID"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2019-01-01"
          }
        ]
      }
    },
    {
      "name": "ContractOfferDetail",
      "source": "dbo.ContractOfferDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(3)",
          "description": "Total monetary amount for the contract offer detail lines (sum of Amount). Use this to measure monetary value at the detail line level."
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(Quantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Total quantity associated with the contract offer detail lines."
        },
        {
          "name": "AverageAmountPerUnit",
          "expression": "SUM(Amount) / NULLIF(SUM(Quantity), 0)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(3)",
          "description": "Average amount per unit (TotalAmount divided by TotalQuantity). Returns NULL when total quantity is zero."
        },
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of contract offer detail rows."
        },
        {
          "name": "DistinctUdacCount",
          "expression": "COUNT(DISTINCT UdacID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct Udac (product/asset) identifiers referenced by the detail rows."
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractOfferID",
          "references": "dbo.ContractOffer.ID"
        },
        {
          "column": "UdacID",
          "references": "dbo.Udac.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "ContractOffer",
          "UdacID"
        ],
        "default_filters": [
          {
            "column": "Amount",
            "op": ">",
            "value": "0"
          }
        ],
        "default_sort": {
          "measure": "TotalAmount",
          "direction": "desc"
        }
      }
    },
    {
      "name": "RelatedContract",
      "source": "dbo.RelatedContract",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RelationshipCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of relationship rows (each row is one relationship between two contracts)."
        },
        {
          "name": "DistinctRelatedContracts",
          "expression": "COUNT(DISTINCT RelatedContractID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of unique related contracts referenced by these relationship rows."
        },
        {
          "name": "DistinctSourceContracts",
          "expression": "COUNT(DISTINCT ContractID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of unique source contracts that have one or more related contract entries."
        },
        {
          "name": "RelationshipsPerSourceContract",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT ContractID), 0)",
          "unit": "ratio",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of related-contract links per source contract (relationship rows divided by distinct source contracts). Null when there are no source contracts."
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "RelatedContractID",
          "references": "dbo.Contract.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Type",
          "Contract",
          "RelatedContract"
        ],
        "default_filters": []
      }
    },
    {
      "name": "SalesCollection",
      "source": "dbo.SalesCollection",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of all collection amounts recorded (total cash/receipt amount)."
        },
        {
          "name": "CollectionCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of collection records (rows) in the fact table."
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average amount per collection."
        },
        {
          "name": "MinAmount",
          "expression": "MIN(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Smallest collection amount in the selected set."
        },
        {
          "name": "MaxAmount",
          "expression": "MAX(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Largest collection amount in the selected set."
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points that recorded collections."
        },
        {
          "name": "TransferredToERPCount",
          "expression": "COUNT(TransferDateToERP)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of collections that have been transferred to the ERP system (non‑null TransferDateToERP)."
        },
        {
          "name": "PercentTransferredToERP",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN 0 ELSE SUM(CASE WHEN TransferDateToERP IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of collections that have been transferred to the ERP system (TransferredToERPCount / CollectionCount)."
        },
        {
          "name": "CountByPaymentType",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of collections; typically used together with a PaymentType breakdown to show counts per payment type."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ModifiedByID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "time_dimension": "CollectionDate",
        "default_breakdowns": [
          "CollectionDate",
          "BusinessPointID",
          "PaymentType",
          "CreatedByID",
          "Type"
        ],
        "default_filters": [
          {
            "column": "IsDeleted",
            "op": "=",
            "value": "False"
          }
        ],
        "default_sort": {
          "column": "CollectionDate",
          "direction": "desc"
        },
        "notes": "PaymentType is an integer code; join to the payment-type dimension (if available) for labels. Use CollectionDate as the primary reporting date. Amount assumed to be in EUR by convention — verify with source system."
      }
    },
    {
      "name": "ERPSalesCollectionBridgeBuffer",
      "source": "dbo.ERPSalesCollectionBridgeBuffer",
      "grain": [
        "SystemReceiptID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total collected amount recorded on receipts in this buffer."
        },
        {
          "name": "ReceiptCount",
          "expression": "COUNT(SystemReceiptID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of receipt records (rows) in the buffer."
        },
        {
          "name": "AverageReceiptAmount",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average amount per receipt."
        },
        {
          "name": "PayoffCount",
          "expression": "SUM(IsPayoff)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of receipts marked as payoff (IsPayoff = 1)."
        },
        {
          "name": "PayoffRate",
          "expression": "CASE WHEN COUNT(SystemReceiptID) = 0 THEN NULL ELSE SUM(IsPayoff) / COUNT(SystemReceiptID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of receipts that are payoffs (PayoffCount / ReceiptCount)."
        },
        {
          "name": "DistinctCustomerCount",
          "expression": "COUNT(DISTINCT CustomerCode)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct customer codes represented in these receipts."
        },
        {
          "name": "BankDepositCount",
          "expression": "COUNT(BankDepositNumber)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of receipts that have an associated bank deposit number (non-null)."
        },
        {
          "name": "CashAmount",
          "expression": "SUM(CASE WHEN PaymentChannel = N'ΜΕΤΡΗΤΑ' THEN Amount ELSE 0 END)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total amount collected via the cash payment channel (PaymentChannel = 'ΜΕΤΡΗΤΑ')."
        }
      ],
      "foreign_keys": [
        {
          "column": "CustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "MainCustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "SalesManCode",
          "references": "DimEmployee.EmployeeCode"
        },
        {
          "column": "CollectorCode",
          "references": "DimCollector.CollectorCode"
        },
        {
          "column": "ContractID",
          "references": "DimContract.ContractID"
        },
        {
          "column": "CompanyId",
          "references": "DimCompany.CompanyId"
        },
        {
          "column": "BankID",
          "references": "DimBank.BankId"
        },
        {
          "column": "PaymentChannel",
          "references": "DimPaymentChannel.PaymentChannelCode"
        },
        {
          "column": "CollectionDate",
          "references": "DimDate.FullDate"
        },
        {
          "column": "CreatedOn",
          "references": "DimDate.DateTime"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CollectionDate (Date)",
          "Customer (CustomerCode)",
          "PaymentChannel",
          "SalesPerson (SalesManCode)"
        ],
        "default_filters": [
          {
            "column": "Status",
            "op": "=",
            "value": "COMPLETED"
          },
          {
            "column": "CompanyId",
            "op": "=",
            "value": "1"
          }
        ]
      }
    },
    {
      "name": "InvoicePaymentMethod",
      "source": "dbo.InvoicePaymentMethod",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PaymentMethodCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of payment-method records (rows) in this table."
        },
        {
          "name": "TotalInvoicesCovered",
          "expression": "SUM(NumberOfInvoices)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of NumberOfInvoices for these payment method records — represents the total invoices associated with the payment methods."
        },
        {
          "name": "AverageInstallments",
          "expression": "AVG(Installments)",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average number of installments configured for payment methods."
        },
        {
          "name": "AverageInterval",
          "expression": "AVG([Interval])",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average interval value associated with payment method schedules (nullable where not applicable)."
        },
        {
          "name": "DistinctPaymentMethodTypes",
          "expression": "COUNT(DISTINCT PaymentMethodTypeID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct payment method types observed in the filtered context."
        },
        {
          "name": "PreInvoiceCount",
          "expression": "SUM(CASE WHEN PreInvoice = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of payment-method records marked as pre-invoice."
        },
        {
          "name": "ExchangeSaleCount",
          "expression": "SUM(CASE WHEN IsExchangeSale = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of payment-method records flagged as exchange sales."
        },
        {
          "name": "WithPhoneReferenceCount",
          "expression": "SUM(CASE WHEN PaymentPhoneID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of payment-method records that reference a phone (PaymentPhoneID is present). Useful to track phone-based payments."
        },
        {
          "name": "CollectionsRecorded",
          "expression": "SUM(CASE WHEN CollectionDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of payment-method records that have a CollectionDate recorded (indicates a collected payment)."
        }
      ],
      "foreign_keys": [
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        },
        {
          "column": "InvoicePolicyID",
          "references": "dbo.InvoicePolicy.ID"
        },
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "CreditCardTypeID",
          "references": "dbo.CreditCardType.ID"
        },
        {
          "column": "BillingEmailID",
          "references": "dbo.ContactEmail.ID"
        },
        {
          "column": "PaymentMethodTypeID",
          "references": "dbo.PaymentMethodType.ID"
        },
        {
          "column": "PaymentPhoneID",
          "references": "dbo.PointPhone.ID"
        },
        {
          "column": "ID",
          "references": "dbo.Contract.ID"
        }
      ],
      "display": {
        "default_time_column": "PaymentMonth",
        "default_breakdowns": [
          "PaymentMethodType",
          "PaymentMonth",
          "Bank",
          "CreditCardType",
          "Contract"
        ],
        "default_filters": [
          {
            "column": "PreInvoice",
            "op": "=",
            "value": "False"
          }
        ]
      }
    },
    {
      "name": "InvoicePaymentSalesCollection",
      "source": "dbo.InvoicePaymentSalesCollection",
      "grain": [
        "InvoicePaymentMethodID",
        "SalesCollectionID"
      ],
      "measures": [
        {
          "name": "Association Count",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of payment-method to sales-collection associations (row count)."
        },
        {
          "name": "Distinct Sales Collections",
          "expression": "COUNT(DISTINCT SalesCollectionID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of unique sales collections represented in this table."
        },
        {
          "name": "Distinct Invoice Payment Methods",
          "expression": "COUNT(DISTINCT InvoicePaymentMethodID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of unique invoice payment methods represented in this table."
        }
      ],
      "foreign_keys": [
        {
          "column": "InvoicePaymentMethodID",
          "references": "dbo.InvoicePaymentMethod.ID"
        },
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "InvoicePaymentMethod",
          "SalesCollection"
        ],
        "default_filters": []
      }
    },
    {
      "name": "InvoicePolicy",
      "source": "dbo.InvoicePolicy",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "PolicyCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of invoice policy records (distinct policies)."
        },
        {
          "name": "TotalNumberOfInvoices",
          "expression": "SUM(NumberOfInvoices)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of the configured number of invoices across all policies."
        },
        {
          "name": "AvgNumberOfInvoices",
          "expression": "AVG(NumberOfInvoices)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average configured number of invoices per policy."
        },
        {
          "name": "TotalInstallments",
          "expression": "SUM(Installments)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of installments across all policies (installment count aggregated)."
        },
        {
          "name": "AvgInstallments",
          "expression": "AVG(Installments)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of installments per policy."
        },
        {
          "name": "MinPriceFrom",
          "expression": "MIN(PriceFrom)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Minimum lower-bound price (PriceFrom) defined by any policy. Nulls excluded."
        },
        {
          "name": "AvgPriceFrom",
          "expression": "AVG(PriceFrom)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average lower-bound price (PriceFrom) across policies with a value. Nulls excluded."
        },
        {
          "name": "MaxPriceTo",
          "expression": "MAX(PriceTo)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Maximum upper-bound price (PriceTo) defined by any policy. Nulls excluded."
        },
        {
          "name": "AvgPriceTo",
          "expression": "AVG(PriceTo)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average upper-bound price (PriceTo) across policies with a value. Nulls excluded."
        },
        {
          "name": "PoliciesWithPriceRangeCount",
          "expression": "SUM(CASE WHEN PriceFrom IS NOT NULL OR PriceTo IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of policies that define either a PriceFrom or PriceTo value."
        },
        {
          "name": "CurrentlyActivePolicies",
          "expression": "SUM(CASE WHEN StartDate <= GETDATE() AND (EndDate IS NULL OR EndDate >= GETDATE()) THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of policies active as of today based on StartDate/EndDate. Policies with NULL StartDate are treated as not started; NULL EndDate is treated as open-ended."
        },
        {
          "name": "DistinctProducts",
          "expression": "COUNT(DISTINCT ProductID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct products referenced by policies (NULL product references are excluded)."
        }
      ],
      "foreign_keys": [
        {
          "column": "MediumID",
          "references": "dbo.Medium.ID"
        },
        {
          "column": "MediumVersionID",
          "references": "dbo.MediumVersion.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.ChannelType.ID"
        },
        {
          "column": "PaymentMethodTypeID",
          "references": "dbo.PaymentMethodType.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "PaymentMethodTypeID",
          "ProductID",
          "CampaignID",
          "MediumID",
          "MediumVersionID",
          "ChannelTypeID"
        ],
        "default_filters": [
          {
            "column": "ProductID",
            "op": "IS NOT",
            "value": "NULL"
          }
        ],
        "notes": "StartDate and EndDate exist but are heavily null; the CurrentlyActivePolicies measure implements an active-as-of-today check. PriceFrom/PriceTo are USD values but are frequently null — price aggregates exclude nulls."
      }
    },
    {
      "name": "FactAdvancedPaymentMethod",
      "source": "dbo.AdvancedPaymentMethod",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of the Amount across payment method records (total money recorded in these payment methods)."
        },
        {
          "name": "PaymentCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of payment method records (rows)."
        },
        {
          "name": "AvgAmount",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average Amount per payment method record."
        },
        {
          "name": "MinAmount",
          "expression": "MIN(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Minimum recorded Amount for a payment method."
        },
        {
          "name": "MaxAmount",
          "expression": "MAX(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Maximum recorded Amount for a payment method."
        },
        {
          "name": "PaymentsWithBankDepositCount",
          "expression": "SUM(CASE WHEN BankDepositNumber IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of payment method records that have a bank deposit number (i.e., were deposited to a bank)."
        },
        {
          "name": "PercentWithBankDeposit",
          "expression": "SUM(CASE WHEN BankDepositNumber IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of payment method records that include a bank deposit number (bank-deposited payments)."
        },
        {
          "name": "DistinctPaymentMethodTypes",
          "expression": "COUNT(DISTINCT PaymentMethodTypeID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct PaymentMethodTypeIDs observed in the filtered/aggregated set."
        },
        {
          "name": "PaymentsWithCollectionDateCount",
          "expression": "SUM(CASE WHEN CollectionDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of payment method records that have a non-null CollectionDate (date when collection was recorded)."
        },
        {
          "name": "PercentWithCollectionDate",
          "expression": "SUM(CASE WHEN CollectionDate IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of records that include a CollectionDate."
        }
      ],
      "foreign_keys": [
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        },
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "CreditCardTypeID",
          "references": "dbo.CreditCardType.ID"
        },
        {
          "column": "PaymentMethodTypeID",
          "references": "dbo.PaymentMethodType.ID"
        },
        {
          "column": "ID",
          "references": "dbo.Contract.ID"
        }
      ],
      "display": {
        "default_time_column": "CollectionDate",
        "default_breakdowns": [
          "PaymentMethodTypeID",
          "BankID",
          "SalesCollectionID",
          "CollectionDate.Year",
          "CollectionDate.Month",
          "CheckPublisher"
        ],
        "default_filters": [
          {
            "column": "Amount",
            "op": ">",
            "value": "0"
          },
          {
            "column": "CollectionDate",
            "op": "IS NOT",
            "value": "NULL"
          }
        ],
        "default_sort": {
          "column": "CollectionDate",
          "direction": "desc"
        }
      }
    },
    {
      "name": "AdvancedPaymentSalesCollection",
      "source": "dbo.AdvancedPaymentSalesCollection",
      "grain": [
        "AdvancedPaymentMethodID",
        "SalesCollectionID"
      ],
      "measures": [
        {
          "name": "LinkRowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of link rows (each row represents an association between an advanced payment method and a sales collection)."
        },
        {
          "name": "DistinctSalesCollectionCount",
          "expression": "COUNT(DISTINCT SalesCollectionID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct sales collections that have at least one associated advanced payment method."
        },
        {
          "name": "DistinctAdvancedPaymentMethodCount",
          "expression": "COUNT(DISTINCT AdvancedPaymentMethodID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct advanced payment methods that are associated with sales collections."
        },
        {
          "name": "AveragePaymentMethodsPerCollection",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT SalesCollectionID), 0)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of advanced payment method associations per sales collection (measures multiplicity of payment methods per collection)."
        },
        {
          "name": "PercentOfCollectionsWithAdvancedPayment",
          "expression": "COUNT(DISTINCT SalesCollectionID) * 1.0 / NULLIF((SELECT COUNT(1) FROM dbo.SalesCollection), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of all sales collections that have one or more associated advanced payment methods. Requires SalesCollection table for denominator."
        }
      ],
      "foreign_keys": [
        {
          "column": "AdvancedPaymentMethodID",
          "references": "dbo.AdvancedPaymentMethod.ID"
        },
        {
          "column": "SalesCollectionID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "AdvancedPaymentMethod",
          "SalesCollection"
        ],
        "default_filters": [
          {
            "column": "AdvancedPaymentMethodID",
            "op": "IS NOT",
            "value": "NULL"
          }
        ],
        "notes": "This table is a junction (many-to-many) between advanced payment methods and sales collections. Use DistinctSalesCollectionCount when counting collections and LinkRowCount when counting associations."
      }
    },
    {
      "name": "BankDepositDetail",
      "source": "dbo.BankDepositDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "DepositCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of deposit detail records (each row in BankDepositDetail). Use this measure to count deposits in the current filter context."
        },
        {
          "name": "DistinctDepositNumbers",
          "expression": "COUNT(DISTINCT BankDepositNumber)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct BankDepositNumber values in the current filter context. Helpful to detect duplicates or measure unique deposit identifiers."
        },
        {
          "name": "EarliestDepositDate",
          "expression": "MIN(BankDepositDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "The earliest BankDepositDate in the current filter context."
        },
        {
          "name": "LatestDepositDate",
          "expression": "MAX(BankDepositDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "The latest BankDepositDate in the current filter context."
        },
        {
          "name": "DepositDateSpanDays",
          "expression": "DATEDIFF(day, MIN(BankDepositDate), MAX(BankDepositDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of days between the earliest and latest deposit dates in the current filter context. Returns 0 when the range is a single day."
        },
        {
          "name": "AverageDepositsPerDay",
          "expression": "CASE WHEN DATEDIFF(day, MIN(BankDepositDate), MAX(BankDepositDate)) = 0 THEN COUNT(ID) ELSE COUNT(ID) * 1.0 / NULLIF(DATEDIFF(day, MIN(BankDepositDate), MAX(BankDepositDate)),0) END",
          "unit": "count/day",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of deposit detail records per day across the date range in the current filter context. If the date span is zero days, returns the raw count."
        }
      ],
      "foreign_keys": [
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "ID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Bank",
          "BankDepositDate.Year",
          "BankDepositDate.Month"
        ],
        "default_filters": [
          {
            "column": "BankDepositDate",
            "op": "IS NOT",
            "value": "NULL"
          }
        ],
        "notes": "This fact table represents deposit detail rows. Use Bank (via BankID) and BankDepositDate for common slicers/axes. ID is the row-level grain."
      }
    },
    {
      "name": "CheckDetail",
      "source": "dbo.CheckDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Check Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of check detail records (one per ID)."
        },
        {
          "name": "Distinct Check Numbers",
          "expression": "COUNT(DISTINCT CheckNumber)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique check numbers recorded."
        },
        {
          "name": "Distinct Publishers",
          "expression": "COUNT(DISTINCT CheckPublisher)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct check publishers (beneficiaries/payees)."
        },
        {
          "name": "Checks With Same Publisher",
          "expression": "SUM(CASE WHEN IsSamePublisher = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of checks where the publisher matches the expected/linked publisher flag (IsSamePublisher = true)."
        },
        {
          "name": "Percent Same Publisher",
          "expression": "100.0 * SUM(CASE WHEN IsSamePublisher = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of checks where IsSamePublisher is true."
        },
        {
          "name": "Average Days From Publish To Expiration",
          "expression": "AVG(DATEDIFF(day, CheckPublishDate, CheckExpirationDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days between the check publish date and its expiration date. NULL publish dates are excluded from calculation."
        },
        {
          "name": "Minimum Days From Publish To Expiration",
          "expression": "MIN(DATEDIFF(day, CheckPublishDate, CheckExpirationDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Minimum number of days between publish and expiration (can be negative if expiration precedes publish)."
        },
        {
          "name": "Maximum Days From Publish To Expiration",
          "expression": "MAX(DATEDIFF(day, CheckPublishDate, CheckExpirationDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum number of days between publish and expiration."
        },
        {
          "name": "Checks Expired At Publish",
          "expression": "SUM(CASE WHEN CheckExpirationDate < CheckPublishDate THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of checks whose expiration date is earlier than the publish date (potential data issues or already-expired checks)."
        },
        {
          "name": "Checks Missing Publish Date",
          "expression": "SUM(CASE WHEN CheckPublishDate IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of check records without a recorded publish date."
        }
      ],
      "foreign_keys": [
        {
          "column": "BankID",
          "references": "dbo.Bank.ID"
        },
        {
          "column": "ID",
          "references": "dbo.SalesCollection.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BankID",
          "CheckPublisher",
          "CheckTaxCode",
          "CheckPublishDate",
          "CheckExpirationDate"
        ],
        "default_filters": [
          {
            "column": "CheckPublishDate",
            "op": ">=",
            "value": "2013-01-01"
          }
        ],
        "suggested_derived_attributes": [
          {
            "name": "CheckPublishYear",
            "expression": "YEAR(CheckPublishDate)",
            "description": "Year part of CheckPublishDate (useful for time-based grouping)."
          },
          {
            "name": "DaysToExpiration",
            "expression": "DATEDIFF(day, CheckPublishDate, CheckExpirationDate)",
            "description": "Derived integer representing days between publish and expiration for each check."
          }
        ]
      }
    },
    {
      "name": "Case",
      "source": "dbo.Case",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Case Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of cases (rows) in the fact table."
        },
        {
          "name": "Completed Case Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of cases that have a completion timestamp (CompletedOn is not null)."
        },
        {
          "name": "Open Case Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of cases that are not yet completed (CompletedOn is null)."
        },
        {
          "name": "Completion Rate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE (SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END) * 1.0) / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of cases that have been completed (Completed Case Count / Case Count)."
        },
        {
          "name": "Average Time to Completion (days)",
          "expression": "AVG(CASE WHEN CompletedOn IS NOT NULL AND CreatedOn IS NOT NULL THEN DATEDIFF(SECOND, CreatedOn, CompletedOn) END) / 86400.0",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average elapsed time from case creation to completion, in days. Nulls excluded (only cases with both CreatedOn and CompletedOn are considered)."
        },
        {
          "name": "Median Time to Completion (days)",
          "expression": "PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY CASE WHEN CompletedOn IS NOT NULL AND CreatedOn IS NOT NULL THEN DATEDIFF(SECOND, CreatedOn, CompletedOn) END) OVER () / 86400.0",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Estimated median elapsed time from creation to completion, in days (uses continuous percentile on seconds difference)."
        },
        {
          "name": "Distinct Initiator Count",
          "expression": "COUNT(DISTINCT InitiatorID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct initiators who created cases."
        },
        {
          "name": "Unassigned Owner Case Count",
          "expression": "SUM(CASE WHEN OwnerUser IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of cases that do not have an assigned owner user."
        },
        {
          "name": "Cases with Context Entity",
          "expression": "SUM(CASE WHEN ContextEntityID IS NOT NULL AND ContextEntityID NOT IN (-1,0) THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of cases linked to a valid context entity (ContextEntityID present and not equal to sentinel values -1 or 0)."
        }
      ],
      "foreign_keys": [
        {
          "column": "ReferencePointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "InitiatorID",
          "references": "dbo.User.ID"
        },
        {
          "column": "OwnerUser",
          "references": "dbo.User.ID"
        },
        {
          "column": "MasterCaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "ParentTaskId",
          "references": "dbo.Task.ID"
        },
        {
          "column": "PermanentOwnerId",
          "references": "dbo.User.ID"
        },
        {
          "column": "CaseTypeID",
          "references": "dbo.CaseType.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CaseTypeID",
          "PointName",
          "PointCode",
          "InitiatorID",
          "CustomerIndicatorId",
          "CreatedOn.Date"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": "is not null"
          },
          {
            "column": "State",
            "op": "IN",
            "value": [
              1
            ]
          }
        ]
      }
    },
    {
      "name": "CaseAttachment",
      "source": "dbo.CaseAttachment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Attachment Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of attachment records."
        },
        {
          "name": "Distinct Cases Attached",
          "expression": "COUNT(DISTINCT CaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct cases that have at least one attachment."
        },
        {
          "name": "Distinct Tasks Attached",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct tasks referenced by attachments (null TaskID values are ignored)."
        },
        {
          "name": "Deleted Attachments",
          "expression": "SUM(CASE WHEN IsDeleted = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of attachments marked as deleted."
        },
        {
          "name": "Active Attachments",
          "expression": "SUM(CASE WHEN IsDeleted = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of attachments currently not marked as deleted."
        },
        {
          "name": "Percent Deleted",
          "expression": "SUM(CASE WHEN IsDeleted = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of attachments that are deleted out of total attachments."
        },
        {
          "name": "IsLast Flag Count",
          "expression": "SUM(CASE WHEN IsLast = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of attachments flagged as the last version (IsLast = true)."
        },
        {
          "name": "Earliest Attachment CreatedOn",
          "expression": "MIN(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Oldest creation timestamp for attachments in the aggregation window."
        },
        {
          "name": "Latest Attachment CreatedOn",
          "expression": "MAX(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent creation timestamp for attachments in the aggregation window."
        },
        {
          "name": "Average Attachments per Case",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT CaseID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average number of attachments per case (cases with zero attachments are not counted)."
        },
        {
          "name": "Average Days Since Created",
          "expression": "AVG(DATEDIFF(day, CreatedOn, CURRENT_TIMESTAMP))",
          "unit": "days",
          "currency": null,
          "format_hint": "decimal(1)",
          "description": "Average number of days from attachment creation to now. NULL for rows without CreatedOn."
        }
      ],
      "foreign_keys": [
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "CaseAttachmentTypeID",
          "references": "dbo.CaseAttachmentType.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CaseID",
          "CreatedBy",
          "AttachmentType",
          "CaseAttachmentTypeID",
          "IsDeleted",
          "CreatedOn.Year"
        ],
        "default_filters": [
          {
            "column": "IsDeleted",
            "op": "=",
            "value": "False"
          }
        ]
      }
    },
    {
      "name": "CaseComment",
      "source": "dbo.CaseComment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "CommentCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of comment records (rows) in the result set."
        },
        {
          "name": "DistinctCaseCount",
          "expression": "COUNT(DISTINCT CaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct cases that have at least one comment."
        },
        {
          "name": "CommentsWithTaskCount",
          "expression": "SUM(CASE WHEN TaskID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of comments that are linked to a task."
        },
        {
          "name": "PercentCommentsWithTask",
          "expression": "SUM(CASE WHEN TaskID IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of comments that are linked to a task (0-1). Use format percentage to show as percent."
        },
        {
          "name": "AverageCommentLengthChars",
          "expression": "AVG(LEN(CommentText))",
          "unit": "characters",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average length of the comment text in characters."
        },
        {
          "name": "MaxCommentLengthChars",
          "expression": "MAX(LEN(CommentText))",
          "unit": "characters",
          "currency": null,
          "format_hint": "integer",
          "description": "Maximum comment text length (characters) in the aggregation context."
        },
        {
          "name": "MinCommentLengthChars",
          "expression": "MIN(LEN(CommentText))",
          "unit": "characters",
          "currency": null,
          "format_hint": "integer",
          "description": "Minimum comment text length (characters) in the aggregation context."
        },
        {
          "name": "FirstCommentDate",
          "expression": "MIN(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "date_time",
          "description": "Earliest comment creation timestamp in the aggregation context."
        },
        {
          "name": "LastCommentDate",
          "expression": "MAX(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "date_time",
          "description": "Most recent comment creation timestamp in the aggregation context."
        },
        {
          "name": "DistinctCommenters",
          "expression": "COUNT(DISTINCT CreatedBy)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct authors (CreatedBy) who wrote comments."
        }
      ],
      "foreign_keys": [
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CaseID",
          "CreatedBy",
          "CreatedOn.Date",
          "CreatedOn.Year"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2000-01-01"
          },
          {
            "column": "CommentType",
            "op": "=",
            "value": "0"
          }
        ],
        "notes": "CommentText is stored in Greek collation. Use CreatedOn for time-series analysis and CreatedBy to attribute comments to users."
      }
    },
    {
      "name": "Task",
      "source": "dbo.Task",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Task Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of tasks (one row per task)."
        },
        {
          "name": "Completed Task Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tasks that have a completion timestamp (CompletedOn is not null)."
        },
        {
          "name": "Open Task Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tasks that are not completed (CompletedOn is null)."
        },
        {
          "name": "Completion Rate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE 1.0 * SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END) / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tasks that have been completed (Completed Task Count / Task Count)."
        },
        {
          "name": "Average Time to Complete (minutes)",
          "expression": "AVG(DATEDIFF(MINUTE, CreatedOn, CompletedOn))",
          "unit": "minutes",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average elapsed time in minutes between CreatedOn and CompletedOn for completed tasks. Incomplete tasks (null CompletedOn) are ignored."
        },
        {
          "name": "Median Time to Complete (minutes)",
          "expression": "PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY DATEDIFF(SECOND, CreatedOn, CompletedOn)) OVER () / 60.0",
          "unit": "minutes",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Median elapsed time in minutes between CreatedOn and CompletedOn for completed tasks. Uses a continuous percentile on the elapsed seconds and converts to minutes. Null CompletedOn values are ignored."
        },
        {
          "name": "Tasks Completed Within 7 Days",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL AND DATEDIFF(DAY, CreatedOn, CompletedOn) <= 7 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tasks completed within 7 calendar days of creation."
        },
        {
          "name": "SavedOn Count",
          "expression": "SUM(CASE WHEN SavedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tasks that have a SavedOn timestamp (useful for identifying tasks that reached a save/edit state)."
        },
        {
          "name": "Distinct Task Types",
          "expression": "COUNT(DISTINCT TaskTypeID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct task types present in the filtered set."
        }
      ],
      "foreign_keys": [
        {
          "column": "CompletedById",
          "references": "dbo.User.ID"
        },
        {
          "column": "TaskTypeID",
          "references": "dbo.TaskType.ID"
        },
        {
          "column": "ActualOwnerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "SenderID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskTypeID",
          "Status",
          "CreatedOn.Date",
          "ActualOwnerID",
          "SenderID",
          "CaseID",
          "DynamicCode"
        ],
        "default_filters": []
      }
    },
    {
      "name": "TaskLog",
      "source": "dbo.TaskLog",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Log Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of task log records (at the row grain)."
        },
        {
          "name": "Distinct Tasks",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct tasks that have one or more log records."
        },
        {
          "name": "Average Logs per Task",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT TaskID), 0)",
          "unit": "ratio",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of log entries per distinct task (NULL if no tasks)."
        },
        {
          "name": "First Log Time",
          "expression": "MIN(Timestamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest timestamp among the selected log records."
        },
        {
          "name": "Last Log Time",
          "expression": "MAX(Timestamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Latest timestamp among the selected log records."
        },
        {
          "name": "Logs With Outcome",
          "expression": "SUM(CASE WHEN Outcome IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of log records that contain a non-null Outcome value."
        },
        {
          "name": "Outcome Rate",
          "expression": "SUM(CASE WHEN Outcome IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Fraction of log records that include an Outcome (0-1)."
        },
        {
          "name": "Logs With OutcomeDate",
          "expression": "SUM(CASE WHEN OutcomeDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of log records that contain a non-null OutcomeDate."
        },
        {
          "name": "Average Text Length",
          "expression": "AVG(LEN(Text))",
          "unit": "characters",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average length (in characters) of the Text field for the selected logs."
        }
      ],
      "foreign_keys": [
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskID",
          "Outcome",
          "Timestamp.Date"
        ],
        "default_filters": [
          {
            "column": "Timestamp",
            "op": ">=",
            "value": "DATEADD(day, -365, GETDATE())"
          }
        ]
      }
    },
    {
      "name": "TaskAssignment",
      "source": "dbo.TaskAssignment",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Assignment Count",
          "expression": "COUNT(1)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of task assignment records (one row per assignment)."
        },
        {
          "name": "Distinct Tasks",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct tasks that have at least one assignment."
        },
        {
          "name": "Distinct Users",
          "expression": "COUNT(DISTINCT UserID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct users referenced on assignments. Null UserID values are excluded."
        },
        {
          "name": "Distinct DM Entities",
          "expression": "COUNT(DISTINCT DMKey)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct domain dimension keys (DMKey) referenced by assignments."
        },
        {
          "name": "Assignments per Task (avg)",
          "expression": "COUNT(1) * 1.0 / NULLIF(COUNT(DISTINCT TaskID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of assignments per distinct task (total assignments divided by distinct tasks)."
        },
        {
          "name": "Percent Assignments With User",
          "expression": "100.0 * COUNT(UserID) / NULLIF(COUNT(1), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of assignment records that reference a non-null UserID."
        },
        {
          "name": "Percent Assignments With Role",
          "expression": "100.0 * COUNT(RoleID) / NULLIF(COUNT(1), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of assignment records that reference a non-null RoleID."
        }
      ],
      "foreign_keys": [
        {
          "column": "RoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "UserID",
          "references": "dbo.[User].ID"
        },
        {
          "column": "DMKey",
          "references": "dbo.TargetGroupItemValue.ID",
          "note": "inferred: DMTable contains the constant 'TargetGroupItemValue', so DMKey likely references that dimension."
        }
      ],
      "display": {
        "default_breakdowns": [
          "Task",
          "User",
          "Role",
          "DMTable"
        ],
        "default_filters": [
          {
            "column": "AssignmentType",
            "op": "=",
            "value": "1"
          },
          {
            "column": "DMTable",
            "op": "=",
            "value": "TargetGroupItemValue"
          }
        ],
        "notes": "No explicit date column in this table. Use Task or referenced dimensions for time-based analysis."
      }
    },
    {
      "name": "TaskActionLog",
      "source": "dbo.TaskActionLog",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalActions",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of action log rows (each row represents a recorded action instance)."
        },
        {
          "name": "DistinctTasks",
          "expression": "COUNT(DISTINCT TaskId)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct tasks that have at least one action recorded in the log."
        },
        {
          "name": "ActionsOfType1",
          "expression": "SUM(CASE WHEN Action = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of actions where Action = 1 (useful when Action is an enumerated type and '1' represents a specific action)."
        },
        {
          "name": "PctActionsType1",
          "expression": "SUM(CASE WHEN Action = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of all actions that are of type 1."
        },
        {
          "name": "AverageActionsPerTask",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT TaskId),0)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of actions recorded per distinct task."
        },
        {
          "name": "FirstActionDate",
          "expression": "MIN(ActionDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest action timestamp recorded in the current filter context."
        },
        {
          "name": "LastActionDate",
          "expression": "MAX(ActionDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent action timestamp recorded in the current filter context."
        },
        {
          "name": "ActiveDays",
          "expression": "COUNT(DISTINCT CAST(ActionDate AS DATE))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct calendar days on which actions were recorded."
        }
      ],
      "foreign_keys": [
        {
          "column": "TaskId",
          "references": "dbo.Task.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskId",
          "Action",
          "ActionDate"
        ],
        "default_filters": [
          {
            "column": "ActionDate",
            "op": ">=",
            "value": "2022-01-01"
          }
        ]
      }
    },
    {
      "name": "TaskTarget",
      "source": "dbo.TaskTarget",
      "grain": [
        "TaskID",
        "TargetCaseID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of rows (task-to-case assignments) in the TaskTarget table"
        },
        {
          "name": "DistinctTaskCount",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of unique tasks represented in the result set"
        },
        {
          "name": "DistinctCaseCount",
          "expression": "COUNT(DISTINCT TargetCaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of unique target cases represented in the result set"
        },
        {
          "name": "RowsWithDM",
          "expression": "SUM(CASE WHEN DMKey IS NOT NULL OR DMCharKey IS NOT NULL OR DMTable IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of assignments that have any Dimension Mapping (DMKey, DMCharKey or DMTable) populated"
        },
        {
          "name": "PctWithDM",
          "expression": "SUM(CASE WHEN DMKey IS NOT NULL OR DMCharKey IS NOT NULL OR DMTable IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of task-to-case assignments that include any Dimension Mapping values"
        },
        {
          "name": "AvgAssignmentsPerTask",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT TaskID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average number of case assignments per task (assignments / distinct tasks)"
        }
      ],
      "foreign_keys": [
        {
          "column": "TargetCaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskID",
          "TargetCaseID"
        ],
        "default_filters": [
          {
            "column": "RowCount",
            "op": ">",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "TaskTransition",
      "source": "dbo.TaskTransition",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Transition Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of task transition rows (one row = one transition)."
        },
        {
          "name": "Unique Source Task Types",
          "expression": "COUNT(DISTINCT SourceTaskTypeID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct source task types referenced by transitions."
        },
        {
          "name": "Unique Target Task Types",
          "expression": "COUNT(DISTINCT TargetTaskTypeID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct target task types referenced by transitions."
        },
        {
          "name": "Default Transitions",
          "expression": "SUM(CASE WHEN IsDefault = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of transitions marked as default."
        },
        {
          "name": "Percent Default Transitions",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN 0 ELSE SUM(CASE WHEN IsDefault = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of transitions that are default (Default Transitions / Transition Count)."
        },
        {
          "name": "Transitions With Condition",
          "expression": "SUM(CASE WHEN Condition IS NOT NULL AND LTRIM(RTRIM(Condition)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of transitions that have a non-empty Condition expression defined."
        },
        {
          "name": "Percent With Condition",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN 0 ELSE SUM(CASE WHEN Condition IS NOT NULL AND LTRIM(RTRIM(Condition)) <> '' THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of transitions that include a Condition expression."
        },
        {
          "name": "Transitions Missing Source",
          "expression": "SUM(CASE WHEN SourceTaskTypeID IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of transitions where the SourceTaskTypeID is missing (null)."
        },
        {
          "name": "Distinct DM Tables",
          "expression": "COUNT(DISTINCT DMTable)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct DMTable values referenced (technical/metadata table names)."
        },
        {
          "name": "Latest Version",
          "expression": "MAX(Version)",
          "unit": "integer",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum Version value observed for these transitions (useful to filter to current definitions)."
        }
      ],
      "foreign_keys": [
        {
          "column": "SourceTaskTypeID",
          "references": "dbo.TaskType.ID"
        },
        {
          "column": "TargetTaskTypeID",
          "references": "dbo.TaskType.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "SourceTaskTypeID",
          "TargetTaskTypeID",
          "IsDefault",
          "Version"
        ],
        "default_filters": [
          {
            "column": "Version",
            "op": ">=",
            "value": "1"
          }
        ],
        "notes": "Use SourceTaskTypeID and TargetTaskTypeID to join to task type dimension for friendly names. Condition contains rule expressions (often XAML) and may require parsing for human-readable logic."
      }
    },
    {
      "name": "Ticket",
      "source": "dbo.Ticket",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Ticket Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of ticket records (one per ticket ID)"
        },
        {
          "name": "Distinct Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct business points represented in the filtered ticket set"
        },
        {
          "name": "Completed Tickets",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tickets that have a completion timestamp (CompletedOn is not null)"
        },
        {
          "name": "Open Tickets",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tickets without a completion timestamp (still open)"
        },
        {
          "name": "Completion Rate",
          "expression": "CASE WHEN COUNT(*) = 0 THEN NULL ELSE SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(*) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tickets that have been completed (CompletedOn populated) as a percentage of all tickets"
        },
        {
          "name": "Average Resolution Time (days)",
          "expression": "AVG(CASE WHEN CompletedOn IS NOT NULL THEN DATEDIFF(day, CreatedOn, CompletedOn) ELSE NULL END)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days between ticket creation and completion for completed tickets"
        },
        {
          "name": "Average Resolution Time (hours)",
          "expression": "AVG(CASE WHEN CompletedOn IS NOT NULL THEN DATEDIFF(hour, CreatedOn, CompletedOn) ELSE NULL END)",
          "unit": "hours",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of hours between ticket creation and completion for completed tickets"
        },
        {
          "name": "Successful Tickets (Result = 1)",
          "expression": "SUM(CASE WHEN Result = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tickets where the Result flag equals 1 (indicative of success in this dataset)"
        },
        {
          "name": "Need Evaluation Count",
          "expression": "SUM(CASE WHEN NeedEval = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tickets flagged as needing evaluation"
        },
        {
          "name": "Need Supervisor Count",
          "expression": "SUM(CASE WHEN NeedSupervisor = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tickets flagged as requiring supervisor involvement"
        },
        {
          "name": "Average Time to Receive (days)",
          "expression": "AVG(CASE WHEN ReceivedOn IS NOT NULL THEN DATEDIFF(day, CreatedOn, ReceivedOn) ELSE NULL END)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days between ticket creation and the received timestamp (ReceivedOn). Nulls ignored."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "HandlerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CompletedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "LastAssignUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "LastAssignRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "SerialRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "TicketTypeID",
          "references": "dbo.TicketType.ID"
        },
        {
          "column": "PriorityID",
          "references": "dbo.TicketPriority.ID"
        },
        {
          "column": "SourceTypeID",
          "references": "dbo.TicketSourceType.ID"
        },
        {
          "column": "ChargeOfResponsibilityID",
          "references": "dbo.TicketChargeOfResponsibility.ID"
        },
        {
          "column": "CancellationResonID",
          "references": "dbo.TicketCancellationReason.ID"
        },
        {
          "column": "RelatedContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "BusinessPointIdentificationId",
          "references": "dbo.BusinessPointIdentification.ID"
        },
        {
          "column": "SelectedSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "TargetSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "TargetSupervisorID",
          "references": "dbo.User.ID"
        },
        {
          "column": "TargetCampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "TargetSubChannelID",
          "references": "dbo.SubChannel.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TicketType",
          "BusinessPoint",
          "Priority",
          "CreatedOn.Date",
          "Handler"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "DATEADD(year, -1, GETDATE())"
          },
          {
            "column": "Status",
            "op": "IS NOT",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "TicketResult",
      "source": "dbo.TicketResult",
      "grain": [
        "TicketID",
        "TaskID"
      ],
      "measures": [
        {
          "name": "TotalResults",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of ticket task result rows."
        },
        {
          "name": "UniqueTickets",
          "expression": "COUNT(DISTINCT TicketID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct tickets represented in this result set."
        },
        {
          "name": "UniqueTasks",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct tasks represented in this result set."
        },
        {
          "name": "SuccessCount",
          "expression": "SUM(CASE WHEN Result = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results flagged as successful (Result = 1)."
        },
        {
          "name": "SuccessRate",
          "expression": "SUM(CASE WHEN Result = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of results that are successful. Calculated as SuccessCount / TotalResults."
        },
        {
          "name": "PendingReviewCount",
          "expression": "SUM(CASE WHEN PendingReview = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of results currently marked as pending review."
        },
        {
          "name": "PerformedCount",
          "expression": "COUNT(PerformedOn)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results that have a PerformedOn timestamp (i.e., actions actually performed)."
        },
        {
          "name": "FirstPerformedOn",
          "expression": "MIN(PerformedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest PerformedOn timestamp in the aggregation (first action time)."
        },
        {
          "name": "LastPerformedOn",
          "expression": "MAX(PerformedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent PerformedOn timestamp in the aggregation (last action time)."
        },
        {
          "name": "ResultCommCount",
          "expression": "SUM(CASE WHEN ResultComm = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results that involved a communication (ResultComm = true)."
        },
        {
          "name": "ResultCommRate",
          "expression": "SUM(CASE WHEN ResultComm = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of results that involved a communication."
        },
        {
          "name": "ResultCustomerCount",
          "expression": "SUM(CASE WHEN ResultCustomer = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results that were marked as resulting from customer action/confirmation."
        },
        {
          "name": "ResultCustomerRate",
          "expression": "SUM(CASE WHEN ResultCustomer = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of results marked as customer-driven."
        },
        {
          "name": "AverageResultsPerTicket",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT TicketID), 0)",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average number of task results per ticket."
        }
      ],
      "foreign_keys": [
        {
          "column": "InParallelRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.Name"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.CustomerID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ContractID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.SalesmanID"
        },
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "TicketID",
          "references": "dbo.Ticket.ID"
        },
        {
          "column": "ResolutionMethodID",
          "references": "dbo.TicketResolutionMethod.ID"
        },
        {
          "column": "PerformedByID",
          "references": "dbo.[User].ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "PerformedByID (User)",
          "ResolutionMethodID (TicketResolutionMethod)",
          "ResultCommTypeID (CanvasPlanningHistory)",
          "Result",
          "PendingReview",
          "PerformedOn.Date"
        ],
        "default_filters": [
          {
            "column": "PerformedOn",
            "op": "IS NOT",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "TicketCommunication",
      "source": "dbo.TicketCommunication",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "CommunicationCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of communication records (rows) in the fact table."
        },
        {
          "name": "NonEmptyCommunicationCount",
          "expression": "SUM(CASE WHEN CommunicationText IS NOT NULL AND LTRIM(RTRIM(CommunicationText)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of communication records that contain non-empty text."
        },
        {
          "name": "UniqueTicketCount",
          "expression": "COUNT(DISTINCT TicketID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of distinct tickets that have at least one communication record (distinct TicketID)."
        },
        {
          "name": "TotalCharacters",
          "expression": "SUM(LEN(CommunicationText))",
          "unit": "characters",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of characters across all CommunicationText values (NULLs contribute 0)."
        },
        {
          "name": "AverageCharactersPerCommunication",
          "expression": "AVG(CAST(LEN(CommunicationText) AS FLOAT))",
          "unit": "characters",
          "currency": null,
          "format_hint": "decimal(1)",
          "description": "Average number of characters per communication record (averages over rows, NULLs counted as NULL in AVG semantics)."
        }
      ],
      "foreign_keys": [
        {
          "column": "TicketID",
          "references": "dbo.Ticket.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Ticket"
        ],
        "default_filters": [
          {
            "column": "CommunicationText",
            "op": "IS NOT NULL",
            "value": null
          }
        ]
      }
    },
    {
      "name": "TicketAdvertisementHistory",
      "source": "dbo.TicketAdvertisementHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of history records (rows) in the TicketAdvertisementHistory table."
        },
        {
          "name": "DistinctTicketCount",
          "expression": "DISTINCTCOUNT(TicketID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct tickets referenced in the history records."
        },
        {
          "name": "DistinctAdvertisementCount",
          "expression": "DISTINCTCOUNT(AdvertisementID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct advertisements referenced in the history records."
        },
        {
          "name": "TaskAssociationCount",
          "expression": "COUNT(TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of history records that are associated with a task (TaskID is not null)."
        },
        {
          "name": "WorkDoneInProductionCount",
          "expression": "SUM(CAST(IsWorkDoneInProduction AS INT))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of history records where work was done in production (IsWorkDoneInProduction = true)."
        },
        {
          "name": "WorkDoneInProductionRate",
          "expression": "DIVIDE(SUM(CAST(IsWorkDoneInProduction AS INT)), COUNT(ID))",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of history records where work was done in production (WorkDoneInProductionCount / RecordCount)."
        },
        {
          "name": "AdvertisementsPerTicket",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT TicketID), 0)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of advertisement history records per distinct ticket."
        }
      ],
      "foreign_keys": [
        {
          "column": "TicketID",
          "references": "Ticket.ID"
        },
        {
          "column": "AdvertisementID",
          "references": "Advertisement.ID"
        },
        {
          "column": "TaskID",
          "references": "Task.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Ticket",
          "Advertisement",
          "Task",
          "IsWorkDoneInProduction"
        ],
        "default_filters": [
          {
            "column": "HistoryType",
            "op": "=",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "CampaignBucket",
      "source": "dbo.CampaignBucket",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "BucketCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of campaign bucket rows (unique buckets)"
        },
        {
          "name": "TotalAmount",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of reported total amounts for the bucket (includes XOGR, Website, PPC, Print where populated)"
        },
        {
          "name": "XOGRAmount",
          "expression": "SUM(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of XOGRAmount across buckets"
        },
        {
          "name": "WebSiteAmount",
          "expression": "SUM(WebSiteAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of WebSiteAmount across buckets"
        },
        {
          "name": "PPCAmount",
          "expression": "SUM(PPCAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of PPC amount (pay-per-click) across buckets"
        },
        {
          "name": "PrintAmount",
          "expression": "SUM(PrintAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of print-related spend across buckets"
        },
        {
          "name": "TargetingAmountCalculated",
          "expression": "SUM(TargetingAmountCalculated)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of system-calculated targeting amount for the bucket"
        },
        {
          "name": "TargetingAmountByUser",
          "expression": "SUM(TargetingAmountByUser)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of manually-entered targeting amounts by users (many rows are null)"
        },
        {
          "name": "AvgTargetingPerBucket",
          "expression": "AVG(TargetingAmountCalculated)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average calculated targeting amount per bucket"
        },
        {
          "name": "MaxTargetingPerBucket",
          "expression": "MAX(TargetingAmountCalculated)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Maximum calculated targeting amount found in a single bucket"
        },
        {
          "name": "DistinctBusinessPoints",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of distinct business points (stores/locations) represented in the selected set"
        },
        {
          "name": "SumScoreTotal",
          "expression": "SUM(ScoreTotal)",
          "unit": "points",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Sum of ScoreTotal across buckets (interpreted as score points)"
        },
        {
          "name": "AvgScoreTotal",
          "expression": "AVG(ScoreTotal)",
          "unit": "points",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average ScoreTotal per bucket (useful to compare bucket quality)"
        },
        {
          "name": "AvgScoreDifferenceToAvg",
          "expression": "AVG(ScoreDifferenceToAvg)",
          "unit": "points",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average difference of the bucket score versus campaign average (positive means above average)"
        },
        {
          "name": "PercentBucketsWithUserTargeting",
          "expression": "100.0 * SUM(CASE WHEN TargetingAmountByUser IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percent of buckets where a user-entered targeting amount exists"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        },
        {
          "column": "FileID",
          "references": "dbo.CampaignBucketFileUploadHistory.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "NewSalesmanID",
          "references": "dbo.Employee.ID"
        },
        {
          "column": "PreviousSalesmanID",
          "references": "dbo.Employee.ID"
        },
        {
          "column": "SupervisorID",
          "references": "dbo.Employee.ID"
        },
        {
          "column": "MainActivityID",
          "references": "dbo.Activity.ID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.Segment.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "NewSalesmanName",
          "SupervisorName",
          "SegmentDescription",
          "ProductMixture",
          "VerticalsGrouping",
          "MainActivity",
          "BucketGroup",
          "NewChannel"
        ],
        "default_time_dimension": "FirstCustomerExpirationMonth",
        "default_filters": [
          {
            "column": "ItemStatus",
            "op": "=",
            "value": "1"
          },
          {
            "column": "WorkingStatus",
            "op": "=",
            "value": "1"
          }
        ],
        "notes": "Common analyses look at active buckets (ItemStatus=1) and working buckets (WorkingStatus=1). Use FirstCustomerExpirationMonth as the primary time dimension for trend views."
      }
    },
    {
      "name": "CampaignBucketFileUploadHistory",
      "source": "dbo.CampaignBucketFileUploadHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Upload Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of file upload records (rows) in the selected scope"
        },
        {
          "name": "Distinct File Names",
          "expression": "COUNT(DISTINCT FileName)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct file names uploaded in the selected scope"
        },
        {
          "name": "Distinct Campaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns associated with uploads in the selected scope"
        },
        {
          "name": "First Upload Timestamp",
          "expression": "MIN(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest upload timestamp in the selected scope"
        },
        {
          "name": "Last Upload Timestamp",
          "expression": "MAX(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent upload timestamp in the selected scope"
        }
      ],
      "foreign_keys": [
        {
          "column": "CreatedByUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "CreatedOn.Date",
          "CreatedByUserID"
        ],
        "default_filters": []
      }
    },
    {
      "name": "CampaignBucketFileUploadHistoryDetail",
      "source": "dbo.CampaignBucketFileUploadHistoryDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of records (rows) in the detail table"
        },
        {
          "name": "TotalAmount_Sum",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of TotalAmount across records"
        },
        {
          "name": "PrintAmount_Sum",
          "expression": "SUM(PrintAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of PrintAmount (printed media spend)"
        },
        {
          "name": "PPCAmount_Sum",
          "expression": "SUM(PPCAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of PPCAmount (pay-per-click spend)"
        },
        {
          "name": "XOGRAmount_Sum",
          "expression": "SUM(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of XOGRAmount (other specified channel spend)"
        },
        {
          "name": "WebSiteAmount_Sum",
          "expression": "SUM(WebSiteAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of WebSiteAmount (website-related spend)"
        },
        {
          "name": "AvgTotalAmount_PerRecord",
          "expression": "AVG(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average TotalAmount per record"
        },
        {
          "name": "DistinctBusinessPoints",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct business points in the selection"
        },
        {
          "name": "DistinctFiles",
          "expression": "COUNT(DISTINCT FileID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct file uploads represented"
        },
        {
          "name": "PctWithWebsiteAmount",
          "expression": "100.0 * SUM(CASE WHEN WebSiteAmount IS NOT NULL AND WebSiteAmount <> 0 THEN 1 ELSE 0 END) / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of records that include a non-zero WebSiteAmount"
        }
      ],
      "foreign_keys": [
        {
          "column": "FileID",
          "references": "dbo.CampaignBucketFileUploadHistory.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BussinessPointCode",
          "BusinessPointName",
          "ProductMixture",
          "VerticalsGrouping",
          "NewChannel",
          "NewSalesmanName",
          "SegmentDescription",
          "BucketGroup",
          "FirstCustomerExpirationMonth"
        ],
        "default_filters": [
          {
            "column": "TotalAmount",
            "op": ">",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "CampaignBusinessPoint",
      "source": "dbo.CampaignBusinessPoint",
      "grain": [
        "CampaignID",
        "BusinessPointID"
      ],
      "measures": [
        {
          "name": "AssignmentCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of campaign-to-business-point assignment rows. Use as a general row-count of relationships in this table."
        },
        {
          "name": "DistinctBusinessPoints",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points represented. Typically used when grouping by CampaignID to show how many business points a campaign targets."
        },
        {
          "name": "DistinctCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns represented. Typically used when grouping by BusinessPointID to show how many campaigns target a business point."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "BusinessPointID",
          "references": "BusinessPoint.BusinessPointID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "BusinessPoint"
        ],
        "default_filters": []
      }
    },
    {
      "name": "CampaignAssignmentRequest",
      "source": "dbo.CampaignAssignmentRequest",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Request Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of assignment requests (rows)."
        },
        {
          "name": "Closed Request Count",
          "expression": "SUM(CASE WHEN ClosedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of requests that have been closed (ClosedOn is not null)."
        },
        {
          "name": "Open Request Count",
          "expression": "SUM(CASE WHEN ClosedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of requests that are still open (no ClosedOn date)."
        },
        {
          "name": "Percent Closed",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN ClosedOn IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of requests that have been closed (Closed Request Count / Request Count)."
        },
        {
          "name": "Average Time to Close (days)",
          "expression": "AVG(CASE WHEN ClosedOn IS NOT NULL THEN DATEDIFF(SECOND, CreatedOn, ClosedOn) END) / 86400.0",
          "unit": "days",
          "currency": null,
          "format_hint": "days(2)",
          "description": "Average elapsed time between request creation and closure for closed requests, expressed in days."
        },
        {
          "name": "Average Age (days)",
          "expression": "AVG(DATEDIFF(SECOND, CreatedOn, ISNULL(ClosedOn, GETDATE()))) / 86400.0",
          "unit": "days",
          "currency": null,
          "format_hint": "days(2)",
          "description": "Average age of requests in days. For closed requests uses actual closed time; for open requests uses current system time."
        },
        {
          "name": "Distinct Requested Salesmen",
          "expression": "COUNT(DISTINCT RequestedSalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct salesmen who have been requested across the selected set of requests."
        },
        {
          "name": "Distinct Performers",
          "expression": "COUNT(DISTINCT PerformerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct performers recorded on requests (null performer values are ignored)."
        },
        {
          "name": "Requests with Comment",
          "expression": "SUM(CASE WHEN LEN(ISNULL(Comment, '')) > 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of requests that include a non-empty comment."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "CreatedByUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "PerformerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ReasonID",
          "references": "dbo.CampaignAssignmentRequestReason.ID"
        },
        {
          "column": "RequestedSalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "CreatedOn.Date",
          "ReasonID",
          "RequestedSalesmanID",
          "PerformerID",
          "RequestType"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": "IS NOT NULL",
            "value": null
          }
        ]
      }
    },
    {
      "name": "CampaignAssignmentRequestDetail",
      "source": "dbo.CampaignAssignmentRequestDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAssignments",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of assignment detail rows (one row per bucket involved in a request)."
        },
        {
          "name": "Reassignments",
          "expression": "SUM(CASE WHEN NewSalesmanID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of assignment detail rows where a new salesman was assigned."
        },
        {
          "name": "PendingAssignments",
          "expression": "SUM(CASE WHEN NewSalesmanID IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of assignment detail rows that do not yet have a new salesman assigned (still pending)."
        },
        {
          "name": "ReassignmentRate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN NewSalesmanID IS NOT NULL THEN 1 ELSE 0 END) / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of assignment detail rows that resulted in a reassignment to a new salesman (Reassignments / TotalAssignments)."
        },
        {
          "name": "SegmentChanges",
          "expression": "SUM(CASE WHEN NewSegmentID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of assignment detail rows where the segment was changed."
        },
        {
          "name": "SegmentChangeRate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN NewSegmentID IS NOT NULL THEN 1 ELSE 0 END) / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of assignment detail rows that include a segment change (SegmentChanges / TotalAssignments)."
        },
        {
          "name": "DistinctCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns referenced in the selection."
        },
        {
          "name": "DistinctBuckets",
          "expression": "COUNT(DISTINCT BucketID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaign buckets referenced in the selection."
        },
        {
          "name": "DistinctOldSalesmen",
          "expression": "COUNT(DISTINCT OldSalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct old (previous) salesmen referenced across the selected rows."
        },
        {
          "name": "DistinctNewSalesmen",
          "expression": "COUNT(DISTINCT NewSalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct new salesmen referenced across the selected rows (excludes NULLs)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BucketID",
          "references": "dbo.CampaignBucket.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "NewSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "OldSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "RequestID",
          "references": "dbo.CampaignAssignmentRequest.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "BucketID",
          "OldSalesmanID",
          "NewSalesmanID",
          "RequestID"
        ],
        "default_filters": []
      }
    },
    {
      "name": "CampaignSalesman",
      "source": "dbo.CampaignSalesman",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Assignment Count",
          "expression": "COUNT(1)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of campaign-salesman assignment records (rows) in the current filter context."
        },
        {
          "name": "Distinct Salesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique salesmen assigned (distinct SalesmanID) in the current filter context."
        },
        {
          "name": "Distinct Campaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique campaigns represented (distinct CampaignID) in the current filter context."
        },
        {
          "name": "Average Assignments per Campaign",
          "expression": "COUNT(1) / NULLIF(COUNT(DISTINCT CampaignID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of salesman assignments per campaign (total assignments divided by distinct campaigns). NULL-safe to avoid division by zero."
        }
      ],
      "foreign_keys": [
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign.ID",
          "Campaign.Name",
          "Salesman.ID",
          "Salesman.FullName"
        ],
        "default_filters": []
      }
    },
    {
      "name": "CampaignSalesmanAssignment",
      "source": "dbo.CampaignSalesmanBeginEndDate",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AssignmentCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of campaign-salesman assignment records (each row represents a salesman assigned to a campaign with a begin/end period)."
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct campaigns represented in the selected set of assignments."
        },
        {
          "name": "DistinctSalesmanCount",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct salesmen represented in the selected set of assignments."
        },
        {
          "name": "TotalAssignmentDays",
          "expression": "SUM(DATEDIFF(day, BeginDate, ISNULL(EndDate, CAST(GETDATE() AS date))))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of the durations (in days) for all assignments. If EndDate is null the current date is used to compute an open assignment's duration."
        },
        {
          "name": "AverageAssignmentDays",
          "expression": "AVG(DATEDIFF(day, BeginDate, ISNULL(EndDate, CAST(GETDATE() AS date))))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average duration (in days) of assignments. Null BeginDate rows are excluded by the DATEDIFF semantics."
        },
        {
          "name": "ActiveAssignmentCount",
          "expression": "SUM(CASE WHEN EndDate IS NULL OR EndDate >= CAST(GETDATE() AS date) THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of assignments that are currently active (no EndDate or EndDate in the future or today)."
        },
        {
          "name": "ActiveAssignmentPct",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE 1.0 * SUM(CASE WHEN EndDate IS NULL OR EndDate >= CAST(GETDATE() AS date) THEN 1 ELSE 0 END) / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of assignments that are currently active (ActiveAssignmentCount / AssignmentCount)."
        },
        {
          "name": "EarliestBeginDate",
          "expression": "MIN(BeginDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "date",
          "description": "Earliest BeginDate across the selected assignments."
        },
        {
          "name": "LatestEndDate",
          "expression": "MAX(EndDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "date",
          "description": "Latest EndDate across the selected assignments (nulls indicate open assignments and will not be considered greater than a date)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "SalesmanID",
          "BeginDate.Year",
          "EndDate.Year"
        ],
        "default_filters": [
          {
            "column": "BeginDate",
            "op": ">=",
            "value": "2017-01-01"
          },
          {
            "column": "EndDate",
            "op": "is_null_or_gte",
            "value": "today"
          }
        ]
      }
    },
    {
      "name": "CampaignSalesMarketItem",
      "source": "dbo.CampaignSalesMarketItem",
      "grain": [
        "CampaignID",
        "TargetGroupItemValueID",
        "BusinessPointID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows (records) in the selected scope."
        },
        {
          "name": "BusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points represented."
        },
        {
          "name": "TotalSubrDiscount",
          "expression": "SUM(SubrTotalAmountDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of subscription-related discounts applied to records (SubrTotalAmountDiscount)."
        },
        {
          "name": "TotalNoSubrDiscounts",
          "expression": "SUM(NoSubrTotalAmountDiscounts)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of discounts for non-subscription items (NoSubrTotalAmountDiscounts)."
        },
        {
          "name": "TotalRenewalAmount",
          "expression": "SUM(RenewalTotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total renewal amount aggregated across rows (RenewalTotalAmount)."
        },
        {
          "name": "AvgRenewalPerBusinessPoint",
          "expression": "AVG(RenewalTotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average renewal amount per record/business point."
        },
        {
          "name": "BundleCount",
          "expression": "SUM(CASE WHEN IsBundle = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows marked as bundle (IsBundle = 1)."
        },
        {
          "name": "PaymentRefusalCount",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of records where a payment refusal flag is set."
        },
        {
          "name": "DisappearedCount",
          "expression": "SUM(CASE WHEN Disappeared = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of records flagged as disappeared."
        },
        {
          "name": "SignedCount",
          "expression": "SUM(CASE WHEN SignedDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of records that have a signed date (SignedDate is not null)."
        },
        {
          "name": "PaymentRefusalRate",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(*),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of records with payment refusal among all records in the aggregation. Null-safe division."
        },
        {
          "name": "TotalActiveDays",
          "expression": "SUM(DATEDIFF(day, AdvBeginDateSubr, AdvEndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of calendar days between AdvBeginDateSubr and AdvEndDate across rows (nulls reduce contribution). Use with care when dates are missing."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "BusinessPointID",
          "references": "BusinessPoint.BusinessPointID"
        },
        {
          "column": "SegmentID",
          "references": "Segment.SegmentID"
        },
        {
          "column": "ChannelTypeID",
          "references": "ChannelType.ChannelTypeID"
        },
        {
          "column": "GroupID",
          "references": "Group.GroupID"
        },
        {
          "column": "PrefectureID",
          "references": "Geography.PrefectureID"
        },
        {
          "column": "MunicipalityID",
          "references": "Geography.MunicipalityID"
        },
        {
          "column": "NoSubrSalesmanID",
          "references": "Salesperson.SalespersonID"
        },
        {
          "column": "SubrSalesmanID",
          "references": "Salesperson.SalespersonID"
        },
        {
          "column": "HandlerSalesManID",
          "references": "Salesperson.SalespersonID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "Prefecture",
          "SegmentName",
          "ChanneType",
          "BusinessPointBrandName",
          "MediumName"
        ],
        "default_filters": [
          {
            "column": "IsReleased",
            "op": "=",
            "value": "1"
          }
        ]
      }
    },
    {
      "name": "CampaignNewLossPremiseCustomerItem",
      "source": "dbo.CampaignNewLossPremiseCustomerItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Target Row Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows (targeted premises) in the set. Grain-level count; one row per campaign target item."
        },
        {
          "name": "Unique Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points (stores) targeted by the campaign."
        },
        {
          "name": "Recorded Actions",
          "expression": "SUM(CASE WHEN ActionSalesmanID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of target rows where an action was recorded (ActionSalesmanID is present)."
        },
        {
          "name": "Distinct Action Salesmen",
          "expression": "COUNT(DISTINCT ActionSalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct salesmen who performed actions on these targets."
        },
        {
          "name": "Action Rate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN ActionSalesmanID IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of targeted rows that have an action recorded (Recorded Actions / Target Row Count)."
        },
        {
          "name": "Rows With Phone",
          "expression": "SUM(CASE WHEN Phone IS NOT NULL AND LTRIM(RTRIM(Phone)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of targeted rows that include a phone number."
        },
        {
          "name": "Average Days Since Action",
          "expression": "AVG(DATEDIFF(day, ActionDateTime, GETUTCDATE()))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days between the action timestamp and today for rows that have an ActionDateTime. Nulls are ignored by the aggregate."
        },
        {
          "name": "Most Recent Action Date",
          "expression": "MAX(ActionDateTime)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Latest action timestamp recorded for the slice (useful for recency checks)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.[User].ID"
        },
        {
          "column": "ActionSalesmanID",
          "references": "dbo.[User].ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignRule.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignDescription",
          "ActionSalesmanName",
          "City",
          "MainActivityName",
          "BusinessPointBrandName"
        ],
        "default_filters": [
          {
            "column": "ActionDateTime",
            "op": ">=",
            "value": "DATEADD(year, -1, GETUTCDATE())"
          },
          {
            "column": "CampaignID",
            "op": "IN",
            "value": "[selected campaign(s)]"
          }
        ]
      }
    },
    {
      "name": "Campaign New Loss - Salesman Customer Assignments",
      "source": "dbo.CampaignNewLossSalesmenCustomer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Assignment Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of assignment rows (one row = one customer-businesspoint assignment to a salesman under a campaign rule)."
        },
        {
          "name": "Distinct Customers",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customers (business points) represented in the filtered set."
        },
        {
          "name": "Distinct Salesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct salesmen involved in the assignments for the filtered set."
        },
        {
          "name": "Average Customers per Salesman",
          "expression": "COUNT(DISTINCT BusinessPointID) * 1.0 / NULLIF(COUNT(DISTINCT SalesmanID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average number of distinct customers (business points) assigned per salesman. NULL if there are no salesmen in the filtered set."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "Rule",
          "Salesman",
          "BusinessPoint"
        ],
        "default_filters": []
      }
    },
    {
      "name": "CampaignNewLossCustomer",
      "source": "dbo.CampaignNewLossCustomer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "EventCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of rows / events in the fact table"
        },
        {
          "name": "UniqueBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct business points referenced by these campaign events"
        },
        {
          "name": "UniqueRuleCount",
          "expression": "COUNT(DISTINCT RuleID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct campaign rules that produced events"
        },
        {
          "name": "RequestedToSuspendCount",
          "expression": "SUM(CASE WHEN IsRequestedToSuspend = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events where the customer was requested to be suspended"
        },
        {
          "name": "RequestedToResumeCount",
          "expression": "SUM(CASE WHEN IsRequestedToResume = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events where the customer was requested to be resumed"
        },
        {
          "name": "SuspendedCount",
          "expression": "SUM(CASE WHEN IsSuspended = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events where the customer is currently suspended"
        },
        {
          "name": "NewRecordCount",
          "expression": "SUM(CASE WHEN IsNewRecord = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events marked as new records"
        },
        {
          "name": "ActionResultCount",
          "expression": "COUNT(ActionResult)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events which have a non-null ActionResult"
        },
        {
          "name": "DistinctActionResultCount",
          "expression": "COUNT(DISTINCT ActionResult)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct ActionResult values (excludes NULL)"
        },
        {
          "name": "DialerActionAssignedCount",
          "expression": "COUNT(DialerAction)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events with a non-null DialerAction"
        },
        {
          "name": "BatchAssignedCount",
          "expression": "COUNT(BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events associated with a batch (BatchID not null)"
        },
        {
          "name": "SuspensionRate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN IsSuspended = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of events where the customer is suspended"
        },
        {
          "name": "RequestedToSuspendRate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN IsRequestedToSuspend = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of events where suspension was requested"
        },
        {
          "name": "BatchAssignmentRate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE COUNT(BatchID) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of events that are assigned to a batch"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "RuleID",
          "BusinessPointID",
          "ActionResult",
          "DialerAction",
          "BatchID"
        ],
        "default_filters": []
      }
    },
    {
      "name": "Campaign Targeting - New Customer History",
      "source": "dbo.CampaignTargetingNewCustomerHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Record Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of history records (rows) in the table"
        },
        {
          "name": "Unique Campaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns represented in the selected set"
        },
        {
          "name": "Unique Segments",
          "expression": "COUNT(DISTINCT SegmentID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct audience segments represented in the selected set"
        },
        {
          "name": "Unique Creators",
          "expression": "COUNT(DISTINCT CreatedByID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct users who created targeting history entries"
        },
        {
          "name": "Avg Records per Campaign",
          "expression": "CASE WHEN COUNT(DISTINCT CampaignID) = 0 THEN NULL ELSE COUNT(ID) * 1.0 / COUNT(DISTINCT CampaignID) END",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of history records per distinct campaign in the selected set"
        }
      ],
      "foreign_keys": [
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.Segment.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "Segment",
          "CreatedBy",
          "CreatedOn.Date",
          "CreatedOn.Month"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2017-01-01"
          }
        ],
        "default_sort": {
          "column": "CreatedOn",
          "direction": "desc"
        }
      }
    },
    {
      "name": "Campaign New Customer Target Detail",
      "source": "dbo.CampaignTargetingNewCustomerHistoryDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Target (sum)",
          "expression": "SUM(Target)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of target amounts. Assumes Target is a monetary target value (adjust currency if needed)."
        },
        {
          "name": "Target (average)",
          "expression": "AVG(Target)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average target amount per row."
        },
        {
          "name": "Target (min)",
          "expression": "MIN(Target)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Minimum target amount observed."
        },
        {
          "name": "Target (max)",
          "expression": "MAX(Target)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Maximum target amount observed."
        },
        {
          "name": "DailyTarget (sum)",
          "expression": "SUM(DailyTarget)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of DailyTarget amounts. Many rows are null; use with filter Target IS NOT NULL if needed."
        },
        {
          "name": "UserDailyTarget (sum)",
          "expression": "SUM(UserDailyTarget)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of UserDailyTarget amounts. Field currently sparsely populated."
        },
        {
          "name": "Row Count",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of detail rows."
        },
        {
          "name": "Distinct Salesman Target Count",
          "expression": "COUNT(DISTINCT CampaignSalesmanNewCustomerTargetID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct salesman-target entries referenced in this detail table."
        },
        {
          "name": "Target Completeness",
          "expression": "100.0 * (1 - SUM(CASE WHEN Target IS NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(*),0))",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of rows where Target is populated (non-null)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignTargetingNewCustomerHistoryID",
          "references": "dbo.CampaignTargetingNewCustomerHistory.ID"
        },
        {
          "column": "CampaignSalesmanNewCustomerTargetID",
          "references": "dbo.CampaignSalesmanNewCustomerTarget.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignTargetingNewCustomerHistoryID",
          "CampaignSalesmanNewCustomerTargetID",
          "CampaignID",
          "SegmentID"
        ],
        "default_filters": [
          {
            "column": "Target",
            "op": "IS NOT",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "Campaign Score History",
      "source": "dbo.CampaignScoreHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of campaign score history records (one row per creation event)."
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns present in the history records."
        },
        {
          "name": "DistinctSegmentCount",
          "expression": "COUNT(DISTINCT SegmentID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct segments referenced by these history records."
        },
        {
          "name": "UniqueCreators",
          "expression": "COUNT(DISTINCT CreateByID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct users (creators) who created score history entries."
        },
        {
          "name": "FirstRecordedOn",
          "expression": "MIN(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest CreatedOn timestamp in the current aggregation."
        },
        {
          "name": "LastRecordedOn",
          "expression": "MAX(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Latest CreatedOn timestamp in the current aggregation."
        },
        {
          "name": "ActiveDaysSpan",
          "expression": "DATEDIFF(day, MIN(CreatedOn), MAX(CreatedOn))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of days between the earliest and latest record in the aggregation (0 if all on same day)."
        },
        {
          "name": "RecordsPerActiveDay",
          "expression": "CASE WHEN COUNT(DISTINCT CAST(CreatedOn AS DATE)) = 0 THEN 0 ELSE CAST(COUNT(ID) AS FLOAT) / COUNT(DISTINCT CAST(CreatedOn AS DATE)) END",
          "unit": "count_per_day",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of history records per active day (records divided by distinct dates present)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "SegmentID",
          "references": "Segment.SegmentID"
        },
        {
          "column": "CreateByID",
          "references": "User.UserID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "Segment",
          "CreatedOn.Date",
          "CreateByID"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2017-01-01"
          }
        ]
      }
    },
    {
      "name": "CampaignScoreHistoryDetail",
      "source": "dbo.CampaignScoreHistoryDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Row Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows (detail records / buckets) in the detail table."
        },
        {
          "name": "Distinct Buckets per Query",
          "expression": "COUNT(DISTINCT CampaignBucketID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaign buckets represented in the current filter context."
        },
        {
          "name": "Sum TargetingAmountCalculated",
          "expression": "SUM(TargetingAmountCalculated)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total targeting amount calculated for the selected rows."
        },
        {
          "name": "Average TargetingAmountCalculated",
          "expression": "AVG(TargetingAmountCalculated)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average targeting amount calculated per bucket (ignores NULLs)."
        },
        {
          "name": "Sum TargetingAmountByUser",
          "expression": "SUM(TargetingAmountByUser)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total targeting amount entered/approved by user. Many rows are NULL; result excludes NULLs."
        },
        {
          "name": "Coverage Rate (TargetingAmountByUser present)",
          "expression": "SUM(CASE WHEN TargetingAmountByUser IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows where a user-provided targeting amount exists."
        },
        {
          "name": "Sum TotalAmount",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total of the TotalAmount column across the selected rows."
        },
        {
          "name": "Average TotalAmount",
          "expression": "AVG(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average TotalAmount per bucket (NULLs excluded)."
        },
        {
          "name": "Sum XOGRAmount",
          "expression": "SUM(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total advertising amount attributed to XO.gr across selected rows."
        },
        {
          "name": "Average XOGRAmount",
          "expression": "AVG(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average XOGRAmount per bucket (NULLs excluded)."
        },
        {
          "name": "Sum PrintAmount",
          "expression": "SUM(PrintAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of PrintAmount (mostly NULL in the sample)."
        },
        {
          "name": "Sum PPCAmount",
          "expression": "SUM(PPCAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of PPCAmount (mostly NULL in the sample)."
        },
        {
          "name": "Sum WebSiteAmount",
          "expression": "SUM(WebSiteAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of WebSiteAmount across rows (many NULLs expected)."
        },
        {
          "name": "Sum ScoreTotal",
          "expression": "SUM(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Sum of total score values across selected buckets."
        },
        {
          "name": "Average ScoreTotal",
          "expression": "AVG(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of ScoreTotal across selected rows."
        },
        {
          "name": "Max ScoreTotal",
          "expression": "MAX(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Maximum ScoreTotal in the selected set."
        },
        {
          "name": "Min ScoreTotal",
          "expression": "MIN(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Minimum ScoreTotal in the selected set."
        },
        {
          "name": "Average ScoreMainActivity",
          "expression": "AVG(ScoreMainActivity)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the main activity score component."
        },
        {
          "name": "Average ScoreSeniority",
          "expression": "AVG(ScoreSeniority)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the seniority score component."
        },
        {
          "name": "Average ScoreValueBillingRange",
          "expression": "AVG(ScoreValueBillingRange)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the value / billing range score component."
        },
        {
          "name": "Average ScoreCombinationMedium",
          "expression": "AVG(ScoreCombinationMedium)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the medium combination score component."
        },
        {
          "name": "Average ScoreMaxInvestmentMedium",
          "expression": "AVG(ScoreMaxInvestmentMedium)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the max-investment-by-medium score component."
        },
        {
          "name": "Average ScoreCombinationProduct",
          "expression": "AVG(ScoreCombinationProduct)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the product combination score component."
        },
        {
          "name": "Average ScoreCustomerBehavior",
          "expression": "AVG(ScoreCustomerBehavior)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the customer behavior score component."
        },
        {
          "name": "Average ScoreSalesmanManagement",
          "expression": "AVG(ScoreSalesmanManagement)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average of the salesman/management score component."
        },
        {
          "name": "Average ScoreDifferenceToAvg",
          "expression": "AVG(ScoreDifferenceToAvg)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average deviation of each bucket's score relative to the campaign average."
        },
        {
          "name": "Targeting Amount per Score (calculated)",
          "expression": "SUM(TargetingAmountCalculated) / NULLIF(SUM(ScoreTotal),0)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average targeting amount calculated per total score point (NULL if total score = 0)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignScoreHistoryID",
          "references": "dbo.CampaignScoreHistory.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.CampaignID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.BusinessPointID"
        },
        {
          "column": "NewSalesmanID",
          "references": "dbo.Salesman.SalesmanID"
        },
        {
          "column": "SupervisorID",
          "references": "dbo.Salesman.SalesmanID"
        },
        {
          "column": "PreviousSalesmanID",
          "references": "dbo.Salesman.SalesmanID"
        },
        {
          "column": "MainActivityID",
          "references": "dbo.Activity.MainActivityID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.Segment.SegmentID"
        },
        {
          "column": "FileID",
          "references": "dbo.File.FileID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BucketGroup",
          "CampaignID",
          "BusinessPointName",
          "NewSalesmanName",
          "MainActivity",
          "SegmentDescription"
        ],
        "default_filters": [
          {
            "column": "ItemStatus",
            "op": "=",
            "value": "1"
          },
          {
            "column": "WorkingStatus",
            "op": "=",
            "value": "1"
          }
        ],
        "default_sort": [
          {
            "column": "ScoreTotal",
            "dir": "desc"
          }
        ]
      }
    },
    {
      "name": "CampaignPivotReport",
      "source": "dbo.CampaignPivotReport",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows (records) in the pivot report"
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct campaigns represented in the selected rows"
        },
        {
          "name": "NumberOfCases",
          "expression": "SUM(COALESCE(NumberOfCases, 0))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of reported cases across rows"
        },
        {
          "name": "LossQuantity",
          "expression": "SUM(COALESCE(LossQuantity, 0))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total loss quantity summed across rows"
        },
        {
          "name": "NewQuantity",
          "expression": "SUM(COALESCE(NewQuantity, 0))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total new quantity summed across rows"
        },
        {
          "name": "COQuantity",
          "expression": "SUM(COALESCE(COQuantity, 0))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total CO quantity summed across rows"
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(COALESCE(LossQuantity,0) + COALESCE(NewQuantity,0) + COALESCE(COQuantity,0))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of LossQuantity, NewQuantity and COQuantity (total quantity across buckets)"
        },
        {
          "name": "LossQuantityPercentage_stored",
          "expression": "AVG(LossQuantityPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Average of stored LossQuantityPercentage values (useful when the percentage is pre-computed at row level)"
        },
        {
          "name": "NewQuantityPercentage_stored",
          "expression": "AVG(NewQuantityPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Average of stored NewQuantityPercentage values (useful when the percentage is pre-computed at row level)"
        },
        {
          "name": "COQuantityPercentage_stored",
          "expression": "AVG(COQuantityPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Average of stored COQuantityPercentage values (useful when the percentage is pre-computed at row level)"
        },
        {
          "name": "LossQuantityShareOfTotalQuantity",
          "expression": "CASE WHEN SUM(COALESCE(LossQuantity,0) + COALESCE(NewQuantity,0) + COALESCE(COQuantity,0)) = 0 THEN NULL ELSE 100.0 * SUM(COALESCE(LossQuantity,0)) / SUM(COALESCE(LossQuantity,0) + COALESCE(NewQuantity,0) + COALESCE(COQuantity,0)) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Computed percentage share of LossQuantity relative to the total quantity (Loss+New+CO). Preferred when you need an accurate aggregate percentage."
        },
        {
          "name": "NewQuantityShareOfTotalQuantity",
          "expression": "CASE WHEN SUM(COALESCE(LossQuantity,0) + COALESCE(NewQuantity,0) + COALESCE(COQuantity,0)) = 0 THEN NULL ELSE 100.0 * SUM(COALESCE(NewQuantity,0)) / SUM(COALESCE(LossQuantity,0) + COALESCE(NewQuantity,0) + COALESCE(COQuantity,0)) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Computed percentage share of NewQuantity relative to the total quantity (Loss+New+CO)."
        },
        {
          "name": "COQuantityShareOfTotalQuantity",
          "expression": "CASE WHEN SUM(COALESCE(LossQuantity,0) + COALESCE(NewQuantity,0) + COALESCE(COQuantity,0)) = 0 THEN NULL ELSE 100.0 * SUM(COALESCE(COQuantity,0)) / SUM(COALESCE(LossQuantity,0) + COALESCE(NewQuantity,0) + COALESCE(COQuantity,0)) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Computed percentage share of COQuantity relative to the total quantity (Loss+New+CO)."
        },
        {
          "name": "ContractAmount",
          "expression": "SUM(COALESCE(ContractAmount, 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total contract amount across rows (stored monetary value)."
        },
        {
          "name": "SubscriptionAmount",
          "expression": "SUM(COALESCE(SubscriptionAmount, 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total subscription amount across rows."
        },
        {
          "name": "RenewalAmount",
          "expression": "SUM(COALESCE(RenewalAmount, 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total renewal amount across rows."
        },
        {
          "name": "NonSubscriptionAmount",
          "expression": "SUM(COALESCE(NonSubscriptionAmount, 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total non-subscription amount across rows."
        },
        {
          "name": "TotalContractedAmount",
          "expression": "SUM(COALESCE(ContractAmount,0) + COALESCE(SubscriptionAmount,0) + COALESCE(RenewalAmount,0) + COALESCE(NonSubscriptionAmount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of all amount buckets (contract + subscription + renewal + non-subscription). Useful as a denominator for amount share calculations."
        },
        {
          "name": "SubscriptionAmountPercentage_stored",
          "expression": "AVG(SubscriptionAmountPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Average of stored SubscriptionAmountPercentage values (row-level percentage)."
        },
        {
          "name": "RenewalAmountPercentage_stored",
          "expression": "AVG(RenewalAmountPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Average of stored RenewalAmountPercentage values (row-level percentage)."
        },
        {
          "name": "NonSubscriptionAmountPercentage_stored",
          "expression": "AVG(NonSubscriptionAmountPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Average of stored NonSubscriptionAmountPercentage values (row-level percentage)."
        },
        {
          "name": "SubscriptionAmountShareOfTotalAmount",
          "expression": "CASE WHEN SUM(COALESCE(ContractAmount,0) + COALESCE(SubscriptionAmount,0) + COALESCE(RenewalAmount,0) + COALESCE(NonSubscriptionAmount,0)) = 0 THEN NULL ELSE 100.0 * SUM(COALESCE(SubscriptionAmount,0)) / SUM(COALESCE(ContractAmount,0) + COALESCE(SubscriptionAmount,0) + COALESCE(RenewalAmount,0) + COALESCE(NonSubscriptionAmount,0)) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Computed share of SubscriptionAmount relative to the total contracted amount (recommended for aggregated analysis)."
        },
        {
          "name": "RenewalAmountShareOfTotalAmount",
          "expression": "CASE WHEN SUM(COALESCE(ContractAmount,0) + COALESCE(SubscriptionAmount,0) + COALESCE(RenewalAmount,0) + COALESCE(NonSubscriptionAmount,0)) = 0 THEN NULL ELSE 100.0 * SUM(COALESCE(RenewalAmount,0)) / SUM(COALESCE(ContractAmount,0) + COALESCE(SubscriptionAmount,0) + COALESCE(RenewalAmount,0) + COALESCE(NonSubscriptionAmount,0)) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Computed share of RenewalAmount relative to the total contracted amount."
        },
        {
          "name": "NonSubscriptionAmountShareOfTotalAmount",
          "expression": "CASE WHEN SUM(COALESCE(ContractAmount,0) + COALESCE(SubscriptionAmount,0) + COALESCE(RenewalAmount,0) + COALESCE(NonSubscriptionAmount,0)) = 0 THEN NULL ELSE 100.0 * SUM(COALESCE(NonSubscriptionAmount,0)) / SUM(COALESCE(ContractAmount,0) + COALESCE(SubscriptionAmount,0) + COALESCE(RenewalAmount,0) + COALESCE(NonSubscriptionAmount,0)) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Computed share of NonSubscriptionAmount relative to the total contracted amount."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "CampaignSegmentID",
          "references": "CampaignSegment.CampaignSegmentID"
        },
        {
          "column": "CampaignChannelTypeID",
          "references": "CampaignChannelType.CampaignChannelTypeID"
        },
        {
          "column": "CampaignGroupID",
          "references": "CampaignGroup.CampaignGroupID"
        },
        {
          "column": "CampaignSupervisorID",
          "references": "Employee.EmployeeID"
        },
        {
          "column": "CampaignSalesmanID",
          "references": "Employee.EmployeeID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "CampaignSegmentID",
          "CampaignChannelTypeID",
          "CampaignGroupID",
          "PivotType"
        ],
        "default_filters": [
          {
            "column": "NumberOfCases",
            "op": ">=",
            "value": "0"
          },
          {
            "column": "CampaignID",
            "op": "IS NOT NULL",
            "value": null
          }
        ]
      }
    },
    {
      "name": "CampaignScoreReport",
      "source": "dbo.CampaignScoreReport",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows in the report (one row per campaign-segment-salesperson record)."
        },
        {
          "name": "TotalCustomers",
          "expression": "SUM(NumberOfCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of customers aggregated across the selected rows. Null customer values are ignored by SUM semantics."
        },
        {
          "name": "DistinctSalesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique salespeople represented in the selected rows."
        },
        {
          "name": "TotalCoAmount",
          "expression": "SUM(TotalCoAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Aggregate TotalCoAmount (as stored) for the selected rows. Source column likely represents a monetary amount tied to the campaign/segment."
        },
        {
          "name": "TotalRoCoAmount",
          "expression": "SUM(TotalRoCoAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Aggregate TotalRoCoAmount for the selected rows. Use this to compare with TotalCoAmount (may include adjustments, returns, or alternate reporting)."
        },
        {
          "name": "TotalNew",
          "expression": "SUM(TotalNew)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Aggregate TotalNew value (new revenue or new business amount) for the selected rows."
        },
        {
          "name": "AverageCoPerCustomer",
          "expression": "SUM(TotalCoAmount) / NULLIF(SUM(NumberOfCustomers), 0)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average TotalCoAmount per customer. Returns NULL when total NumberOfCustomers is zero or null."
        },
        {
          "name": "AverageRoCoPerCustomer",
          "expression": "SUM(TotalRoCoAmount) / NULLIF(SUM(NumberOfCustomers), 0)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average TotalRoCoAmount per customer. Returns NULL when total NumberOfCustomers is zero or null."
        },
        {
          "name": "AverageNewPerCustomer",
          "expression": "SUM(TotalNew) / NULLIF(SUM(NumberOfCustomers), 0)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average new amount per customer. Returns NULL when total NumberOfCustomers is zero or null."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "MangerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SupervisorID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "SegmentID",
          "SalesmanID",
          "SupervisorID",
          "MangerID"
        ],
        "default_filters": [
          {
            "column": "NumberOfCustomers",
            "op": ">",
            "value": "0",
            "description": "Exclude rows with zero or missing customers to focus on active segments."
          },
          {
            "column": "TotalCoAmount",
            "op": "IS NOT",
            "value": "NULL",
            "description": "Exclude rows without reported monetary amounts by default."
          }
        ]
      }
    },
    {
      "name": "ChannelTargeting",
      "source": "dbo.ChannelTargeting",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Preprinted Amount",
          "expression": "SUM([PreprintedAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total preprinted monetary amount for the channel targeting entry."
        },
        {
          "name": "Preprinted Customer Count",
          "expression": "SUM([PreprintedCustomerNumber])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of preprinted customers associated with the targeting entry."
        },
        {
          "name": "Loss Customer % (avg)",
          "expression": "AVG([LossCustomerPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of customers lost for the campaign-channel combination (averaged across rows)."
        },
        {
          "name": "Loss Amount % (avg)",
          "expression": "AVG([LossAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of amount lost for the campaign-channel combination (averaged across rows)."
        },
        {
          "name": "Increase Customer % (avg)",
          "expression": "AVG([ΙncreaseCustomerPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage increase in customers for the channel (averaged across rows)."
        },
        {
          "name": "Increase Amount % (avg)",
          "expression": "AVG([ΙncreaseAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage increase in amount for the channel (averaged across rows)."
        },
        {
          "name": "Reduction Customer % (avg)",
          "expression": "AVG([ReductionCustomerPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage reduction in customers for the channel (averaged across rows)."
        },
        {
          "name": "Reduction Amount % (avg)",
          "expression": "AVG([ReductionAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage reduction in amount for the channel (averaged across rows)."
        },
        {
          "name": "Average Order Value (AvoNew)",
          "expression": "SUM([AvoNew])",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(0)",
          "description": "Sum of AvoNew values; typically used to derive average order value when divided by relevant counts."
        },
        {
          "name": "Number of Visits",
          "expression": "SUM([NumberOfVisits])",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Total number of visits recorded for the campaign-channel combination."
        },
        {
          "name": "Number of Visits (CO)",
          "expression": "SUM([NumberOfVisitsCO])",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Total number of CO visits (channel-specific) for the entry."
        },
        {
          "name": "Conversion Rate (avg)",
          "expression": "AVG([ConvRatePercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average conversion rate for the channel (averaged across rows)."
        },
        {
          "name": "Number of CO",
          "expression": "SUM([NumberOfCO])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of CO events associated with the channel targeting entry."
        },
        {
          "name": "Amount of CO",
          "expression": "SUM([AmountOfCO])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary amount associated with CO events for the entry."
        },
        {
          "name": "Number of CO % (avg)",
          "expression": "AVG([NumberOfCOPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage contribution of CO by number (averaged across rows)."
        },
        {
          "name": "Amount of CO % (avg)",
          "expression": "AVG([AmountOfCOPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage contribution of CO by amount (averaged across rows)."
        },
        {
          "name": "Loss Customers",
          "expression": "SUM([LossCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of lost customers attributed to this campaign-channel combination."
        },
        {
          "name": "Loss Amount",
          "expression": "SUM([LossAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary loss associated with lost customers for the entry."
        },
        {
          "name": "Increase Customers",
          "expression": "SUM([ΙncreaseCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of customers gained (increase) for the campaign-channel entry."
        },
        {
          "name": "Increase Amount",
          "expression": "SUM([ΙncreaseAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary increase associated with gained customers for the entry."
        },
        {
          "name": "Reduction Customers",
          "expression": "SUM([ReductionCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of customers with reduced activity for the entry."
        },
        {
          "name": "Reduction Amount",
          "expression": "SUM([ReductionAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary reduction associated with reduced customers for the entry."
        },
        {
          "name": "No Changes Customers",
          "expression": "SUM([NoChangesCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of customers with no change in behavior for the campaign-channel entry."
        },
        {
          "name": "No Changes Customers % (avg)",
          "expression": "AVG([NoChangesCustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of customers with no change (averaged across rows)."
        },
        {
          "name": "No Changes Amount",
          "expression": "SUM([NoChangesAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount associated with customers who experienced no change."
        },
        {
          "name": "No Changes Amount % (avg)",
          "expression": "AVG([NoChangesAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of amount with no change (averaged across rows)."
        },
        {
          "name": "ROCO Customers",
          "expression": "SUM([ROCOCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total ROCO customers for the campaign-channel entry."
        },
        {
          "name": "ROCO Customers % (avg)",
          "expression": "AVG([ROCOCustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average ROCO customer percentage (averaged across rows)."
        },
        {
          "name": "ROCO Amount",
          "expression": "SUM([ROCOAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary amount associated with ROCO customers."
        },
        {
          "name": "ROCO Amount % (avg)",
          "expression": "AVG([ROCOAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average ROCO amount percentage (averaged across rows)."
        },
        {
          "name": "New Customers",
          "expression": "SUM([NewCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of newly acquired customers for the entry."
        },
        {
          "name": "New Customers % (avg)",
          "expression": "AVG([NewCustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of new customers (averaged across rows)."
        },
        {
          "name": "New Amount",
          "expression": "SUM([NewAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary amount associated with new customers."
        },
        {
          "name": "New Amount % (avg)",
          "expression": "AVG([NewAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of amount coming from new customers (averaged across rows)."
        },
        {
          "name": "CI Customers",
          "expression": "SUM([CICustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total count of CI customers for the campaign-channel entry."
        },
        {
          "name": "CI Customers % (avg)",
          "expression": "AVG([CICustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average CI customers percentage (averaged across rows)."
        },
        {
          "name": "CI Amount",
          "expression": "SUM([CIAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary amount associated with CI customers."
        },
        {
          "name": "CI Amount % (avg)",
          "expression": "AVG([CIAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average CI amount percentage (averaged across rows)."
        },
        {
          "name": "Working Days",
          "expression": "SUM([WorkingDays])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of working days recorded for the entry (useful for per-day normalization)."
        },
        {
          "name": "Salesmen",
          "expression": "SUM([Salesmen])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of salesmen associated with the targeting entry."
        },
        {
          "name": "Mandays",
          "expression": "SUM([Mandays])",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total mandays (person-days) associated with the entry."
        },
        {
          "name": "Number of Visits (Total)",
          "expression": "SUM([NumberOfVisitsTotal])",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Total visits aggregated field (useful when a separate total metric is stored)."
        },
        {
          "name": "Number of Visits CO (Total)",
          "expression": "SUM([NumberOfVisitsCOTotal])",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Total CO visits aggregated field."
        },
        {
          "name": "Number of Visits (New)",
          "expression": "SUM([NumberOfVisitsNew])",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Total number of visits attributed to new customers."
        },
        {
          "name": "Total Customers Impacted (derived)",
          "expression": "(SUM([LossCustomers]) + SUM([ΙncreaseCustomers]) + SUM([ReductionCustomers]) + SUM([NoChangesCustomers]) + SUM([ROCOCustomers]) + SUM([NewCustomers]) + SUM([CICustomers]))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Derived sum of the customer buckets recorded on the row. Use with caution — rows should be disjoint partitions for this to represent total customers."
        },
        {
          "name": "Total Amount Impact (derived)",
          "expression": "(SUM([LossAmount]) + SUM([ΙncreaseAmount]) + SUM([ReductionAmount]) + SUM([NoChangesAmount]) + SUM([ROCOAmount]) + SUM([NewAmount]) + SUM([CIAmount]))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Derived sum of the monetary buckets recorded on the row. Use with caution; meaningful when amount buckets are mutually exclusive."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "ChannelID",
          "references": "dbo.ChannelType.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "ChannelID"
        ],
        "default_filters": []
      }
    },
    {
      "name": "GroupTargeting",
      "source": "dbo.GroupTargeting",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Preprinted Amount",
          "expression": "SUM([PreprintedAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total preprinted monetary amount for the targeting group."
        },
        {
          "name": "Preprinted Customer Count",
          "expression": "SUM([PreprintedCustomerNumber])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total number of customers that had preprinted values."
        },
        {
          "name": "Total Loss Customers",
          "expression": "SUM([LossCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Sum of customers classified as lost for the group."
        },
        {
          "name": "Total Loss Amount",
          "expression": "SUM([LossAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary value lost (sum of LossAmount) for the group."
        },
        {
          "name": "Total Increase Customers",
          "expression": "SUM([ΙncreaseCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Sum of customers classified as increased for the group."
        },
        {
          "name": "Total Increase Amount",
          "expression": "SUM([ΙncreaseAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary increase amount for the group."
        },
        {
          "name": "Total Reduction Customers",
          "expression": "SUM([ReductionCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Sum of customers classified as reduced for the group."
        },
        {
          "name": "Total Reduction Amount",
          "expression": "SUM([ReductionAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary reduction amount for the group."
        },
        {
          "name": "No Changes Customers",
          "expression": "SUM([NoChangesCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Customers whose behavior or amount did not change."
        },
        {
          "name": "No Changes Amount",
          "expression": "SUM([NoChangesAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount corresponding to customers with no changes."
        },
        {
          "name": "ROCO Customers",
          "expression": "SUM([ROCOCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Sum of ROCO (recovered or reactivated) customers in the group."
        },
        {
          "name": "ROCO Amount",
          "expression": "SUM([ROCOAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount associated with ROCO customers."
        },
        {
          "name": "New Customers",
          "expression": "SUM([NewCustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Count of newly acquired customers in the group."
        },
        {
          "name": "New Amount",
          "expression": "SUM([NewAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount acquired from new customers."
        },
        {
          "name": "CI Customers",
          "expression": "SUM([CICustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Count of customers marked CI (competitive/incremental) for the group."
        },
        {
          "name": "CI Amount",
          "expression": "SUM([CIAmount])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount attributed to CI customers."
        },
        {
          "name": "Number of Visits (sum)",
          "expression": "SUM([NumberOfVisits])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total number of visits recorded for the group."
        },
        {
          "name": "Number of Visits CO (sum)",
          "expression": "SUM([NumberOfVisitsCO])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total number of CO visits recorded for the group."
        },
        {
          "name": "Number of Visits Total",
          "expression": "SUM([NumberOfVisitsTotal])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total visits (aggregate) across relevant dimensions as stored in NumberOfVisitsTotal."
        },
        {
          "name": "Number of Visits CO Total",
          "expression": "SUM([NumberOfVisitsCOTotal])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total CO visits (aggregate) as stored in NumberOfVisitsCOTotal."
        },
        {
          "name": "Number of CO",
          "expression": "SUM([NumberOfCO])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total number of CO (conversion orders / checkouts) in the group."
        },
        {
          "name": "Amount of CO",
          "expression": "SUM([AmountOfCO])",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary value of CO (conversion orders / checkouts)."
        },
        {
          "name": "Average Amount per CO",
          "expression": "SUM([AmountOfCO]) / NULLIF(SUM([NumberOfCO]), 0)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average monetary value per CO (AmountOfCO divided by NumberOfCO). Returns NULL when NumberOfCO is zero."
        },
        {
          "name": "Conversion Rate (avg)",
          "expression": "AVG([ConvRatePercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average conversion rate for the group (uses stored ConvRatePercentage per row)."
        },
        {
          "name": "Loss Customers (%) (avg)",
          "expression": "AVG([LossCustomerPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of lost customers (row-level LossCustomerPercentage averaged across the grain)."
        },
        {
          "name": "Loss Amount (%) (avg)",
          "expression": "AVG([LossAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of lost amount (row-level LossAmountPercentage averaged across the grain)."
        },
        {
          "name": "Increase Customers (%) (avg)",
          "expression": "AVG([ΙncreaseCustomerPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of increased customers for the group."
        },
        {
          "name": "Increase Amount (%) (avg)",
          "expression": "AVG([ΙncreaseAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage increase in amount for the group."
        },
        {
          "name": "Reduction Customers (%) (avg)",
          "expression": "AVG([ReductionCustomerPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage of customers with reductions."
        },
        {
          "name": "Reduction Amount (%) (avg)",
          "expression": "AVG([ReductionAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percentage reduction in amount for the group."
        },
        {
          "name": "No Changes Customers (%) (avg)",
          "expression": "AVG([NoChangesCustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of customers with no changes."
        },
        {
          "name": "No Changes Amount (%) (avg)",
          "expression": "AVG([NoChangesAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of amount with no changes."
        },
        {
          "name": "ROCO Customers (%) (avg)",
          "expression": "AVG([ROCOCustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of ROCO customers."
        },
        {
          "name": "ROCO Amount (%) (avg)",
          "expression": "AVG([ROCOAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of ROCO monetary amount."
        },
        {
          "name": "New Customers (%) (avg)",
          "expression": "AVG([NewCustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of new customers."
        },
        {
          "name": "New Amount (%) (avg)",
          "expression": "AVG([NewAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of monetary amount coming from new customers."
        },
        {
          "name": "CI Customers (%) (avg)",
          "expression": "AVG([CICustomersPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of CI customers."
        },
        {
          "name": "CI Amount (%) (avg)",
          "expression": "AVG([CIAmountPercentage])",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average percent of CI monetary amount."
        },
        {
          "name": "Total Impacted Customers (computed)",
          "expression": "SUM([LossCustomers]) + SUM([ΙncreaseCustomers]) + SUM([ReductionCustomers]) + SUM([NoChangesCustomers]) + SUM([ROCOCustomers]) + SUM([NewCustomers]) + SUM([CICustomers])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Computed total of all categorized customers (loss + increase + reduction + no-change + ROCO + new + CI). Useful as a broad activity indicator; rows may overlap depending on classification logic."
        },
        {
          "name": "Working Days (sum)",
          "expression": "SUM([WorkingDays])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total working days associated with the record set (sum of WorkingDays)."
        },
        {
          "name": "Salesmen (sum)",
          "expression": "SUM([Salesmen])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total count of salesmen associated with the group."
        },
        {
          "name": "Mandays (sum)",
          "expression": "SUM([Mandays])",
          "unit": "count",
          "currency": null,
          "format_hint": "0",
          "description": "Total mandays associated with the group."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "GroupID",
          "references": "dbo.CampaignGroup.ID"
        },
        {
          "column": "ChannelID",
          "references": "dbo.ChannelType.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "CampaignGroup",
          "ChannelType"
        ],
        "default_filters": [
          {
            "column": "CampaignID",
            "op": "is_not_null",
            "value": null
          },
          {
            "column": "PreprintedAmount",
            "op": ">",
            "value": 0
          }
        ],
        "recommended_default_measures": [
          "Preprinted Amount",
          "Total Loss Amount",
          "Total Increase Amount",
          "Number of CO",
          "Amount of CO",
          "Conversion Rate (avg)"
        ]
      }
    },
    {
      "name": "SalesManTargeting",
      "source": "dbo.SalesManTargeting",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalWorkingDays",
          "expression": "SUM(TotalWorkingDays)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total working days for the sales person within the campaign segment/group."
        },
        {
          "name": "TotalVisits",
          "expression": "SUM(TotalVisits)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of all visits recorded for the sales person in the target scope."
        },
        {
          "name": "COVisits",
          "expression": "SUM(COVisits)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Visits classified as CO (carry-over or campaign-specific) for the sales person."
        },
        {
          "name": "NewVisits",
          "expression": "SUM(NewVisits)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Visits to new customers recorded by the sales person."
        },
        {
          "name": "COCustomers",
          "expression": "SUM(COCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of customers attributed as CO (carry-over or campaign-specific)."
        },
        {
          "name": "COAmount",
          "expression": "SUM(COAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount associated with CO customers."
        },
        {
          "name": "LossCustomers",
          "expression": "SUM(LossCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of customers lost compared to the baseline period."
        },
        {
          "name": "LossAmount",
          "expression": "SUM(LossAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary loss associated with lost customers."
        },
        {
          "name": "IncreaseCustomers",
          "expression": "SUM(IncreaseCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of customers with increased activity or spend."
        },
        {
          "name": "IncreaseAmount",
          "expression": "SUM(IncreaseAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary increase associated with customers who increased activity or spend."
        },
        {
          "name": "ReductionCustomers",
          "expression": "SUM(ReductionCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of customers with reduced activity or spend."
        },
        {
          "name": "ReductionAmount",
          "expression": "SUM(ReductionAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary reduction associated with customers who decreased activity or spend."
        },
        {
          "name": "NoChangesCustomers",
          "expression": "SUM(NoChangesCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of customers whose activity/spend did not change."
        },
        {
          "name": "NoChangesAmount",
          "expression": "SUM(NoChangesAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount from customers with no change in activity/spend."
        },
        {
          "name": "ROCOCustomers",
          "expression": "SUM(ROCOCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of ROCO (returning or reactivated) customers."
        },
        {
          "name": "ROCOAmount",
          "expression": "SUM(ROCOAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount associated with ROCO (returning/reactivated) customers."
        },
        {
          "name": "NewCustomers",
          "expression": "SUM(NewCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of newly acquired customers in the campaign segment/group."
        },
        {
          "name": "NewAmount",
          "expression": "SUM(NewAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount attributed to newly acquired customers."
        },
        {
          "name": "TotalCustomers",
          "expression": "SUM(TotalCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total customers covered by the sales person for the campaign segment/group."
        },
        {
          "name": "TotalAmount",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary value (sales/portfolio) for the sales person in the target scope."
        },
        {
          "name": "AverageVisitsPerWorkingDay",
          "expression": "CASE WHEN SUM(TotalWorkingDays) = 0 THEN NULL ELSE SUM(TotalVisits) * 1.0 / SUM(TotalWorkingDays) END",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of visits per working day for the sales person."
        },
        {
          "name": "AverageAmountPerCustomer",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(TotalAmount) * 1.0 / SUM(TotalCustomers) END",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average monetary amount per customer (TotalAmount / TotalCustomers)."
        },
        {
          "name": "COCustomerShare",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(COCustomers) * 1.0 / SUM(TotalCustomers) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of CO customers relative to total customers."
        },
        {
          "name": "LossCustomerShare",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(LossCustomers) * 1.0 / SUM(TotalCustomers) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of lost customers relative to total customers."
        },
        {
          "name": "IncreaseCustomerShare",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(IncreaseCustomers) * 1.0 / SUM(TotalCustomers) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of customers with increased activity relative to total customers."
        },
        {
          "name": "NewCustomerShare",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(NewCustomers) * 1.0 / SUM(TotalCustomers) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of new customers relative to total customers."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "GroupID",
          "references": "dbo.CampaignGroup.ID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.CampaignSegment.ID"
        },
        {
          "column": "SalesManID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SuperVisorID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "Group",
          "Segment",
          "SalesMan",
          "SuperVisor"
        ],
        "default_filters": [
          {
            "column": "TotalCustomers",
            "op": ">",
            "value": "0"
          },
          {
            "column": "Campaign.IsActive",
            "op": "=",
            "value": "true"
          }
        ]
      }
    },
    {
      "name": "SalesTreeHistory",
      "source": "dbo.SalesTreeHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(1)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of history rows (records) in the table."
        },
        {
          "name": "ActiveRowCount",
          "expression": "SUM(CASE WHEN IsDeleted = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of non-deleted (active) history rows."
        },
        {
          "name": "DeletedRowCount",
          "expression": "SUM(CASE WHEN IsDeleted = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows marked as deleted."
        },
        {
          "name": "PctDeleted",
          "expression": "CASE WHEN COUNT(1) = 0 THEN 0 ELSE 100.0 * SUM(CASE WHEN IsDeleted = 1 THEN 1 ELSE 0 END) / COUNT(1) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of rows that are marked deleted."
        },
        {
          "name": "DistinctSalesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct salespeople represented in the history snapshot."
        },
        {
          "name": "DistinctSupervisors",
          "expression": "COUNT(DISTINCT SupervisorID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct supervisors represented in the history snapshot."
        },
        {
          "name": "DistinctManagers",
          "expression": "COUNT(DISTINCT ManagerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct managers represented in the history snapshot."
        },
        {
          "name": "AvgAssignmentsPerSalesman",
          "expression": "CASE WHEN COUNT(DISTINCT SalesmanID) = 0 THEN 0 ELSE 1.0 * COUNT(1) / COUNT(DISTINCT SalesmanID) END",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of history rows (segment assignments) per distinct salesman in this snapshot."
        }
      ],
      "foreign_keys": [
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SupervisorID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ManagerID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "SegmentID",
          "SalesmanID",
          "SupervisorID",
          "ManagerID",
          "Year",
          "CreatedOn"
        ],
        "default_filters": [
          {
            "column": "IsDeleted",
            "op": "=",
            "value": "False"
          },
          {
            "column": "Year",
            "op": "IS NOT",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "TargetGroupItem",
      "source": "dbo.TargetGroupItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TargetItemCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target group items (rows) in the table."
        },
        {
          "name": "DistinctCustomerCount",
          "expression": "COUNT(DISTINCT CustomerName)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customer names represented in the target group."
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points referenced by the target items."
        },
        {
          "name": "DistinctMainHeadingCount",
          "expression": "COUNT(DISTINCT MainHeadingID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct main heading IDs present in the target items."
        },
        {
          "name": "PhoneAvailableCount",
          "expression": "SUM(CASE WHEN Phone IS NOT NULL AND LTRIM(RTRIM(Phone)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items with a non-empty phone value."
        },
        {
          "name": "PhoneAvailablePct",
          "expression": "SUM(CASE WHEN Phone IS NOT NULL AND LTRIM(RTRIM(Phone)) <> '' THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of target items that have a non-empty phone value."
        },
        {
          "name": "AddressCompleteCount",
          "expression": "SUM(CASE WHEN StreetName IS NOT NULL AND LTRIM(RTRIM(StreetName)) <> '' AND StreetNumber IS NOT NULL AND LTRIM(RTRIM(StreetNumber)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items with both street name and street number populated."
        },
        {
          "name": "AddressCompletePct",
          "expression": "SUM(CASE WHEN StreetName IS NOT NULL AND LTRIM(RTRIM(StreetName)) <> '' AND StreetNumber IS NOT NULL AND LTRIM(RTRIM(StreetNumber)) <> '' THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of target items that have both street name and street number populated."
        },
        {
          "name": "ReliabilityRedCount",
          "expression": "SUM(CASE WHEN ReliabilityStatus = 'RED' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items flagged with ReliabilityStatus = 'RED'."
        },
        {
          "name": "PaymentRefusalCount",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items with PaymentRefusal flagged (true)."
        },
        {
          "name": "ContinuousPaymentRefusalCount",
          "expression": "SUM(CASE WHEN ContinuousPaymentRefusal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items with ContinuousPaymentRefusal flagged (true)."
        },
        {
          "name": "PrecariousnessLegalCount",
          "expression": "SUM(CASE WHEN PrecariousnessLegal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items with PrecariousnessLegal flagged (true)."
        },
        {
          "name": "SealedCheckCount",
          "expression": "SUM(CASE WHEN SealedCheck = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items with SealedCheck flagged (true)."
        },
        {
          "name": "DisappearedCount",
          "expression": "SUM(CASE WHEN Disappeared = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items marked as disappeared."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SourceCampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Prefecture",
          "City",
          "Brandname",
          "MainHeadingName",
          "ReliabilityStatus",
          "CampaignID"
        ],
        "default_filters": [
          {
            "column": "Disappeared",
            "op": "=",
            "value": false
          }
        ],
        "notes": "Use CampaignID to separate target lists. Many SourceCampaignID/CaseID fields are empty in samples; treat as optional dimensions."
      }
    },
    {
      "name": "FactTargetGroupItemValue",
      "source": "dbo.TargetGroupItemValue",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target group item value records"
        },
        {
          "name": "TargetValue_Sum",
          "expression": "SUM(TargetValue)",
          "unit": "numeric",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Sum of TargetValue across the selected rows (aggregated assigned target). Use to measure total assigned target."
        },
        {
          "name": "ChannelTargetValue_Sum",
          "expression": "SUM(ChannelTargetValue)",
          "unit": "numeric",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Sum of ChannelTargetValue across the selected rows (channel-level assigned targets)."
        },
        {
          "name": "UserTargetValue_Sum",
          "expression": "SUM(UserTargetValue)",
          "unit": "numeric",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Sum of UserTargetValue across the selected rows (user-level assigned targets)."
        },
        {
          "name": "RequestedDiscountAmount_Sum",
          "expression": "SUM(RequestedDiscountAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total requested discount amount (sum). Monetary values assumed in EUR."
        },
        {
          "name": "RequestedDiscountPercentage_Avg",
          "expression": "AVG(RequestedDiscountPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average requested discount percentage across the selected rows."
        },
        {
          "name": "FixOfferDiffValue_Sum",
          "expression": "SUM(FixOfferDiffValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of difference value for fixed offers. Monetary values assumed in EUR."
        },
        {
          "name": "Visits_Sum",
          "expression": "SUM(Visits)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of recorded visits associated with these target items."
        },
        {
          "name": "LossPrintedNew_Sum",
          "expression": "SUM(LossPrintedNew)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of LossPrintedNew — a numeric indicator captured on the record."
        },
        {
          "name": "ReleasedCount",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records marked as released."
        },
        {
          "name": "ClosedCount",
          "expression": "SUM(CASE WHEN IsClosed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records marked as closed."
        },
        {
          "name": "TargetValuesNeedRefreshCount",
          "expression": "SUM(CASE WHEN TargetValuesNeedRefresh = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records flagged as needing target value refresh."
        },
        {
          "name": "BPIdentityConfirmedCount",
          "expression": "SUM(CASE WHEN BPIdentityConfirmed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records where business partner identity has been confirmed."
        }
      ],
      "foreign_keys": [
        {
          "column": "AltOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "FixOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "HandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialHandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "NegationReasonID",
          "references": "dbo.NegationReason.ID"
        },
        {
          "column": "NoCommReasonID",
          "references": "dbo.NoCommReason.ID"
        },
        {
          "column": "PendingReasonId",
          "references": "dbo.PendingReason.ID"
        },
        {
          "column": "PostponeReasonID",
          "references": "dbo.PostponeReason.ID"
        },
        {
          "column": "PresaleFormTaskId",
          "references": "dbo.Task.ID"
        },
        {
          "column": "ProposedHandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ProposedTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "Supervisor",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialSubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "CampaignAllocationPlanID",
          "references": "dbo.CampaignAllocationPlan.ID"
        },
        {
          "column": "RequestedDiscountOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "TargetGroupItemID",
          "references": "dbo.TargetGroupItem.ID"
        },
        {
          "column": "TargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "PXKEditorUserID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TargetGroupItem",
          "HandlerUser",
          "TargetUser",
          "SubChannel",
          "CampaignAllocationPlan",
          "EndDate.Year"
        ],
        "default_filters": [
          {
            "column": "IsReleased",
            "op": "=",
            "value": true
          },
          {
            "column": "EndDate",
            "op": ">=",
            "value": "2012-01-01"
          }
        ]
      }
    },
    {
      "name": "TargetGroupItemInfo",
      "source": "dbo.TargetGroupItemInfo",
      "grain": [
        "TargetGroupItemValueID"
      ],
      "measures": [
        {
          "name": "ItemCount",
          "expression": "COUNT(TargetGroupItemValueID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target group items (rows)"
        },
        {
          "name": "BalanceValue",
          "expression": "SUM(BalanceValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Current balance value for the item"
        },
        {
          "name": "DueBalanceValue",
          "expression": "SUM(DueBalanceValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Amount currently due for the item"
        },
        {
          "name": "SettlementBalanceValue",
          "expression": "SUM(SettlementBalanceValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Settlement balance value for the item"
        },
        {
          "name": "TotalPBDContractsValue_12mo",
          "expression": "SUM(Y01PBDContractsValue) + SUM(Y02PBDContractsValue) + SUM(Y03PBDContractsValue) + SUM(Y04PBDContractsValue) + SUM(Y05PBDContractsValue) + SUM(Y06PBDContractsValue) + SUM(Y07PBDContractsValue) + SUM(Y08PBDContractsValue) + SUM(Y09PBDContractsValue) + SUM(Y10PBDContractsValue) + SUM(Y11PBDContractsValue) + SUM(Y12PBDContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total PBD contract value aggregated across the 12 Y01..Y12 periods"
        },
        {
          "name": "TotalPADContractsValue_12mo",
          "expression": "SUM(Y01PADContractsValue) + SUM(Y02PADContractsValue) + SUM(Y03PADContractsValue) + SUM(Y04PADContractsValue) + SUM(Y05PADContractsValue) + SUM(Y06PADContractsValue) + SUM(Y07PADContractsValue) + SUM(Y08PADContractsValue) + SUM(Y09PADContractsValue) + SUM(Y10PADContractsValue) + SUM(Y11PADContractsValue) + SUM(Y12PADContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total PAD contract value aggregated across the 12 Y01..Y12 periods"
        },
        {
          "name": "TotalIBDContractsValue_12mo",
          "expression": "SUM(Y01IBDContractsValue) + SUM(Y02IBDContractsValue) + SUM(Y03IBDContractsValue) + SUM(Y04IBDContractsValue) + SUM(Y05IBDContractsValue) + SUM(Y06IBDContractsValue) + SUM(Y07IBDContractsValue) + SUM(Y08IBDContractsValue) + SUM(Y09IBDContractsValue) + SUM(Y10IBDContractsValue) + SUM(Y11IBDContractsValue) + SUM(Y12IBDContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total IBD contract value aggregated across the 12 Y01..Y12 periods"
        },
        {
          "name": "TotalIADContractsValue_12mo",
          "expression": "SUM(Y01IADContractsValue) + SUM(Y02IADContractsValue) + SUM(Y03IADContractsValue) + SUM(Y04IADContractsValue) + SUM(Y05IADContractsValue) + SUM(Y06IADContractsValue) + SUM(Y07IADContractsValue) + SUM(Y08IADContractsValue) + SUM(Y09IADContractsValue) + SUM(Y10IADContractsValue) + SUM(Y11IADContractsValue) + SUM(Y12IADContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total IAD contract value aggregated across the 12 Y01..Y12 periods"
        },
        {
          "name": "TotalContractsValue",
          "expression": "([TotalPBDContractsValue_12mo]) + ([TotalPADContractsValue_12mo]) + ([TotalIBDContractsValue_12mo]) + ([TotalIADContractsValue_12mo])",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "All contract values combined across PBD, PAD, IBD and IAD for 12 periods (derived)"
        },
        {
          "name": "ExpirationValueInternet",
          "expression": "SUM(ExpirationValueInternet)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total internet expiration value"
        },
        {
          "name": "SubscriptionValue",
          "expression": "SUM(SubscriptionValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total subscription value"
        },
        {
          "name": "CancelAmount",
          "expression": "SUM(CancelAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of cancel amounts"
        },
        {
          "name": "CreditInvoiceValue",
          "expression": "SUM(CreditInvoiceValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of credit invoice values"
        },
        {
          "name": "ExchangeSaleValue",
          "expression": "SUM(ExchangeSaleValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of exchange sale values"
        },
        {
          "name": "TotalPreprintedValue",
          "expression": "SUM(TotalPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of total preprinted value"
        },
        {
          "name": "PrintPreprintedValue",
          "expression": "SUM(PrintPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of print preprinted value"
        },
        {
          "name": "InternetPreprintedValue",
          "expression": "SUM(InternetPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of internet preprinted value"
        },
        {
          "name": "MultimediaPreprintedValue",
          "expression": "SUM(MultimediaPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of multimedia preprinted value"
        },
        {
          "name": "Y01Entries",
          "expression": "SUM(Y01Entries)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total entries in period Y01"
        },
        {
          "name": "Y02Entries",
          "expression": "SUM(Y02Entries)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total entries in period Y02"
        },
        {
          "name": "Y01DirectoriesSections",
          "expression": "SUM(Y01DirectoriesSections)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of directories sections for period Y01"
        },
        {
          "name": "Y02DirectoriesSections",
          "expression": "SUM(Y02DirectoriesSections)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of directories sections for period Y02"
        },
        {
          "name": "HasOnlineCount",
          "expression": "SUM(CASE WHEN HasOnline = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of items that have online presence"
        },
        {
          "name": "HasGraphicFileCount",
          "expression": "SUM(CASE WHEN HasGraphicFile = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of items with graphic files"
        },
        {
          "name": "Y01HasROICount",
          "expression": "SUM(CASE WHEN Y01HasROI = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of items flagged as having ROI in Y01"
        },
        {
          "name": "Y02HasROICount",
          "expression": "SUM(CASE WHEN Y02HasROI = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of items flagged as having ROI in Y02"
        },
        {
          "name": "LastSaleAssignmentDate_Max",
          "expression": "MAX(LastSaleAssignmentDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent last sale assignment date for items"
        },
        {
          "name": "FirstPrintSignDate_Min",
          "expression": "MIN(Y01PrintSignDate)",
          "unit": "date",
          "currency": null,
          "format_hint": "date",
          "description": "Earliest Y01 print sign date (useful to filter by active/legacy items)"
        }
      ],
      "foreign_keys": [
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        },
        {
          "column": "HigherSpendingHeadingID",
          "references": "dbo.HigherSpendingHeading.ID"
        },
        {
          "column": "Y01PSalesrep",
          "references": "dbo.SalesRep.SalesRepID"
        },
        {
          "column": "Y01PSalesChannel",
          "references": "dbo.SalesChannel.ChannelID"
        },
        {
          "column": "Y02PSalesrep",
          "references": "dbo.SalesRep.SalesRepID"
        },
        {
          "column": "Y02PSalesChannel",
          "references": "dbo.SalesChannel.ChannelID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "HigherSpendingHeadingName",
          "HigherSpendingHeadingCode",
          "Y01PSalesChannel",
          "Y01PSalesrep"
        ],
        "default_filters": [
          {
            "column": "Y01PrintSignDate",
            "op": "is not",
            "value": "null"
          }
        ],
        "default_sort": {
          "column": "TotalContractsValue",
          "direction": "desc"
        }
      }
    },
    {
      "name": "TargetGroupItemPeriod",
      "source": "dbo.TargetGroupItemPeriod",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows in the TargetGroupItemPeriod table (occurrences)."
        },
        {
          "name": "DistinctContractProductCount",
          "expression": "COUNT(DISTINCT ContractProductID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of unique ContractProductID values represented in the current scope."
        },
        {
          "name": "DistinctTargetGroupItemValueCount",
          "expression": "COUNT(DISTINCT TargetGroupItemValueID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of unique TargetGroupItemValueID values represented in the current scope."
        },
        {
          "name": "DistinctPeriodCount",
          "expression": "COUNT(DISTINCT Period)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of distinct Period values present (expected 12 for monthly periods)."
        },
        {
          "name": "RowsPerPeriodAvg",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT Period), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of rows per distinct Period in the current scope. NULL when no periods are present."
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractProductID",
          "references": "dbo.ContractProduct.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemInfo.TargetGroupItemValueID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Period",
          "ContractProductID",
          "TargetGroupItemValueID"
        ],
        "default_filters": [
          {
            "column": "Period",
            "op": ">=",
            "value": "1"
          },
          {
            "column": "Period",
            "op": "<=",
            "value": "12"
          }
        ],
        "notes": "Period appears to be a monthly period index (12 distinct values). DMKey/DMTable/DMCharKey are always null in sampled data and are not used as join keys."
      }
    },
    {
      "name": "Presale Form Fact",
      "source": "dbo.PresaleForm",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "FormCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of presale form submissions (row count)"
        },
        {
          "name": "TotalAmountXO",
          "expression": "SUM(AmountXO)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of AmountXO values (external/offline quoted amounts). Nulls ignored."
        },
        {
          "name": "AverageAmountXO",
          "expression": "AVG(AmountXO)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average AmountXO for forms with a non-null AmountXO"
        },
        {
          "name": "TotalAmountWebsite",
          "expression": "SUM(AmountWebsite)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of AmountWebsite values (website quoted amounts). Nulls ignored."
        },
        {
          "name": "AverageAmountWebsite",
          "expression": "AVG(AmountWebsite)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average AmountWebsite for forms with a non-null AmountWebsite"
        },
        {
          "name": "AverageMinBudgetPPC",
          "expression": "AVG(MinBudgetPPC)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average of MinBudgetPPC (minimum PPC budget) across forms with a value"
        },
        {
          "name": "AverageMaxBudgetPPC",
          "expression": "AVG(MaxBudgetPPC)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average of MaxBudgetPPC (maximum PPC budget) across forms with a value"
        },
        {
          "name": "MinBudgetPPC_Min",
          "expression": "MIN(MinBudgetPPC)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Minimum MinBudgetPPC observed"
        },
        {
          "name": "MaxBudgetPPC_Max",
          "expression": "MAX(MaxBudgetPPC)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Maximum MaxBudgetPPC observed"
        },
        {
          "name": "FormsWithPPCBudget_Count",
          "expression": "SUM(CASE WHEN MinBudgetPPC IS NOT NULL OR MaxBudgetPPC IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of forms that supplied at least one PPC budget value (min or max)"
        },
        {
          "name": "InfoSufficientPPC_Percent",
          "expression": "SUM(CASE WHEN IsInfoSufficientPPC = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of forms where the respondent indicated 'IsInfoSufficientPPC' = true"
        },
        {
          "name": "Eshop_Count",
          "expression": "SUM(CASE WHEN IsEshop = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of forms that marked IsEshop = true"
        },
        {
          "name": "Eshop_Percent",
          "expression": "SUM(CASE WHEN IsEshop = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of forms where IsEshop = true"
        },
        {
          "name": "CatalogProduct_Percent",
          "expression": "SUM(CASE WHEN IsCatalogProduct = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of forms that indicate the product is a catalog product"
        },
        {
          "name": "Aplh_Count",
          "expression": "SUM(CASE WHEN IsAplh = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of forms that marked IsAplh = true (flag count)"
        }
      ],
      "foreign_keys": [
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TargetGroupItemValue",
          "IsEshop",
          "IsCatalogProduct",
          "IsInfoSufficientPPC"
        ],
        "default_filters": []
      }
    },
    {
      "name": "ProductionCaseProduct",
      "source": "dbo.ProductionCaseProduct",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalProducts",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Total number of product records (rows) in the fact. When used without grouping, this is the table row count."
        },
        {
          "name": "ProductsPerCase",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "When grouped by CaseID, yields the number of products placed on that case."
        },
        {
          "name": "DistinctPricelistItems",
          "expression": "COUNT(DISTINCT PricelistItemID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of distinct pricelist items referenced by the rows in the current filter context."
        },
        {
          "name": "RecordsWithDmKey",
          "expression": "SUM(CASE WHEN DMKey IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of records that have a non-null DMKey. Useful to identify rows already linked to a downstream dimension mapping."
        },
        {
          "name": "AverageProductsPerCase",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT CaseID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average number of product records per case in the current filter context. Returns NULL when there are no cases."
        }
      ],
      "foreign_keys": [
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "PricelistItemID",
          "references": "dbo.PricelistItem.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CaseID",
          "PricelistItemID",
          "DMTable",
          "DMCharKey"
        ],
        "default_sorts": [
          {
            "column": "TotalProducts",
            "dir": "desc"
          }
        ],
        "default_filters": [
          {
            "column": "CaseID",
            "op": "IS NOT",
            "value": "NULL"
          }
        ],
        "notes": "Use CaseID and PricelistItemID as primary breakdowns. DMTable/DMCharKey are provided for dynamic mapping contexts and can be used to join to downstream dimension mapping logic."
      }
    },
    {
      "name": "FreeTemplate (Product/BusinessPoint Pricing Template)",
      "source": "dbo.FreeTemplate",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of template records"
        },
        {
          "name": "TotalQuantity",
          "expression": "SUM(Quantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total quantity across templates"
        },
        {
          "name": "TotalPrice",
          "expression": "SUM(Price)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Sum of Price values (nominal price before discounts)"
        },
        {
          "name": "AveragePricePerUnit",
          "expression": "SUM(Price) / NULLIF(SUM(Quantity), 0)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Average price per unit (handles zero quantity)"
        },
        {
          "name": "TotalOneTimeAmount",
          "expression": "SUM(OneTimeAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(4)",
          "description": "Sum of one-time amounts"
        },
        {
          "name": "TotalOneTimeAfterDiscount",
          "expression": "SUM(OneTimeAmountAfterDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(4)",
          "description": "Sum of one-time amounts after discounts"
        },
        {
          "name": "TotalExtraFeeAmount",
          "expression": "SUM(ExtraFeeAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(4)",
          "description": "Sum of extra fees"
        },
        {
          "name": "TotalExtraFeeAfterDiscount",
          "expression": "SUM(ExtraFeeAmountAfterDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(4)",
          "description": "Sum of extra fees after discounts"
        },
        {
          "name": "TotalBudgetAmount",
          "expression": "SUM(BudgetAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(4)",
          "description": "Sum of budgeted amounts"
        },
        {
          "name": "TotalPaymentDiscount",
          "expression": "SUM(COALESCE(PaymentDiscount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Sum of payment discounts"
        },
        {
          "name": "TotalProductDiscount",
          "expression": "SUM(COALESCE(ProductDiscount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Sum of product-level discounts"
        },
        {
          "name": "TotalBundleDiscount",
          "expression": "SUM(COALESCE(BundleDiscount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Sum of bundle discounts"
        },
        {
          "name": "TotalOtherDiscounts",
          "expression": "SUM(COALESCE(RulesDiscount,0) + COALESCE(Discount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Sum of rules and generic discounts"
        },
        {
          "name": "TotalAllDiscounts",
          "expression": "SUM(COALESCE(PaymentDiscount,0) + COALESCE(ProductDiscount,0) + COALESCE(BundleDiscount,0) + COALESCE(RulesDiscount,0) + COALESCE(Discount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Aggregate of all discount types applied to templates"
        },
        {
          "name": "TotalActualSpentBudget",
          "expression": "SUM(ActualSpentBudget)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(4)",
          "description": "Sum of actual spent budget (realized spend)"
        },
        {
          "name": "TotalAlteredAmount",
          "expression": "SUM(COALESCE(AlteredAmount,0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(3)",
          "description": "Sum of altered amounts (manual adjustments)"
        },
        {
          "name": "TotalAlteredPPCAfterCC",
          "expression": "SUM(AlteredPPCAmountAfterCC)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(4)",
          "description": "Sum of altered PPC amounts after credit/charge corrections"
        },
        {
          "name": "SubscriptionCount",
          "expression": "SUM(CASE WHEN IsSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of templates marked as subscription-based"
        },
        {
          "name": "RenewedCount",
          "expression": "SUM(CASE WHEN IsRenewed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of templates flagged as renewed"
        },
        {
          "name": "RenewableCount",
          "expression": "SUM(CASE WHEN IsRenewable = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of templates marked as renewable"
        },
        {
          "name": "InterruptedCount",
          "expression": "SUM(CASE WHEN IsInterruptedFromCRM = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of templates flagged as interrupted from CRM"
        },
        {
          "name": "ROIFlagCount",
          "expression": "SUM(CASE WHEN IsROI = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of templates flagged as ROI"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "VersionSection.ID"
        },
        {
          "column": "SalesTypeID",
          "references": "AdvertisementSalesType.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "BusinessPoint.ID"
        },
        {
          "column": "ProductID",
          "references": "Product.ID"
        },
        {
          "column": "PaymentMethodID",
          "references": "PaymentMethod.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPoint",
          "Product",
          "VersionSection",
          "CreatedOn (date)"
        ],
        "default_filters": [
          {
            "column": "State",
            "op": "=",
            "value": "0"
          },
          {
            "column": "IsInterruptedFromCRM",
            "op": "=",
            "value": "False"
          }
        ]
      }
    },
    {
      "name": "FreeTemplateAdvertisement",
      "source": "dbo.FreeTemplateAdvertisement",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AdvertisementCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of free template advertisement records"
        },
        {
          "name": "UniqueFreeTemplateCount",
          "expression": "COUNT(DISTINCT FreeTemplateID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct free templates referenced by advertisements"
        },
        {
          "name": "TotalBudgetAmount",
          "expression": "SUM(BudgetAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of the budget amounts assigned to advertisements"
        },
        {
          "name": "AverageBudgetAmount",
          "expression": "AVG(BudgetAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average budget amount per advertisement"
        },
        {
          "name": "TotalOneTimeAmount",
          "expression": "SUM(OneTimeAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of one-time amounts before discounts"
        },
        {
          "name": "TotalExtraFeeAmount",
          "expression": "SUM(ExtraFeeAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of extra fee amounts before discounts"
        },
        {
          "name": "TotalPaymentDiscount",
          "expression": "SUM(PaymentDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total payment discounts applied"
        },
        {
          "name": "TotalProductDiscount",
          "expression": "SUM(ProductDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total product-level discounts applied"
        },
        {
          "name": "TotalBundleDiscount",
          "expression": "SUM(BundleDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total bundle discounts applied"
        },
        {
          "name": "TotalOneTimeAmountAfterDiscount",
          "expression": "SUM(OneTimeAmountAfterDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of one-time amounts after discounts"
        },
        {
          "name": "TotalExtraFeeAmountAfterDiscount",
          "expression": "SUM(ExtraFeeAmountAfterDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of extra fees after discounts"
        },
        {
          "name": "TotalActualSpentBudget",
          "expression": "SUM(ActualSpentBudget)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Actual amount spent from the budget"
        },
        {
          "name": "TotalExtraFeeAmountAfterCC",
          "expression": "SUM(ExtraFeeAmountAfterCC)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Extra fee total after credit card charges"
        },
        {
          "name": "TotalAlteredPPCAmountAfterCC",
          "expression": "SUM(AlteredPPCAmountAfterCC)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of altered PPC amounts after credit card charges"
        },
        {
          "name": "TotalAlteredAmount",
          "expression": "SUM(AlteredAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total altered amounts applied to advertisements"
        },
        {
          "name": "TotalPrice",
          "expression": "SUM(Price)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Aggregate price value stored for advertisements"
        },
        {
          "name": "TotalDiscount",
          "expression": "SUM(Discount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Aggregate discount value stored for advertisements"
        },
        {
          "name": "TotalRulesDiscount",
          "expression": "SUM(RulesDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total discounts applied by rules logic"
        },
        {
          "name": "CompletedChangesSum",
          "expression": "SUM(CompletedChanges)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of completed changes counters across advertisements"
        },
        {
          "name": "VerifiedCount",
          "expression": "SUM(CASE WHEN IsVerified = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of advertisements marked as verified"
        },
        {
          "name": "SubscriptionBasedCount",
          "expression": "SUM(CASE WHEN IsSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of advertisements that are subscription-based"
        },
        {
          "name": "QACount",
          "expression": "SUM(CASE WHEN QA = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of advertisements flagged for QA"
        },
        {
          "name": "CanExportCount",
          "expression": "SUM(CASE WHEN CanExport = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of advertisements allowed to be exported"
        },
        {
          "name": "DenyExtractionCount",
          "expression": "SUM(CASE WHEN DenyExtraction = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of advertisements where extraction is denied"
        },
        {
          "name": "ActiveAdvertisementCount",
          "expression": "SUM(CASE WHEN DeactivationDate IS NULL AND DenyExtraction = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of advertisements that appear active (no deactivation and not denied extraction)"
        },
        {
          "name": "AverageMonths",
          "expression": "AVG(Months)",
          "unit": "numeric",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average value of the Months field (nulls ignored)"
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        },
        {
          "column": "CaseAttachmentID",
          "references": "dbo.CaseAttachment.ID"
        },
        {
          "column": "FreeTemplateID",
          "references": "dbo.FreeTemplate.ID"
        },
        {
          "column": "ProductID",
          "references": "dbo.Product.ID"
        },
        {
          "column": "ProductKitID",
          "references": "dbo.ProductKit.ID"
        },
        {
          "column": "HeadingID",
          "references": "dbo.VersionGroupItem.ID"
        },
        {
          "column": "RelatedFreeTemplateAdvertisementID",
          "references": "dbo.FreeTemplateAdvertisement.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "FreeTemplate",
          "Product",
          "VersionSection",
          "HeadingID",
          "IsVerified",
          "IsSubscriptionBased"
        ],
        "default_filters": [
          {
            "column": "DenyExtraction",
            "op": "=",
            "value": "0"
          },
          {
            "column": "DeactivationDate",
            "op": "IS",
            "value": "NULL"
          }
        ],
        "notes": "Most monetary fields in this table are zero in the sample data. Confirm currency assumptions (USD) for fields without explicit currency hints before heavy financial reporting."
      }
    },
    {
      "name": "FreeTemplateAttributeValue",
      "source": "dbo.FreeTemplateAttributeValue",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of attribute-value rows (at the grain ID)."
        },
        {
          "name": "FilledValueCount",
          "expression": "SUM(CASE WHEN Value IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows where Value is not null (attributes that have a stored value)."
        },
        {
          "name": "FilledValuePct",
          "expression": "SUM(CASE WHEN Value IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows with a non-null Value (attribute coverage / fill rate)."
        },
        {
          "name": "NullValuePct",
          "expression": "SUM(CASE WHEN Value IS NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows with null Value (complement of FilledValuePct)."
        },
        {
          "name": "DistinctAttributeCount",
          "expression": "COUNT(DISTINCT ContentAttributeDefinitionID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct attribute definitions represented in the selected scope."
        },
        {
          "name": "DistinctValueCount",
          "expression": "COUNT(DISTINCT Value)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct non-null Value entries (unique attribute values or references)."
        },
        {
          "name": "DistinctProductPartCount",
          "expression": "COUNT(DISTINCT ProductPartID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct product parts associated with the attribute values in the selected scope."
        },
        {
          "name": "DistinctFreeTemplateAdvertisementCount",
          "expression": "COUNT(DISTINCT FreeTemplateAdvertisementID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct FreeTemplateAdvertisement records referenced."
        },
        {
          "name": "QAFlagCount",
          "expression": "SUM(CASE WHEN QA = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows flagged for QA (QA = true)."
        },
        {
          "name": "HeaderLabelCount",
          "expression": "SUM(CASE WHEN HeaderLabel IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows that include a non-null HeaderLabel."
        },
        {
          "name": "AverageRowsPerFreeTemplate",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT FreeTemplateID), 0)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of attribute-value rows per FreeTemplate (useful to gauge typical attribute volume per template)."
        }
      ],
      "foreign_keys": [
        {
          "column": "FreeTemplateID",
          "references": "dbo.FreeTemplate.ID"
        },
        {
          "column": "FreeTemplateAdvertisementID",
          "references": "dbo.FreeTemplateAdvertisement.ID"
        },
        {
          "column": "ContentAttributeDefinitionID",
          "references": "dbo.ContentAttributeDefinition.ID"
        },
        {
          "column": "ProductPartID",
          "references": "dbo.ProductPart.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "FreeTemplateID",
          "ContentAttributeDefinitionID",
          "ProductPartID",
          "FreeTemplateAdvertisementID",
          "QA"
        ],
        "default_filters": [
          {
            "column": "Value",
            "op": "IS NOT NULL",
            "value": null,
            "description": "By default show only rows that contain a value to focus on populated attributes."
          }
        ],
        "notes": [
          "Because Value is null for a large majority of rows (null_rate ~93.5%), most analyses should either filter to non-null values or use FilledValuePct/NullValuePct measures.",
          "Value can contain localized text or file reference strings (backslash-separated paths); treat accordingly in downstream parsing.",
          "SeqNo currently appears constant (0) in samples — verify if sequencing logic is used before relying on it."
        ]
      }
    },
    {
      "name": "FreeListingGroupItem",
      "source": "dbo.FreeListingGroupItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ItemCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of membership rows (rows in this table)."
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct Business Points referenced by these group items."
        },
        {
          "name": "ExcludedCount",
          "expression": "SUM(CASE WHEN IsExcluded = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of group items marked as excluded."
        },
        {
          "name": "IncludedCount",
          "expression": "SUM(CASE WHEN IsExcluded = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of group items not marked as excluded (active/included)."
        },
        {
          "name": "PercentExcluded",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE 1.0 * SUM(CASE WHEN IsExcluded = 1 THEN 1 ELSE 0 END) / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of items in this set that are marked as excluded (ExcludedCount / ItemCount)."
        }
      ],
      "foreign_keys": [
        {
          "column": "FreeListingGroupID",
          "references": "dbo.FreeListingGroup.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "FreeListingGroupID",
          "BusinessPointID",
          "IsExcluded"
        ],
        "default_filters": [
          {
            "column": "IsExcluded",
            "op": "=",
            "value": false
          }
        ]
      }
    },
    {
      "name": "FreeListingGroup",
      "source": "dbo.FreeListingGroup",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "GroupCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of free listing group rows (counts rows at the grain)."
        },
        {
          "name": "DistinctVersionSectionCount",
          "expression": "COUNT(DISTINCT VersionSectionID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct VersionSectionIDs represented in the current selection."
        },
        {
          "name": "FinalizedCount",
          "expression": "SUM(CASE WHEN FinalizedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of groups that have been finalized (FinalizedOn is not null)."
        },
        {
          "name": "FinalizedRate",
          "expression": "CASE WHEN COUNT(ID)=0 THEN NULL ELSE 1.0 * SUM(CASE WHEN FinalizedOn IS NOT NULL THEN 1 ELSE 0 END) / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of groups that are finalized (FinalizedCount divided by GroupCount)."
        },
        {
          "name": "AvgDefinitionLength",
          "expression": "AVG(LEN(Definition))",
          "unit": "characters",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average length (in characters) of the Definition XML stored for groups."
        },
        {
          "name": "AvgDaysSinceFinalized",
          "expression": "AVG(DATEDIFF(day, FinalizedOn, CURRENT_TIMESTAMP))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days elapsed since FinalizedOn. Null FinalizedOn values are ignored by DATEDIFF (only finalized rows contribute)."
        }
      ],
      "foreign_keys": [
        {
          "column": "VersionSectionID",
          "references": "dbo.VersionSection.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "VersionSectionID",
          "FinalizedBy"
        ],
        "default_filters": [
          {
            "column": "FinalizedOn",
            "op": "is not",
            "value": "null"
          }
        ]
      }
    },
    {
      "name": "OBPSBatchRun",
      "source": "dbo.OBPSBatchRun",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "Run Count",
          "expression": "COUNT(Id)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of batch runs (distinct Id)."
        },
        {
          "name": "Completed Count",
          "expression": "SUM(CASE WHEN Status = 2 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of batch runs marked as completed (Status = 2)."
        },
        {
          "name": "Failed Count",
          "expression": "SUM(CASE WHEN Status = 3 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of batch runs marked as failed or error (Status = 3)."
        },
        {
          "name": "Completion Rate",
          "expression": "CASE WHEN COUNT(Id) = 0 THEN NULL ELSE SUM(CASE WHEN Status = 2 THEN 1 ELSE 0 END) * 1.0 / COUNT(Id) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of runs that completed successfully (Completed Count / Run Count)."
        },
        {
          "name": "Average Completion Time (seconds)",
          "expression": "AVG(CASE WHEN CompletedOn IS NOT NULL THEN DATEDIFF(second, ScheduledOn, CompletedOn) END)",
          "unit": "seconds",
          "currency": null,
          "format_hint": "duration(seconds)",
          "description": "Average elapsed time in seconds between ScheduledOn and CompletedOn for runs that have a completion timestamp."
        },
        {
          "name": "Max Priority",
          "expression": "MAX(Priority)",
          "unit": "integer",
          "currency": null,
          "format_hint": "integer",
          "description": "Maximum numeric priority value observed for batch runs."
        },
        {
          "name": "Min Priority",
          "expression": "MIN(Priority)",
          "unit": "integer",
          "currency": null,
          "format_hint": "integer",
          "description": "Minimum numeric priority value observed for batch runs."
        },
        {
          "name": "Default Priority Count",
          "expression": "SUM(CASE WHEN Priority = 2147483647 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of runs that have the sentinel/default priority value (2147483647)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchSearchId",
          "references": "dbo.OBPSBatchSearch.Id"
        }
      ],
      "display": {
        "default_time_column": "ScheduledOn",
        "default_breakdowns": [
          "BatchSearchId",
          "Status",
          "Priority",
          "ScheduledOn.Date"
        ],
        "default_filters": [
          {
            "column": "ScheduledOn",
            "op": ">=",
            "value": "2025-01-01"
          }
        ],
        "default_sort": {
          "column": "ScheduledOn",
          "direction": "desc"
        }
      }
    },
    {
      "name": "OBPS Batch Search",
      "source": "dbo.OBPSBatchSearch",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "Total Batches",
          "expression": "COUNT(Id)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of batch search definitions (one row per Id)."
        },
        {
          "name": "Batches with Status = 0",
          "expression": "SUM(CASE WHEN Status = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of batches where Status = 0. Value semantics (enabled/disabled/etc.) should be confirmed against application documentation."
        },
        {
          "name": "Batches with Status = 1",
          "expression": "SUM(CASE WHEN Status = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of batches where Status = 1. Value semantics (enabled/disabled/etc.) should be confirmed against application documentation."
        },
        {
          "name": "Batches ExecutionType = 0",
          "expression": "SUM(CASE WHEN ExecutionType = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of batches with ExecutionType = 0. ExecutionType mapping (e.g., scheduled/manual) should be validated with source system."
        },
        {
          "name": "Batches ExecutionType = 1",
          "expression": "SUM(CASE WHEN ExecutionType = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of batches with ExecutionType = 1. ExecutionType mapping (e.g., scheduled/manual) should be validated with source system."
        },
        {
          "name": "Average Times",
          "expression": "AVG(CAST(Times AS FLOAT))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average value of Times for batches where Times is populated. Null values are excluded from the average."
        },
        {
          "name": "Average Frequence",
          "expression": "AVG(CAST(Frequence AS FLOAT))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average value of Frequence (frequency) for batches where Frequence is populated. Null values are excluded from the average."
        },
        {
          "name": "Percent of Batches with Times",
          "expression": "100.0 * SUM(CASE WHEN Times IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(Id), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of batches that have a populated Times value."
        },
        {
          "name": "Distinct Creators",
          "expression": "COUNT(DISTINCT CreatedBy)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct CreatedBy user identifiers present in the dataset."
        },
        {
          "name": "Earliest CreatedOn",
          "expression": "MIN(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest creation timestamp among the batch records."
        },
        {
          "name": "Latest CreatedOn",
          "expression": "MAX(CreatedOn)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent creation timestamp among the batch records."
        }
      ],
      "foreign_keys": [],
      "display": {
        "default_breakdowns": [
          "Status",
          "ExecutionType",
          "CreatedBy",
          "Name",
          "CreatedOn.Year",
          "CreatedOn.Month"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2024-10-30"
          }
        ],
        "preferred_sort": {
          "column": "CreatedOn",
          "direction": "desc"
        }
      }
    },
    {
      "name": "IndividualSearch",
      "source": "dbo.OBPSIndividualSearch",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "SearchCount",
          "expression": "COUNT(Id)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of individual search requests (one row per search)."
        },
        {
          "name": "TotalResultsReturned",
          "expression": "SUM(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of results returned across all searches in the selected context."
        },
        {
          "name": "AverageResultsPerSearch",
          "expression": "AVG(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of results returned per search."
        },
        {
          "name": "MaxResultsForASingleSearch",
          "expression": "MAX(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum results returned for a single search entry (useful to find outliers)."
        },
        {
          "name": "MinResultsForASingleSearch",
          "expression": "MIN(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Minimum results returned for a single search entry."
        },
        {
          "name": "DistinctSearchTexts",
          "expression": "COUNT(DISTINCT Text)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct search text values observed (measures search variety)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchRunId",
          "references": "dbo.OBPSBatchRun.Id"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BatchRunId",
          "Type",
          "Text"
        ],
        "default_filters": [
          {
            "column": "ResultsCount",
            "op": ">",
            "value": "0"
          }
        ],
        "suggested_sort": {
          "column": "TotalResultsReturned",
          "direction": "desc"
        }
      }
    },
    {
      "name": "OBPS Search Result (Fact)",
      "source": "dbo.OBPSSearchResult",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "ResultCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of search result rows (one row per search result)."
        },
        {
          "name": "UniqueBusinessCount",
          "expression": "COUNT(DISTINCT BusinessUniqueId)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct businesses found across results (distinct BusinessUniqueId)."
        },
        {
          "name": "UniqueBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointId)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business point IDs referenced by results."
        },
        {
          "name": "CurrentCount",
          "expression": "SUM(CASE WHEN IsCurrent = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results marked as current."
        },
        {
          "name": "PercentCurrent",
          "expression": "SUM(CASE WHEN IsCurrent = 1 THEN 1.0 ELSE 0 END) / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of results that are current (IsCurrent = true)."
        },
        {
          "name": "PhoneCoverage",
          "expression": "SUM(CASE WHEN InternationalPhoneNumber IS NOT NULL AND LTRIM(RTRIM(InternationalPhoneNumber)) <> '' THEN 1.0 ELSE 0 END) / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of results that include an international phone number."
        },
        {
          "name": "HasMultipleBusinessPointsCount",
          "expression": "SUM(CASE WHEN HasMultipleBusinessPoints = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results flagged as having multiple business points."
        },
        {
          "name": "ComparisonStatusMatchedCount",
          "expression": "SUM(CASE WHEN ComparisonStatus = 2 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results where ComparisonStatus = 2 (business-specific meaning: e.g., matched)."
        },
        {
          "name": "AvgCompletenessScore",
          "expression": "AVG(CASE WHEN CHARINDEX('/', CompletenessScore) > 0 THEN CAST(LEFT(CompletenessScore, CHARINDEX('/', CompletenessScore) - 1) AS FLOAT) / NULLIF(CAST(SUBSTRING(CompletenessScore, CHARINDEX('/', CompletenessScore) + 1, 10) AS FLOAT), 0) ELSE NULL END)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average completeness score parsed from the 'X/Y' CompletenessScore text (expressed as X/Y). Nulls ignored. If score cannot be parsed it's excluded."
        },
        {
          "name": "AvgResponseSizeKB",
          "expression": "AVG(CAST(LEN(Response) AS FLOAT)) / 1024.0",
          "unit": "kilobytes",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average size of the JSON Response payload in kilobytes (approximate, based on string length)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointId",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "IndividualSearchId",
          "references": "dbo.OBPSIndividualSearch.Id"
        }
      ],
      "display": {
        "default_breakdowns": [
          "IndividualSearchId",
          "BusinessName",
          "BusinessPointId",
          "ComparisonStatus"
        ],
        "default_filters": [
          {
            "column": "IsCurrent",
            "op": "=",
            "value": "True"
          }
        ],
        "notes": "CompletenessScore is stored as text 'X/Y' — AvgCompletenessScore parses that pattern. Response stores rich JSON; consider extracting rating, userRatingCount or opening hours to separate dimension or measures for richer reporting."
      }
    },
    {
      "name": "OBPSBatchSearchText",
      "source": "dbo.OBPSBatchSearchText",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "Row Count",
          "expression": "COUNT(Id)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of text records (rows) in the table."
        },
        {
          "name": "Distinct Text Count",
          "expression": "COUNT(DISTINCT Text)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique text values across all records."
        },
        {
          "name": "Distinct BatchSearch Count",
          "expression": "COUNT(DISTINCT BatchSearchId)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct batch searches referenced by these text records."
        },
        {
          "name": "Duplicate Rate",
          "expression": "1.0 - (COUNT(DISTINCT Text) * 1.0 / NULLIF(COUNT(Id), 0))",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows that are duplicates of other text values (1 - distinct_texts/rows)."
        },
        {
          "name": "Average Text Length",
          "expression": "AVG(LEN(Text))",
          "unit": "characters",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average length of the Text field in characters."
        },
        {
          "name": "Maximum Text Length",
          "expression": "MAX(LEN(Text))",
          "unit": "characters",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum length observed for the Text field in characters."
        },
        {
          "name": "Minimum Text Length",
          "expression": "MIN(LEN(Text))",
          "unit": "characters",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Minimum length observed for the Text field in characters."
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchSearchId",
          "references": "dbo.OBPSBatchSearch.Id"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BatchSearchId"
        ],
        "default_filters": [
          {
            "column": "Text",
            "op": "!=",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "DialerTask",
      "source": "dbo.DialerTask",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Task Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of dialer task rows (distinct tasks) in the table."
        },
        {
          "name": "Pending Import Count",
          "expression": "SUM(CASE WHEN PendingImport = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of tasks flagged as pending import."
        },
        {
          "name": "Permit Call Count",
          "expression": "SUM(CASE WHEN PermitCall = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of tasks where calling is permitted."
        },
        {
          "name": "NotFound Task Count",
          "expression": "SUM(CASE WHEN NotFound > 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of tasks marked as not found (NotFound > 0)."
        },
        {
          "name": "Exported Task Count",
          "expression": "SUM(CASE WHEN BatchID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of tasks that have an associated BatchID (exported)."
        },
        {
          "name": "Distinct Source Tasks",
          "expression": "COUNT(DISTINCT SourceTaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct source tasks referenced by these dialer tasks."
        },
        {
          "name": "Distinct Current Tasks",
          "expression": "COUNT(DISTINCT CurrentTaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct current task IDs referenced (if present)."
        },
        {
          "name": "Avg Days Since Export",
          "expression": "AVG(CASE WHEN ExportDate IS NOT NULL THEN DATEDIFF(day, ExportDate, GETDATE()) END)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days between ExportDate and today for tasks with an ExportDate."
        },
        {
          "name": "Avg Days Since Last Sync",
          "expression": "AVG(CASE WHEN LastSynchDate IS NOT NULL THEN DATEDIFF(day, LastSynchDate, GETDATE()) END)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days since the last synchronization (for tasks that have LastSynchDate)."
        },
        {
          "name": "Requires Synchronization Count",
          "expression": "SUM(CASE WHEN RequiresSynchronization = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of tasks currently flagged as requiring synchronization."
        },
        {
          "name": "Calls Permitted Percentage",
          "expression": "100.0 * SUM(CASE WHEN PermitCall = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percent of tasks where calling is permitted (PermitCall)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CurrentTaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.DialerBusinessPoint.BusinessPointID"
        },
        {
          "column": "SourceTaskID",
          "references": "dbo.Task.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        },
        {
          "column": "DialerGroupID",
          "references": "dbo.DialerGroup.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPointID",
          "DialerCampaignID",
          "CampaignID",
          "DialerGroupID",
          "ProcessID",
          "ExportDate",
          "LastSynchDate"
        ],
        "default_filters": [
          {
            "column": "ExportDate",
            "op": "is not",
            "value": "null"
          },
          {
            "column": "PendingImport",
            "op": "=",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "Dialer Request Log",
      "source": "dbo.DialerRequestLog",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Request Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "count",
          "description": "Total number of dialer requests (number of rows in the log)."
        },
        {
          "name": "Unique Tasks",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct tasks associated with the requests."
        },
        {
          "name": "Unique Initial Users",
          "expression": "COUNT(DISTINCT InitialUserID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct users who initiated dialer requests."
        },
        {
          "name": "Unique Call Results",
          "expression": "COUNT(DISTINCT CallResultID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct call result codes recorded in the log."
        },
        {
          "name": "Distinct Tokens",
          "expression": "COUNT(DISTINCT Token)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct tokens issued for requests (useful to detect duplicates or replays)."
        },
        {
          "name": "Requests per User (average)",
          "expression": "COUNT(ID) / NULLIF(COUNT(DISTINCT InitialUserID), 0)",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average number of requests initiated per unique user (NULL when there are no users)."
        }
      ],
      "foreign_keys": [
        {
          "column": "InitialUserID",
          "references": "DimUser.UserID"
        },
        {
          "column": "TaskID",
          "references": "DimTask.TaskID"
        },
        {
          "column": "CallResultID",
          "references": "DimCallResult.CallResultID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "InitialUserID",
          "TaskID",
          "CallResultID"
        ],
        "default_filters": []
      }
    },
    {
      "name": "DialerRequestLogEntry",
      "source": "dbo.DialerRequestLogEntry",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "EntryCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of dialer request log entries (row count)."
        },
        {
          "name": "DistinctUserCount",
          "expression": "COUNT(DISTINCT UserID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct users who generated log entries."
        },
        {
          "name": "DistinctOperationCount",
          "expression": "COUNT(DISTINCT Operation)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct operations recorded in the log."
        },
        {
          "name": "EntriesPerActiveUser",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT UserID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of log entries per distinct user in the current aggregation scope. Returns NULL when there are no users."
        },
        {
          "name": "EarliestEntryTimestamp",
          "expression": "MIN(Timestamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "The earliest Timestamp value among the aggregated entries."
        },
        {
          "name": "LatestEntryTimestamp",
          "expression": "MAX(Timestamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "The latest Timestamp value among the aggregated entries."
        }
      ],
      "foreign_keys": [
        {
          "column": "DialerRequestLogID",
          "references": "dbo.DialerRequestLog.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Operation",
          "Status",
          "UserID",
          "DialerRequestLogID",
          "Timestamp.date"
        ],
        "default_filters": [
          {
            "column": "Timestamp",
            "op": ">=",
            "value": "LAST_90_DAYS"
          }
        ],
        "notes": "Status is an integer code; consider joining a status/dimension table if available for readable labels. If a User dimension exists, join on UserID for user attributes."
      }
    },
    {
      "name": "DialerLogging",
      "source": "dbo.DialerLogging",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "EventCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of logged dialer events (one row per event)"
        },
        {
          "name": "DistinctBatchCount",
          "expression": "COUNT(DISTINCT BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct batches represented in the selected events"
        },
        {
          "name": "TotalRowsAffected",
          "expression": "SUM(RowAffected)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of the RowAffected values across events (total rows impacted)"
        },
        {
          "name": "AvgRowsAffected",
          "expression": "AVG(RowAffected)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of rows affected per event"
        },
        {
          "name": "AvgProcessingTimeSeconds",
          "expression": "AVG(DATEDIFF(SECOND, Timestamp, CompletedOn))",
          "unit": "seconds",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average processing time in seconds between the event Timestamp and CompletedOn"
        },
        {
          "name": "P95ProcessingTimeSeconds",
          "expression": "PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY DATEDIFF(SECOND, Timestamp, CompletedOn)) OVER ()",
          "unit": "seconds",
          "currency": null,
          "format_hint": "number(2)",
          "description": "95th percentile of processing time (seconds) between Timestamp and CompletedOn"
        },
        {
          "name": "ErrorEventCount",
          "expression": "SUM(CASE WHEN Text IS NOT NULL AND LTRIM(Text) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of events that include non-empty text (often used for error or status messages)"
        },
        {
          "name": "SuccessCount",
          "expression": "SUM(CASE WHEN Status = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events marked as success. Note: assumes Status = 1 indicates success; verify mapping for your system."
        },
        {
          "name": "FailureCount",
          "expression": "SUM(CASE WHEN Status <> 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of events not marked as success (assumes Status <> 1 indicates failure or non-success states)"
        },
        {
          "name": "SuccessRate",
          "expression": "CASE WHEN COUNT(*) = 0 THEN NULL ELSE SUM(CASE WHEN Status = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of events that are successful (SuccessCount / EventCount). Assumes Status = 1 indicates success."
        },
        {
          "name": "AvgEventsPerBatch",
          "expression": "CASE WHEN COUNT(DISTINCT BatchID) = 0 THEN NULL ELSE COUNT(*) * 1.0 / COUNT(DISTINCT BatchID) END",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of events per batch in the selected scope"
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchID",
          "references": "dbo.DialerBatch.BatchID"
        },
        {
          "column": "Status",
          "references": "dbo.DialerStatus.StatusCode"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Operation",
          "Status",
          "BatchID",
          "DATE(Timestamp)"
        ],
        "default_filters": [
          {
            "column": "Timestamp",
            "op": ">=",
            "value": "2025-07-01"
          }
        ]
      }
    },
    {
      "name": "DialerXomeCall",
      "source": "dbo.DialerXomeCall",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "CallCount",
          "expression": "COUNT(Id)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of dialer call records (rows) in the selected scope."
        },
        {
          "name": "CompletedCalls",
          "expression": "SUM(CASE WHEN FinishedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of calls that have a finish timestamp (call completed or explicitly ended)."
        },
        {
          "name": "InProgressOrUnfinishedCalls",
          "expression": "SUM(CASE WHEN FinishedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of calls without a finish time (still in progress or not recorded as finished)."
        },
        {
          "name": "TotalCallDurationSeconds",
          "expression": "SUM(CASE WHEN FinishedOn IS NOT NULL THEN DATEDIFF(SECOND, StartedOn, FinishedOn) ELSE 0 END)",
          "unit": "seconds",
          "currency": null,
          "format_hint": "seconds(0)",
          "description": "Sum of call durations in seconds for calls that have FinishedOn recorded."
        },
        {
          "name": "AverageCallDurationSeconds",
          "expression": "AVG(CASE WHEN FinishedOn IS NOT NULL THEN DATEDIFF(SECOND, StartedOn, FinishedOn) END)",
          "unit": "seconds",
          "currency": null,
          "format_hint": "seconds(0)",
          "description": "Average call duration in seconds, computed only over calls with FinishedOn."
        },
        {
          "name": "CompletedRate",
          "expression": "CASE WHEN COUNT(Id) = 0 THEN NULL ELSE SUM(CASE WHEN FinishedOn IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(Id) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of calls that were completed (FinishedOn present) out of total calls."
        },
        {
          "name": "DistinctExternalCallIds",
          "expression": "COUNT(DISTINCT JSON_VALUE(Payload, '$.CallId'))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of distinct external call identifiers parsed from Payload.CallId (useful if Dialer external id repeats across rows)."
        },
        {
          "name": "CallsWithRecallScheduled",
          "expression": "SUM(CASE WHEN JSON_VALUE(Payload, '$.RecallDateTime') IS NOT NULL AND JSON_VALUE(Payload, '$.RecallDateTime') <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of calls where a recall (follow-up) date/time was scheduled in the payload."
        },
        {
          "name": "CallsWithRecording",
          "expression": "SUM(CASE WHEN LTRIM(RTRIM(JSON_VALUE(Payload, '$.DialerRecordingID'))) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of calls that have a non-empty DialerRecordingID in the payload (indicates recording exists)."
        },
        {
          "name": "CallsByPayloadResult3",
          "expression": "SUM(CASE WHEN JSON_VALUE(Payload, '$.CallResultId') = '3' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of calls where Payload.CallResultId = 3. (Adjust or create similar measures for other result codes as needed.)"
        }
      ],
      "foreign_keys": [
        {
          "column": "UserId",
          "references": "dbo.User.ID",
          "description": "Agent / user who initiated the call (physical FK present in source)."
        },
        {
          "column": "JSON:CallHistoryEntityCustomerID",
          "references": "Customer.CustomerID",
          "description": "Derived reference: CallHistoryEntityCustomerID is available inside Payload JSON (use JSON_VALUE(Payload,'$.CallHistoryEntityCustomerID') to join). Not a physical FK in the table."
        },
        {
          "column": "JSON:RegisterCallResultCampaignName",
          "references": "Campaign.Name",
          "description": "Derived reference to campaign name inside payload (JSON_VALUE(Payload,'$.RegisterCallResultCampaignName')). Consider extracting campaign to a physical column for efficient joins."
        }
      ],
      "display": {
        "default_breakdowns": [
          "UserId (Agent)",
          "StartedOn.Date",
          "JSON:RegisterCallResultCampaignName (Campaign)",
          "JSON:CallResultId (Call result code)"
        ],
        "default_filters": [
          {
            "column": "StartedOn",
            "op": ">=",
            "value": "2024-01-01"
          }
        ],
        "notes": "For interactive reporting, extract common JSON fields (CallId, CallResultId, RegisterCallResultCampaignName, CallHistoryEntityCustomerID, DialerTelephoneNumber, DialerRecordingID, RecallDateTime) into dedicated columns or a parsed view to allow efficient slicing and joining. Use CompletedCalls, AverageCallDurationSeconds and CompletedRate as primary KPIs."
      }
    },
    {
      "name": "CollectionBridgeBatchHistory",
      "source": "dbo.CollectionBridgeBatchHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "EventCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of history records (events) in the current filter context."
        },
        {
          "name": "DistinctBatchCount",
          "expression": "COUNT(DISTINCT BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct batches referenced by the events in the current filter context."
        },
        {
          "name": "RowsAffectedTotal",
          "expression": "SUM(RowsAffected)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of rows affected across all events (sum of RowsAffected). Nulls are ignored."
        },
        {
          "name": "AvgRowsAffectedPerEvent",
          "expression": "AVG(RowsAffected)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average RowsAffected per event."
        },
        {
          "name": "MaxRowsAffected",
          "expression": "MAX(RowsAffected)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Maximum value of RowsAffected observed in the filtered events."
        },
        {
          "name": "NonZeroRowsAffectedPct",
          "expression": "SUM(CASE WHEN RowsAffected > 0 THEN 1 ELSE 0 END) / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of events where RowsAffected was greater than zero (percentage of events with an effect)."
        },
        {
          "name": "EventsPerBatch",
          "expression": "COUNT(ID) / NULLIF(COUNT(DISTINCT BatchID),0)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of events per distinct batch in the current filter context."
        },
        {
          "name": "DistinctTextCount",
          "expression": "COUNT(DISTINCT Text)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct Text messages recorded in the history events (useful to gauge message variety)."
        },
        {
          "name": "FirstEventTime",
          "expression": "MIN(TimeStamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest event timestamp in the filtered result set."
        },
        {
          "name": "LastEventTime",
          "expression": "MAX(TimeStamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Latest event timestamp in the filtered result set."
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchID",
          "references": "dbo.CollectionBridgeBatch.BatchID",
          "note": "Suggested reference: BatchID likely relates to a batch header table. Confirm actual reference table/name in the source model."
        }
      ],
      "display": {
        "default_breakdowns": [
          "TimeStamp.Year",
          "TimeStamp.Month",
          "BatchActionType",
          "Type",
          "EntityType",
          "BatchID"
        ],
        "default_filters": [
          {
            "column": "TimeStamp",
            "op": ">=",
            "value": "2013-01-01"
          }
        ],
        "default_sort": {
          "column": "TimeStamp",
          "direction": "desc"
        },
        "notes": "Common analyses: events over time, distribution by BatchActionType/Type/EntityType, batches with the most affected rows, and percent of events that changed rows."
      }
    },
    {
      "name": "CollectionBridgeErrorActionHistory",
      "source": "dbo.CollectionBridgeErrorActionHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of recorded error-action history rows."
        },
        {
          "name": "DistinctBatches",
          "expression": "COUNT(DISTINCT BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct BatchIDs represented in the history (unique batches)."
        },
        {
          "name": "DistinctActions",
          "expression": "COUNT(DISTINCT ActionID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct ActionIDs observed."
        },
        {
          "name": "DistinctEntityTypes",
          "expression": "COUNT(DISTINCT EntityType)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct entity types referenced by the history rows."
        },
        {
          "name": "AvgActionsPerBatch",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT BatchID), 0)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of action-history rows per batch (total rows divided by distinct batches). NULL when there are no batches."
        },
        {
          "name": "ShareOfType8",
          "expression": "SUM(CASE WHEN Type = 8 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of rows whose Type = 8. (Sample data shows Type = 8 frequently; adjust value in expression to target other Type codes.)"
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchID",
          "references": "Batch.BatchID",
          "note": "Likely references a Batch / import batch dimension. Confirm actual table name and cardinality."
        },
        {
          "column": "ActionID",
          "references": "Action.ActionID",
          "note": "Likely references an action definition or lookup table describing the action performed."
        },
        {
          "column": "EntityType",
          "references": "EntityType.EntityTypeID",
          "note": "Likely an enumeration/lookup for entity types. Confirm table/column names."
        },
        {
          "column": "Type",
          "references": "ActionType.TypeID",
          "note": "Type appears to be a small integer code (sample = 8). Map to the appropriate lookup if available."
        }
      ],
      "display": {
        "default_breakdowns": [
          "ActionID",
          "EntityType",
          "Type",
          "BatchID"
        ],
        "default_filters": []
      }
    },
    {
      "name": "ERP Bridge History",
      "source": "dbo.ErpBridgeHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Record Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of history records (rows) in the result set."
        },
        {
          "name": "Distinct Batch Count",
          "expression": "COUNT(DISTINCT BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct batches (BatchID) represented in the records."
        },
        {
          "name": "Total Rows Affected",
          "expression": "SUM(RowsAffected)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of RowsAffected across all operations — total number of rows touched by the recorded operations."
        },
        {
          "name": "Average Rows Affected",
          "expression": "AVG(CAST(RowsAffected AS FLOAT))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of rows affected per recorded operation."
        },
        {
          "name": "Maximum Rows Affected",
          "expression": "MAX(RowsAffected)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Largest RowsAffected value observed for an operation."
        },
        {
          "name": "Minimum Rows Affected",
          "expression": "MIN(RowsAffected)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Smallest RowsAffected value observed for an operation."
        },
        {
          "name": "Average Processing Time (seconds)",
          "expression": "AVG(DATEDIFF(SECOND, TimeStamp, CompletedOn))",
          "unit": "seconds",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average duration in seconds from TimeStamp (start) to CompletedOn (end) for operations."
        },
        {
          "name": "Total Processing Time (seconds)",
          "expression": "SUM(DATEDIFF(SECOND, TimeStamp, CompletedOn))",
          "unit": "seconds",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of processing duration in seconds for all operations in the result set."
        },
        {
          "name": "Success Count",
          "expression": "SUM(CASE WHEN Status = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of operations marked as successful (Status = 1)."
        },
        {
          "name": "Failure Count",
          "expression": "SUM(CASE WHEN Status <> 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of operations not marked as successful (Status <> 1)."
        },
        {
          "name": "Success Rate",
          "expression": "CASE WHEN COUNT(*) = 0 THEN NULL ELSE SUM(CASE WHEN Status = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of operations that are successful (Status = 1)."
        }
      ],
      "foreign_keys": [],
      "display": {
        "default_breakdowns": [
          "Operation",
          "BatchID",
          "TimeStamp.Date",
          "Status"
        ],
        "default_filters": [
          {
            "column": "Status",
            "op": "=",
            "value": "1"
          }
        ]
      }
    },
    {
      "name": "ErpBridgePostChecks",
      "source": "dbo.ErpBridgePostChecks",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ErrorCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of post-check error records (row count)."
        },
        {
          "name": "DistinctBatchCount",
          "expression": "COUNT(DISTINCT BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct BatchID values represented in this table."
        },
        {
          "name": "DistinctErrorTypeCount",
          "expression": "COUNT(DISTINCT ErrorType)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of distinct error types encountered."
        },
        {
          "name": "LatestErrorDate",
          "expression": "MAX(ErrorDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Timestamp of the most recent error recorded."
        },
        {
          "name": "EarliestErrorDate",
          "expression": "MIN(ErrorDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Timestamp of the earliest error recorded."
        },
        {
          "name": "ErrorsPerBatch_Avg",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT BatchID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of error records per batch (total errors divided by distinct batches)."
        },
        {
          "name": "AverageErrorAgeDays",
          "expression": "AVG(DATEDIFF(day, ErrorDate, GETUTCDATE()))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average age of the error records in days (difference between ErrorDate and current UTC date)."
        },
        {
          "name": "PercentOfTotal_ByGroup",
          "expression": "COUNT(*) * 1.0 / NULLIF(SUM(COUNT(*)) OVER (), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of total errors represented by the current grouping (use when grouping by ErrorType, EntityType or BatchID). Note: uses a window aggregation and requires a SQL engine that supports SUM(...) OVER()."
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchID",
          "references": "dbo.ErpBridgePostBatches.BatchID",
          "note": "Inferred relationship: BatchID likely links to a batches table that groups posted items. Original metadata did not include declared FKs."
        },
        {
          "column": "ErrorType",
          "references": "dbo.ErpBridgeErrorTypes.ErrorType",
          "note": "Suggested lookup for error type metadata (description, severity)."
        },
        {
          "column": "EntityType",
          "references": "dbo.ErpBridgeEntityTypes.EntityType",
          "note": "Suggested lookup for entity type definitions (e.g., YPSToEBSCustomerData, YPSToEBSContracts)."
        }
      ],
      "display": {
        "default_breakdowns": [
          "EntityType",
          "ErrorType",
          "BatchID",
          "ErrorDate"
        ],
        "default_filters": [
          {
            "column": "ErrorDate",
            "op": "relative_last",
            "value": "90 days",
            "description": "By default show the last 90 days of errors."
          }
        ],
        "notes": "Recommend adding UI-friendly labels for ErrorType and EntityType from suggested lookup tables. EntityData is XML and can be parsed into a related detail table for drill-through."
      }
    },
    {
      "name": "ERPSalesCollectionBridgeBuffer",
      "source": "dbo.ERPSalesCollectionBridgeBuffer",
      "grain": [
        "SystemReceiptID"
      ],
      "measures": [
        {
          "name": "TotalCollectionAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of payment amounts collected on receipts."
        },
        {
          "name": "ReceiptCount",
          "expression": "COUNT(SystemReceiptID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of receipts (rows) in the table."
        },
        {
          "name": "AverageCollectionAmount",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average amount per receipt."
        },
        {
          "name": "MinCollectionAmount",
          "expression": "MIN(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Minimum receipt amount."
        },
        {
          "name": "MaxCollectionAmount",
          "expression": "MAX(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Maximum receipt amount."
        },
        {
          "name": "CompletedAmount",
          "expression": "SUM(CASE WHEN Status = 'COMPLETED' THEN Amount ELSE 0 END)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total amount for receipts with status = COMPLETED."
        },
        {
          "name": "PayoffCount",
          "expression": "SUM(CASE WHEN IsPayoff = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of receipts marked as payoff (IsPayoff = 1)."
        },
        {
          "name": "PayoffRate",
          "expression": "SUM(CASE WHEN IsPayoff = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(SystemReceiptID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of receipts that are payoffs (PayoffCount / ReceiptCount)."
        },
        {
          "name": "BankDepositCount",
          "expression": "COUNT(BankDepositNumber)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of receipts with a bank deposit number (non-null BankDepositNumber)."
        },
        {
          "name": "DistinctCustomerCount",
          "expression": "COUNT(DISTINCT CustomerCode)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customers in the dataset (by CustomerCode)."
        }
      ],
      "foreign_keys": [
        {
          "column": "MainCustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "CustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "SalesManCode",
          "references": "DimEmployee.EmployeeCode"
        },
        {
          "column": "CollectorCode",
          "references": "DimCollector.CollectorId"
        },
        {
          "column": "ContractID",
          "references": "DimContract.ContractID"
        },
        {
          "column": "CompanyId",
          "references": "DimCompany.CompanyId"
        },
        {
          "column": "BankID",
          "references": "DimBank.BankId"
        },
        {
          "column": "PaymentChannel",
          "references": "DimPaymentChannel.PaymentChannelCode"
        },
        {
          "column": "CollectionDate",
          "references": "DimDate.Date"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CollectionDate",
          "MainCustomerCode",
          "PaymentChannel",
          "SalesManCode",
          "Status"
        ],
        "default_filters": [
          {
            "column": "Status",
            "op": "=",
            "value": "COMPLETED"
          },
          {
            "column": "CollectionDate",
            "op": ">=",
            "value": "2015-01-01"
          }
        ]
      }
    },
    {
      "name": "Customer Bridge Buffer (ErpCustomerBridgeBuffer)",
      "source": "dbo.ErpCustomerBridgeBuffer",
      "grain": [
        "CustomerID"
      ],
      "measures": [
        {
          "name": "Row Count",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of rows in the buffer (should equal number of customer records loaded)."
        },
        {
          "name": "Distinct Customers",
          "expression": "COUNT(DISTINCT CustomerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customers represented in the buffer."
        },
        {
          "name": "Active Customers",
          "expression": "SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of customers currently marked as active."
        },
        {
          "name": "Inactive Customers",
          "expression": "SUM(CASE WHEN IsActive = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of customers currently marked as inactive."
        },
        {
          "name": "Percent Active",
          "expression": "CASE WHEN COUNT(*) = 0 THEN 0 ELSE 1.0 * SUM(CASE WHEN IsActive = 1 THEN 1 ELSE 0 END) / COUNT(*) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of customers marked as active (Active Customers / Total Rows)."
        },
        {
          "name": "Customers with Alternative Code",
          "expression": "SUM(CASE WHEN AlternativeCode IS NOT NULL AND LTRIM(RTRIM(AlternativeCode)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of customers that have an alternative customer code populated."
        },
        {
          "name": "NoTaxVat Count",
          "expression": "SUM(CASE WHEN NoTaxVat = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of customers flagged as 'NoTaxVat'."
        },
        {
          "name": "KEPYOStatus = 1 Count",
          "expression": "SUM(CASE WHEN KEPYOStatus = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of customers where KEPYOStatus = 1 (special KEPYO flag)."
        },
        {
          "name": "Distinct Tax Offices",
          "expression": "COUNT(DISTINCT TaxOfficeCode)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct tax office codes represented by customers."
        },
        {
          "name": "Distinct Brand Names",
          "expression": "COUNT(DISTINCT BrandName)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of unique brand names associated with customers (null/empty excluded by DISTINCT semantics)."
        },
        {
          "name": "Last Modified (Max)",
          "expression": "MAX(LastModifiedDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent LastModifiedDate across all customer rows (indicates freshest record)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CustomerID",
          "references": "DimCustomer.CustomerID"
        },
        {
          "column": "CompanyId",
          "references": "DimCompany.CompanyId"
        },
        {
          "column": "TaxOfficeCode",
          "references": "DimTaxOffice.TaxOfficeCode"
        }
      ],
      "display": {
        "default_breakdowns": [
          "IsActive",
          "CompanyId",
          "TaxOfficeCode",
          "LastModifiedDate.Year",
          "BrandName",
          "LegalForm"
        ],
        "default_filters": [
          {
            "column": "CompanyId",
            "op": "=",
            "value": "1"
          },
          {
            "column": "IsActive",
            "op": "=",
            "value": "True"
          }
        ]
      }
    },
    {
      "name": "ErpCustomerAddressBridgeBuffer",
      "source": "dbo.ErpCustomerAddressBridgeBuffer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "AddressRows",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of address bridge records (rows) in the selected scope."
        },
        {
          "name": "UniqueAddresses",
          "expression": "COUNT(DISTINCT AddressID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct addresses (AddressID) represented in the buffer."
        },
        {
          "name": "UniqueCustomers",
          "expression": "COUNT(DISTINCT CustomerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customers referenced by CustomerID in this buffer."
        },
        {
          "name": "InvoiceEmailAvailability",
          "expression": "AVG(CASE WHEN InvoiceEmail IS NOT NULL THEN 1.0 ELSE 0.0 END)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of address rows that contain a non-null InvoiceEmail (useful to understand electronic invoice coverage)."
        },
        {
          "name": "Phone2Availability",
          "expression": "AVG(CASE WHEN Phone2 IS NOT NULL THEN 1.0 ELSE 0.0 END)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of address rows that include a secondary phone number (Phone2)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CustomerID",
          "references": "Customer.CustomerID"
        },
        {
          "column": "MainCustomerID",
          "references": "Customer.CustomerID"
        },
        {
          "column": "AddressID",
          "references": "Address.AddressID"
        },
        {
          "column": "ContactCode",
          "references": "Contact.ContactCode"
        },
        {
          "column": "CategoryId",
          "references": "Category.CategoryId"
        },
        {
          "column": "ScoreId",
          "references": "Score.ScoreId"
        },
        {
          "column": "LastModifiedDate",
          "references": "Date.CalendarDate"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Customer.CustomerCode",
          "City",
          "PostalCode",
          "AddressType",
          "LastModifiedDate.Year"
        ],
        "default_filters": [
          {
            "column": "Country",
            "op": "=",
            "value": "Ελλάδα"
          }
        ],
        "use_cases": [
          "Address completeness and contact-channel readiness (email/phone) by city and customer",
          "Counts of unique customers and addresses for dimension population",
          "Monitoring recently modified addresses via LastModifiedDate"
        ]
      }
    },
    {
      "name": "ErpCustomerContractBridgeBuffer",
      "source": "dbo.ErpCustomerContractBridgeBuffer",
      "grain": [
        "ContractID"
      ],
      "measures": [
        {
          "name": "ContractCount",
          "expression": "COUNT(ContractID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contract rows (count of ContractID) in the current filter context."
        },
        {
          "name": "DistinctBillingCustomers",
          "expression": "COUNT(DISTINCT MainCustomerBillingID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct main billing customers referenced by these contracts."
        },
        {
          "name": "ActiveContractCount",
          "expression": "SUM(CASE WHEN Status = N'ΕΝΕΡΓΗ' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of contracts whose Status indicates active (Status = 'ΕΝΕΡΓΗ'). Adjust condition if other status values represent active contracts."
        },
        {
          "name": "ContractAlteredAmount_Sum",
          "expression": "SUM(ContractAlteredAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of ContractAlteredAmount across contracts (nullable). Source column has a currency hint of USD."
        },
        {
          "name": "ContractAlteredAmount_Avg",
          "expression": "AVG(ContractAlteredAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average ContractAlteredAmount for contracts with a non-null altered amount."
        },
        {
          "name": "ContractAlteredAmount_NonNullCount",
          "expression": "COUNT(ContractAlteredAmount)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contracts with a non-null ContractAlteredAmount."
        },
        {
          "name": "DistinctRelatedTickets",
          "expression": "COUNT(DISTINCT RelatedTicket)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of distinct related ticket ids referenced by these contracts (excludes nulls)."
        },
        {
          "name": "ShippingAddress_PresentCount",
          "expression": "SUM(CASE WHEN ShippingAddressID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contracts that have a shipping address associated."
        },
        {
          "name": "AvgDaysBetweenSignedAndModified",
          "expression": "AVG(DATEDIFF(day, SignedDate, LastModifiedDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Average number of days between SignedDate and LastModifiedDate. SignedDate and LastModifiedDate should both be populated for meaningful values."
        },
        {
          "name": "FirstCreatedDate",
          "expression": "MIN(CreatedDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest CreatedDate in the filtered set."
        },
        {
          "name": "LastModifiedDate_Max",
          "expression": "MAX(LastModifiedDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent LastModifiedDate in the filtered set."
        }
      ],
      "foreign_keys": [
        {
          "column": "CompanyID",
          "references": "Company.CompanyID"
        },
        {
          "column": "MainCustomerBillingID",
          "references": "Customer.CustomerID"
        },
        {
          "column": "CustomerBillingID",
          "references": "Customer.CustomerID"
        },
        {
          "column": "MainCustomerBillingCode",
          "references": "Customer.CustomerCode"
        },
        {
          "column": "CustomerBillingCode",
          "references": "Customer.CustomerCode"
        },
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "SalesmanCode",
          "references": "Salesman.SalesmanCode"
        },
        {
          "column": "SalesChannelId",
          "references": "SalesChannel.SalesChannelId"
        },
        {
          "column": "ShippingAddressID",
          "references": "Address.AddressID"
        },
        {
          "column": "SignedDate",
          "references": "Date.Date"
        },
        {
          "column": "CreatedDate",
          "references": "Date.Date"
        },
        {
          "column": "LastModifiedDate",
          "references": "Date.Date"
        }
      ],
      "display": {
        "default_breakdowns": [
          "MainCustomerBillingCode",
          "CustomerBillingCode",
          "Status",
          "SalesmanCode",
          "CampaignID",
          "SalesChannelId",
          "SignedDate.Year"
        ],
        "default_filters": [
          {
            "column": "CompanyID",
            "op": "=",
            "value": "1"
          },
          {
            "column": "SignedDate",
            "op": ">=",
            "value": "2011-01-01"
          }
        ]
      }
    },
    {
      "name": "ErpCustomerContractLinesBridgeBuffer",
      "source": "dbo.ErpCustomerContractLinesBridgeBuffer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "LineCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of contract-line buffer rows (row count)."
        },
        {
          "name": "NetAmount",
          "expression": "SUM(NetAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total net amount for the contract line rows as recorded in the bridge buffer."
        },
        {
          "name": "AdvancedPayment",
          "expression": "SUM(AdvancedPayment)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total advanced payments recorded against these contract lines."
        },
        {
          "name": "AlteredAmount",
          "expression": "SUM(AlteredAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of altered amounts (adjustments) for the lines. Mostly null in source but kept for completeness."
        },
        {
          "name": "TotalInvoiceQuantity",
          "expression": "SUM(InvoiceQuantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of invoices (quantity) associated with these contract lines."
        },
        {
          "name": "AverageInstallmentsPerInvoice",
          "expression": "AVG(CAST(InstallmentsPerInvoice AS FLOAT))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of installments per invoice across the selected contract lines."
        },
        {
          "name": "AverageNetPerInvoice",
          "expression": "CASE WHEN SUM(InvoiceQuantity) = 0 THEN NULL ELSE SUM(NetAmount) / NULLIF(SUM(InvoiceQuantity),0) END",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average net amount per invoice = SUM(NetAmount) / SUM(InvoiceQuantity). Returns null if invoice quantity is zero."
        },
        {
          "name": "AverageContractDurationDays",
          "expression": "AVG(CAST(DATEDIFF(day, StartDate, EndDate) AS FLOAT))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average duration in days between StartDate and EndDate for these contract lines. Null EndDate rows are excluded by DATEDIFF."
        },
        {
          "name": "RenewableCount",
          "expression": "SUM(CASE WHEN IsRenewable = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of contract lines flagged as renewable."
        }
      ],
      "foreign_keys": [
        {
          "column": "ContractID",
          "references": "Contract.ContractID"
        },
        {
          "column": "AdvertisementID",
          "references": "Advertisement.AdvertisementID"
        },
        {
          "column": "ParentAdvertisementID",
          "references": "Advertisement.AdvertisementID"
        },
        {
          "column": "UdacID",
          "references": "Udac.UdacID"
        },
        {
          "column": "MediumID",
          "references": "Medium.MediumID"
        }
      ],
      "display": {
        "default_measure": "NetAmount",
        "default_time_dimension": "StartDate",
        "default_breakdowns": [
          "UdacCode",
          "MediumID",
          "Status",
          "StartDate.Year",
          "ContractID"
        ],
        "default_filters": [
          {
            "column": "NetAmount",
            "op": ">=",
            "value": "0"
          },
          {
            "column": "StartDate",
            "op": "is not null",
            "value": ""
          }
        ],
        "description": "Bridge buffer containing per-line contract information and monetary values (NetAmount, AdvancedPayment, AlteredAmount). Use StartDate as the primary time dimension for trend analyses."
      }
    },
    {
      "name": "ERPSalesCollectionBridgeBuffer",
      "source": "dbo.ERPSalesCollectionBridgeBuffer",
      "grain": [
        "SystemReceiptID"
      ],
      "measures": [
        {
          "name": "ReceiptCount",
          "expression": "COUNT(SystemReceiptID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of receipts (rows) in the buffer"
        },
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of collected amounts on receipts (currency assumed EUR). Field Amount is the recorded collection amount."
        },
        {
          "name": "AverageAmountPerReceipt",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average amount per receipt"
        },
        {
          "name": "DistinctCustomers",
          "expression": "COUNT(DISTINCT CustomerCode)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customer codes represented in the receipts"
        },
        {
          "name": "AverageAmountPerCustomer",
          "expression": "SUM(Amount) / NULLIF(COUNT(DISTINCT CustomerCode), 0)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average total collected amount per customer (total amount divided by distinct customers)"
        },
        {
          "name": "PayoffCount",
          "expression": "SUM(IsPayoff)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of receipts marked as payoff (IsPayoff = 1). IsPayoff is stored as integer 0/1."
        },
        {
          "name": "PayoffRate",
          "expression": "SUM(IsPayoff) / NULLIF(COUNT(SystemReceiptID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of receipts that are payoffs (PayoffCount divided by total receipts)"
        },
        {
          "name": "CashAmount",
          "expression": "SUM(CASE WHEN PaymentChannel = N'ΜΕΤΡΗΤΑ' THEN Amount ELSE 0 END)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of amounts where PaymentChannel indicates cash (Greek 'ΜΕΤΡΗΤΑ'). Adjust string if other cash labels exist."
        },
        {
          "name": "CreditCardPaymentCount",
          "expression": "SUM(CASE WHEN CreditCardTypeID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of receipts that have a credit card type specified (indicates a card payment). Many rows are null in this column."
        },
        {
          "name": "CheckPaymentCount",
          "expression": "SUM(CASE WHEN CheckNumber IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of receipts that include a check number (indicates a check payment)."
        },
        {
          "name": "BankDepositCount",
          "expression": "SUM(CASE WHEN BankDepositDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of receipts that have a recorded bank deposit date"
        }
      ],
      "foreign_keys": [
        {
          "column": "CustomerCode",
          "references": "Customer.CustomerCode"
        },
        {
          "column": "MainCustomerCode",
          "references": "Customer.CustomerCode"
        },
        {
          "column": "SalesManCode",
          "references": "SalesPerson.SalesManCode"
        },
        {
          "column": "CollectorCode",
          "references": "Collector.CollectorCode"
        },
        {
          "column": "ContractID",
          "references": "Contract.ContractID"
        },
        {
          "column": "CompanyId",
          "references": "Company.CompanyId"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CollectionDate",
          "CustomerCode",
          "PaymentChannel",
          "SalesManCode",
          "Status"
        ],
        "default_filters": [
          {
            "column": "Status",
            "op": "=",
            "value": "COMPLETED"
          },
          {
            "column": "CompanyId",
            "op": "=",
            "value": "1"
          }
        ],
        "notes": "CollectionDate is the recommended date dimension for time series. PaymentChannel values are in Greek (e.g. 'ΜΕΤΡΗΤΑ' for cash). Many card/check related fields are sparsely populated."
      }
    },
    {
      "name": "YPSToEBSSalesCollection",
      "source": "dbo.YPSToEBSSalesCollection",
      "grain": [
        "SystemReceiptID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of all collection amounts recorded on receipts."
        },
        {
          "name": "ReceiptCount",
          "expression": "COUNT(SystemReceiptID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of receipts (rows) in the collection set."
        },
        {
          "name": "DistinctCustomerCount",
          "expression": "COUNT(DISTINCT MainCustomerCode)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customers (by MainCustomerCode) represented in the collection."
        },
        {
          "name": "AverageAmountPerReceipt",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average collected amount per receipt."
        },
        {
          "name": "CompletedAmount",
          "expression": "SUM(CASE WHEN Status = 'COMPLETED' THEN Amount ELSE 0 END)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total amount for receipts with status = COMPLETED."
        },
        {
          "name": "PayoffCount",
          "expression": "SUM(CASE WHEN IsPayoff = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of receipts marked as payoff (IsPayoff = 1)."
        },
        {
          "name": "PayoffRate",
          "expression": "100.0 * SUM(CASE WHEN IsPayoff = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(SystemReceiptID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of receipts that are payoffs, expressed as a percentage of total receipts."
        },
        {
          "name": "BankDepositCount",
          "expression": "SUM(CASE WHEN BankDepositDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of receipts that have an associated bank deposit date (indicating deposit recorded)."
        },
        {
          "name": "CashAmount",
          "expression": "SUM(CASE WHEN PaymentChannel LIKE '%ΜΕΤΡΗΤΑ%' THEN Amount ELSE 0 END)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total amount collected via cash payments (PaymentChannel contains the Greek term for cash)."
        }
      ],
      "foreign_keys": [
        {
          "column": "MainCustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "CustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "SalesManCode",
          "references": "DimEmployee.EmployeeCode"
        },
        {
          "column": "ContractID",
          "references": "DimContract.ContractID"
        },
        {
          "column": "CompanyId",
          "references": "DimCompany.CompanyId"
        },
        {
          "column": "CreatedOn",
          "references": "DimDate.DateTime"
        },
        {
          "column": "CollectionDate",
          "references": "DimDate.Date"
        },
        {
          "column": "PaymentChannel",
          "references": "DimPaymentChannel.ChannelCode"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CollectionDate",
          "MainCustomerCode",
          "PaymentChannel",
          "SalesManCode"
        ],
        "default_filters": [
          {
            "column": "Status",
            "op": "=",
            "value": "COMPLETED"
          }
        ],
        "recommended_time_dimension": "CollectionDate",
        "notes": "Use SystemReceiptID as the row grain. Amount-based measures assume EUR; confirm if another currency applies. PaymentChannel contains Greek values (e.g., ΜΕΤΡΗΤΑ for cash)."
      }
    },
    {
      "name": "YPSToEBSSalesPerson",
      "source": "dbo.YPSToEBSSalesPerson (view)",
      "grain": [
        "Code"
      ],
      "measures": [
        {
          "name": "SalesPersonRowCount",
          "expression": "COUNT_BIG(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of rows in the result set (useful for paging/validation). At the table grain this equals number of salesperson records."
        },
        {
          "name": "DistinctSalesPersonCodeCount",
          "expression": "COUNT_BIG(DISTINCT Code)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct salesperson codes. Should match SalesPersonRowCount when Code is unique."
        },
        {
          "name": "ActiveSalesPersonCount",
          "expression": "SUM(CAST(IsActive AS INT))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of active salespeople (IsActive = 1)."
        },
        {
          "name": "InactiveSalesPersonCount",
          "expression": "COUNT_BIG(*) - SUM(CAST(IsActive AS INT))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of inactive salespeople (IsActive = 0)."
        },
        {
          "name": "ActiveRate",
          "expression": "CASE WHEN COUNT_BIG(*) = 0 THEN NULL ELSE 1.0 * SUM(CAST(IsActive AS INT)) / COUNT_BIG(*) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of salespeople that are active (ActiveSalesPersonCount / total)."
        },
        {
          "name": "DistinctFullNameCount",
          "expression": "COUNT_BIG(DISTINCT FullName)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct FullName values — useful for detecting duplicate or multi-valued name entries."
        },
        {
          "name": "LatestModifiedDate",
          "expression": "MAX(LastModifiedDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent LastModifiedDate across the filtered set; useful for freshness checks."
        },
        {
          "name": "EarliestModifiedDate",
          "expression": "MIN(LastModifiedDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest LastModifiedDate in the set; useful for historical range checking."
        }
      ],
      "foreign_keys": [
        {
          "column": "Code",
          "references": "DimSalesPerson.SalesPersonCode",
          "description": "Suggested join to canonical salesperson dimension on Code. The view contains a mapping from YPS code to EBS salesperson; link to the dimension that holds stable salesperson attributes."
        }
      ],
      "display": {
        "default_breakdowns": [
          "IsActive",
          "LastModifiedDate.Year",
          "LastModifiedDate.Month"
        ],
        "default_filters": [
          {
            "column": "IsActive",
            "op": "=",
            "value": "True",
            "description": "Show active salespeople by default."
          }
        ],
        "recommended_sort": {
          "column": "LastModifiedDate",
          "direction": "desc"
        }
      }
    },
    {
      "name": "YPSToEBSPostChecks",
      "source": "dbo.YPSToEBSPostChecks",
      "grain": [
        "EntityType",
        "ErrorType",
        "EntityDataHash"
      ],
      "measures": [
        {
          "name": "PostCheckCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of post-check records (rows) reported by the YPS -> EBS post-check process."
        },
        {
          "name": "DistinctErrorTypeCount",
          "expression": "COUNT(DISTINCT ErrorType)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct error types observed in the result set (per the applied breakdowns/filters)."
        },
        {
          "name": "DistinctEntitiesAffected",
          "expression": "COUNT(DISTINCT HASHBYTES('SHA1', CONCAT(EntityType, '|', ISNULL(CAST(EntityData AS NVARCHAR(MAX)),''))))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct entities affected by post-checks. Computed by hashing EntityType together with EntityData to identify unique entity instances."
        },
        {
          "name": "EntityDataPresentPercent",
          "expression": "SUM(CASE WHEN EntityData IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percent of post-check rows that include non-null EntityData (indicates how often the check result contains attached XML payload)."
        },
        {
          "name": "ErrorShareWithinEntityType",
          "expression": "COUNT(*) * 1.0 / NULLIF(SUM(COUNT(*)) OVER (PARTITION BY EntityType),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of this error (or selection) among all post-checks for the same EntityType. Useful to see which errors dominate per entity category."
        }
      ],
      "foreign_keys": [
        {
          "column": "EntityType",
          "references": "DimEntityType.EntityType"
        },
        {
          "column": "ErrorType",
          "references": "DimPostCheckError.ErrorType"
        }
      ],
      "display": {
        "default_breakdowns": [
          "EntityType",
          "ErrorType",
          "ErrorDescr"
        ],
        "default_filters": [
          {
            "column": "ErrorType",
            "op": "IS NOT",
            "value": "NULL"
          },
          {
            "column": "EntityType",
            "op": "IN",
            "value": [
              "YPSToEBSCustomerData",
              "YPSToEBSContracts"
            ]
          }
        ]
      }
    },
    {
      "name": "TimeLogger",
      "source": "dbo.TimeLogger",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "EventCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of logged events (rows) in the TimeLogger table"
        },
        {
          "name": "TotalRowsProcessed",
          "expression": "SUM(RowCountVal)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of RowCountVal: total rows processed/reported by the logged events"
        },
        {
          "name": "AverageRowsPerEvent",
          "expression": "AVG(RowCountVal)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average RowCountVal per logged event"
        },
        {
          "name": "TotalDataBytes",
          "expression": "SUM(DataSize)",
          "unit": "bytes",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total DataSize in bytes associated with the logged events"
        },
        {
          "name": "AverageDataBytesPerEvent",
          "expression": "AVG(DataSize)",
          "unit": "bytes",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average DataSize (bytes) per logged event"
        },
        {
          "name": "TotalDataMB",
          "expression": "SUM(DataSize) / 1024.0 / 1024.0",
          "unit": "MB",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Total DataSize converted to megabytes (MB)"
        },
        {
          "name": "TotalLogBytes",
          "expression": "SUM(LogSize)",
          "unit": "bytes",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total LogSize in bytes associated with the logged events"
        },
        {
          "name": "DistinctEventGroupCount",
          "expression": "COUNT(DISTINCT EventGroup)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct EventGroup identifiers seen in the selected data"
        },
        {
          "name": "EarliestEventDate",
          "expression": "MIN(EventDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest EventDate in the result set"
        },
        {
          "name": "LatestEventDate",
          "expression": "MAX(EventDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Latest EventDate in the result set"
        }
      ],
      "foreign_keys": [],
      "display": {
        "default_breakdowns": [
          "EventGroup",
          "EventDate.Year",
          "EventDate.Month",
          "Descr"
        ],
        "default_filters": []
      }
    },
    {
      "name": "FactTimeLoggerArchive",
      "source": "dbo.TimeLoggerArchive",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "BatchCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of archive batches (rows) in the result set"
        },
        {
          "name": "UniqueEventGroupCount",
          "expression": "COUNT(DISTINCT EventGroup)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct EventGroup identifiers represented"
        },
        {
          "name": "ArchivedEventRows",
          "expression": "SUM(Recs)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of event rows archived across all batches (uses Recs field which represents archived row count per batch)"
        },
        {
          "name": "AvgRowsPerBatch",
          "expression": "AVG(Recs)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of archived event rows per batch"
        },
        {
          "name": "MinRowsPerBatch",
          "expression": "MIN(Recs)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Minimum archived rows observed in a single batch"
        },
        {
          "name": "MaxRowsPerBatch",
          "expression": "MAX(Recs)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum archived rows observed in a single batch"
        },
        {
          "name": "TotalIDSpan",
          "expression": "SUM(CASE WHEN EndID >= StartID THEN EndID - StartID + 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of ID spans per batch (inclusive span computed from StartID and EndID). Useful to detect gaps/overlaps vs Recs."
        },
        {
          "name": "TotalXmlPayloadBytes",
          "expression": "SUM(DATALENGTH(XmlData))",
          "unit": "bytes",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total size in bytes of the XmlData payload across selected batches (uses SQL Server DATALENGTH on the XML column)"
        },
        {
          "name": "AvgXmlPayloadBytes",
          "expression": "AVG(DATALENGTH(XmlData))",
          "unit": "bytes",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average size in bytes of the XmlData payload per batch"
        },
        {
          "name": "FirstEventDate",
          "expression": "MIN(EventDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest EventDate among the selected archive batches"
        },
        {
          "name": "LastEventDate",
          "expression": "MAX(EventDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Latest EventDate among the selected archive batches"
        }
      ],
      "foreign_keys": [],
      "display": {
        "default_breakdowns": [
          "EventDate",
          "Descr",
          "EventGroup"
        ],
        "default_filters": [
          {
            "column": "EventDate",
            "op": ">=",
            "value": "2012-01-01"
          }
        ]
      }
    },
    {
      "name": "BatchActionHistoryAnalysis",
      "source": "dbo.BatchActionHistoryAnalysis",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of records (rows) in the selection"
        },
        {
          "name": "DistinctEntityCount",
          "expression": "COUNT(DISTINCT EntityID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct EntityID values represented"
        },
        {
          "name": "DistinctBatchCount",
          "expression": "COUNT(DISTINCT BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct batches represented"
        },
        {
          "name": "DistinctActionTypeCount",
          "expression": "COUNT(DISTINCT Type)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct action types (Type) in the selection"
        },
        {
          "name": "RowsPerBatch_Avg",
          "expression": "COUNT(ID) / NULLIF(COUNT(DISTINCT BatchID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of rows per batch (total rows divided by number of distinct batches)"
        },
        {
          "name": "RowsPerEntity_Avg",
          "expression": "COUNT(ID) / NULLIF(COUNT(DISTINCT EntityID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average number of records per entity (how many actions/rows each EntityID has on average)"
        },
        {
          "name": "NullEntityDataCount",
          "expression": "SUM(CASE WHEN EntityData IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of rows where EntityData is null"
        },
        {
          "name": "EntityDataPresentCount",
          "expression": "SUM(CASE WHEN EntityData IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of rows where EntityData contains a non-null value"
        },
        {
          "name": "DistinctEntitiesPerRecord_Ratio",
          "expression": "COUNT(DISTINCT EntityID) / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Ratio of distinct entities to total records (higher values indicate fewer duplicate EntityID occurrences)"
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchID",
          "references": "Batch.BatchID"
        },
        {
          "column": "EntityID",
          "references": "Entity.EntityID"
        },
        {
          "column": "EntityType",
          "references": "RefEntityType.EntityTypeID"
        },
        {
          "column": "Type",
          "references": "ActionType.TypeID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BatchID",
          "Type",
          "EntityType",
          "EntityID"
        ],
        "default_filters": [
          {
            "column": "EntityData",
            "op": "is not",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "TaskLog",
      "source": "dbo.TaskLog",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "LogEntryCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of log entries (rows) in TaskLog for the current filter/aggregation."
        },
        {
          "name": "DistinctTaskCount",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct TaskIDs referenced by these log entries."
        },
        {
          "name": "OutcomeCount",
          "expression": "COUNT(Outcome)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of log entries that have a non-null Outcome value."
        },
        {
          "name": "MissingOutcomeCount",
          "expression": "COUNT(ID) - COUNT(Outcome)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of log entries where Outcome is null."
        },
        {
          "name": "OutcomeRate",
          "expression": "COUNT(Outcome) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of log entries that include a non-null Outcome."
        },
        {
          "name": "AvgLogsPerTask",
          "expression": "COUNT(ID) * 1.0 / NULLIF(COUNT(DISTINCT TaskID), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of log entries per distinct Task within the current aggregation."
        },
        {
          "name": "MinTimestamp",
          "expression": "MIN(Timestamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest Timestamp value in the current aggregation of log entries."
        },
        {
          "name": "MaxTimestamp",
          "expression": "MAX(Timestamp)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Latest Timestamp value in the current aggregation of log entries."
        },
        {
          "name": "AvgTextLength",
          "expression": "AVG(LEN(Text))",
          "unit": "characters",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average length (in characters) of the Text field for log entries. Null Text values are excluded from the average."
        },
        {
          "name": "DistinctOutcomeCount",
          "expression": "COUNT(DISTINCT Outcome)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct Outcome values observed in the aggregation (null excluded)."
        },
        {
          "name": "OutcomeDateCount",
          "expression": "COUNT(OutcomeDate)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of log entries with a non-null OutcomeDate."
        }
      ],
      "foreign_keys": [
        {
          "column": "TaskID",
          "references": "dbo.Task.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskID",
          "Outcome",
          "Timestamp.Year",
          "Timestamp.Month"
        ],
        "default_filters": [
          {
            "column": "Timestamp",
            "op": ">=",
            "value": "2024-01-01"
          }
        ],
        "default_sort": {
          "column": "MaxTimestamp",
          "direction": "desc"
        },
        "notes": "DMKey / DMTable / DMCharKey are present but sparsely populated; use DMTable values (when available) to determine dynamic dimension references."
      }
    },
    {
      "name": "Campaign Pivot Fact",
      "source": "dbo.CampaignPivotReport",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Number of Cases",
          "expression": "SUM(NumberOfCases)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total recorded cases for the campaign pivot rows."
        },
        {
          "name": "Loss Quantity",
          "expression": "SUM(LossQuantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total quantity lost across the aggregated pivot rows."
        },
        {
          "name": "New Quantity",
          "expression": "SUM(NewQuantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total newly acquired quantity across the aggregated pivot rows."
        },
        {
          "name": "CO Quantity",
          "expression": "SUM(COQuantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total CO (carry-over / cross-order) quantity across the aggregated pivot rows."
        },
        {
          "name": "Total Quantity (sum of components)",
          "expression": "SUM(NumberOfCases) + SUM(LossQuantity) + SUM(NewQuantity) + SUM(COQuantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Aggregate total of all quantity-related columns in the pivot (useful for high-level quantity analysis)."
        },
        {
          "name": "Net Change (New - Loss)",
          "expression": "SUM(NewQuantity) - SUM(LossQuantity)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Net quantity change: new quantity minus lost quantity."
        },
        {
          "name": "Average Loss Quantity Percentage",
          "expression": "AVG(LossQuantityPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average of the row-level loss quantity percentages. Use a weighted calculation externally if you need a quantity-weighted rate."
        },
        {
          "name": "Average New Quantity Percentage",
          "expression": "AVG(NewQuantityPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average of the row-level new quantity percentages. Use a weighted calculation externally if you need a quantity-weighted rate."
        },
        {
          "name": "Average CO Quantity Percentage",
          "expression": "AVG(COQuantityPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average of the row-level CO quantity percentages."
        },
        {
          "name": "Contract Amount",
          "expression": "SUM(ContractAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of contract amounts associated with the pivot rows (source values may be null if not available)."
        },
        {
          "name": "Subscription Amount",
          "expression": "SUM(SubscriptionAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of subscription-related amounts for the pivot rows."
        },
        {
          "name": "Renewal Amount",
          "expression": "SUM(RenewalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of renewal-related amounts for the pivot rows."
        },
        {
          "name": "Non-Subscription Amount",
          "expression": "SUM(NonSubscriptionAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of non-subscription amounts for the pivot rows."
        },
        {
          "name": "Total Amount",
          "expression": "SUM(ContractAmount) + SUM(SubscriptionAmount) + SUM(RenewalAmount) + SUM(NonSubscriptionAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary amount across all amount categories for the aggregated pivot rows."
        },
        {
          "name": "Subscription Share of Total Amount",
          "expression": "SUM(SubscriptionAmount) / NULLIF(SUM(ContractAmount) + SUM(SubscriptionAmount) + SUM(RenewalAmount) + SUM(NonSubscriptionAmount), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of subscription amount relative to the total amount. Returns NULL if total amount is zero."
        },
        {
          "name": "Average Subscription Amount Percentage (row-level)",
          "expression": "AVG(SubscriptionAmountPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average of row-level subscription amount percentage values. Use the 'Subscription Share of Total Amount' measure for an aggregate-weighted share."
        },
        {
          "name": "Average Renewal Amount Percentage (row-level)",
          "expression": "AVG(RenewalAmountPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average of row-level renewal amount percentage values."
        },
        {
          "name": "Average Non-Subscription Amount Percentage (row-level)",
          "expression": "AVG(NonSubscriptionAmountPercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average of row-level non-subscription amount percentage values."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.DimCampaign.CampaignID"
        },
        {
          "column": "CampaignSegmentID",
          "references": "dbo.DimCampaignSegment.CampaignSegmentID"
        },
        {
          "column": "CampaignChannelTypeID",
          "references": "dbo.DimChannelType.ChannelTypeID"
        },
        {
          "column": "CampaignGroupID",
          "references": "dbo.DimCampaignGroup.CampaignGroupID"
        },
        {
          "column": "CampaignSupervisorID",
          "references": "dbo.DimEmployee.EmployeeID"
        },
        {
          "column": "CampaignSalesmanID",
          "references": "dbo.DimEmployee.EmployeeID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "CampaignSegmentID",
          "CampaignChannelTypeID",
          "CampaignGroupID",
          "CampaignSupervisorID",
          "CampaignSalesmanID",
          "PivotType"
        ],
        "default_filters": [
          {
            "column": "PivotType",
            "op": "=",
            "value": "1"
          }
        ]
      }
    },
    {
      "name": "CampaignScoreHistoryDetail",
      "source": "dbo.CampaignScoreHistoryDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Row Count",
          "expression": "COUNT(1)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of detail rows (records) in the fact table"
        },
        {
          "name": "Average Total Score",
          "expression": "AVG(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the composite score (ScoreTotal) across the selected rows"
        },
        {
          "name": "Average Main Activity Score",
          "expression": "AVG(ScoreMainActivity)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the main activity component of the score"
        },
        {
          "name": "Average Seniority Score",
          "expression": "AVG(ScoreSeniority)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the seniority component of the score"
        },
        {
          "name": "Average Value / Billing Range Score",
          "expression": "AVG(ScoreValueBillingRange)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the value / billing range component of the score"
        },
        {
          "name": "Average Combination (Medium) Score",
          "expression": "AVG(ScoreCombinationMedium)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the medium combination component of the score"
        },
        {
          "name": "Average Combination (Product) Score",
          "expression": "AVG(ScoreCombinationProduct)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the product combination component of the score"
        },
        {
          "name": "Average Customer Behavior Score",
          "expression": "AVG(ScoreCustomerBehavior)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the customer behavior component of the score"
        },
        {
          "name": "Average Salesman Management Score",
          "expression": "AVG(ScoreSalesmanManagement)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of the salesman management component of the score"
        },
        {
          "name": "Average Score Difference To Avg",
          "expression": "AVG(ScoreDifferenceToAvg)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(3)",
          "description": "Average difference between this bucket's score and the campaign average (can be negative)"
        },
        {
          "name": "Sum Targeting Amount (Calculated)",
          "expression": "SUM(TargetingAmountCalculated)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of calculated targeting amounts (monetary). Nulls are ignored."
        },
        {
          "name": "Sum Targeting Amount (By User)",
          "expression": "SUM(TargetingAmountByUser)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of targeting amounts set by users; many rows may be null if user didn't override calculated value"
        },
        {
          "name": "Sum Total Amount",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total planned/assigned monetary amount across channels for the bucket"
        },
        {
          "name": "Sum XO.GR Amount",
          "expression": "SUM(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of XO.gr channel amounts"
        },
        {
          "name": "Sum Print Amount",
          "expression": "SUM(PrintAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of print channel amounts (sparse / mostly null)"
        },
        {
          "name": "Sum PPC Amount",
          "expression": "SUM(PPCAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of PPC channel amounts (sparse / mostly null)"
        },
        {
          "name": "Sum Website Amount",
          "expression": "SUM(WebSiteAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of website channel amounts (sparse / mostly null)"
        },
        {
          "name": "Distinct Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct business points represented in the result set"
        },
        {
          "name": "Buckets in Bucket Group",
          "expression": "COUNT(1)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of rows; commonly used with BucketGroup as a breakdown"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignScoreHistoryID",
          "references": "dbo.CampaignScoreHistory.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "NewSalesmanID",
          "references": "dbo.Employee.ID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.Segment.ID"
        },
        {
          "column": "FileID",
          "references": "dbo.File.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BucketGroup",
          "CampaignID",
          "BusinessPointName",
          "NewSalesmanName",
          "SegmentDescription",
          "MainActivity",
          "ProductMixture"
        ],
        "default_filters": [
          {
            "column": "ScoreTotal",
            "op": ">",
            "value": "0"
          },
          {
            "column": "ItemStatus",
            "op": "=",
            "value": "1"
          }
        ]
      }
    },
    {
      "name": "CampaignScoreAvgROCOHistory",
      "source": "dbo.CampaignScoreAvgROCOHistory",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows in the fact (records of historical campaign/segment scores)"
        },
        {
          "name": "DistinctCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns represented in the filtered set"
        },
        {
          "name": "DistinctSegments",
          "expression": "COUNT(DISTINCT SegmentID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct segments represented in the filtered set"
        },
        {
          "name": "TotalScore_Sum",
          "expression": "SUM(TotalScore)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of TotalScore (monetary) across rows. Note: TotalScore contains many nulls; NULLs are ignored in the sum."
        },
        {
          "name": "TotalScore_Average",
          "expression": "AVG(TotalScore)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average TotalScore (USD) across rows where a score exists"
        },
        {
          "name": "NumberOfRecords_Sum",
          "expression": "SUM(NumberOfRecords)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total of NumberOfRecords across rows (sum of underlying record counts). NULLs are ignored."
        },
        {
          "name": "AvgScore_Mean",
          "expression": "AVG(AvgScore)",
          "unit": "score",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Mean of AvgScore values across rows (average of segment-level scores)"
        },
        {
          "name": "AvgScore_Min",
          "expression": "MIN(AvgScore)",
          "unit": "score",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Minimum AvgScore observed"
        },
        {
          "name": "AvgScore_Max",
          "expression": "MAX(AvgScore)",
          "unit": "score",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Maximum AvgScore observed"
        },
        {
          "name": "XOGR_ROCO_Average",
          "expression": "AVG(XOGR_ROCO)",
          "unit": "ratio",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Average XOGR ROCO value across rows (ROCO metric for XOGR channel)."
        },
        {
          "name": "PPC_ROCO_Average",
          "expression": "AVG(PPC_ROCO)",
          "unit": "ratio",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Average PPC ROCO value across rows (ROCO metric for PPC channel)."
        },
        {
          "name": "Print_ROCO_Average",
          "expression": "AVG(Print_ROCO)",
          "unit": "ratio",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Average Print ROCO value across rows (ROCO metric for Print channel)."
        },
        {
          "name": "XOGR_ROCO_User_Average",
          "expression": "AVG(XOGR_ROCO_User)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average XOGR ROCO as reported by users (percentage scale). NULLs ignored."
        },
        {
          "name": "PPC_ROCO_User_Average",
          "expression": "AVG(PPC_ROCO_User)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average PPC ROCO as reported by users (percentage scale). NULLs ignored."
        },
        {
          "name": "Print_ROCO_User_Average",
          "expression": "AVG(Print_ROCO_User)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average Print ROCO as reported by users (percentage scale). NULLs ignored."
        }
      ],
      "foreign_keys": [
        {
          "column": "CreatedByID",
          "references": "User.UserID"
        },
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "SegmentID",
          "references": "Segment.SegmentID"
        },
        {
          "column": "BatchID",
          "references": "Batch.BatchID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "SegmentID",
          "CreatedOn",
          "BatchID"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2018-01-01"
          },
          {
            "column": "TotalScore",
            "op": "IS NOT NULL",
            "value": null
          }
        ]
      }
    },
    {
      "name": "CampaignTargetMonitoring",
      "source": "dbo.CampaignTargetMonitoring",
      "grain": [
        "CampaignID",
        "SegmentID",
        "SalesmanID",
        "SnapshotDate"
      ],
      "measures": [
        {
          "name": "Roco Target Customers",
          "expression": "SUM(RocoTargetCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of existing (ROCO) customers targeted for the campaign in the snapshot."
        },
        {
          "name": "Roco Target Amount",
          "expression": "SUM(RocoTargetAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary target for existing (ROCO) customers for the campaign in the snapshot."
        },
        {
          "name": "New Target Customers",
          "expression": "SUM(NewTargetCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of new customers targeted for the campaign in the snapshot."
        },
        {
          "name": "New Target Amount",
          "expression": "SUM(NewTargetAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary target for new customers for the campaign in the snapshot."
        },
        {
          "name": "Total Target Customers",
          "expression": "SUM(TotalTargetCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of customers targeted (ROCO + New) for the campaign in the snapshot."
        },
        {
          "name": "Total Target Amount",
          "expression": "SUM(TotalTargetAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary target (ROCO + New) for the campaign in the snapshot."
        },
        {
          "name": "Roco UpToDate Customers",
          "expression": "SUM(RocoUpToDateCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of ROCO customers that are up-to-date (met progress criteria) in the snapshot."
        },
        {
          "name": "Roco UpToDate Amount",
          "expression": "SUM(RocoUpToDateAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount achieved from ROCO customers that are up-to-date in the snapshot."
        },
        {
          "name": "New UpToDate Customers",
          "expression": "SUM(NewUpToDateCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of new customers that are up-to-date (met progress criteria) in the snapshot."
        },
        {
          "name": "New UpToDate Amount",
          "expression": "SUM(NewUpToDateAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount achieved from new customers that are up-to-date in the snapshot."
        },
        {
          "name": "Total UpToDate Customers",
          "expression": "SUM(TotalUpToDateCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total count of customers (ROCO + New) that are up-to-date in the snapshot."
        },
        {
          "name": "Total UpToDate Amount",
          "expression": "SUM(TotalUpToDateAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary amount achieved from customers up-to-date in the snapshot."
        },
        {
          "name": "Roco Segment Customers",
          "expression": "SUM(RocoSegmentCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "ROCO customers within the target segment for this snapshot."
        },
        {
          "name": "Roco Segment Amount",
          "expression": "SUM(RocoSegmentAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary value of ROCO customers within the target segment for this snapshot."
        },
        {
          "name": "New Segment Customers",
          "expression": "SUM(NewSegmentCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "New customers within the target segment for this snapshot."
        },
        {
          "name": "New Segment Amount",
          "expression": "SUM(NewSegmentAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary value of new customers within the target segment for this snapshot."
        },
        {
          "name": "Total Segment Customers",
          "expression": "SUM(TotalSegmentCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total customers (ROCO + New) within the target segment for this snapshot."
        },
        {
          "name": "Total Segment Amount",
          "expression": "SUM(TotalSegmentAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary value for the target segment in this snapshot."
        },
        {
          "name": "Roco Target Percentage (Customers)",
          "expression": "AVG(RocoTargetPercentageCustomers)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "ROCO target achievement expressed as a percentage of customers (stored as decimal ratios). Use AVG to aggregate ratios across rows in the chosen breakdown."
        },
        {
          "name": "Roco Target Percentage (Amount)",
          "expression": "AVG(RocoTargetPercentageAmount)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "ROCO target achievement expressed as a percentage of amount (stored as decimal ratios)."
        },
        {
          "name": "New Target Percentage (Customers)",
          "expression": "AVG(NewTargetPercentageCustomers)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "New-customer target achievement percentage (customers)."
        },
        {
          "name": "New Target Percentage (Amount)",
          "expression": "AVG(NewTargetPercentageAmount)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "New-customer target achievement percentage (amount)."
        },
        {
          "name": "Total Target Percentage (Customers)",
          "expression": "AVG(TotalTargetPercentageCustomers)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Total target achievement percentage (customers)."
        },
        {
          "name": "Total Target Percentage (Amount)",
          "expression": "AVG(TotalTargetPercentageAmount)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Total target achievement percentage (amount)."
        },
        {
          "name": "Roco UpToDate Percentage (Customers)",
          "expression": "AVG(RocoUpToDatePercentageCustomers)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "ROCO up-to-date percentage (customers)."
        },
        {
          "name": "Roco UpToDate Percentage (Amount)",
          "expression": "AVG(RocoUpToDatePercentageAmount)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "ROCO up-to-date percentage (amount)."
        },
        {
          "name": "New UpToDate Percentage (Customers)",
          "expression": "AVG(NewUpToDatePercentageCustomers)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "New-customer up-to-date percentage (customers)."
        },
        {
          "name": "New UpToDate Percentage (Amount)",
          "expression": "AVG(NewUpToDatePercentageAmount)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "New-customer up-to-date percentage (amount)."
        },
        {
          "name": "Total UpToDate Percentage (Customers)",
          "expression": "AVG(TotalUpToDatePercentageCustomers)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Total up-to-date percentage (customers)."
        },
        {
          "name": "Total UpToDate Percentage (Amount)",
          "expression": "AVG(TotalUpToDatePercentageAmount)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Total up-to-date percentage (amount)."
        },
        {
          "name": "KPI ROCO Customers",
          "expression": "AVG(KpiRocoCustomers)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "KPI measuring ROCO customer performance expressed as a ratio/percentage (stored as decimal). Aggregate with AVG when breaking down."
        },
        {
          "name": "KPI ROCO Amount",
          "expression": "AVG(KpiRocoAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary KPI for ROCO amount (stored as a decimal/currency-like figure). Use AVG to combine across rows."
        },
        {
          "name": "KPI Average New Customers",
          "expression": "AVG(KpiAvoNewCustomers)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(2)",
          "description": "KPI representing the average (or other ratio) of new customers; stored as a decimal. Use AVG to aggregate."
        },
        {
          "name": "KPI New Conversion Rate",
          "expression": "AVG(KpiNewConversionRate)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "KPI conversion rate for new customers (stored as decimal ratio). Aggregate with AVG when necessary."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "SegmentID",
          "references": "DimSegment.SegmentID"
        },
        {
          "column": "SalesmanID",
          "references": "DimSalesman.SalesmanID"
        },
        {
          "column": "SuperVisorID",
          "references": "DimSupervisor.SuperVisorID"
        },
        {
          "column": "SnapshotDate",
          "references": "DimDate.Date"
        }
      ],
      "display": {
        "default_breakdowns": [
          "DimDate.Year",
          "DimDate.Month",
          "DimCampaign.CampaignName",
          "DimSegment.SegmentName",
          "DimSupervisor.SupervisorName",
          "DimSalesman.SalesmanName"
        ],
        "default_filters": [
          {
            "column": "SnapshotDate",
            "op": ">=",
            "value": "DATEADD(year, -1, GETDATE())",
            "description": "Show last 12 months by default"
          }
        ]
      }
    },
    {
      "name": "Campaign Target Monitor (Snapshot Grouping)",
      "source": "dbo.CampaignTargetMonitorGrouping",
      "grain": [
        "CampaignID",
        "SegmentID",
        "SuperVisorID",
        "SnapshotDate",
        "SalesmanID",
        "ReportUserID"
      ],
      "measures": [
        {
          "name": "Snapshot Rows",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of snapshot rows (records) in the grouping. Use to understand record volume for the selected filters."
        },
        {
          "name": "Distinct Salesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique salesmen represented in the current result set."
        },
        {
          "name": "Distinct Segments",
          "expression": "COUNT(DISTINCT SegmentID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique segments represented in the current result set."
        },
        {
          "name": "Distinct Supervisors",
          "expression": "COUNT(DISTINCT SuperVisorID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique supervisors represented in the current result set."
        },
        {
          "name": "Total Snapshot Working Days",
          "expression": "SUM(SnapshotWorkingdays)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of SnapshotWorkingdays across the result set. Represents the aggregate working days captured by the snapshots."
        },
        {
          "name": "Average Snapshot Working Days",
          "expression": "AVG(SnapshotWorkingdays)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average SnapshotWorkingdays per snapshot row. Useful to monitor typical working-day values in snapshots."
        },
        {
          "name": "Min Snapshot Working Days",
          "expression": "MIN(SnapshotWorkingdays)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Minimum SnapshotWorkingdays observed in the filtered result set."
        },
        {
          "name": "Max Snapshot Working Days",
          "expression": "MAX(SnapshotWorkingdays)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum SnapshotWorkingdays observed in the filtered result set."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.CampaignID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.Segment.SegmentID"
        },
        {
          "column": "SuperVisorID",
          "references": "dbo.Employee.EmployeeID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.Employee.EmployeeID"
        },
        {
          "column": "ReportUserID",
          "references": "dbo.[User].UserID"
        },
        {
          "column": "SnapshotDate",
          "references": "dbo.Date.DateKey"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "SegmentID",
          "SuperVisorID",
          "SalesmanID",
          "SnapshotDate"
        ],
        "default_filters": [
          {
            "column": "SnapshotDate",
            "op": ">=",
            "value": "TODAY()-365",
            "description": "Default to the last 12 months of snapshots (relative)."
          }
        ]
      }
    },
    {
      "name": "CampaignBucketFileUploadHistoryDetail",
      "source": "dbo.CampaignBucketFileUploadHistoryDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of rows (records) in the detail table"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct business points represented in the current result set"
        },
        {
          "name": "SumPrintAmount",
          "expression": "SUM(PrintAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total printed-media spend allocated to the business points (NULLs ignored)"
        },
        {
          "name": "SumPPCAmount",
          "expression": "SUM(PPCAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total pay-per-click (PPC) spend allocated to the business points (NULLs ignored)"
        },
        {
          "name": "SumXOGRAmount",
          "expression": "SUM(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total XOGR spend (likely a specific budget line) across rows (NULLs ignored)"
        },
        {
          "name": "SumWebSiteAmount",
          "expression": "SUM(WebSiteAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total website-related spend allocated to the business points (NULLs ignored)"
        },
        {
          "name": "SumTotalAmount",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Aggregate of TotalAmount for the selected rows. Use this to measure total campaign investment recorded in this detail"
        },
        {
          "name": "AverageTotalAmountPerRow",
          "expression": "AVG(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average TotalAmount per row (NULL rows excluded by AVG)"
        },
        {
          "name": "PctRowsWithTotalAmount",
          "expression": "SUM(CASE WHEN TotalAmount IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of rows that have a populated TotalAmount (useful to gauge completeness of financial data)"
        }
      ],
      "foreign_keys": [
        {
          "column": "FileID",
          "references": "dbo.CampaignBucketFileUploadHistory.ID",
          "description": "Links this detail row to the parent file upload record"
        },
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID",
          "description": "Suggested/typical reference to a business point dimension (if available)"
        },
        {
          "column": "NewSalesmanID",
          "references": "DimSalesman.SalesmanID",
          "description": "Suggested reference to a salesman dimension"
        },
        {
          "column": "NewChannelID",
          "references": "DimChannel.ChannelID",
          "description": "Suggested reference to a channel dimension"
        },
        {
          "column": "SegmentID",
          "references": "DimSegment.SegmentID",
          "description": "Suggested reference to a segment dimension"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BussinessPointCode",
          "BusinessPointName",
          "ProductMixture",
          "VerticalsGrouping",
          "NewSalesmanName",
          "SegmentDescription",
          "BucketGroup",
          "FirstCustomerExpirationMonth"
        ],
        "default_filters": [
          {
            "column": "TotalAmount",
            "op": ">",
            "value": "0"
          }
        ],
        "notes": "Typical exploration will group by business point, product mixture, vertical grouping or salesman and filter to rows with positive TotalAmount. When joining to dimensions prefer using the suggested dimension FK references (if those dims exist)."
      }
    },
    {
      "name": "CampaignSalesMarketItem",
      "source": "dbo.CampaignSalesMarketItem",
      "grain": [
        "CampaignID",
        "TargetGroupItemValueID",
        "BusinessPointID"
      ],
      "measures": [
        {
          "name": "MarketItemCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of market-item rows (rows in the fact)."
        },
        {
          "name": "UniqueBusinessPoints",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Distinct number of business points represented in the selected set."
        },
        {
          "name": "TotalSubscriptionDiscount",
          "expression": "SUM(SubrTotalAmountDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of subscription discounts recorded for the market items."
        },
        {
          "name": "TotalNoSubscriptionDiscounts",
          "expression": "SUM(NoSubrTotalAmountDiscounts)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of discounts for non-subscription (NoSubr) items."
        },
        {
          "name": "TotalRenewalAmount",
          "expression": "SUM(RenewalTotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total renewal amounts aggregated across market items."
        },
        {
          "name": "AvgRenewalAmount",
          "expression": "AVG(RenewalTotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average renewal amount per market item (ignores NULL renewal amounts)."
        },
        {
          "name": "SignedCount",
          "expression": "SUM(CASE WHEN SignedDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of market items that have a SignedDate (indicates a signed/subscribed item)."
        },
        {
          "name": "PaymentRefusalCount",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of market items flagged with a payment refusal."
        },
        {
          "name": "PaymentRefusalRate",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of market items with payment refusal (PaymentRefusal) over total items."
        },
        {
          "name": "DisappearedCount",
          "expression": "SUM(CASE WHEN Disappeared = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of market items flagged as disappeared."
        },
        {
          "name": "DisappearedRate",
          "expression": "SUM(CASE WHEN Disappeared = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of market items flagged as disappeared."
        },
        {
          "name": "IsBundleCount",
          "expression": "SUM(CASE WHEN IsBundle = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of market items marked as part of a bundle."
        },
        {
          "name": "IsReleasedCount",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of market items that are marked as released."
        },
        {
          "name": "IsReleasedRate",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of market items that are released."
        },
        {
          "name": "CPSubscriptionBasedCount",
          "expression": "SUM(CASE WHEN IsCPSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of market items marked as 'CP subscription based'."
        },
        {
          "name": "CPRenewableCount",
          "expression": "SUM(CASE WHEN IsCPRenewable = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of market items flagged as renewable (IsCPRenewable)."
        },
        {
          "name": "AverageDaysToLastSigned",
          "expression": "AVG(DATEDIFF(day, CreatedOn, LastSignedDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Average number of days between creation and the last signed date (NULLs excluded)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "TargetGroupItemValue.TargetGroupItemValueID"
        },
        {
          "column": "BusinessPointID",
          "references": "BusinessPoint.BusinessPointID"
        },
        {
          "column": "SegmentID",
          "references": "Segment.SegmentID"
        },
        {
          "column": "ChannelTypeID",
          "references": "ChannelType.ChannelTypeID"
        },
        {
          "column": "GroupID",
          "references": "Group.GroupID"
        },
        {
          "column": "SubrSalesmanID",
          "references": "Salesperson.SalespersonID"
        },
        {
          "column": "NoSubrSalesmanID",
          "references": "Salesperson.SalespersonID"
        },
        {
          "column": "HandlerSalesManID",
          "references": "Salesperson.SalespersonID"
        },
        {
          "column": "PrefectureID",
          "references": "Geography.PrefectureID"
        },
        {
          "column": "MunicipalityID",
          "references": "Geography.MunicipalityID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "Segment",
          "ChannelType",
          "BusinessPointBrandName",
          "SubrSalesman",
          "Prefecture",
          "Municipality"
        ],
        "default_time_dimension": "SignedDate",
        "default_filters": [
          {
            "column": "IsReleased",
            "op": "=",
            "value": true
          }
        ],
        "recommended_slicers": [
          "CampaignID",
          "SegmentID",
          "ChannelTypeID",
          "SubrSalesmanID",
          "PrefectureID"
        ]
      }
    },
    {
      "name": "TargetGroupItemInfo",
      "source": "dbo.TargetGroupItemInfo",
      "grain": [
        "TargetGroupItemValueID"
      ],
      "measures": [
        {
          "name": "ItemCount",
          "expression": "COUNT(TargetGroupItemValueID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target group item info rows (distinct TargetGroupItemValueID)."
        },
        {
          "name": "BalanceValue_Total",
          "expression": "SUM(COALESCE(BalanceValue,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total current balance value across items."
        },
        {
          "name": "DueBalanceValue_Total",
          "expression": "SUM(COALESCE(DueBalanceValue,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total due balance value across items."
        },
        {
          "name": "SettlementBalanceValue_Total",
          "expression": "SUM(COALESCE(SettlementBalanceValue,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total settlement balance value across items."
        },
        {
          "name": "TotalPBDContractsValue",
          "expression": "SUM( COALESCE(Y01PBDContractsValue,0) + COALESCE(Y02PBDContractsValue,0) + COALESCE(Y03PBDContractsValue,0) + COALESCE(Y04PBDContractsValue,0) + COALESCE(Y05PBDContractsValue,0) + COALESCE(Y06PBDContractsValue,0) + COALESCE(Y07PBDContractsValue,0) + COALESCE(Y08PBDContractsValue,0) + COALESCE(Y09PBDContractsValue,0) + COALESCE(Y10PBDContractsValue,0) + COALESCE(Y11PBDContractsValue,0) + COALESCE(Y12PBDContractsValue,0) )",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of PBD contract values for all 12 period buckets (Y01..Y12)."
        },
        {
          "name": "TotalPADContractsValue",
          "expression": "SUM( COALESCE(Y01PADContractsValue,0) + COALESCE(Y02PADContractsValue,0) + COALESCE(Y03PADContractsValue,0) + COALESCE(Y04PADContractsValue,0) + COALESCE(Y05PADContractsValue,0) + COALESCE(Y06PADContractsValue,0) + COALESCE(Y07PADContractsValue,0) + COALESCE(Y08PADContractsValue,0) + COALESCE(Y09PADContractsValue,0) + COALESCE(Y10PADContractsValue,0) + COALESCE(Y11PADContractsValue,0) + COALESCE(Y12PADContractsValue,0) )",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of PAD contract values for all 12 period buckets (Y01..Y12)."
        },
        {
          "name": "TotalIBDContractsValue",
          "expression": "SUM( COALESCE(Y01IBDContractsValue,0) + COALESCE(Y02IBDContractsValue,0) + COALESCE(Y03IBDContractsValue,0) + COALESCE(Y04IBDContractsValue,0) + COALESCE(Y05IBDContractsValue,0) + COALESCE(Y06IBDContractsValue,0) + COALESCE(Y07IBDContractsValue,0) + COALESCE(Y08IBDContractsValue,0) + COALESCE(Y09IBDContractsValue,0) + COALESCE(Y10IBDContractsValue,0) + COALESCE(Y11IBDContractsValue,0) + COALESCE(Y12IBDContractsValue,0) )",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of IBD contract values for all 12 period buckets (Y01..Y12)."
        },
        {
          "name": "TotalIADContractsValue",
          "expression": "SUM( COALESCE(Y01IADContractsValue,0) + COALESCE(Y02IADContractsValue,0) + COALESCE(Y03IADContractsValue,0) + COALESCE(Y04IADContractsValue,0) + COALESCE(Y05IADContractsValue,0) + COALESCE(Y06IADContractsValue,0) + COALESCE(Y07IADContractsValue,0) + COALESCE(Y08IADContractsValue,0) + COALESCE(Y09IADContractsValue,0) + COALESCE(Y10IADContractsValue,0) + COALESCE(Y11IADContractsValue,0) + COALESCE(Y12IADContractsValue,0) )",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of IAD contract values for all 12 period buckets (Y01..Y12)."
        },
        {
          "name": "TotalContractsValue_AllTypes",
          "expression": "SUM( COALESCE(Y01PBDContractsValue,0) + COALESCE(Y02PBDContractsValue,0) + COALESCE(Y03PBDContractsValue,0) + COALESCE(Y04PBDContractsValue,0) + COALESCE(Y05PBDContractsValue,0) + COALESCE(Y06PBDContractsValue,0) + COALESCE(Y07PBDContractsValue,0) + COALESCE(Y08PBDContractsValue,0) + COALESCE(Y09PBDContractsValue,0) + COALESCE(Y10PBDContractsValue,0) + COALESCE(Y11PBDContractsValue,0) + COALESCE(Y12PBDContractsValue,0) + COALESCE(Y01PADContractsValue,0) + COALESCE(Y02PADContractsValue,0) + COALESCE(Y03PADContractsValue,0) + COALESCE(Y04PADContractsValue,0) + COALESCE(Y05PADContractsValue,0) + COALESCE(Y06PADContractsValue,0) + COALESCE(Y07PADContractsValue,0) + COALESCE(Y08PADContractsValue,0) + COALESCE(Y09PADContractsValue,0) + COALESCE(Y10PADContractsValue,0) + COALESCE(Y11PADContractsValue,0) + COALESCE(Y12PADContractsValue,0) + COALESCE(Y01IBDContractsValue,0) + COALESCE(Y02IBDContractsValue,0) + COALESCE(Y03IBDContractsValue,0) + COALESCE(Y04IBDContractsValue,0) + COALESCE(Y05IBDContractsValue,0) + COALESCE(Y06IBDContractsValue,0) + COALESCE(Y07IBDContractsValue,0) + COALESCE(Y08IBDContractsValue,0) + COALESCE(Y09IBDContractsValue,0) + COALESCE(Y10IBDContractsValue,0) + COALESCE(Y11IBDContractsValue,0) + COALESCE(Y12IBDContractsValue,0) + COALESCE(Y01IADContractsValue,0) + COALESCE(Y02IADContractsValue,0) + COALESCE(Y03IADContractsValue,0) + COALESCE(Y04IADContractsValue,0) + COALESCE(Y05IADContractsValue,0) + COALESCE(Y06IADContractsValue,0) + COALESCE(Y07IADContractsValue,0) + COALESCE(Y08IADContractsValue,0) + COALESCE(Y09IADContractsValue,0) + COALESCE(Y10IADContractsValue,0) + COALESCE(Y11IADContractsValue,0) + COALESCE(Y12IADContractsValue,0) )",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Combined total of contract values across PBD, PAD, IBD and IAD buckets (Y01..Y12). Useful for overall contract exposure per item."
        },
        {
          "name": "TotalPreprintedValue",
          "expression": "SUM(COALESCE(TotalPreprintedValue,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total preprinted value (aggregate of print/internet/multimedia preprinted if stored)."
        },
        {
          "name": "ExpirationValueInternet_Total",
          "expression": "SUM(COALESCE(ExpirationValueInternet,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total internet expiration values."
        },
        {
          "name": "SubscriptionValue_Total",
          "expression": "SUM(COALESCE(SubscriptionValue,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total subscription value across items."
        },
        {
          "name": "CancelAmount_Total",
          "expression": "SUM(COALESCE(CancelAmount,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total amount canceled across items."
        },
        {
          "name": "CreditInvoiceValue_Total",
          "expression": "SUM(COALESCE(CreditInvoiceValue,0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total value of credit invoices."
        },
        {
          "name": "Y01Entries_Total",
          "expression": "SUM(COALESCE(Y01Entries,0))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of entries in period Y01."
        },
        {
          "name": "Y01DirectoriesSections_Total",
          "expression": "SUM(COALESCE(Y01DirectoriesSections,0))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of directory sections in period Y01."
        }
      ],
      "foreign_keys": [
        {
          "column": "TargetGroupItemValueID",
          "references": "TargetGroupItemValue.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "HigherSpendingHeadingName",
          "HigherSpendingHeadingCode",
          "Y01PSalesChannel",
          "Y01PSalesrep",
          "Y01PrintSignDate"
        ],
        "default_filters": [
          {
            "column": "Y01PrintSignDate",
            "op": ">=",
            "value": "2010-01-01"
          }
        ]
      }
    },
    {
      "name": "TargetGroupItemFact",
      "source": "dbo.ViewTargetGroupItemInfo",
      "grain": [
        "BusinessPointID",
        "TargetGroupItemValueID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows (target group item / business point combinations) in this view"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points represented"
        },
        {
          "name": "ReleasedCount",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows marked as released (IsReleased = true)"
        },
        {
          "name": "TargetValuesNeedRefreshCount",
          "expression": "SUM(CASE WHEN TargetValuesNeedRefresh = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows flagged as needing a refresh of target values"
        },
        {
          "name": "SumChannelTargetValue",
          "expression": "SUM(ChannelTargetValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of channel-level target values for the items"
        },
        {
          "name": "SumUserTargetValue",
          "expression": "SUM(UserTargetValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of user-level target values for the items"
        },
        {
          "name": "AverageTargetValue",
          "expression": "AVG(TargetValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average TargetValue across rows"
        },
        {
          "name": "TotalPreprintedValue",
          "expression": "SUM(TotalPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of TotalPreprintedValue (preprinted media value) for the items"
        },
        {
          "name": "TotalExpirationValueInternet",
          "expression": "SUM(ExpirationValueInternet)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of internet expiration values"
        },
        {
          "name": "TotalSubscriptionValue",
          "expression": "SUM(SubscriptionValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of subscription values"
        },
        {
          "name": "TotalCancelAmount",
          "expression": "SUM(CancelAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of cancellation amounts"
        },
        {
          "name": "TotalExchangeSaleValue",
          "expression": "SUM(ExchangeSaleValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of exchange sale values"
        },
        {
          "name": "TotalPBDContractsValue_AllYears",
          "expression": "SUM(Y01PBDContractsValue) + SUM(Y02PBDContractsValue) + SUM(Y03PBDContractsValue) + SUM(Y04PBDContractsValue) + SUM(Y05PBDContractsValue) + SUM(Y06PBDContractsValue) + SUM(Y07PBDContractsValue) + SUM(Y08PBDContractsValue) + SUM(Y09PBDContractsValue) + SUM(Y10PBDContractsValue) + SUM(Y11PBDContractsValue) + SUM(Y12PBDContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total PBD contracts value across all available Y01..Y12 columns (print/business-directory type contracts)"
        },
        {
          "name": "TotalPADContractsValue_AllYears",
          "expression": "SUM(Y01PADContractsValue) + SUM(Y02PADContractsValue) + SUM(Y03PADContractsValue) + SUM(Y04PADContractsValue) + SUM(Y05PADContractsValue) + SUM(Y06PADContractsValue) + SUM(Y07PADContractsValue) + SUM(Y08PADContractsValue) + SUM(Y09PADContractsValue) + SUM(Y10PADContractsValue) + SUM(Y11PADContractsValue) + SUM(Y12PADContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total PAD contracts value across Y01..Y12 (AD-related contract values)"
        },
        {
          "name": "TotalIBDContractsValue_AllYears",
          "expression": "SUM(Y01IBDContractsValue) + SUM(Y02IBDContractsValue) + SUM(Y03IBDContractsValue) + SUM(Y04IBDContractsValue) + SUM(Y05IBDContractsValue) + SUM(Y06IBDContractsValue) + SUM(Y07IBDContractsValue) + SUM(Y08IBDContractsValue) + SUM(Y09IBDContractsValue) + SUM(Y10IBDContractsValue) + SUM(Y11IBDContractsValue) + SUM(Y12IBDContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total IBD contracts value across Y01..Y12 (internet/business-directory type contracts)"
        },
        {
          "name": "TotalIADContractsValue_AllYears",
          "expression": "SUM(Y01IADContractsValue) + SUM(Y02IADContractsValue) + SUM(Y03IADContractsValue) + SUM(Y04IADContractsValue) + SUM(Y05IADContractsValue) + SUM(Y06IADContractsValue) + SUM(Y07IADContractsValue) + SUM(Y08IADContractsValue) + SUM(Y09IADContractsValue) + SUM(Y10IADContractsValue) + SUM(Y11IADContractsValue) + SUM(Y12IADContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total IAD contracts value across Y01..Y12 (internet AD related contract values)"
        },
        {
          "name": "GrandTotalContractsValue",
          "expression": "(SUM(Y01PBDContractsValue) + SUM(Y02PBDContractsValue) + SUM(Y03PBDContractsValue) + SUM(Y04PBDContractsValue) + SUM(Y05PBDContractsValue) + SUM(Y06PBDContractsValue) + SUM(Y07PBDContractsValue) + SUM(Y08PBDContractsValue) + SUM(Y09PBDContractsValue) + SUM(Y10PBDContractsValue) + SUM(Y11PBDContractsValue) + SUM(Y12PBDContractsValue)) + (SUM(Y01PADContractsValue) + SUM(Y02PADContractsValue) + SUM(Y03PADContractsValue) + SUM(Y04PADContractsValue) + SUM(Y05PADContractsValue) + SUM(Y06PADContractsValue) + SUM(Y07PADContractsValue) + SUM(Y08PADContractsValue) + SUM(Y09PADContractsValue) + SUM(Y10PADContractsValue) + SUM(Y11PADContractsValue) + SUM(Y12PADContractsValue)) + (SUM(Y01IBDContractsValue) + SUM(Y02IBDContractsValue) + SUM(Y03IBDContractsValue) + SUM(Y04IBDContractsValue) + SUM(Y05IBDContractsValue) + SUM(Y06IBDContractsValue) + SUM(Y07IBDContractsValue) + SUM(Y08IBDContractsValue) + SUM(Y09IBDContractsValue) + SUM(Y10IBDContractsValue) + SUM(Y11IBDContractsValue) + SUM(Y12IBDContractsValue)) + (SUM(Y01IADContractsValue) + SUM(Y02IADContractsValue) + SUM(Y03IADContractsValue) + SUM(Y04IADContractsValue) + SUM(Y05IADContractsValue) + SUM(Y06IADContractsValue) + SUM(Y07IADContractsValue) + SUM(Y08IADContractsValue) + SUM(Y09IADContractsValue) + SUM(Y10IADContractsValue) + SUM(Y11IADContractsValue) + SUM(Y12IADContractsValue))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Grand total of contract values across PBD, PAD, IBD and IAD series for all Y01..Y12 columns"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "BusinessPoint.BusinessPointID"
        },
        {
          "column": "HandlerUserID",
          "references": "User.UserID"
        },
        {
          "column": "TargetUserID",
          "references": "User.UserID"
        },
        {
          "column": "MainHeadingID",
          "references": "Heading.MainHeadingID"
        },
        {
          "column": "HigherSpendingHeadingID",
          "references": "Heading.HeadingID"
        },
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "MainHeadingName",
          "HigherSpendingHeadingName",
          "Prefecture",
          "City",
          "HandlerName",
          "TargetName",
          "StartDate"
        ],
        "default_filters": [
          {
            "column": "IsReleased",
            "op": "=",
            "value": "True"
          }
        ],
        "default_sort": {
          "measure": "GrandTotalContractsValue",
          "direction": "desc"
        }
      }
    },
    {
      "name": "FactCampaignSalesMarketItem",
      "source": "dbo.CampaignSalesMarketViewItem",
      "grain": [
        "TaskID",
        "TargetGroupItemValueID",
        "BusinessPointID"
      ],
      "measures": [
        {
          "name": "TaskCount",
          "expression": "COUNT(TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks / rows in the fact (one row per task-targetgroup-businesspoint item)"
        },
        {
          "name": "UniqueBusinessPoints",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points represented in the result set"
        },
        {
          "name": "TotalSubscriptionDiscount",
          "expression": "SUM(SubrTotalAmountDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of subscription-related discounts (SubrTotalAmountDiscount)"
        },
        {
          "name": "TotalNoSubscriptionDiscount",
          "expression": "SUM(NoSubrTotalAmountDiscounts)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of non-subscription discounts (NoSubrTotalAmountDiscounts)"
        },
        {
          "name": "TotalRenewalAmount",
          "expression": "SUM(RenewalTotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total amount related to renewals (RenewalTotalAmount)"
        },
        {
          "name": "SubscriptionsCount",
          "expression": "SUM(CASE WHEN IsCPSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of items flagged as subscription-based (IsCPSubscriptionBased)"
        },
        {
          "name": "SignedCount",
          "expression": "SUM(CASE WHEN SignedDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of items with a signed date (indicates a completed/signature event)"
        },
        {
          "name": "AverageSubscriptionDiscountPerSubscription",
          "expression": "DIVIDE(SUM(SubrTotalAmountDiscount), NULLIF(SUM(CASE WHEN IsCPSubscriptionBased = 1 THEN 1 ELSE 0 END), 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average subscription discount per subscription-based item (handles divide-by-zero)"
        },
        {
          "name": "SignedRate",
          "expression": "DIVIDE(SUM(CASE WHEN SignedDate IS NOT NULL THEN 1 ELSE 0 END), NULLIF(COUNT(TaskID), 0))",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tasks that have a SignedDate (SignedCount / TaskCount)"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID"
        },
        {
          "column": "SegmentID",
          "references": "DimSegment.SegmentID"
        },
        {
          "column": "ChannelTypeID",
          "references": "DimChannelType.ChannelTypeID"
        },
        {
          "column": "PrefectureID",
          "references": "DimPrefecture.PrefectureID"
        },
        {
          "column": "MunicipalityID",
          "references": "DimMunicipality.MunicipalityID"
        },
        {
          "column": "HandlerSalesManID",
          "references": "DimSalesPerson.SalesPersonID"
        },
        {
          "column": "TargetSalesManID",
          "references": "DimSalesPerson.SalesPersonID"
        },
        {
          "column": "SubrSalesmanID",
          "references": "DimSalesPerson.SalesPersonID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "DimCampaign.CampaignName",
          "SegmentName",
          "ChannelType",
          "BusinessPointBrandName",
          "Prefecture",
          "HandlerSalesManLastName"
        ],
        "default_filters": [
          {
            "column": "IsReleased",
            "op": "=",
            "value": true
          },
          {
            "column": "SignedDate",
            "op": ">=",
            "value": "2024-01-01"
          }
        ]
      }
    },
    {
      "name": "Sales Market Item",
      "source": "dbo.ViewSalesMarketItem",
      "grain": [
        "TaskID"
      ],
      "measures": [
        {
          "name": "Task Count",
          "expression": "COUNT(TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks / rows (counts TaskID occurrences)"
        },
        {
          "name": "Distinct Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points (BusinessPointID) represented in the result set"
        },
        {
          "name": "Total Offer Amount",
          "expression": "SUM(OfferAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of OfferAmount for tasks (currency assumed EUR). Nulls are ignored."
        },
        {
          "name": "Average Offer Amount",
          "expression": "AVG(OfferAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average OfferAmount per task (computed over non-null OfferAmount values)."
        },
        {
          "name": "Offer Amount Count (non-null)",
          "expression": "COUNT(OfferAmount)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows with a non-null OfferAmount"
        },
        {
          "name": "Loss Printed - Total",
          "expression": "SUM(LossPrintedNew)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total of LossPrintedNew (numeric indicator captured per task)"
        },
        {
          "name": "Loss Printed - Average",
          "expression": "AVG(LossPrintedNew)",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average value of LossPrintedNew per task"
        },
        {
          "name": "BP Identity Confirmed - Count",
          "expression": "SUM(CASE WHEN BPIdentityConfirmed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks where the business point identity was confirmed"
        },
        {
          "name": "Released - Count",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks flagged as released"
        },
        {
          "name": "CRM Flagged - Count",
          "expression": "SUM(CASE WHEN CRM = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks marked with CRM = true"
        },
        {
          "name": "Appointment Scheduled - Count",
          "expression": "SUM(CASE WHEN AppointmentDateTime IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks that have an appointment scheduled (AppointmentDateTime is not null)"
        },
        {
          "name": "Recall Scheduled - Count",
          "expression": "SUM(CASE WHEN RecallTime IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks that have a recall time set (RecallTime is not null)"
        },
        {
          "name": "Subscription Count",
          "expression": "SUM(IsSubscription)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of IsSubscription flags (interpreted as 0/1)."
        },
        {
          "name": "UDFValue01 Total",
          "expression": "SUM(UDFValue01)",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Sum of UDFValue01 (user-defined numeric field)."
        },
        {
          "name": "UDFValue02 Total",
          "expression": "SUM(UDFValue02)",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Sum of UDFValue02 (user-defined numeric field)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "UnitID",
          "references": "Unit.UnitID"
        },
        {
          "column": "TargetGroupValueID",
          "references": "TargetGroupValue.TargetGroupValueID"
        },
        {
          "column": "SelectedAllocationPlanID",
          "references": "AllocationPlan.AllocationPlanID"
        },
        {
          "column": "TargetGroupItemID",
          "references": "TargetGroupItem.TargetGroupItemID"
        },
        {
          "column": "CaseID",
          "references": "Case.CaseID"
        },
        {
          "column": "TaskTypeID",
          "references": "TaskType.TaskTypeID"
        },
        {
          "column": "SupervisorID",
          "references": "Employee.EmployeeID"
        },
        {
          "column": "BusinessPointID",
          "references": "BusinessPoint.BusinessPointID"
        },
        {
          "column": "CustomerCode",
          "references": "Customer.CustomerCode"
        },
        {
          "column": "ReliabilityID",
          "references": "Reliability.ReliabilityID"
        },
        {
          "column": "NoCommReasonID",
          "references": "NoCommReason.NoCommReasonID"
        }
      ],
      "display": {
        "default_date": "StartDate",
        "default_breakdowns": [
          "CampaignID",
          "TaskTypeID",
          "Supervisor",
          "CustomerCode",
          "BrandName",
          "MasterHeading",
          "MasterClassification",
          "Prefecture",
          "StartDate"
        ],
        "default_filters": [
          {
            "column": "StartDate",
            "op": ">=",
            "value": "2019-01-01"
          }
        ],
        "notes": "StartDate used as presentation date. Offer amounts assumed in EUR based on source geography (validate with business owners). TaskID is the row-level grain."
      }
    },
    {
      "name": "FactSalesMarketItemStakeHolder",
      "source": "dbo.ViewSalesMarketItemStakeHolder",
      "grain": [
        "TaskID",
        "TargetGroupItemID",
        "CampaignID",
        "UnitID"
      ],
      "measures": [
        {
          "name": "TaskCount",
          "expression": "COUNT(TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of task rows (occurrences) in the view."
        },
        {
          "name": "DistinctCases",
          "expression": "COUNT(DISTINCT CaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct cases associated with the tasks."
        },
        {
          "name": "DistinctCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns represented in the slice."
        },
        {
          "name": "SumOfferAmount",
          "expression": "SUM(OfferAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total offered amount across rows (nulls ignored). Assumes OfferAmount recorded in EUR."
        },
        {
          "name": "AverageOfferAmount",
          "expression": "AVG(OfferAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average offer amount (ignores nulls)."
        },
        {
          "name": "LossPrintedNewSum",
          "expression": "SUM(LossPrintedNew)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of LossPrintedNew values (aggregate count / score stored in this column)."
        },
        {
          "name": "ConfirmedBPCount",
          "expression": "SUM(CASE WHEN BPIdentityConfirmed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows where the business point identity was confirmed."
        },
        {
          "name": "ReleasedCount",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows marked as released."
        },
        {
          "name": "CRMFlagCount",
          "expression": "SUM(CASE WHEN CRM = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows flagged as CRM."
        },
        {
          "name": "SubscriptionCount",
          "expression": "SUM(CASE WHEN IsSubscription = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows representing subscriptions (IsSubscription interpreted as boolean 0/1)."
        },
        {
          "name": "AverageUDFValue01",
          "expression": "AVG(UDFValue01)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of UDFValue01 (user-defined numeric field)."
        },
        {
          "name": "AverageUDFValue02",
          "expression": "AVG(UDFValue02)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of UDFValue02 (user-defined numeric field)."
        },
        {
          "name": "AverageDaysFromTaskCreatedToAppointment",
          "expression": "AVG(DATEDIFF(day, TaskCreatedOn, AppointmentDateTime))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average lead time in days from task creation to the scheduled appointment (nulls ignored)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "TaskID",
          "references": "DimTask.TaskID"
        },
        {
          "column": "CaseID",
          "references": "DimCase.CaseID"
        },
        {
          "column": "TargetGroupItemID",
          "references": "DimTargetGroupItem.TargetGroupItemID"
        },
        {
          "column": "UnitID",
          "references": "DimUnit.UnitID"
        },
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID"
        },
        {
          "column": "StakeHolderID",
          "references": "DimStakeHolder.StakeHolderID"
        },
        {
          "column": "SupervisorID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "PotentialOwnerID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "CustomerCode",
          "references": "DimCustomer.CustomerCode"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskCreatedOn",
          "AppointmentDateTime",
          "CampaignStartedOn",
          "CampaignClosedOn",
          "StartDate",
          "EndDate",
          "UnitID",
          "StakeHolderID",
          "BusinessPointID",
          "CustomerCode",
          "BrandName",
          "MasterClassification",
          "ReliabilityStatus",
          "Prefecture",
          "Municipality",
          "City"
        ],
        "default_filters": [
          {
            "column": "CampaignState",
            "op": "=",
            "value": "1"
          },
          {
            "column": "OfferAmount",
            "op": ">",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "FactSalesMarketItemPotentialOwner",
      "source": "dbo.ViewSalesMarketItemPotentialOwner",
      "grain": [
        "CampaignID",
        "TaskID",
        "TargetGroupItemID",
        "PotentialOwnerID"
      ],
      "measures": [
        {
          "name": "AssignmentRows",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows / assignments in the view (each row represents a potential-owner assignment for a market item or task)."
        },
        {
          "name": "TaskCount",
          "expression": "COUNT(TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tasks associated with the campaign/target/item/potential owner."
        },
        {
          "name": "DistinctPotentialOwnerCount",
          "expression": "COUNT(DISTINCT PotentialOwnerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct potential owners in the filtered set."
        },
        {
          "name": "AppointmentsScheduled",
          "expression": "SUM(CASE WHEN AppointmentDateTime IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of scheduled appointments (rows with a non-null appointment datetime)."
        },
        {
          "name": "IdentityConfirmedCount",
          "expression": "SUM(CASE WHEN BPIdentityConfirmed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows where the business point identity was confirmed."
        },
        {
          "name": "IsReleasedCount",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of rows that are marked as released."
        },
        {
          "name": "OfferAmountTotal",
          "expression": "SUM(OfferAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total offered amount for the assignments (sum of OfferAmount). Nulls are ignored."
        },
        {
          "name": "OfferAmountAverage",
          "expression": "AVG(OfferAmount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average offered amount per assignment (ignores null OfferAmount values)."
        },
        {
          "name": "SubscriptionCount",
          "expression": "SUM(CASE WHEN IsSubscription <> 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of rows flagged as subscriptions (IsSubscription treated as boolean-like integer)."
        },
        {
          "name": "LossPrintedTotal",
          "expression": "SUM(LossPrintedNew)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of LossPrintedNew values for the filtered set (aggregated integer indicator)."
        },
        {
          "name": "UDFValue01_Average",
          "expression": "AVG(UDFValue01)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of UDFValue01 (user-defined numeric field)."
        },
        {
          "name": "UDFValue02_Average",
          "expression": "AVG(UDFValue02)",
          "unit": "number",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of UDFValue02 (user-defined numeric field)."
        },
        {
          "name": "CampaignDurationDays_Average",
          "expression": "AVG(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average campaign duration in days computed as difference between StartDate and EndDate. Rows with nulls will be excluded by DATEDIFF semantics."
        },
        {
          "name": "TimeToAppointmentHours_Average",
          "expression": "AVG(DATEDIFF(hour, TaskCreatedOn, AppointmentDateTime))",
          "unit": "hours",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average hours between task creation and scheduled appointment time. Nulls in AppointmentDateTime are ignored."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "TargetGroupValueID",
          "references": "DimTargetGroupValue.TargetGroupValueID"
        },
        {
          "column": "SelectedAllocationPlanID",
          "references": "DimAllocationPlan.SelectedAllocationPlanID"
        },
        {
          "column": "TargetGroupItemID",
          "references": "DimTargetGroupItem.TargetGroupItemID"
        },
        {
          "column": "CaseID",
          "references": "DimCase.CaseID"
        },
        {
          "column": "TaskID",
          "references": "DimTask.TaskID"
        },
        {
          "column": "SupervisorID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "PotentialOwnerID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "UnitID",
          "references": "DimUnit.UnitID"
        },
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID"
        },
        {
          "column": "CustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "ReliabilityID",
          "references": "DimReliability.ReliabilityID"
        },
        {
          "column": "NoCommReasonID",
          "references": "DimNoCommReason.NoCommReasonID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "PotentialOwnerFullName",
          "UnitID",
          "BusinessPointID",
          "StartDate"
        ],
        "default_filters": [
          {
            "column": "IsReleased",
            "op": "=",
            "value": 1
          }
        ],
        "suggested_default_sort": {
          "column": "AssignmentRows",
          "dir": "desc"
        }
      }
    },
    {
      "name": "FactTaskAssignment",
      "source": "dbo.ViewSalesMarketTaskAndOwner",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Task Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Total number of task rows (one row per task ID in the view)."
        },
        {
          "name": "Distinct Cases",
          "expression": "COUNT(DISTINCT CaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct case records referenced by tasks."
        },
        {
          "name": "Active Tasks",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of tasks that are not completed (CompletedOn is NULL)."
        },
        {
          "name": "Completed Tasks",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of tasks that have a completion timestamp."
        },
        {
          "name": "Percent Completed",
          "expression": "CASE WHEN COUNT(ID)=0 THEN 0 ELSE 1.0*SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)/COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tasks that are completed (Completed Tasks / Task Count)."
        },
        {
          "name": "Average Age (days)",
          "expression": "AVG(DATEDIFF(day, CreatedOn, COALESCE(CompletedOn, CURRENT_TIMESTAMP)))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average age of tasks in days. For open tasks age is computed up to now; for closed tasks age is from CreatedOn to CompletedOn."
        },
        {
          "name": "Median Age (days) - approximate",
          "expression": "PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY DATEDIFF(day, CreatedOn, COALESCE(CompletedOn, CURRENT_TIMESTAMP))) OVER ()",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Approximate median task age in days (uses percentiles if supported by the SQL engine)."
        },
        {
          "name": "Distinct Task Types",
          "expression": "COUNT(DISTINCT TaskTypeID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct task types present in the dataset."
        },
        {
          "name": "Distinct Actual Owners",
          "expression": "COUNT(DISTINCT ActualOwnerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct actual owners assigned to tasks."
        },
        {
          "name": "Tasks With Outcome",
          "expression": "SUM(CASE WHEN Outcome IS NOT NULL AND LTRIM(RTRIM(Outcome))<>'' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of tasks where an Outcome value has been recorded."
        }
      ],
      "foreign_keys": [
        {
          "column": "CaseID",
          "references": "DimCase.CaseID",
          "description": "References the case or ticket dimension (Case/Ticket)."
        },
        {
          "column": "TaskTypeID",
          "references": "DimTaskType.TaskTypeID",
          "description": "References the task type dimension."
        },
        {
          "column": "ActualOwnerID",
          "references": "DimUser.UserID",
          "description": "References the user/employee who actually owns the task."
        },
        {
          "column": "PotentialOwnerID",
          "references": "DimUser.UserID",
          "description": "References the potential owner user (if populated)."
        },
        {
          "column": "ActualOwnerUnitID",
          "references": "DimUnit.UnitID",
          "description": "References the organizational unit of the actual owner."
        },
        {
          "column": "PotentialOwnerUnitID",
          "references": "DimUnit.UnitID",
          "description": "References the organizational unit of the potential owner."
        },
        {
          "column": "CaseContextEntityID",
          "references": "DimEntity.EntityID",
          "description": "Polymorphic reference to the entity (use CaseContextEntityType together to resolve type)."
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskTypeID",
          "ActualOwnerFullName",
          "ActualOwnerUnitID",
          "CaseContextEntityType",
          "CreatedOn"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2025-01-01"
          },
          {
            "column": "Status",
            "op": "IN",
            "value": [
              "0"
            ]
          }
        ],
        "notes": "CreatedOn is the recommended date for time-series analysis. CaseContextEntityType + CaseContextEntityID are needed to resolve polymorphic entities (e.g., TICKET, TGIV)."
      }
    },
    {
      "name": "Contracts",
      "source": "dbo.ViewContract",
      "grain": [
        "C_ID"
      ],
      "measures": [
        {
          "name": "Contract Count",
          "expression": "COUNT(C_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of contract records (row count)."
        },
        {
          "name": "Active Contract Count",
          "expression": "SUM(CASE WHEN C_BPIsActive = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of contracts whose customer/business partner is marked active (C_BPIsActive = 1)."
        },
        {
          "name": "Active Rate",
          "expression": "SUM(CASE WHEN C_BPIsActive = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(C_ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of contracts with an active customer/business partner (Active Contract Count divided by Contract Count)."
        },
        {
          "name": "Signed Contract Count",
          "expression": "SUM(CASE WHEN C_Signdate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of contracts that have a sign date (C_Signdate is not null)."
        },
        {
          "name": "Distinct Customer Count",
          "expression": "COUNT(DISTINCT C_BPID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct customers/business partners referenced by contracts (distinct C_BPID)."
        },
        {
          "name": "Average Days to Sign",
          "expression": "AVG(DATEDIFF(day, C_CreatedOn, C_Signdate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days between contract creation (C_CreatedOn) and sign date (C_Signdate). Nulls are excluded from the average."
        },
        {
          "name": "Signed Within 30 Days",
          "expression": "SUM(CASE WHEN C_Signdate IS NOT NULL AND DATEDIFF(day, C_CreatedOn, C_Signdate) <= 30 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of contracts signed within 30 days of creation."
        }
      ],
      "foreign_keys": [
        {
          "column": "A_BPID",
          "references": "BusinessPartner.BPID"
        },
        {
          "column": "A_BPLocationAddressID",
          "references": "Address.AddressID"
        },
        {
          "column": "A_BPBillingAddressID",
          "references": "Address.AddressID"
        },
        {
          "column": "C_BPID",
          "references": "BusinessPartner.BPID"
        },
        {
          "column": "C_SalesManID",
          "references": "SalesPerson.SalesManID"
        },
        {
          "column": "C_CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "C_SubChannelID",
          "references": "SubChannel.SubChannelID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "A_BPName",
          "C_BPName",
          "C_SalesManID",
          "C_Type",
          "C_State",
          "C_CreatedOn"
        ],
        "default_filters": [
          {
            "column": "C_Signdate",
            "op": "IS NOT",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "FactContractProduct",
      "source": "dbo.ViewContractProduct",
      "grain": [
        "CP_ID",
        "C_ID"
      ],
      "measures": [
        {
          "name": "Total Price",
          "expression": "SUM(CP_Price)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of listed prices for contract products (gross price before discounts)."
        },
        {
          "name": "Total Discount",
          "expression": "SUM(CP_Discount + CP_RulesDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total discounts applied to contract products including rule-based discounts."
        },
        {
          "name": "Total Net Amount",
          "expression": "SUM(CP_Price - CP_Discount - CP_RulesDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Net amount after subtracting all discounts from the price (revenue contribution at contract-product level)."
        },
        {
          "name": "Average Price",
          "expression": "AVG(CP_Price)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average listed price for contract products."
        },
        {
          "name": "Contract Product Rows",
          "expression": "COUNT(CP_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of contract-product rows (row count at the grain)."
        },
        {
          "name": "Distinct Products",
          "expression": "COUNT(DISTINCT CP_ProductID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of distinct product SKUs referenced by contract products in the scoped query."
        },
        {
          "name": "Distinct Contracts",
          "expression": "COUNT(DISTINCT C_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct contracts represented in the data."
        },
        {
          "name": "Subscription Product Count",
          "expression": "SUM(CASE WHEN CP_IsSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of contract products flagged as subscription-based."
        },
        {
          "name": "Renewable Product Count",
          "expression": "SUM(CASE WHEN CP_IsRenewable = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of contract products flagged as renewable."
        },
        {
          "name": "Exchange Sale Count (Payment Method)",
          "expression": "SUM(CASE WHEN PM_IsExchangeSale = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of contract-product rows where the payment method marks the sale as an exchange."
        }
      ],
      "foreign_keys": [
        {
          "column": "C_ID",
          "references": "DimContract.ContractID"
        },
        {
          "column": "C_BPID",
          "references": "DimBusinessPartner.BPID"
        },
        {
          "column": "A_BPID",
          "references": "DimBusinessPartner.BPID"
        },
        {
          "column": "CP_ProductID",
          "references": "DimProduct.ProductID"
        },
        {
          "column": "CP_PaymentMethodID",
          "references": "DimPaymentMethod.PaymentMethodID"
        },
        {
          "column": "PM_ID",
          "references": "DimPaymentMethod.PaymentMethodID"
        },
        {
          "column": "C_SalesManID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "C_Signdate",
          "references": "DimDate.DateKey"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CP_ProductName",
          "CP_ProductCode",
          "CP_BPName",
          "C_BPName",
          "C_Signdate"
        ],
        "default_filters": [
          {
            "column": "C_State",
            "op": "=",
            "value": "1"
          },
          {
            "column": "CP_State",
            "op": "=",
            "value": "5"
          }
        ]
      }
    },
    {
      "name": "FactAdvertisementView",
      "source": "dbo.ViewAdvertisement",
      "grain": [
        "Adv_ID",
        "CP_ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(1)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows in the view (base row count)"
        },
        {
          "name": "AdvertisementCount",
          "expression": "COUNT(DISTINCT Adv_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of distinct advertisements"
        },
        {
          "name": "ContractProductCount",
          "expression": "COUNT(DISTINCT CP_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of distinct contract products referenced by the advertisement rows"
        },
        {
          "name": "TotalListPrice",
          "expression": "SUM(CP_Price)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Aggregate list price from the contract product level (sum of CP_Price)"
        },
        {
          "name": "TotalDiscount",
          "expression": "SUM(CP_Discount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Aggregate direct discounts applied at contract product level (sum of CP_Discount)"
        },
        {
          "name": "TotalRulesDiscount",
          "expression": "SUM(CP_RulesDiscount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Aggregate rule-based discounts applied at contract product level (sum of CP_RulesDiscount)"
        },
        {
          "name": "TotalNetPrice",
          "expression": "SUM( (COALESCE(CP_Price,0)) - (COALESCE(CP_Discount,0)) - (COALESCE(CP_RulesDiscount,0)) )",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Net price after discounts at contract product level: SUM(CP_Price - CP_Discount - CP_RulesDiscount)"
        },
        {
          "name": "AverageListPricePerContractProduct",
          "expression": "AVG(CP_Price)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average list price per contract product (AVG(CP_Price))"
        },
        {
          "name": "AverageNetPricePerAdvertisement",
          "expression": "SUM( (COALESCE(CP_Price,0)) - (COALESCE(CP_Discount,0)) - (COALESCE(CP_RulesDiscount,0)) ) / NULLIF(COUNT(DISTINCT Adv_ID),0)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average net price allocated to each advertisement (total net price / distinct advertisements)"
        },
        {
          "name": "ActiveAdvertisementCount",
          "expression": "COUNT(CASE WHEN Adv_EndDate IS NULL OR Adv_EndDate >= CURRENT_TIMESTAMP THEN 1 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of advertisements that are currently active (no end date or end date in the future)"
        },
        {
          "name": "SubscriptionAdvertisementCount",
          "expression": "COUNT(CASE WHEN Adv_IsSubscriptionBased = 1 THEN 1 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of advertisements marked as subscription-based"
        },
        {
          "name": "ContractProductIsSubscriptionCount",
          "expression": "COUNT(CASE WHEN CP_IsSubscriptionBased = 1 THEN 1 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of contract products marked as subscription-based"
        },
        {
          "name": "ContractProductIsRenewableCount",
          "expression": "COUNT(CASE WHEN CP_IsRenewable = 1 THEN 1 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of contract products marked as renewable"
        },
        {
          "name": "ContractProductIsRenewedCount",
          "expression": "COUNT(CASE WHEN CP_IsRenewed = 1 THEN 1 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of contract products that have been renewed"
        },
        {
          "name": "PercentContractProductsRenewable",
          "expression": "100.0 * SUM(CASE WHEN CP_IsRenewable = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(CP_ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of contract products that are renewable (percentage)"
        },
        {
          "name": "TotalAdvertisementDurationDays",
          "expression": "SUM(DATEDIFF(day, Adv_BeginDate, ISNULL(Adv_EndDate, CURRENT_TIMESTAMP)))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of advertisement durations in days. For open advertisements (no end date) uses current timestamp as end"
        },
        {
          "name": "AverageAdvertisementDurationDays",
          "expression": "AVG(DATEDIFF(day, Adv_BeginDate, ISNULL(Adv_EndDate, CURRENT_TIMESTAMP)))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Average advertisement duration in days (open ads use current timestamp)"
        },
        {
          "name": "CountPaymentMethods",
          "expression": "COUNT(DISTINCT PM_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct payment methods referenced by advertisement/contract product rows"
        }
      ],
      "foreign_keys": [
        {
          "column": "C_ID",
          "references": "DimCustomer.CustomerID"
        },
        {
          "column": "C_BPID",
          "references": "DimBusinessPartner.BPID"
        },
        {
          "column": "A_BPID",
          "references": "DimBusinessPartner.BPID"
        },
        {
          "column": "CP_ID",
          "references": "DimContractProduct.ContractProductID"
        },
        {
          "column": "Adv_ID",
          "references": "DimAdvertisement.AdvertisementID"
        },
        {
          "column": "Adv_ProductID",
          "references": "DimProduct.ProductID"
        },
        {
          "column": "CP_ProductID",
          "references": "DimProduct.ProductID"
        },
        {
          "column": "PM_ID",
          "references": "DimPaymentMethod.PaymentMethodID"
        },
        {
          "column": "C_CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "Adv_HeadingID",
          "references": "DimHeading.HeadingID"
        },
        {
          "column": "Adv_GeoAreaID",
          "references": "DimGeoArea.GeoAreaID"
        },
        {
          "column": "Adv_VersionSectionID",
          "references": "DimVersionSection.VersionSectionID"
        },
        {
          "column": "CP_VersionSectionID",
          "references": "DimVersionSection.VersionSectionID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Adv_ProductName",
          "CP_ProductName",
          "C_BPName",
          "CP_BPName",
          "Adv_BeginDate",
          "Adv_EndDate",
          "PM_Type"
        ],
        "default_filters": [
          {
            "column": "CP_BPIsActive",
            "op": "=",
            "value": true
          },
          {
            "column": "Adv_BeginDate",
            "op": "IN_LAST",
            "value": "12 months"
          }
        ]
      }
    },
    {
      "name": "FactAdvertisementView",
      "source": "dbo.ViewAdvertisement",
      "grain": [
        "Adv_ID",
        "CP_ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows in the advertisement view (one row is the combination of Adv_ID and CP_ID)"
        },
        {
          "name": "DistinctAdvertisementCount",
          "expression": "COUNT(DISTINCT Adv_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct advertisements represented in the result set"
        },
        {
          "name": "DistinctContractCount",
          "expression": "COUNT(DISTINCT C_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct contracts (C_ID) referenced by the advertisements"
        },
        {
          "name": "GrossPrice",
          "expression": "SUM(COALESCE(CP_Price, Adv_Price, 0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total gross price before discounts. Uses product-level price (CP_Price) when available, otherwise advertisement-level price (Adv_Price)."
        },
        {
          "name": "TotalDiscountAmount",
          "expression": "SUM(COALESCE(CP_Discount, Adv_Discount, 0) + COALESCE(CP_RulesDiscount, Adv_RulesDiscount, 0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of explicit discounts and rules-based discounts at product or advertisement level (absolute amounts)."
        },
        {
          "name": "NetRevenueEstimate",
          "expression": "SUM(COALESCE(CP_Price, Adv_Price, 0) - (COALESCE(CP_Discount, Adv_Discount, 0) + COALESCE(CP_RulesDiscount, Adv_RulesDiscount, 0)))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Estimated net revenue after subtracting discounts from price (uses CP_Price if available, otherwise Adv_Price)."
        },
        {
          "name": "AverageGrossPrice",
          "expression": "AVG(COALESCE(CP_Price, Adv_Price, 0))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average gross price per row (uses product-level price if present, otherwise advertisement-level price)."
        },
        {
          "name": "AverageNetPrice",
          "expression": "AVG(COALESCE(CP_Price, Adv_Price, 0) - (COALESCE(CP_Discount, Adv_Discount, 0) + COALESCE(CP_RulesDiscount, Adv_RulesDiscount, 0)))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average net price per row after discounts."
        },
        {
          "name": "SubscriptionRows",
          "expression": "SUM(CASE WHEN COALESCE(CP_IsSubscriptionBased, Adv_IsSubscriptionBased, 0) = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows flagged as subscription-based either at the contract-product level (CP_IsSubscriptionBased) or advertisement level (Adv_IsSubscriptionBased)."
        },
        {
          "name": "SubscriptionRate",
          "expression": "CASE WHEN COUNT(*) = 0 THEN NULL ELSE SUM(CASE WHEN COALESCE(CP_IsSubscriptionBased, Adv_IsSubscriptionBased, 0) = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows that are subscription-based (subscription rows divided by total rows)."
        },
        {
          "name": "RenewableRows",
          "expression": "SUM(CASE WHEN COALESCE(CP_IsRenewable, 0) = 1 OR COALESCE(CP_IsRenewed, 0) = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of contract-product rows marked as renewable (CP_IsRenewable) or already renewed (CP_IsRenewed)."
        },
        {
          "name": "QAFlaggedRows",
          "expression": "SUM(CASE WHEN COALESCE(Adv_QA, 0) = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of advertisements flagged for QA."
        },
        {
          "name": "AverageActiveDurationDays",
          "expression": "AVG(DATEDIFF(day, Adv_BeginDate, ISNULL(Adv_EndDate, GETDATE())))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average duration in days of the advertisement window (Adv_BeginDate to Adv_EndDate). If Adv_EndDate is null, current date is used."
        },
        {
          "name": "ActiveAdvertiserRows",
          "expression": "SUM(CASE WHEN COALESCE(A_BPIsActive, 0) = 1 OR COALESCE(C_BPIsActive, 0) = 1 OR COALESCE(CP_BPIsActive, 0) = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of rows where any of the advertiser/business partner active flags (advertiser, contract BP, contract-product BP) are set to active."
        }
      ],
      "foreign_keys": [
        {
          "column": "C_ID",
          "references": "DimContract.ContractID"
        },
        {
          "column": "C_BPID",
          "references": "DimBusinessPartner.BPID"
        },
        {
          "column": "A_BPID",
          "references": "DimBusinessPartner.BPID"
        },
        {
          "column": "CP_BPID",
          "references": "DimBusinessPartner.BPID"
        },
        {
          "column": "Adv_ProductID",
          "references": "DimProduct.ProductID"
        },
        {
          "column": "CP_ProductID",
          "references": "DimProduct.ProductID"
        },
        {
          "column": "PM_ID",
          "references": "DimPaymentMethod.PaymentMethodID"
        },
        {
          "column": "CP_PaymentMethodID",
          "references": "DimPaymentMethod.PaymentMethodID"
        },
        {
          "column": "Adv_HeadingID",
          "references": "DimHeading.HeadingID"
        },
        {
          "column": "Adv_GeoAreaID",
          "references": "DimGeoArea.GeoAreaID"
        },
        {
          "column": "C_CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "C_SalesManID",
          "references": "DimEmployee.EmployeeID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Adv_BeginDate (date)",
          "A_BPName",
          "Adv_ProductName",
          "CP_ProductName",
          "PM_Type",
          "Adv_VersionSectionCode"
        ],
        "default_filters": [
          {
            "column": "Adv_BeginDate",
            "op": ">=",
            "value": "DATEADD(year, -1, GETDATE())",
            "description": "Show last 12 months by default"
          },
          {
            "column": "CP_State",
            "op": "IN",
            "value": "[1]",
            "description": "Filter to active / relevant contract-product states by default (adjust state codes to your environment)"
          }
        ],
        "useful_labels": {
          "Adv_BeginDate": "Advertisement Start Date",
          "Adv_EndDate": "Advertisement End Date",
          "A_BPName": "Advertiser",
          "CP_ProductName": "Contract Product",
          "Adv_ProductName": "Advertisement Product"
        }
      }
    },
    {
      "name": "FactContentAttributeValue",
      "source": "dbo.ViewContentAttributeValue",
      "grain": [
        "Cav_ID"
      ],
      "measures": [
        {
          "name": "AttributeValueCount",
          "expression": "COUNT(Cav_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of attribute value records (rows) in the view."
        },
        {
          "name": "DistinctContractCount",
          "expression": "COUNT(DISTINCT C_ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct contracts associated with attribute values."
        },
        {
          "name": "DistinctProductCount",
          "expression": "COUNT(DISTINCT CP_ProductID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct products referenced by the attribute values (via contract product)."
        },
        {
          "name": "Sum_ContractProductPrice",
          "expression": "SUM(CP_Price)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total of CP_Price across rows. CP_Price is the contract-product price associated with the attribute value."
        },
        {
          "name": "Sum_ContractProductDiscount",
          "expression": "SUM(CP_Discount)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total of CP_Discount across rows. Represents discounts applied at the contract-product level."
        },
        {
          "name": "Avg_ContractProductPrice",
          "expression": "AVG(CP_Price)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average CP_Price across attribute value rows."
        },
        {
          "name": "SubscriptionBasedCount",
          "expression": "SUM(CASE WHEN CP_IsSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of attribute value rows where the related contract-product is subscription-based."
        },
        {
          "name": "ActiveBusinessPartnerCount",
          "expression": "SUM(CASE WHEN C_BPIsActive = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of attribute value rows tied to active business partners (C_BPIsActive)."
        }
      ],
      "foreign_keys": [
        {
          "column": "C_ID",
          "references": "Contract.ContractID"
        },
        {
          "column": "C_BPID",
          "references": "BusinessPartner.BPID"
        },
        {
          "column": "A_BPID",
          "references": "BusinessPartner.BPID"
        },
        {
          "column": "CP_ID",
          "references": "ContractProduct.ContractProductID"
        },
        {
          "column": "CP_ProductID",
          "references": "Product.ProductID"
        },
        {
          "column": "Adv_ID",
          "references": "Advertisement.AdvertisementID"
        },
        {
          "column": "PPD_ID",
          "references": "ProductParameterDefinition.PPD_ID"
        },
        {
          "column": "Cad_ID",
          "references": "ContentAttributeDefinition.Cad_ID"
        },
        {
          "column": "PM_ID",
          "references": "PaymentMethod.PaymentMethodID"
        },
        {
          "column": "C_CreatedOn",
          "references": "Date.Date"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPartner",
          "Product",
          "AttributeName",
          "ContractDate"
        ],
        "default_filters": [
          {
            "column": "C_BPIsActive",
            "op": "=",
            "value": true
          },
          {
            "column": "C_CreatedOn",
            "op": ">=",
            "value": "2023-01-01"
          },
          {
            "column": "Cav_Value",
            "op": "IS NOT",
            "value": null
          }
        ]
      }
    },
    {
      "name": "FactRenewalFailure",
      "source": "dbo.ViewRenewalFailure",
      "grain": [
        "BatchID",
        "ContractID"
      ],
      "measures": [
        {
          "name": "RenewalFailureCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of renewal failure records (rows) in the view"
        },
        {
          "name": "DistinctContracts",
          "expression": "COUNT(DISTINCT ContractID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct contracts that experienced at least one renewal failure"
        },
        {
          "name": "DistinctBatches",
          "expression": "COUNT(DISTINCT BatchID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct processing batches represented in the result set"
        },
        {
          "name": "IsInvalidCount",
          "expression": "SUM(CASE WHEN IsInvalid = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records flagged as invalid (IsInvalid = 1)"
        },
        {
          "name": "PercentInvalid",
          "expression": "SUM(CASE WHEN IsInvalid = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of records that are flagged invalid (IsInvalid = 1) relative to total records"
        },
        {
          "name": "Invalid_Target_CP_VSID_Count",
          "expression": "SUM(CASE WHEN Invalid_Target_CP_VSID = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records with Invalid_Target_CP_VSID flag set"
        },
        {
          "name": "Invalid_Target_CP_ProductID_Count",
          "expression": "SUM(CASE WHEN Invalid_Target_CP_ProductID = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records with Invalid_Target_CP_ProductID flag set"
        },
        {
          "name": "Invalid_Target_ADV_VSID_Count",
          "expression": "SUM(CASE WHEN Invalid_Target_ADV_VSID = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records with Invalid_Target_ADV_VSID flag set"
        },
        {
          "name": "Invalid_Target_ADV_ProductID_Count",
          "expression": "SUM(CASE WHEN Invalid_Target_ADV_ProductID = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records with Invalid_Target_ADV_ProductID flag set"
        },
        {
          "name": "Invalid_Target_ADV_HeadingID_Count",
          "expression": "SUM(CASE WHEN Invalid_Target_ADV_HeadingID = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records with Invalid_Target_ADV_HeadingID flag set"
        },
        {
          "name": "Invalid_Target_ADV_GeoAreaID_Count",
          "expression": "SUM(CASE WHEN Invalid_Target_ADV_GeoAreaID = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records with Invalid_Target_ADV_GeoAreaID flag set"
        },
        {
          "name": "Invalid_Adv_EndDate_Count",
          "expression": "SUM(CASE WHEN Invalid_Adv_EndDate = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records where the advertisement end date is considered invalid"
        },
        {
          "name": "Invalid_BPIsActive_Count",
          "expression": "SUM(CASE WHEN Invalid_BPIsActive = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records with business partner active-state validation failures"
        },
        {
          "name": "IsCustomerRed_Count",
          "expression": "SUM(CASE WHEN IsCustomerRed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of records where the customer is marked as 'red' (IsCustomerRed = 1)"
        },
        {
          "name": "DistinctErrorTypes",
          "expression": "COUNT(DISTINCT ErrorType)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct error types present in the dataset"
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchID",
          "references": "DimBatch.BatchID",
          "description": "Reference to processing batch metadata"
        },
        {
          "column": "ContractID",
          "references": "DimContract.ContractID",
          "description": "Reference to the contract dimension"
        },
        {
          "column": "SalesManID",
          "references": "DimEmployee.EmployeeID",
          "description": "Reference to the sales person / account manager"
        },
        {
          "column": "AdvertisementID",
          "references": "DimAdvertisement.AdvertisementID",
          "description": "Reference to advertisement / campaign dimension"
        },
        {
          "column": "CP_ProductID",
          "references": "DimProduct.ProductID",
          "description": "Reference to the contract product (source product) dimension"
        },
        {
          "column": "Target_CP_ProductID",
          "references": "DimProduct.ProductID",
          "description": "Reference to the target contract product dimension"
        },
        {
          "column": "Adv_ProductID",
          "references": "DimProduct.ProductID",
          "description": "Reference to the advertisement product dimension"
        },
        {
          "column": "Adv_EndDate",
          "references": "DimDate.Date",
          "description": "Reference to date dimension for the advertisement end date (date key should be derived from Adv_EndDate)"
        }
      ],
      "display": {
        "default_breakdowns": [
          "ErrorType",
          "IsInvalid",
          "SalesMan",
          "CP_ProductCode",
          "Adv_Medium",
          "Adv_EndDate"
        ],
        "default_filters": [
          {
            "column": "IsInvalid",
            "op": "=",
            "value": "1"
          }
        ],
        "notes": "Default view focuses on records flagged as invalid; for time-series analysis join Adv_EndDate to a date dimension and use DistinctBatches or DistinctContracts as appropriate."
      }
    },
    {
      "name": "ProductionTask",
      "source": "dbo.ViewProductionTaskInfoNew",
      "grain": [
        "TaskID"
      ],
      "measures": [
        {
          "name": "Task Count",
          "expression": "COUNT(TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of production tasks (one row per TaskID)."
        },
        {
          "name": "Distinct Master Case Count",
          "expression": "COUNT(DISTINCT MasterCaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct master cases referenced by tasks."
        },
        {
          "name": "Tasks With Contract (Count)",
          "expression": "SUM(CASE WHEN ContractID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tasks that are associated with a Contract (ContractID is not NULL)."
        },
        {
          "name": "Percent Tasks With Contract",
          "expression": "CASE WHEN COUNT(TaskID)=0 THEN 0 ELSE SUM(CASE WHEN ContractID IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(TaskID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tasks that have a ContractID, expressed as a percentage of all tasks."
        },
        {
          "name": "Sum Contract Final Price",
          "expression": "SUM(ContractFinalPrice)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total of ContractFinalPrice across tasks. Currency assumed to be EUR based on source locale; validate if another currency is used in source system."
        },
        {
          "name": "Average Contract Final Price",
          "expression": "AVG(ContractFinalPrice)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average ContractFinalPrice for tasks with a non-null ContractFinalPrice. Currency assumed to be EUR."
        },
        {
          "name": "Distinct Salesmen",
          "expression": "COUNT(DISTINCT SalesManFullName)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct sales people (by SalesManFullName) associated with tasks. Null/blank names are excluded from distinct count."
        },
        {
          "name": "Tasks per Master Case (Average)",
          "expression": "CASE WHEN COUNT(DISTINCT MasterCaseID)=0 THEN NULL ELSE COUNT(TaskID) * 1.0 / NULLIF(COUNT(DISTINCT MasterCaseID),0) END",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of tasks per master case (Task Count divided by distinct MasterCase count). Returns NULL when there are no master cases."
        }
      ],
      "foreign_keys": [
        {
          "column": "MasterCaseID",
          "references": "DimMasterCase.MasterCaseID",
          "description": "Reference to the master case/dossier dimension."
        },
        {
          "column": "ContractID",
          "references": "DimContract.ContractID",
          "description": "Reference to contract dimension (most values are null in the sample)."
        },
        {
          "column": "TicketID",
          "references": "DimTicket.TicketID",
          "description": "Reference to related ticket (if present)."
        },
        {
          "column": "SalesManFullName",
          "references": "DimEmployee.FullName",
          "description": "Reference to employee dimension by full name (may be sparse / sometimes null)."
        },
        {
          "column": "ChannelDescription",
          "references": "DimChannel.Description",
          "description": "Reference to channel dimension (few distinct values observed)."
        }
      ],
      "display": {
        "default_breakdowns": [
          "MasterCaseID",
          "ChannelDescription",
          "SalesManFullName",
          "TicketID"
        ],
        "default_filters": [
          {
            "column": "TaskID",
            "op": "IS NOT",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "FactReleaseTask",
      "source": "dbo.ViewReleaseTaskInfo",
      "grain": [
        "TaskID"
      ],
      "measures": [
        {
          "name": "Task Count",
          "expression": "COUNT(TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tasks (one row per TaskID)."
        },
        {
          "name": "Unique Case Count",
          "expression": "COUNT(DISTINCT TaskCaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct cases referenced by the tasks."
        },
        {
          "name": "Assigned Task Count",
          "expression": "SUM(CASE WHEN TaskActualOwnerID IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tasks that have been assigned to an actual owner."
        },
        {
          "name": "Assignment Rate",
          "expression": "SUM(CASE WHEN TaskActualOwnerID IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tasks that are assigned to an owner (Assigned Task Count / Task Count)."
        },
        {
          "name": "Average Task Age (days)",
          "expression": "AVG(DATEDIFF(day, TaskCreatedOn, GETDATE()))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average age in days from TaskCreatedOn to today for the tasks in the current filter context."
        },
        {
          "name": "Max Task Age (days)",
          "expression": "MAX(DATEDIFF(day, TaskCreatedOn, GETDATE()))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum age in days (oldest task) in the current filter context."
        },
        {
          "name": "Open Task Count (status = 0)",
          "expression": "SUM(CASE WHEN TaskStatus = 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tasks with TaskStatus = 0 (interpreted as open/active in this dataset)."
        },
        {
          "name": "Tasks with Dynamic Description",
          "expression": "SUM(CASE WHEN TaskDynamicDescription IS NOT NULL AND LTRIM(RTRIM(TaskDynamicDescription)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of tasks that include a non-empty dynamic description."
        }
      ],
      "foreign_keys": [
        {
          "column": "TaskSenderID",
          "references": "dim_user.UserID"
        },
        {
          "column": "TaskActualOwnerID",
          "references": "dim_user.UserID"
        },
        {
          "column": "TaskTypeID",
          "references": "dim_task_type.TaskTypeID"
        },
        {
          "column": "TaskCaseID",
          "references": "dim_case.CaseID"
        },
        {
          "column": "CaseTypeID",
          "references": "dim_case_type.CaseTypeID"
        },
        {
          "column": "CaseContextEntityID",
          "references": "dim_entity.EntityID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskTypeCode",
          "TaskCaseTypeDescription",
          "TaskSenderFullName",
          "TaskActualOwnerFullName",
          "CaseContextEntityType",
          "TaskCreatedOn"
        ],
        "default_filters": [
          {
            "column": "TaskCreatedOn",
            "op": ">=",
            "value": "DATEADD(year, -1, GETDATE())"
          },
          {
            "column": "TaskStatus",
            "op": "IN",
            "value": "[0,1]"
          }
        ],
        "notes": "Default breakdowns should be used for interactive exploration (type, case type, sender, owner, entity). The TaskStatus filter above provides an example of focusing on common statuses; adjust as needed for business definitions of open/closed."
      }
    },
    {
      "name": "OBPSBatchRun_Fact",
      "source": "dbo.OBPSBatchRun",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "RunCount",
          "expression": "COUNT(Id)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of batch run records (at the row grain)."
        },
        {
          "name": "CompletedCount",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of runs that have a completion timestamp (CompletedOn is not null)."
        },
        {
          "name": "FailedCount",
          "expression": "SUM(CASE WHEN Status = 3 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of runs flagged with Status = 3 (interpreted as failure). Confirm status code mapping in source system."
        },
        {
          "name": "IncompleteCount",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of runs that have not completed (no CompletedOn timestamp)."
        },
        {
          "name": "CompletionRate",
          "expression": "CASE WHEN COUNT(Id) = 0 THEN 0 ELSE SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(Id) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of runs that completed (CompletedCount / RunCount). Returns 0 when there are no runs in the grouping."
        },
        {
          "name": "AvgCompletionLatencySeconds",
          "expression": "AVG(DATEDIFF(second, ScheduledOn, CompletedOn))",
          "unit": "seconds",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average elapsed time in seconds between ScheduledOn and CompletedOn for runs with a CompletedOn timestamp. Excludes runs with null CompletedOn."
        },
        {
          "name": "MinCompletionLatencySeconds",
          "expression": "MIN(DATEDIFF(second, ScheduledOn, CompletedOn))",
          "unit": "seconds",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Minimum elapsed time in seconds between ScheduledOn and CompletedOn for completed runs."
        },
        {
          "name": "MaxCompletionLatencySeconds",
          "expression": "MAX(DATEDIFF(second, ScheduledOn, CompletedOn))",
          "unit": "seconds",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum elapsed time in seconds between ScheduledOn and CompletedOn for completed runs."
        },
        {
          "name": "UnspecifiedPriorityCount",
          "expression": "SUM(CASE WHEN Priority = 2147483647 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of runs where Priority has the 2147483647 placeholder value (commonly used to indicate unspecified or default priority)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchSearchId",
          "references": "dbo.OBPSBatchSearch.Id"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BatchSearchId",
          "Status",
          "ScheduledOn",
          "Priority"
        ],
        "default_filters": [
          {
            "column": "ScheduledOn",
            "op": ">=",
            "value": "2024-01-01T00:00:00"
          }
        ]
      }
    },
    {
      "name": "OBPSIndividualSearch",
      "source": "dbo.OBPSIndividualSearch",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "Searches",
          "expression": "COUNT(Id)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of individual search events (rows) in the table."
        },
        {
          "name": "TotalResults",
          "expression": "SUM(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of results returned across all recorded searches."
        },
        {
          "name": "AverageResultsPerSearch",
          "expression": "AVG(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of results returned per search."
        },
        {
          "name": "MaxResultsPerSearch",
          "expression": "MAX(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Maximum number of results returned for a single search."
        },
        {
          "name": "MinResultsPerSearch",
          "expression": "MIN(ResultsCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Minimum number of results returned for a single search."
        },
        {
          "name": "DistinctSearchTexts",
          "expression": "COUNT(DISTINCT Text)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct search text values (unique search phrases)."
        },
        {
          "name": "UniqueSearchTextRatio",
          "expression": "CASE WHEN COUNT(Id) = 0 THEN 0 ELSE COUNT(DISTINCT Text) * 1.0 / COUNT(Id) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of searches whose search text is unique (distinct texts divided by total searches)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BatchRunId",
          "references": "dbo.OBPSBatchRun.Id"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BatchRunId",
          "Text",
          "Type"
        ],
        "default_filters": [
          {
            "column": "ResultsCount",
            "op": ">=",
            "value": "1"
          }
        ]
      }
    },
    {
      "name": "FactOBPSSearchResult",
      "source": "dbo.OBPSSearchResult",
      "grain": [
        "Id"
      ],
      "measures": [
        {
          "name": "ResultCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of search result rows (records) in the slice."
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointId)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct BusinessPointId values returned by searches."
        },
        {
          "name": "DistinctBusinessUniqueIdCount",
          "expression": "COUNT(DISTINCT BusinessUniqueId)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct external business identifiers (BusinessUniqueId) in the results."
        },
        {
          "name": "CurrentResultsCount",
          "expression": "SUM(CASE WHEN IsCurrent = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of results marked as current (IsCurrent = true)."
        },
        {
          "name": "PercentCurrent",
          "expression": "SUM(CASE WHEN IsCurrent = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of results that are current (IsCurrent)."
        },
        {
          "name": "CountWithPhoneNumber",
          "expression": "SUM(CASE WHEN InternationalPhoneNumber IS NOT NULL AND LEN(RTRIM(InternationalPhoneNumber)) > 0 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of results that include an international phone number."
        },
        {
          "name": "PercentWithPhoneNumber",
          "expression": "SUM(CASE WHEN InternationalPhoneNumber IS NOT NULL AND LEN(RTRIM(InternationalPhoneNumber)) > 0 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of results that include an international phone number."
        },
        {
          "name": "HasMultipleBusinessPointsCount",
          "expression": "SUM(CASE WHEN HasMultipleBusinessPoints = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of results flagged as having multiple business points."
        },
        {
          "name": "AverageResultsPerSearch",
          "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT IndividualSearchId), 0)",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(1)",
          "description": "Average number of results returned per individual search (aggregate across IndividualSearchId)."
        },
        {
          "name": "AvgCompletenessScoreFraction",
          "expression": "AVG(TRY_CAST(LEFT(CompletenessScore, CHARINDEX('/', CompletenessScore) - 1) AS FLOAT) / NULLIF(TRY_CAST(SUBSTRING(CompletenessScore, CHARINDEX('/', CompletenessScore) + 1, 10) AS FLOAT), 0))",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average completeness score expressed as a fraction (e.g. '8/9' -> 8/9). Uses NULL-safe parsing of the CompletenessScore string."
        },
        {
          "name": "CountResponsesContainingWebsite",
          "expression": "SUM(CASE WHEN Response IS NOT NULL AND Response LIKE '%\"websiteUri\"%' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of results whose JSON Response appears to include a websiteUri field."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointId",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "IndividualSearchId",
          "references": "dbo.OBPSIndividualSearch.Id"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessName",
          "ComparisonStatus",
          "IndividualSearchId"
        ],
        "default_filters": [
          {
            "column": "IsCurrent",
            "op": "=",
            "value": "True"
          }
        ]
      }
    },
    {
      "name": "SalesCollection",
      "source": "dbo.SalesCollection",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "TotalAmount",
          "expression": "SUM(CAST(Amount AS DECIMAL(18,2)))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of collected amounts for the collection records."
        },
        {
          "name": "CountCollections",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of collection records (rows) in the period or filter context."
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(CAST(Amount AS DECIMAL(18,2)))",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average collected amount per collection record."
        },
        {
          "name": "DistinctContracts",
          "expression": "COUNT(DISTINCT ContractID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct contracts associated with the collection records."
        },
        {
          "name": "PercentTransferredToERP",
          "expression": "SUM(CASE WHEN TransferDateToERP IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of collections that have been transferred to the ERP system (TransferDateToERP is populated)."
        },
        {
          "name": "CountNotTransferred",
          "expression": "SUM(CASE WHEN TransferDateToERP IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of collection records that have not been transferred to the ERP system."
        },
        {
          "name": "AverageTransferDelayDays",
          "expression": "AVG(CAST(DATEDIFF(day, CollectionDate, TransferDateToERP) AS FLOAT))",
          "unit": "days",
          "currency": null,
          "format_hint": "decimal(1)",
          "description": "Average number of days between the collection date and the ERP transfer date (calculated for rows where TransferDateToERP is populated)."
        },
        {
          "name": "NetAmountConsideringType",
          "expression": "SUM(CASE WHEN Type = 1 THEN CAST(Amount AS DECIMAL(18,2)) ELSE -CAST(Amount AS DECIMAL(18,2)) END)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Net amount where Type=1 is considered positive collection and other Type values (e.g., refunds) are subtracted. Adjusts sign by the Type field."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ModifiedByID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPointID",
          "PaymentType",
          "CreatedByID",
          "CollectionDate"
        ],
        "default_filters": [
          {
            "column": "IsDeleted",
            "op": "=",
            "value": "False"
          }
        ]
      }
    },
    {
      "name": "SalesManTargeting",
      "source": "dbo.SalesManTargeting",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows (targeting records)"
        },
        {
          "name": "TotalWorkingDays",
          "expression": "SUM(TotalWorkingDays)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of working days recorded for the salesperson across records"
        },
        {
          "name": "TotalVisits",
          "expression": "SUM(TotalVisits)",
          "unit": "visits",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Total number of visits (aggregated). Note: source type is DECIMAL to allow fractional reporting if used."
        },
        {
          "name": "COVisits",
          "expression": "SUM(COVisits)",
          "unit": "visits",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Total CO (carry-over / change-of) visits aggregated"
        },
        {
          "name": "NewVisits",
          "expression": "SUM(NewVisits)",
          "unit": "visits",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Total new visits recorded"
        },
        {
          "name": "COCustomers",
          "expression": "SUM(COCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of CO customers aggregated"
        },
        {
          "name": "COAmount",
          "expression": "SUM(COAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount associated with CO customers (USD)"
        },
        {
          "name": "LossCustomers",
          "expression": "SUM(LossCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of customers lost"
        },
        {
          "name": "LossAmount",
          "expression": "SUM(LossAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary value lost due to lost customers (USD)"
        },
        {
          "name": "IncreaseCustomers",
          "expression": "SUM(IncreaseCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of customers added / increased"
        },
        {
          "name": "IncreaseAmount",
          "expression": "SUM(IncreaseAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary increase from new/increased customers (USD)"
        },
        {
          "name": "ReductionCustomers",
          "expression": "SUM(ReductionCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of customers with reduction in business"
        },
        {
          "name": "ReductionAmount",
          "expression": "SUM(ReductionAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary reduction amount (USD)"
        },
        {
          "name": "NoChangesCustomers",
          "expression": "SUM(NoChangesCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of customers with no change"
        },
        {
          "name": "NoChangesAmount",
          "expression": "SUM(NoChangesAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary value for customers with no change (USD)"
        },
        {
          "name": "ROCOCustomers",
          "expression": "SUM(ROCOCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "ROCO customer count (returned / regained customers)"
        },
        {
          "name": "ROCOAmount",
          "expression": "SUM(ROCOAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount associated with ROCO customers (USD)"
        },
        {
          "name": "NewCustomers",
          "expression": "SUM(NewCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of newly acquired customers"
        },
        {
          "name": "NewAmount",
          "expression": "SUM(NewAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Monetary amount from newly acquired customers (USD)"
        },
        {
          "name": "TotalCustomers",
          "expression": "SUM(TotalCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total customers covered in the record (aggregated)"
        },
        {
          "name": "TotalAmount",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total monetary amount for the targeted customers (USD)"
        },
        {
          "name": "AverageVisitsPerWorkingDay",
          "expression": "CASE WHEN SUM(TotalWorkingDays) = 0 THEN NULL ELSE SUM(TotalVisits) / NULLIF(SUM(TotalWorkingDays),0) END",
          "unit": "visits/day",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of visits per working day for the aggregated records"
        },
        {
          "name": "NewCustomerRate",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(NewCustomers) / NULLIF(SUM(TotalCustomers),0) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of total customers that are new (NewCustomers / TotalCustomers)"
        },
        {
          "name": "LossRate",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(LossCustomers) / NULLIF(SUM(TotalCustomers),0) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of total customers lost (LossCustomers / TotalCustomers)"
        },
        {
          "name": "COCustomerRate",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(COCustomers) / NULLIF(SUM(TotalCustomers),0) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of CO customers relative to total customers"
        },
        {
          "name": "NetCustomerChange",
          "expression": "SUM(IncreaseCustomers) - SUM(LossCustomers)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Net change in customer counts (increases minus losses)"
        },
        {
          "name": "NetAmountChange",
          "expression": "SUM(IncreaseAmount) - SUM(LossAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Net monetary change from increases minus losses (USD)"
        },
        {
          "name": "AverageAmountPerCustomer",
          "expression": "CASE WHEN SUM(TotalCustomers) = 0 THEN NULL ELSE SUM(TotalAmount) / NULLIF(SUM(TotalCustomers),0) END",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average dollar value per customer (TotalAmount / TotalCustomers)"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.ID"
        },
        {
          "column": "GroupID",
          "references": "CampaignGroup.ID"
        },
        {
          "column": "SegmentID",
          "references": "CampaignSegment.ID"
        },
        {
          "column": "SalesManID",
          "references": "User.ID"
        },
        {
          "column": "SuperVisorID",
          "references": "User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "Group",
          "Segment",
          "SalesMan",
          "SuperVisor"
        ],
        "default_filters": [
          {
            "column": "TotalAmount",
            "op": ">",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "Tickets (FactTicket)",
      "source": "dbo.Ticket",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Ticket Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of tickets (rows) in the table."
        },
        {
          "name": "Completed Tickets",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tickets that have a completion timestamp (CompletedOn)."
        },
        {
          "name": "Open Tickets",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tickets not yet completed (no CompletedOn)."
        },
        {
          "name": "Completion Rate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END) / CAST(COUNT(ID) AS FLOAT) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tickets that are completed (Completed Tickets / Ticket Count)."
        },
        {
          "name": "Average Time to Complete (hours)",
          "expression": "AVG(CASE WHEN CompletedOn IS NOT NULL THEN DATEDIFF(SECOND, CreatedOn, CompletedOn) / 3600.0 ELSE NULL END)",
          "unit": "hours",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average elapsed time from CreatedOn to CompletedOn expressed in hours (only for completed tickets)."
        },
        {
          "name": "Average Time Received-to-Complete (hours)",
          "expression": "AVG(CASE WHEN ReceivedOn IS NOT NULL AND CompletedOn IS NOT NULL THEN DATEDIFF(SECOND, ReceivedOn, CompletedOn) / 3600.0 ELSE NULL END)",
          "unit": "hours",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average elapsed time from ReceivedOn to CompletedOn in hours. Null when ReceivedOn or CompletedOn is missing."
        },
        {
          "name": "Tickets Needing Evaluation",
          "expression": "SUM(CASE WHEN NeedEval = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tickets flagged as requiring evaluation (NeedEval = true)."
        },
        {
          "name": "Tickets Requiring Supervisor",
          "expression": "SUM(CASE WHEN NeedSupervisor = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tickets flagged as requiring supervisor attention (NeedSupervisor = true)."
        },
        {
          "name": "Tickets with Customer Result",
          "expression": "SUM(CASE WHEN ResultCustomer = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tickets where the result was recorded as customer-related (ResultCustomer = true)."
        },
        {
          "name": "Tickets with Result Communication",
          "expression": "SUM(CASE WHEN ResultComm = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tickets that had a communication result flag set (ResultComm = true)."
        },
        {
          "name": "Average Open Duration (days, counts ongoing as of today)",
          "expression": "AVG(DATEDIFF(SECOND, CreatedOn, ISNULL(CompletedOn, CURRENT_TIMESTAMP)) / 86400.0)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average number of days tickets remain open. For unresolved tickets, computes days from CreatedOn to the current timestamp."
        }
      ],
      "foreign_keys": [
        {
          "column": "LastAssignRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "LastAssignUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InParallelRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "ResultCommTypeID",
          "references": "dbo.CanvasPlanningHistory.ID"
        },
        {
          "column": "SerialRoleID",
          "references": "dbo.Role.ID"
        },
        {
          "column": "SerialTicketTypdeID",
          "references": "dbo.TicketType.ID"
        },
        {
          "column": "RelatedContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "SelectedSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "TargetCampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "TargetSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "TargetSubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "TargetSupervisorID",
          "references": "dbo.User.ID"
        },
        {
          "column": "RelatedSalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "BusinessPointIdentificationId",
          "references": "dbo.BusinessPointIdentification.ID"
        },
        {
          "column": "CancellationResonID",
          "references": "dbo.TicketCancellationReason.ID"
        },
        {
          "column": "ChargeOfResponsibilityID",
          "references": "dbo.TicketChargeOfResponsibility.ID"
        },
        {
          "column": "CompletedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CreatedByID",
          "references": "dbo.User.ID"
        },
        {
          "column": "HandlerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "PriorityID",
          "references": "dbo.TicketPriority.ID"
        },
        {
          "column": "RequestReasonID",
          "references": "dbo.TicketRequestReason.ID"
        },
        {
          "column": "ResolutionMethodID",
          "references": "dbo.TicketResolutionMethod.ID"
        },
        {
          "column": "SourceTypeID",
          "references": "dbo.TicketSourceType.ID"
        },
        {
          "column": "TicketTypeID",
          "references": "dbo.TicketType.ID"
        },
        {
          "column": "WebChangesContractID",
          "references": "dbo.Contract.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPoint",
          "TicketType",
          "Priority",
          "SourceType",
          "CreatedOn.Year",
          "CreatedOn.Month"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": ">=",
            "value": "2000-01-01"
          }
        ],
        "notes": "Prefer breaking down by BusinessPoint, TicketType and CreatedOn (date hierarchy). When analyzing completion metrics, filter to Completed Tickets (CompletedOn IS NOT NULL) to avoid skew from open tickets."
      }
    },
    {
      "name": "FactTask",
      "source": "dbo.Task",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Task Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of tasks (row count) in the table."
        },
        {
          "name": "Completed Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks that have a CompletedOn timestamp (i.e., completed tasks)."
        },
        {
          "name": "Open Count",
          "expression": "SUM(CASE WHEN CompletedOn IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks that do not have a CompletedOn timestamp (i.e., still open)."
        },
        {
          "name": "Completion Rate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN NULL ELSE SUM(CASE WHEN CompletedOn IS NOT NULL THEN 1 ELSE 0 END) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of tasks that are completed (Completed Count divided by Task Count). Returns null when there are no tasks."
        },
        {
          "name": "Average Time to Complete (hours)",
          "expression": "AVG(CASE WHEN CompletedOn IS NOT NULL THEN DATEDIFF(SECOND, CreatedOn, CompletedOn) / 3600.0 ELSE NULL END)",
          "unit": "hours",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average elapsed time from CreatedOn to CompletedOn for completed tasks, expressed in hours."
        },
        {
          "name": "Average Time to First Owner Modification (hours)",
          "expression": "AVG(CASE WHEN ActualOwnerModifiedOn IS NOT NULL THEN DATEDIFF(SECOND, CreatedOn, ActualOwnerModifiedOn) / 3600.0 ELSE NULL END)",
          "unit": "hours",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average time from task creation to the first recorded modification of the actual owner, in hours. Null when ActualOwnerModifiedOn is not set."
        },
        {
          "name": "Distinct Actual Owners",
          "expression": "COUNT(DISTINCT ActualOwnerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct ActualOwnerID values referenced by tasks (nulls are excluded)."
        },
        {
          "name": "Tasks with Outcome Count",
          "expression": "SUM(CASE WHEN Outcome IS NOT NULL AND LTRIM(RTRIM(Outcome)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of tasks that have a non-empty Outcome value recorded."
        },
        {
          "name": "Distinct Cases",
          "expression": "COUNT(DISTINCT CaseID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of distinct cases referenced by tasks (useful to understand task-to-case relationships)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CompletedById",
          "references": "dbo.User.ID"
        },
        {
          "column": "TaskTypeID",
          "references": "dbo.TaskType.ID"
        },
        {
          "column": "ActualOwnerID",
          "references": "dbo.User.ID"
        },
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        },
        {
          "column": "SenderID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TaskTypeID",
          "CreatedOn.Date",
          "ActualOwnerID",
          "Status"
        ],
        "default_filters": [
          {
            "column": "CreatedOn",
            "op": "is not",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "CampaignBucket",
      "source": "dbo.CampaignBucket",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Row Count",
          "expression": "COUNT(1)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of campaign bucket rows (records)."
        },
        {
          "name": "Total Amount (sum)",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of TotalAmount for the bucket rows. Represents the total assigned/estimated spend across mediums."
        },
        {
          "name": "XO.gr (sum)",
          "expression": "SUM(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total spend/value attributed to XO.gr medium (sum of XOGRAmount)."
        },
        {
          "name": "Website (sum)",
          "expression": "SUM(WebSiteAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total spend/value attributed to Website medium (sum of WebSiteAmount)."
        },
        {
          "name": "PPC (sum)",
          "expression": "SUM(PPCAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total spend/value attributed to PPC (pay-per-click) (sum of PPCAmount)."
        },
        {
          "name": "Print (sum)",
          "expression": "SUM(PrintAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total spend/value attributed to Print (sum of PrintAmount). Often sparsely populated."
        },
        {
          "name": "Targeting Amount (calculated, sum)",
          "expression": "SUM(TargetingAmountCalculated)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of system-calculated targeting amounts (TargetingAmountCalculated)."
        },
        {
          "name": "Targeting Amount (by user, sum)",
          "expression": "SUM(TargetingAmountByUser)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of targeting amounts as entered/overridden by users (TargetingAmountByUser). May be frequently NULL."
        },
        {
          "name": "Average ScoreTotal",
          "expression": "AVG(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average of ScoreTotal across the selected bucket rows. ScoreTotal is a composite ranking score for the bucket."
        },
        {
          "name": "Maximum ScoreTotal",
          "expression": "MAX(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Maximum ScoreTotal observed in the selected bucket rows."
        },
        {
          "name": "Sum of ScoreTotal (points)",
          "expression": "SUM(ScoreTotal)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Sum of ScoreTotal values (useful to compute contribution of groups when combined with Row Count)."
        },
        {
          "name": "Average Score Difference to Avg",
          "expression": "AVG(ScoreDifferenceToAvg)",
          "unit": "score",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average difference of each bucket's score to the campaign average (ScoreDifferenceToAvg)."
        },
        {
          "name": "Distinct Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct BusinessPointID values in the current selection."
        },
        {
          "name": "Percent Working (WorkingStatus = 1)",
          "expression": "SUM(CASE WHEN WorkingStatus = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(1), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows in the selection whose WorkingStatus indicates active/working (WorkingStatus = 1)."
        },
        {
          "name": "Percent Item Active (ItemStatus = 1)",
          "expression": "SUM(CASE WHEN ItemStatus = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(1), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows with ItemStatus = 1 (typically indicates active/valid bucket items)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        },
        {
          "column": "FileID",
          "references": "dbo.CampaignBucketFileUploadHistory.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPointName",
          "BussinessPointCode",
          "NewSalesmanName",
          "NewSalesmanCode",
          "SupervisorName",
          "SegmentDescription",
          "NewChannel",
          "MainActivity",
          "ProductMixture",
          "VerticalsGrouping"
        ],
        "default_filters": [
          {
            "column": "ItemStatus",
            "op": "=",
            "value": "1"
          },
          {
            "column": "TotalAmount",
            "op": ">",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "CampaignSalesMarketItem",
      "source": "dbo.CampaignSalesMarketItem",
      "grain": [
        "CampaignID",
        "TargetGroupItemValueID",
        "BusinessPointID"
      ],
      "measures": [
        {
          "name": "MarketItemCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows / market items for the campaign-target-group-business point combination"
        },
        {
          "name": "DistinctBusinessPointCount",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points represented in the grain (useful if rows can repeat)"
        },
        {
          "name": "TotalSubrDiscount",
          "expression": "SUM(SubrTotalAmountDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of subscription-related discounts applied to items"
        },
        {
          "name": "TotalNoSubrDiscount",
          "expression": "SUM(NoSubrTotalAmountDiscounts)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of non-subscription-related discounts"
        },
        {
          "name": "TotalRenewalAmount",
          "expression": "SUM(RenewalTotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total renewal amounts for the items"
        },
        {
          "name": "AverageSubrDiscountPerItem",
          "expression": "AVG(SubrTotalAmountDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average subscription discount per row (NULLs are ignored in AVG)"
        },
        {
          "name": "AverageRenewalAmountPerItem",
          "expression": "AVG(RenewalTotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average renewal amount per row"
        },
        {
          "name": "SignedCount",
          "expression": "SUM(CASE WHEN SignedDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of items where a SignedDate exists (indicates signed deals)"
        },
        {
          "name": "SubscriptionBasedCount",
          "expression": "SUM(CASE WHEN IsCPSubscriptionBased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of items that are subscription-based"
        },
        {
          "name": "BundleCount",
          "expression": "SUM(CASE WHEN IsBundle = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of items flagged as bundles"
        },
        {
          "name": "PercentReleased",
          "expression": "100.0 * SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of items marked as released"
        },
        {
          "name": "PercentPaymentRefusal",
          "expression": "100.0 * SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of items with payment refusal flag"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.DimCampaign.CampaignID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.DimTargetGroupItemValue.TargetGroupItemValueID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.DimBusinessPoint.BusinessPointID"
        },
        {
          "column": "SegmentID",
          "references": "dbo.DimSegment.SegmentID"
        },
        {
          "column": "ChannelTypeID",
          "references": "dbo.DimChannelType.ChannelTypeID"
        },
        {
          "column": "GroupID",
          "references": "dbo.DimGroup.GroupID"
        },
        {
          "column": "PrefectureID",
          "references": "dbo.DimPrefecture.PrefectureID"
        },
        {
          "column": "MunicipalityID",
          "references": "dbo.DimMunicipality.MunicipalityID"
        },
        {
          "column": "SubrSalesmanID",
          "references": "dbo.DimSalesperson.SalespersonID"
        },
        {
          "column": "NoSubrSalesmanID",
          "references": "dbo.DimSalesperson.SalespersonID"
        },
        {
          "column": "HandlerSalesManID",
          "references": "dbo.DimSalesperson.SalespersonID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "PreviousCampaignName",
          "BusinessPointBrandName",
          "Prefecture",
          "Municipality",
          "SegmentName",
          "SubrSalesman",
          "NoSubrSalesman",
          "MediumName",
          "ReleasedStartDate",
          "SignedDate"
        ],
        "default_filters": [
          {
            "column": "ReleasedStartDate",
            "op": ">=",
            "value": "2024-01-01"
          },
          {
            "column": "IsReleased",
            "op": "!=",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "Target Group Item",
      "source": "dbo.TargetGroupItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Target Item Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of target group items (rows) in the selection."
        },
        {
          "name": "Unique Customers (Code)",
          "expression": "COUNT(DISTINCT Code)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customers identified by Code. Use when Code represents the customer identifier."
        },
        {
          "name": "Unique Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points represented in the target set."
        },
        {
          "name": "Unique Main Headings",
          "expression": "COUNT(DISTINCT MainHeadingID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct main heading categories present among the targets."
        },
        {
          "name": "With Phone Count",
          "expression": "SUM(CASE WHEN Phone IS NOT NULL AND Phone <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items that have at least one phone number recorded."
        },
        {
          "name": "Address Completeness Count",
          "expression": "SUM(CASE WHEN StreetName IS NOT NULL AND StreetName <> '' AND StreetNumber IS NOT NULL AND StreetNumber <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of target items with both StreetName and StreetNumber populated (basic address completeness)."
        },
        {
          "name": "Payment Refusal Count",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items marked as payment refusal."
        },
        {
          "name": "Payment Refusal Rate",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of targets marked as payment refusal relative to total target items."
        },
        {
          "name": "Disappeared Count",
          "expression": "SUM(CASE WHEN Disappeared = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target items flagged as disappeared."
        },
        {
          "name": "Disappeared Rate",
          "expression": "SUM(CASE WHEN Disappeared = 1 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of targets flagged as disappeared."
        },
        {
          "name": "Precariousness (Legal) Count",
          "expression": "SUM(CASE WHEN PrecariousnessLegal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of targets flagged for precariousness/legal status."
        },
        {
          "name": "Continuous Payment Refusal Count",
          "expression": "SUM(CASE WHEN ContinuousPaymentRefusal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of targets with continuous payment refusal flagged."
        },
        {
          "name": "Sealed Check Count",
          "expression": "SUM(CASE WHEN SealedCheck = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of targets flagged as having a sealed check."
        },
        {
          "name": "Reliability RED Count",
          "expression": "SUM(CASE WHEN ReliabilityStatus = 'RED' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of targets whose reliability status is RED."
        },
        {
          "name": "Reliability RED Rate",
          "expression": "SUM(CASE WHEN ReliabilityStatus = 'RED' THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(ID), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of targets with reliability status RED."
        },
        {
          "name": "Unknown Reliability Count",
          "expression": "SUM(CASE WHEN ReliabilityStatus IS NULL OR ReliabilityStatus = '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of targets with no reliability status recorded."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SourceCampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CaseID",
          "references": "dbo.Case.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "MainHeadingName",
          "Prefecture",
          "City",
          "BusinessPoint"
        ],
        "default_filters": [
          {
            "column": "CampaignID",
            "op": "IS NOT",
            "value": "NULL"
          }
        ],
        "notes": "Common analysis dimensions: Campaign -> CampaignID, BusinessPoint -> BusinessPointID, MainHeadingName (text), geographic breakdowns (Prefecture / City). Use boolean flag counts and rates to assess data quality and contactability."
      }
    },
    {
      "name": "FactTargetGroupItemValue",
      "source": "dbo.TargetGroupItemValue",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target group item value records"
        },
        {
          "name": "SumTargetValue",
          "expression": "SUM(CAST(TargetValue AS DECIMAL(18,3)))",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Sum of TargetValue across records (numeric target assigned to the group item)"
        },
        {
          "name": "AvgTargetValue",
          "expression": "AVG(CAST(TargetValue AS DECIMAL(18,3)))",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Average TargetValue per record"
        },
        {
          "name": "SumChannelTargetValue",
          "expression": "SUM(CAST(ChannelTargetValue AS DECIMAL(18,3)))",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Sum of ChannelTargetValue (target allocated at channel level)"
        },
        {
          "name": "SumUserTargetValue",
          "expression": "SUM(CAST(UserTargetValue AS DECIMAL(18,3)))",
          "unit": "number",
          "currency": null,
          "format_hint": "decimal(3)",
          "description": "Sum of UserTargetValue (target allocated at user level)"
        },
        {
          "name": "TotalVisits",
          "expression": "SUM(COALESCE(Visits,0))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total visits recorded for the target group items"
        },
        {
          "name": "TotalLossPrintedNew",
          "expression": "SUM(COALESCE(LossPrintedNew,0))",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of LossPrintedNew indicating printed-loss count for items"
        },
        {
          "name": "ReleasedCount",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records marked as released"
        },
        {
          "name": "ClosedCount",
          "expression": "SUM(CASE WHEN IsClosed = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records marked as closed"
        },
        {
          "name": "TargetValuesNeedRefreshCount",
          "expression": "SUM(CASE WHEN TargetValuesNeedRefresh = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records where target values are flagged to be refreshed"
        },
        {
          "name": "AvgPlannedDurationDays",
          "expression": "AVG(CASE WHEN StartDate IS NOT NULL AND EndDate IS NOT NULL THEN DATEDIFF(day, StartDate, EndDate) END)",
          "unit": "days",
          "currency": null,
          "format_hint": "decimal(1)",
          "description": "Average planned duration in days between StartDate and EndDate (nulls excluded)"
        }
      ],
      "foreign_keys": [
        {
          "column": "AltOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "ContractID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "FixOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "HandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialHandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "NegationReasonID",
          "references": "dbo.NegationReason.ID"
        },
        {
          "column": "NoCommReasonID",
          "references": "dbo.NoCommReason.ID"
        },
        {
          "column": "PendingReasonId",
          "references": "dbo.PendingReason.ID"
        },
        {
          "column": "PostponeReasonID",
          "references": "dbo.PostponeReason.ID"
        },
        {
          "column": "PresaleFormTaskId",
          "references": "dbo.Task.ID"
        },
        {
          "column": "ProposedHandlerUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ProposedTargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "SubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "Supervisor",
          "references": "dbo.User.ID"
        },
        {
          "column": "InitialSubChannelID",
          "references": "dbo.SubChannel.ID"
        },
        {
          "column": "CampaignAllocationPlanID",
          "references": "dbo.CampaignAllocationPlan.ID"
        },
        {
          "column": "RequestedDiscountOfferID",
          "references": "dbo.Contract.ID"
        },
        {
          "column": "TargetGroupItemID",
          "references": "dbo.TargetGroupItem.ID"
        },
        {
          "column": "TargetUserID",
          "references": "dbo.User.ID"
        },
        {
          "column": "PXKEditorUserID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "TargetGroupItemID",
          "HandlerUserID",
          "TargetUserID",
          "SubChannelID",
          "CampaignAllocationPlanID",
          "EndDate.Year"
        ],
        "default_filters": [
          {
            "column": "EndDate",
            "op": "is not null",
            "value": null
          },
          {
            "column": "IsReleased",
            "op": "=",
            "value": "True"
          }
        ],
        "default_sort": {
          "column": "EndDate",
          "direction": "desc"
        }
      }
    },
    {
      "name": "FactTargetGroupItemInfo",
      "source": "dbo.TargetGroupItemInfo",
      "grain": [
        "TargetGroupItemValueID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(TargetGroupItemValueID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of target group item rows (distinct TargetGroupItemValueID)."
        },
        {
          "name": "BalanceValue",
          "expression": "SUM(BalanceValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of current balance values for the target group item (currency assumed EUR — verify)."
        },
        {
          "name": "DueBalanceValue",
          "expression": "SUM(DueBalanceValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of due balance amounts (outstanding amounts expected)."
        },
        {
          "name": "SettlementBalanceValue",
          "expression": "SUM(SettlementBalanceValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of settlement balance values (amounts allocated for settlement)."
        },
        {
          "name": "TotalPBDContractsValue",
          "expression": "SUM(Y01PBDContractsValue) + SUM(Y02PBDContractsValue) + SUM(Y03PBDContractsValue) + SUM(Y04PBDContractsValue) + SUM(Y05PBDContractsValue) + SUM(Y06PBDContractsValue) + SUM(Y07PBDContractsValue) + SUM(Y08PBDContractsValue) + SUM(Y09PBDContractsValue) + SUM(Y10PBDContractsValue) + SUM(Y11PBDContractsValue) + SUM(Y12PBDContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total PBD contract value summed across all 12 year periods (Y01..Y12)."
        },
        {
          "name": "TotalPADContractsValue",
          "expression": "SUM(Y01PADContractsValue) + SUM(Y02PADContractsValue) + SUM(Y03PADContractsValue) + SUM(Y04PADContractsValue) + SUM(Y05PADContractsValue) + SUM(Y06PADContractsValue) + SUM(Y07PADContractsValue) + SUM(Y08PADContractsValue) + SUM(Y09PADContractsValue) + SUM(Y10PADContractsValue) + SUM(Y11PADContractsValue) + SUM(Y12PADContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total PAD contract value summed across all 12 year periods (Y01..Y12)."
        },
        {
          "name": "TotalIBDContractsValue",
          "expression": "SUM(Y01IBDContractsValue) + SUM(Y02IBDContractsValue) + SUM(Y03IBDContractsValue) + SUM(Y04IBDContractsValue) + SUM(Y05IBDContractsValue) + SUM(Y06IBDContractsValue) + SUM(Y07IBDContractsValue) + SUM(Y08IBDContractsValue) + SUM(Y09IBDContractsValue) + SUM(Y10IBDContractsValue) + SUM(Y11IBDContractsValue) + SUM(Y12IBDContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total IBD contract value summed across all 12 year periods (Y01..Y12)."
        },
        {
          "name": "TotalIADContractsValue",
          "expression": "SUM(Y01IADContractsValue) + SUM(Y02IADContractsValue) + SUM(Y03IADContractsValue) + SUM(Y04IADContractsValue) + SUM(Y05IADContractsValue) + SUM(Y06IADContractsValue) + SUM(Y07IADContractsValue) + SUM(Y08IADContractsValue) + SUM(Y09IADContractsValue) + SUM(Y10IADContractsValue) + SUM(Y11IADContractsValue) + SUM(Y12IADContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Total IAD contract value summed across all 12 year periods (Y01..Y12)."
        },
        {
          "name": "TotalContractValue",
          "expression": "SUM(Y01PBDContractsValue) + SUM(Y02PBDContractsValue) + SUM(Y03PBDContractsValue) + SUM(Y04PBDContractsValue) + SUM(Y05PBDContractsValue) + SUM(Y06PBDContractsValue) + SUM(Y07PBDContractsValue) + SUM(Y08PBDContractsValue) + SUM(Y09PBDContractsValue) + SUM(Y10PBDContractsValue) + SUM(Y11PBDContractsValue) + SUM(Y12PBDContractsValue) + SUM(Y01PADContractsValue) + SUM(Y02PADContractsValue) + SUM(Y03PADContractsValue) + SUM(Y04PADContractsValue) + SUM(Y05PADContractsValue) + SUM(Y06PADContractsValue) + SUM(Y07PADContractsValue) + SUM(Y08PADContractsValue) + SUM(Y09PADContractsValue) + SUM(Y10PADContractsValue) + SUM(Y11PADContractsValue) + SUM(Y12PADContractsValue) + SUM(Y01IBDContractsValue) + SUM(Y02IBDContractsValue) + SUM(Y03IBDContractsValue) + SUM(Y04IBDContractsValue) + SUM(Y05IBDContractsValue) + SUM(Y06IBDContractsValue) + SUM(Y07IBDContractsValue) + SUM(Y08IBDContractsValue) + SUM(Y09IBDContractsValue) + SUM(Y10IBDContractsValue) + SUM(Y11IBDContractsValue) + SUM(Y12IBDContractsValue) + SUM(Y01IADContractsValue) + SUM(Y02IADContractsValue) + SUM(Y03IADContractsValue) + SUM(Y04IADContractsValue) + SUM(Y05IADContractsValue) + SUM(Y06IADContractsValue) + SUM(Y07IADContractsValue) + SUM(Y08IADContractsValue) + SUM(Y09IADContractsValue) + SUM(Y10IADContractsValue) + SUM(Y11IADContractsValue) + SUM(Y12IADContractsValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Aggregate contract value across all PBD, PAD, IBD and IAD contract columns for periods Y01..Y12."
        },
        {
          "name": "TotalPreprintedValue_Sum",
          "expression": "SUM(TotalPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of TotalPreprintedValue column (preprinted product value)."
        },
        {
          "name": "PrintPreprintedValue_Sum",
          "expression": "SUM(PrintPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of print preprinted value."
        },
        {
          "name": "InternetPreprintedValue_Sum",
          "expression": "SUM(InternetPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of internet preprinted value."
        },
        {
          "name": "MultimediaPreprintedValue_Sum",
          "expression": "SUM(MultimediaPreprintedValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Sum of multimedia preprinted value."
        },
        {
          "name": "CountHasOnline",
          "expression": "SUM(CASE WHEN HasOnline = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of items that are flagged HasOnline = true."
        },
        {
          "name": "DistinctHigherSpendingHeadingCount",
          "expression": "COUNT(DISTINCT HigherSpendingHeadingID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct HigherSpendingHeadingID values present."
        },
        {
          "name": "MaxLastSaleAssignmentDate",
          "expression": "MAX(LastSaleAssignmentDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent LastSaleAssignmentDate for items in the selection."
        },
        {
          "name": "AvgSubscriptionValue",
          "expression": "AVG(SubscriptionValue)",
          "unit": "currency",
          "currency": "EUR",
          "format_hint": "currency(2)",
          "description": "Average subscription value per item."
        }
      ],
      "foreign_keys": [
        {
          "column": "TargetGroupItemValueID",
          "references": "dbo.TargetGroupItemValue.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "HigherSpendingHeadingName",
          "HigherSpendingHeadingCode",
          "Y01PSalesrep",
          "Y01Entries",
          "ExpirationDateInternet"
        ],
        "default_filters": [
          {
            "column": "TotalContractValue",
            "op": ">",
            "value": "0"
          }
        ],
        "notes": [
          "Currency fields are assumed to be EUR based on dataset locale; please validate with source system.",
          "Many year-prefixed columns (Y01..Y12) represent periodized contract values — use the per-group totals (TotalPBDContractsValue, TotalPADContractsValue, TotalIBDContractsValue, TotalIADContractsValue) for summarized reporting.",
          "Boolean columns (BIT) are exposed via COUNT/SUM(CASE ...) measures (e.g., CountHasOnline). Additional boolean counts can be added on request."
        ]
      }
    },
    {
      "name": "Pricelist Item Detail - Price Ranges",
      "source": "dbo.PricelistItemDetailPriceRange",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RangeCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of price range rows (distinct ranges) in this table"
        },
        {
          "name": "TotalOneTimeAmount",
          "expression": "SUM(OneTimeAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of one-time amounts charged for all price ranges"
        },
        {
          "name": "AverageOneTimeAmount",
          "expression": "AVG(OneTimeAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average one-time amount across price ranges"
        },
        {
          "name": "MinPriceFrom",
          "expression": "MIN(PriceFrom)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Lowest starting price (PriceFrom) across ranges"
        },
        {
          "name": "MaxPriceTo",
          "expression": "MAX(PriceTo)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Highest upper bound (PriceTo) across ranges; null indicates open-ended ranges"
        },
        {
          "name": "AverageRangeWidth",
          "expression": "AVG(CASE WHEN PriceTo IS NOT NULL THEN PriceTo - PriceFrom ELSE NULL END)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average width of the price range (PriceTo - PriceFrom) for closed ranges"
        },
        {
          "name": "AverageExtraFeePercentage",
          "expression": "AVG(ExtraFeePercentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average extra fee percentage applied for the ranges"
        },
        {
          "name": "OpenEndedRangesCount",
          "expression": "SUM(CASE WHEN PriceTo IS NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of ranges where PriceTo is null (open-ended / no upper limit)"
        }
      ],
      "foreign_keys": [
        {
          "column": "PriceListItemDetailID",
          "references": "dbo.PricelistItemDetail.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "PriceListItemDetailID",
          "PriceFrom",
          "PriceTo",
          "ExtraFeePercentage"
        ],
        "default_filters": [
          {
            "column": "PriceFrom",
            "op": ">=",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "DiscountPolicyItem",
      "source": "dbo.DiscountPolicyItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ItemCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Total number of discount policy item records (row count)."
        },
        {
          "name": "DistinctDiscountPolicyCount",
          "expression": "COUNT(DISTINCT DiscountPolicyID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct discount policies referenced by these items."
        },
        {
          "name": "TotalAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Sum of the Amount values defined on items. Source currency must be interpreted from the transactional system."
        },
        {
          "name": "AverageAmount",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Average Amount across items where Amount is present."
        },
        {
          "name": "MinAmount",
          "expression": "MIN(Amount)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Minimum Amount value among items."
        },
        {
          "name": "MaxAmount",
          "expression": "MAX(Amount)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Maximum Amount value among items."
        },
        {
          "name": "AveragePercentage",
          "expression": "AVG(Percentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Average Percentage value defined on items (e.g., discount percent)."
        },
        {
          "name": "MinPercentage",
          "expression": "MIN(Percentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Minimum Percentage value among items."
        },
        {
          "name": "MaxPercentage",
          "expression": "MAX(Percentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Maximum Percentage value among items."
        },
        {
          "name": "AverageRangeWidth",
          "expression": "AVG(CASE WHEN RangeUpLimit IS NOT NULL AND RangeDownLimit IS NOT NULL THEN RangeUpLimit - RangeDownLimit ELSE NULL END)",
          "unit": "integer",
          "currency": null,
          "format_hint": "integer",
          "description": "Average width of the defined ranges (RangeUpLimit - RangeDownLimit) for items where both limits are present."
        },
        {
          "name": "EnabledItemCount",
          "expression": "SUM(CASE WHEN EnableLimit = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of items considered enabled (EnableLimit = 1). Interpretation of EnableLimit should be validated against source semantics."
        },
        {
          "name": "ItemsWithAmountDefined",
          "expression": "SUM(CASE WHEN Amount IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of items that have an Amount value populated."
        }
      ],
      "foreign_keys": [
        {
          "column": "DiscountPolicyID",
          "references": "dbo.DiscountPolicy.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "DiscountPolicyID",
          "DMTable",
          "DMKey",
          "DMCharKey"
        ],
        "default_filters": [
          {
            "column": "EnableLimit",
            "op": "=",
            "value": "1",
            "description": "Show enabled items by default (assumes 1 = enabled). Validate with source system."
          }
        ]
      }
    },
    {
      "name": "DiscountPolicyItem",
      "source": "dbo.UdacDiscountPolicyItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "ItemCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of discount policy item rows"
        },
        {
          "name": "TotalDiscountAmount",
          "expression": "SUM(Amount)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Sum of explicit discount amounts defined on these policy items (if Amount is populated). Currency of Amount is not specified in the table and should be interpreted according to business rules or a related dimension."
        },
        {
          "name": "AverageDiscountAmount",
          "expression": "AVG(Amount)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Average discount amount per policy item (nulls ignored)."
        },
        {
          "name": "TotalDiscountPercentage",
          "expression": "SUM(Percentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Sum of percentage values across policy items. Use with care — percentages are additive only in specific business contexts."
        },
        {
          "name": "AverageDiscountPercentage",
          "expression": "AVG(Percentage)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Average percentage discount across policy items (nulls ignored)."
        },
        {
          "name": "MinRangeDownLimit",
          "expression": "MIN(RangeDownLimit)",
          "unit": "integer",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Lowest lower bound (RangeDownLimit) across the selected policy items."
        },
        {
          "name": "MaxRangeUpLimit",
          "expression": "MAX(RangeUpLimit)",
          "unit": "integer",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Highest upper bound (RangeUpLimit) across the selected policy items."
        },
        {
          "name": "EnabledLimitCount",
          "expression": "SUM(CASE WHEN EnableLimit = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Count of policy items where the limit is enabled (EnableLimit = 1)."
        },
        {
          "name": "DistinctDmTableCount",
          "expression": "COUNT(DISTINCT DMTable)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer(0)",
          "description": "Number of distinct DMTable values referenced by these policy items."
        }
      ],
      "foreign_keys": [
        {
          "column": "DiscountPolicyID",
          "references": "dbo.UdacDiscountPolicy.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "DiscountPolicyID",
          "DMTable",
          "DMKey",
          "RangeDownLimit",
          "RangeUpLimit"
        ],
        "default_filters": [
          {
            "column": "EnableLimit",
            "op": "=",
            "value": "1",
            "description": "Show only items with enabled limits by default"
          }
        ]
      }
    },
    {
      "name": "CampaignNewLossPremiseCustomerItem",
      "source": "dbo.CampaignNewLossPremiseCustomerItem",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows (one row per targeted business point / customer item)"
        },
        {
          "name": "DistinctBusinessPoints",
          "expression": "DISTINCTCOUNT(BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct business points targeted in the dataset"
        },
        {
          "name": "DistinctSalesmen",
          "expression": "DISTINCTCOUNT(SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct campaign owners / assigned salesmen"
        },
        {
          "name": "DistinctActionSalesmen",
          "expression": "DISTINCTCOUNT(ActionSalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct salesmen who performed actions (visits / callbacks)"
        },
        {
          "name": "ActionsCount",
          "expression": "COUNT(ActionDateTime)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of recorded actions (rows with a non-null ActionDateTime)"
        },
        {
          "name": "ContactableCount",
          "expression": "COUNT(Phone)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows with a phone number recorded (contactable records)"
        },
        {
          "name": "ContactableRate",
          "expression": "CASE WHEN COUNT(ID) = 0 THEN 0 ELSE COUNT(Phone) * 1.0 / COUNT(ID) END",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows that have a phone number recorded (contactable / total rows)"
        },
        {
          "name": "FirstActionDate",
          "expression": "MIN(ActionDateTime)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Earliest recorded action date in the current context"
        },
        {
          "name": "LastActionDate",
          "expression": "MAX(ActionDateTime)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent recorded action date in the current context"
        },
        {
          "name": "DaysSinceLastAction",
          "expression": "DATEDIFF(day, MAX(ActionDateTime), GETDATE())",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of days between the most recent action and today (uses GETDATE()). Null/undefined if no actions in scope."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        },
        {
          "column": "ActionSalesmanID",
          "references": "dbo.User.ID",
          "note": "inferred — links action performer to user table"
        },
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID",
          "note": "inferred — business point / location master"
        },
        {
          "column": "RuleID",
          "references": "dbo.Rule.ID",
          "note": "inferred — campaign rule definition"
        }
      ],
      "display": {
        "default_time_dimension": "ActionDateTime",
        "default_breakdowns": [
          "CampaignDescription",
          "BusinessPointBrandName",
          "City",
          "SalesmanID",
          "ActionSalesmanName",
          "ActionDateTime.Month"
        ],
        "default_filters": [
          {
            "column": "ActionDateTime",
            "op": "is not",
            "value": null,
            "description": "Exclude rows without an action date by default to focus on executed interactions"
          }
        ],
        "notes": "CampaignDescription and BusinessPoint fields are useful default dimensions. Status column appears to be empty in sample data."
      }
    },
    {
      "name": "CampaignNewLossSalesmenCustomer",
      "source": "dbo.CampaignNewLossSalesmenCustomer",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records / assignments in this table (one row per ID)."
        },
        {
          "name": "UniqueCustomers",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct customers (BusinessPointID) targeted or assigned in the dataset."
        },
        {
          "name": "UniqueSalesmen",
          "expression": "COUNT(DISTINCT SalesmanID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct salesmen referenced in the dataset."
        },
        {
          "name": "UniqueRules",
          "expression": "COUNT(DISTINCT RuleID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaign rules represented."
        },
        {
          "name": "UniqueCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns present in the data."
        },
        {
          "name": "AvgCustomersPerSalesman",
          "expression": "CASE WHEN COUNT(DISTINCT SalesmanID) = 0 THEN 0 ELSE COUNT(DISTINCT BusinessPointID) * 1.0 / COUNT(DISTINCT SalesmanID) END",
          "unit": "count",
          "currency": null,
          "format_hint": "numeric(2)",
          "description": "Average number of distinct customers (BusinessPointID) per salesman across the evaluated set."
        },
        {
          "name": "RowsShareOfTotal",
          "expression": "COUNT(*) * 1.0 / NULLIF(SUM(COUNT(*)) OVER (), 0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(2)",
          "description": "Share of total rows represented by the current aggregation context (percent of table rows)."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "dbo.BusinessPoint.ID"
        },
        {
          "column": "CampaignID",
          "references": "dbo.Campaign.ID"
        },
        {
          "column": "RuleID",
          "references": "dbo.CampaignNewLossCustomerRule.ID"
        },
        {
          "column": "SalesmanID",
          "references": "dbo.User.ID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "SalesmanID",
          "RuleID",
          "BusinessPointID"
        ],
        "default_filters": []
      }
    },
    {
      "name": "CampaignBucketFileUploadHistoryDetail",
      "source": "dbo.CampaignBucketFileUploadHistoryDetail",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "Row Count",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of rows in the detail file (one row per business point / line)"
        },
        {
          "name": "Unique Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct business points represented in the file"
        },
        {
          "name": "Total Print Amount",
          "expression": "SUM(PrintAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of the PrintAmount values from the upload file (nulls ignored)"
        },
        {
          "name": "Total PPC Amount",
          "expression": "SUM(PPCAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of PPC (pay-per-click) amounts from the upload file (nulls ignored)"
        },
        {
          "name": "Total XOGR Amount",
          "expression": "SUM(XOGRAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of XOGR amounts from the upload file (primary monetary component in sample data)"
        },
        {
          "name": "Total Website Amount",
          "expression": "SUM(WebSiteAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of WebSiteAmount values from the upload file (nulls ignored)"
        },
        {
          "name": "Total Amount (All Channels)",
          "expression": "SUM(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Aggregate of the reported TotalAmount per row. Should equal the sum of component amounts when components are present"
        },
        {
          "name": "Average Total Amount per Row",
          "expression": "AVG(TotalAmount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average of TotalAmount across rows (nulls excluded from average)"
        },
        {
          "name": "Rows with Any Amount",
          "expression": "SUM(CASE WHEN COALESCE(PrintAmount, PPCAmount, XOGRAmount, WebSiteAmount, TotalAmount) IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of rows that contain at least one monetary value in any of the amount columns"
        },
        {
          "name": "Percent Rows with Any Amount",
          "expression": "100.0 * SUM(CASE WHEN COALESCE(PrintAmount, PPCAmount, XOGRAmount, WebSiteAmount, TotalAmount) IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(ID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows that include at least one monetary amount (percentage of total rows)"
        }
      ],
      "foreign_keys": [
        {
          "column": "FileID",
          "references": "dbo.CampaignBucketFileUploadHistory.ID"
        },
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID"
        },
        {
          "column": "NewSalesmanID",
          "references": "DimSalesman.SalesmanID"
        },
        {
          "column": "NewChannelID",
          "references": "DimChannel.ChannelID"
        },
        {
          "column": "SegmentID",
          "references": "DimSegment.SegmentID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPointName",
          "BussinessPointCode",
          "NewSalesmanName",
          "NewSalesmanCode",
          "SegmentDescription",
          "ProductMixture",
          "VerticalsGrouping",
          "BucketGroup",
          "FirstCustomerExpirationMonth"
        ],
        "default_filters": [
          {
            "column": "TotalAmount",
            "op": ">",
            "value": "0"
          }
        ],
        "default_sort": {
          "column": "Total Amount (All Channels)",
          "direction": "desc"
        }
      }
    },
    {
      "name": "Campaign Sales - Market Item",
      "source": "dbo.CampaignSalesMarketItem",
      "grain": [
        "CampaignID",
        "TargetGroupItemValueID",
        "BusinessPointID",
        "SegmentID",
        "ChannelTypeID",
        "GroupID",
        "SplitGroupNumber"
      ],
      "measures": [
        {
          "name": "Targeted Row Count",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows in the fact (each row represents a campaign x target item x business point instance)."
        },
        {
          "name": "Distinct Business Points",
          "expression": "COUNT(DISTINCT BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique business points targeted by the campaign/segment combination."
        },
        {
          "name": "Signed Count",
          "expression": "SUM(CASE WHEN SignedDate IS NOT NULL THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of targeted rows that have a non-null SignedDate (indicates a signed/converted record)."
        },
        {
          "name": "Signed Rate",
          "expression": "SUM(CASE WHEN SignedDate IS NOT NULL THEN 1 ELSE 0 END) / NULLIF(COUNT(*),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Proportion of targeted rows that resulted in a sign (SignedCount / TargetedRowCount)."
        },
        {
          "name": "Total Subscription Discounts (Subr)",
          "expression": "SUM(ISNULL(SubrTotalAmountDiscount, 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of subscription discounts applied to targeted rows (SubrTotalAmountDiscount)."
        },
        {
          "name": "Total Non-Subscription Discounts (NoSubr)",
          "expression": "SUM(ISNULL(NoSubrTotalAmountDiscounts, 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of non-subscription discounts applied to targeted rows (NoSubrTotalAmountDiscounts)."
        },
        {
          "name": "Total Renewal Amount",
          "expression": "SUM(ISNULL(RenewalTotalAmount, 0))",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Total renewal amounts associated with the targeted rows (RenewalTotalAmount)."
        },
        {
          "name": "Average Subscription Discount per Row",
          "expression": "AVG(SubrTotalAmountDiscount)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Average subscription discount across rows (ignores nulls). Useful to understand mean discount exposure."
        },
        {
          "name": "Payment Refusal Count",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of targeted rows flagged with a payment refusal."
        },
        {
          "name": "Payment Refusal Rate",
          "expression": "SUM(CASE WHEN PaymentRefusal = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(*),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of targeted rows with payment refusal."
        },
        {
          "name": "Released Count",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of targeted rows that have been marked as released."
        },
        {
          "name": "Released Rate",
          "expression": "SUM(CASE WHEN IsReleased = 1 THEN 1 ELSE 0 END) / NULLIF(COUNT(*),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of targeted rows that are released."
        },
        {
          "name": "Bundle Count",
          "expression": "SUM(CASE WHEN IsBundle = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows marked as part of a bundle."
        },
        {
          "name": "Disappeared Count",
          "expression": "SUM(CASE WHEN Disappeared = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of targeted rows flagged as disappeared (business point no longer present)."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "DimTargetGroupItemValue.TargetGroupItemValueID"
        },
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID"
        },
        {
          "column": "SegmentID",
          "references": "DimSegment.SegmentID"
        },
        {
          "column": "ChannelTypeID",
          "references": "DimChannelType.ChannelTypeID"
        },
        {
          "column": "GroupID",
          "references": "DimGroup.GroupID"
        },
        {
          "column": "PrefectureID",
          "references": "DimPrefecture.PrefectureID"
        },
        {
          "column": "SubrSalesmanID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "NoSubrSalesmanID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "HandlerSalesManID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "TargetSalesManID",
          "references": "DimEmployee.EmployeeID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "DimCampaign.Name",
          "DimSegment.Name",
          "DimChannelType.Name",
          "DimPrefecture.Name",
          "BusinessPointBrandName",
          "SubrSalesman"
        ],
        "default_filters": [
          {
            "column": "IsReleased",
            "op": "=",
            "value": "1"
          },
          {
            "column": "Disappeared",
            "op": "=",
            "value": "0"
          }
        ],
        "suggested_time_field": "CreatedOn"
      }
    },
    {
      "name": "DialerBusinessPoint",
      "source": "dbo.DialerBusinessPoint",
      "grain": [
        "BusinessPointID"
      ],
      "measures": [
        {
          "name": "BusinessPointCount",
          "expression": "COUNT(BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of business points (rows) in the current filter context"
        },
        {
          "name": "UniqueBusinessPoints",
          "expression": "COUNT_DISTINCT(BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Distinct business points (unique BusinessPointID)"
        },
        {
          "name": "PhoneAvailableCount",
          "expression": "SUM(CASE WHEN Phone IS NOT NULL AND LTRIM(RTRIM(Phone)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of business points that have a primary Phone value"
        },
        {
          "name": "PctWithPhone",
          "expression": "100.0 * SUM(CASE WHEN Phone IS NOT NULL AND LTRIM(RTRIM(Phone)) <> '' THEN 1 ELSE 0 END) / NULLIF(COUNT(BusinessPointID),0)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Percentage of business points that have a primary Phone value"
        },
        {
          "name": "AvgPhoneNumbersPerBusinessPoint",
          "expression": "AVG( (CASE WHEN Phone IS NOT NULL AND LTRIM(RTRIM(Phone)) <> '' THEN 1 ELSE 0 END) + (CASE WHEN Phone1 IS NOT NULL AND LTRIM(RTRIM(Phone1)) <> '' THEN 1 ELSE 0 END) + (CASE WHEN Phone2 IS NOT NULL AND LTRIM(RTRIM(Phone2)) <> '' THEN 1 ELSE 0 END) + (CASE WHEN Phone3 IS NOT NULL AND LTRIM(RTRIM(Phone3)) <> '' THEN 1 ELSE 0 END) + (CASE WHEN Phone4 IS NOT NULL AND LTRIM(RTRIM(Phone4)) <> '' THEN 1 ELSE 0 END) + (CASE WHEN Phone5 IS NOT NULL AND LTRIM(RTRIM(Phone5)) <> '' THEN 1 ELSE 0 END) )",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of non-empty phone numbers (Phone + Phone1..Phone5) per business point"
        },
        {
          "name": "TotalPreprintedAdValue",
          "expression": "SUM(Y01ADTotalPreprintedValue)",
          "unit": "currency",
          "currency": "USD",
          "format_hint": "currency(2)",
          "description": "Sum of preprinted ad values (Y01ADTotalPreprintedValue). Source column hints USD in sample statistics."
        },
        {
          "name": "TotalSubscriptionValue",
          "expression": "SUM(SubscriptionValue)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Sum of subscription values. Values are zero in sample data; currency not specified in source metadata."
        },
        {
          "name": "LossPrintedNewTotal",
          "expression": "SUM(LossPrintedNew)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of LossPrintedNew across the selected scope"
        },
        {
          "name": "DistinctSubchannelCount",
          "expression": "COUNT_DISTINCT(SubchannelID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct SubchannelID values present in the filtered set"
        },
        {
          "name": "LatestLastSignedDate",
          "expression": "MAX(LastSignedDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "datetime",
          "description": "Most recent LastSignedDate for the selected business points"
        },
        {
          "name": "PhoneM11Count",
          "expression": "SUM(CASE WHEN PhoneM11 = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of business points where PhoneM11 flag is true"
        },
        {
          "name": "Phone1M11Count",
          "expression": "SUM(CASE WHEN Phone1M11 = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of business points where Phone1M11 flag is true"
        },
        {
          "name": "Phone2M11Count",
          "expression": "SUM(CASE WHEN Phone2M11 = 1 THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of business points where Phone2M11 flag is true"
        },
        {
          "name": "ScoredBusinessPoints",
          "expression": "SUM(CASE WHEN Score IS NOT NULL AND LTRIM(RTRIM(Score)) <> '' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of business points with a non-empty Score value"
        },
        {
          "name": "ReliabilityStatusGreenCount",
          "expression": "SUM(CASE WHEN ReliabilityStatus = 'GREEN' THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of business points flagged as GREEN in ReliabilityStatus"
        }
      ],
      "foreign_keys": [],
      "display": {
        "default_breakdowns": [
          "Prefecture",
          "Municipality",
          "City",
          "Brandname",
          "SubchannelID",
          "ReliabilityStatus"
        ],
        "default_filters": [
          {
            "column": "ReliabilityStatus",
            "op": "=",
            "value": "GREEN"
          }
        ],
        "suggested_slicers": [
          "Brandname",
          "Prefecture",
          "SubchannelID",
          "HandlerName"
        ]
      }
    },
    {
      "name": "FactTaskListForDialer",
      "source": "dbo.ViewTaskListForDialer",
      "grain": [
        "TaskID",
        "TargetGroupItemValueID"
      ],
      "measures": [
        {
          "name": "TaskRowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of rows (task instances) in the view"
        },
        {
          "name": "DistinctTaskCount",
          "expression": "COUNT(DISTINCT TaskID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of unique tasks (distinct TaskID)"
        },
        {
          "name": "SumLossPrintedNew",
          "expression": "SUM(LossPrintedNew)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of LossPrintedNew flag values across rows (total printed-loss indicators)"
        },
        {
          "name": "AvgLossPrintedNew",
          "expression": "AVG(CAST(LossPrintedNew AS FLOAT))",
          "unit": "count",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average LossPrintedNew value per row"
        },
        {
          "name": "PctRowsWithLossPrinted",
          "expression": "AVG(CASE WHEN LossPrintedNew > 0 THEN 1.0 ELSE 0.0 END)",
          "unit": "percentage",
          "currency": null,
          "format_hint": "percentage(1)",
          "description": "Share of rows where LossPrintedNew is greater than zero"
        },
        {
          "name": "AvgCampaignDurationDays",
          "expression": "AVG(DATEDIFF(day, CampStartedOn, CampClosedOn))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average campaign duration in days (CampStartedOn → CampClosedOn)"
        },
        {
          "name": "AvgTaskActiveDays",
          "expression": "AVG(DATEDIFF(day, StartDate, EndDate) + 1)",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Average inclusive number of days a task is scheduled active (StartDate → EndDate)"
        },
        {
          "name": "TasksWithAssignedOwner",
          "expression": "COUNT(CASE WHEN ActualOwnerID IS NOT NULL THEN 1 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of tasks that have an ActualOwnerID (assigned owner)"
        },
        {
          "name": "DistinctBrandCount",
          "expression": "COUNT(DISTINCT Brandname)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Count of distinct Brandname values represented in the view"
        },
        {
          "name": "TasksWithPhoneCount",
          "expression": "COUNT(CASE WHEN Phone IS NOT NULL AND LTRIM(RTRIM(Phone)) <> '' THEN 1 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of rows that include at least one non-empty phone value (contact available)"
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID"
        },
        {
          "column": "CustomerCode",
          "references": "DimCustomer.CustomerCode"
        },
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "TaskTypeId",
          "references": "DimTaskType.TaskTypeId"
        },
        {
          "column": "ActualOwnerID",
          "references": "DimUser.UserID"
        },
        {
          "column": "Brandname",
          "references": "DimBrand.BrandName"
        },
        {
          "column": "Prefecture",
          "references": "DimGeography.Prefecture"
        },
        {
          "column": "TargetGroupItemValueID",
          "references": "DimTargetGroupItem.TargetGroupItemValueID"
        },
        {
          "column": "TaskCreatedOn",
          "references": "DimDate.DateKey"
        },
        {
          "column": "CampStartedOn",
          "references": "DimDate.DateKey"
        },
        {
          "column": "CampClosedOn",
          "references": "DimDate.DateKey"
        }
      ],
      "display": {
        "default_breakdowns": [
          "CustomerName",
          "Brandname",
          "MasterHeading",
          "Prefecture",
          "CampaignID",
          "TaskCreatedOn"
        ],
        "default_filters": [
          {
            "column": "CampStartedOn",
            "op": ">=",
            "value": "2023-01-01"
          }
        ]
      }
    },
    {
      "name": "BusinessPointLastSalesAssignmentDate",
      "source": "dbo.ViewBPLastSalesAssignmentDate",
      "grain": [
        "BusinessPointID"
      ],
      "measures": [
        {
          "name": "LastSalesAssignmentDate",
          "expression": "MAX(StartDate)",
          "unit": "datetime",
          "currency": null,
          "format_hint": "date",
          "description": "Most recent start date of the sales assignment for the business point."
        },
        {
          "name": "DaysSinceLastSalesAssignment",
          "expression": "DATEDIFF(day, MAX(StartDate), GETDATE())",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of days elapsed since the most recent sales assignment start date. Null-safe when StartDate is NULL."
        },
        {
          "name": "AssignedRecordCount",
          "expression": "COUNT(BusinessPointID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Count of records for the business point in this view (typically 1 per BusinessPointID)."
        },
        {
          "name": "AssignedWithinLast12MonthsFlag",
          "expression": "CASE WHEN MAX(StartDate) >= DATEADD(month, -12, GETDATE()) THEN 1 ELSE 0 END",
          "unit": "boolean",
          "currency": null,
          "format_hint": "yesno",
          "description": "Flag indicating whether the business point has a sales assignment start date within the last 12 months."
        }
      ],
      "foreign_keys": [
        {
          "column": "BusinessPointID",
          "references": "DimBusinessPoint.BusinessPointID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "BusinessPointID",
          "StartDate.Year"
        ],
        "default_filters": [
          {
            "column": "StartDate",
            "op": "IS NOT",
            "value": "NULL"
          }
        ]
      }
    },
    {
      "name": "SalesMarketAnalysisCompleted",
      "source": "dbo.ViewSalesMarketAnalysisCompleted",
      "grain": [
        "ID"
      ],
      "measures": [
        {
          "name": "CompletedAnalysisCount",
          "expression": "COUNT(ID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of completed market analysis records (row count)."
        },
        {
          "name": "TotalTargetValue",
          "expression": "SUM(TargetValue)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Sum of target values for completed analyses. Source column has DECIMAL(38,3); currency is not specified in the source and should be set if a canonical currency is known."
        },
        {
          "name": "TotalTargetCount",
          "expression": "SUM(TargetCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Sum of target counts across completed analyses."
        },
        {
          "name": "AverageCustomerRating",
          "expression": "AVG(CustomerRating)",
          "unit": "rating",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average customer rating for completed analyses (scale depends on source data)."
        },
        {
          "name": "DistinctCampaigns",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct campaigns represented in the completed analyses."
        },
        {
          "name": "AverageDurationDays",
          "expression": "AVG(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average duration in days between StartDate and EndDate for completed analyses. Nulls in start/end dates are ignored by the AVG aggregation."
        },
        {
          "name": "TargetValuePerCount",
          "expression": "CASE WHEN SUM(TargetCount) = 0 THEN NULL ELSE SUM(TargetValue) / SUM(TargetCount) END",
          "unit": "currency_per_count",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Average target value per target count (total target value divided by total target count). Returns NULL when total target count is zero."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID",
          "description": "Reference to the campaign associated with the completed analysis (assumed)."
        },
        {
          "column": "ActualOwnerID",
          "references": "Employee.EmployeeID",
          "description": "Reference to the owner/analyst who completed the analysis (assumed as employee/person key)."
        },
        {
          "column": "UnitID",
          "references": "Unit.UnitID",
          "description": "Reference to the unit/organizational unit associated with the analysis (assumed)."
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "UnitID",
          "ActualOwnerID",
          "StartDate",
          "EndDate"
        ],
        "default_filters": [
          {
            "column": "EndDate",
            "op": "<=",
            "value": "TODAY"
          },
          {
            "column": "StartDate",
            "op": "IS NOT",
            "value": "NULL"
          }
        ],
        "recommended_default_measure": "CompletedAnalysisCount"
      }
    },
    {
      "name": "SalesMarketAnalysisTargetAmount",
      "source": "dbo.ViewSalesMarketAnalysisTargetAmount",
      "grain": [
        "CampaignID",
        "UnitID",
        "FromDate",
        "ToDate"
      ],
      "measures": [
        {
          "name": "TargetValue",
          "expression": "SUM(TargetValue)",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Sum of target monetary values for the campaign/unit over the specified period. The source view does not include an explicit currency code; currency is not tracked at the row level."
        },
        {
          "name": "TargetCount",
          "expression": "SUM(TargetCount)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Sum of target counts (units, objects or targets) for the campaign/unit over the specified period."
        },
        {
          "name": "AvgDailyTargetValue",
          "expression": "CASE WHEN SUM(CASE WHEN ToDate >= FromDate THEN DATEDIFF(day, FromDate, ToDate) + 1 ELSE 0 END) > 0 THEN SUM(TargetValue) / SUM(CASE WHEN ToDate >= FromDate THEN DATEDIFF(day, FromDate, ToDate) + 1 ELSE 0 END) ELSE NULL END",
          "unit": "currency",
          "currency": null,
          "format_hint": "currency(2)",
          "description": "Average target monetary value per day across the period (TargetValue divided by number of days in the FromDate-ToDate range). Returns NULL if the date range is invalid or zero-length."
        },
        {
          "name": "AvgDailyTargetCount",
          "expression": "CASE WHEN SUM(CASE WHEN ToDate >= FromDate THEN DATEDIFF(day, FromDate, ToDate) + 1 ELSE 0 END) > 0 THEN SUM(TargetCount) / SUM(CASE WHEN ToDate >= FromDate THEN DATEDIFF(day, FromDate, ToDate) + 1 ELSE 0 END) ELSE NULL END",
          "unit": "count",
          "currency": null,
          "format_hint": "decimal(2)",
          "description": "Average target count per day across the period (TargetCount divided by number of days in the FromDate-ToDate range). Returns NULL if the date range is invalid or zero-length."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID"
        },
        {
          "column": "UnitID",
          "references": "DimUnit.UnitID"
        },
        {
          "column": "ActualOwnerID",
          "references": "DimEmployee.EmployeeID"
        },
        {
          "column": "FromDate",
          "references": "DimDate.Date"
        },
        {
          "column": "ToDate",
          "references": "DimDate.Date"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Campaign",
          "Unit",
          "ActualOwner",
          "FromDate.Year",
          "ToDate.Year"
        ],
        "default_filters": [
          {
            "column": "TargetValue",
            "op": ">",
            "value": "0"
          }
        ]
      }
    },
    {
      "name": "Sales Market Analysis - Pending",
      "source": "dbo.ViewSalesMarketAnalysisPending",
      "grain": [
        "CampaignID",
        "ActualOwnerID",
        "UnitID",
        "StartDate",
        "EndDate"
      ],
      "measures": [
        {
          "name": "RecordCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of pending market-analysis records (row count)"
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of distinct campaigns represented in the pending set"
        },
        {
          "name": "AvgCampaignDurationDays",
          "expression": "AVG(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "decimal(1)",
          "description": "Average duration of campaigns (EndDate - StartDate) in days"
        },
        {
          "name": "MinCampaignDurationDays",
          "expression": "MIN(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Shortest campaign duration (in days) among pending records"
        },
        {
          "name": "MaxCampaignDurationDays",
          "expression": "MAX(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "integer",
          "description": "Longest campaign duration (in days) among pending records"
        },
        {
          "name": "CurrentlyActiveCount",
          "expression": "SUM(CASE WHEN GETDATE() BETWEEN StartDate AND EndDate THEN 1 ELSE 0 END)",
          "unit": "count",
          "currency": null,
          "format_hint": "integer",
          "description": "Number of records for which the current date falls between StartDate and EndDate (active/pending now)"
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "Campaign.CampaignID"
        },
        {
          "column": "ActualOwnerID",
          "references": "Employee.EmployeeID"
        },
        {
          "column": "UnitID",
          "references": "Unit.UnitID"
        }
      ],
      "display": {
        "default_breakdowns": [
          "Unit",
          "ActualOwner",
          "StartDate.Year",
          "Campaign"
        ],
        "default_filters": [
          {
            "column": "StartDate",
            "op": "is not null",
            "value": null
          },
          {
            "column": "EndDate",
            "op": ">=",
            "value": "DATEADD(year, -5, GETDATE())"
          }
        ]
      }
    },
    {
      "name": "SalesMarketAnalysisLosings",
      "source": "dbo.ViewSalesMarketAnalysisLosings",
      "grain": [
        "CampaignID",
        "UnitID",
        "ActualOwnerID",
        "StartDate",
        "EndDate"
      ],
      "measures": [
        {
          "name": "RowCount",
          "expression": "COUNT(*)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total number of rows (campaign instances) in the view."
        },
        {
          "name": "DistinctCampaignCount",
          "expression": "COUNT(DISTINCT CampaignID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct campaigns represented in the dataset."
        },
        {
          "name": "DistinctUnitCount",
          "expression": "COUNT(DISTINCT UnitID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct units associated with campaigns."
        },
        {
          "name": "DistinctOwnerCount",
          "expression": "COUNT(DISTINCT ActualOwnerID)",
          "unit": "count",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Number of distinct owners (actual owners) associated with campaigns."
        },
        {
          "name": "TotalCampaignDurationDays",
          "expression": "SUM(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Total sum of campaign durations in days across all rows. Uses DATEDIFF(day, StartDate, EndDate)."
        },
        {
          "name": "AverageCampaignDurationDays",
          "expression": "AVG(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(1)",
          "description": "Average campaign duration in days (average of DATEDIFF(day, StartDate, EndDate))."
        },
        {
          "name": "MinCampaignDurationDays",
          "expression": "MIN(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Minimum campaign duration in days."
        },
        {
          "name": "MaxCampaignDurationDays",
          "expression": "MAX(DATEDIFF(day, StartDate, EndDate))",
          "unit": "days",
          "currency": null,
          "format_hint": "number(0)",
          "description": "Maximum campaign duration in days."
        },
        {
          "name": "CampaignsPerUnit",
          "expression": "COUNT(*) / NULLIF(COUNT(DISTINCT UnitID), 0)",
          "unit": "ratio",
          "currency": null,
          "format_hint": "number(2)",
          "description": "Average number of campaign rows per unit (total rows divided by distinct unit count). Null-safe."
        }
      ],
      "foreign_keys": [
        {
          "column": "CampaignID",
          "references": "DimCampaign.CampaignID",
          "description": "References campaign dimension."
        },
        {
          "column": "ActualOwnerID",
          "references": "DimOwner.OwnerID",
          "description": "References owner dimension (user/employee responsible)."
        },
        {
          "column": "UnitID",
          "references": "DimUnit.UnitID",
          "description": "References unit dimension (organizational or market unit)."
        }
      ],
      "display": {
        "default_breakdowns": [
          "CampaignID",
          "UnitID",
          "ActualOwnerID",
          "StartDate.Year",
          "EndDate.Year"
        ],
        "default_filters": [
          {
            "column": "StartDate",
            "op": "IS NOT NULL",
            "value": null
          }
        ],
        "recommended_time_dimension": "StartDate"
      }
    }
  ],
  "relationships": [],
  "table_rankings": [
    {
      "table": "dbo.Attr118HighSeasonGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr111UnitTypeEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr113PaymentWaysEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr105StarsEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr120NearPOIEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr115RoomKeysEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr116ArrivalTimeGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr115RoomKeysGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr112FunctionalMonthsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr113PaymentWaysGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr107TransactionsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr117DepartureTimeGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr112FunctionalMonthsEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr119LowSeasonEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr105StarsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr118HighSeasonEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr116ArrivalTimeEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr119LowSeasonGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr111UnitTypeGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr117DepartureTimeEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr120NearPOIGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr122RoomFacilitiesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr121HotelFacilitiesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr121HotelFacilitiesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr123RoomTypeEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr123RoomTypeGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr124LegalFormEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr126FunctionalDaysGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr124LegalFormGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1316diktyoprovolisGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1317katigoriesexetaseonpouendiaferountoniatroEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1315troposstochefsisEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1316diktyoprovolisEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr126FunctionalDaysEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1318transactionallabelsEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr122RoomFacilitiesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1317katigoriesexetaseonpouendiaferountoniatroGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1315troposstochefsisGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1319xenesglossesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1318transactionallabelsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1319xenesglossesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1320DistrictGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr153BannerTypeEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr154TravelsSelectPlaceEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr153BannerTypeGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1322RestRegionsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr156TravelsSelectBannerEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1323AllIslandsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr154TravelsSelectPlaceGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr156TravelsSelectBannerGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr158PrefecturesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr159RegionsEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1324AllBroaderAreasProastiaGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1321AllBroaderAreasGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr155InternetCitiesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr158PrefecturesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr1325AllBroaderAreasRestRegionsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr155InternetCitiesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr160MunicipalitiesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr159RegionsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr160MunicipalitiesGR_ATK",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr160MunicipalitiesGR_TH",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr160MunicipalitiesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr286SeasonGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr294EstablishmentYearGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr300genderEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr300genderGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr296TimetableNotesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr295TimetableGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr298UrlGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr296TimetableNotesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr298UrlEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr301advnetGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr302campaigntypeGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr297ColorGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr301advnetEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr303conversionsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr302campaigntypeEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr304socialmediabuttonsGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr303conversionsEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr305hotelamenitiesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr304socialmediabuttonsEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr306roomamenitiesEN",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr306roomamenitiesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr309BroaderAreasGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr308TargetAudienceGeoLocations",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr307TargetAudienceCategories",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Attr305hotelamenitiesGR",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.COMPToYPSContacts",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.COMPToYPSNoContacts",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignBucketFileUploadHistoryStatusView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignScoreReportView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.DirProductHeadingRelationship",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.DirProductAttributeValueRelationship",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.DirProducts",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.COMPToYPSDenyToPay",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.COMPToYPSCustomerIdentification",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CustomerRelationshipsView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CustomerRelationshipsViewBasic",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignPivotReportViewItem",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullActiveMediumVersion",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.BusinessPointIdentificationWithReportAnErrorData",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignAnalsysisPerProductView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignAnalsysisPreviousCampaignView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Internet_Products",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullVGIView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullMasterGeoAreaView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_FO_MVMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Internet_Udacs",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_FO_VSMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.Get_Adids",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignSalesMarketViewItem",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_SR_MVMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.DialerViewReasonsPerTask",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewActivityHeader",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullAddressView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_SR_VSMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewActivityHeaderThematic",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewAttributeMetadata",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewAttributeValue",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.BusinessPointIdentificationWithThirdPartyDataAttribute",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignAnalysisPerProductView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewClassifierNodeMasterHeading",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_FO_ProductMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewCampaignBucketWithPreviousSD",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_FO_FullProductMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewBatchActionAnalysis",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewDialerAgent",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewContract",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignNewLossPremiseCustomerView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewFreeListing",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignAnalysisByGroupView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullVSView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewDoublePhones",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewOteDVPP",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewOteVersionProgress",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewBPLastSalesAssignmentDate",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_SR_ProductMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewPointAttributeValuesBck",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewPrefectureBPDtls",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewPointAttributeValues",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CustomerRelationshipsViewDoubles",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewProductionTaskInfoNew",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewContractProduct",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewProductionTaskInfoNewADV",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.COMPToYPSLastAction",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewReleaseTaskInfo",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketAnalysisAnamoniPromaketas",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewPhonesFlatting",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketActiveCampaign",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewGetVersionSectionsForInternetRoot",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketAnalysisAnamoniMaketas",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewPrefectureBPs",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewMarketItem",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.CampaignAnalysisBySubChannelView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketAnalysisPending",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketItem",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullContractView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewListOfContractSalesman",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewAdvertisement",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketItemPotentialOwnerBasic",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketTaskBasic",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketAnalysisLosings",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullMasterHeadingView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSourceBPs",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewTaskInfoBasic",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewCommunicationActionsFromXO",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewTargetGroupItemInfo",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketItemAndOthers",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketTaskAndOwner",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewXOGRAdvertisementCaptureInfo",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vw_TopPriorityCities",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vw_TopPriorityCities_Ath",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vw_TopPriorityCities_The",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vw_LOCACities",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vwAgoraAttiki24",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vwAgoraExtended",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vw_RelatedBpBranches",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.FullContractCavView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vwSuperGrid",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewTaskInfo",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vwSuperGridPrePrinted",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewTaskInfoRoleAssigned",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.XOSMSYPSToEBSActiveBusinessPoints",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionCampaign",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionComplaints",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionContractFiles",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionCustomerPhoneEmail",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionCustomerScore",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionCustomersDetails",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionDocuments",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToCollectionMainClassification",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSAdvertisementChannels",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSBanks",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewTaskInfoAndContractSalesman",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCampaigns",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSChannels",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCompany",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCollectionPerson",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSContractActualOwner",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSContracts",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSContractLines",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCreditCardType",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCustomerCategory",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCustomerAddress",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCustomerData",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSCustomerScore",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSGLSeqCode",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSKEPYOStatus",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSPostCheckLog",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSSalesCollection",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSSalesPerson",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSServices",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSTaxOffice",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSVATStatus",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vwMarketValueContract",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewTaskListForDialer",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketItemStakeHolderBasic",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketAnalysisCompleted",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.YPSToEBSPostChecks",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketAnalysisTargetAmount",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewContentAttributeValue",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.vwAgora",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ErpContractsView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.View_SR_FullProductMap",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewLastBusinessPointIdentification",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketItemPotentialOwnerForCounter",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.WorkflowContractView",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketItemStakeHolder",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewRenewalFailure",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ViewSalesMarketItemPotentialOwner",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.XO_active_banners_vw",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.XO_active_banners_vwBuffer",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.BusinessPointIdentificationWithThirdPartyData",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "HEADQUARTERS\\spitsaris.ViewPrefectureBPDtls",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "HEADQUARTERS\\spitsaris.ViewPrefectureBPs",
      "duplicate_of": null,
      "rank": 1,
      "reason": "curated view"
    },
    {
      "table": "dbo.ActiveCampaignSalesman",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Address",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AdvancedPaymentMethod",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AdvancedPaymentMethod20230517",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AdvancedPaymentPolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AdvancedPaymentSalesCollection",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AdvDiscountPolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Advertisement",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AdvertisementDeactivationReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AdvertisementSalesType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AllGeoAreas",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ArchivedNumber",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AttrRepository",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AutoExtractCalendar",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AutoExtractHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.AvailableConditionOperands",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Bank",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BankDepositDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BatchActionHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BatchActionHistoryAnalysis",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BroaderArea",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BroaderAreaLookUp",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BroaderAreaLookUpV1",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointComment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointCommentAttachment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointConfirmationHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointCustomAttributeValue",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointErpInfo",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointIdentification",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointListing",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.BusinessPointListingLog",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CADDefaultValue",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Calendar",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Campaign",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAllocationPlan",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAllocationPlanChannel",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAllocationPlanUser",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAssignmentBPLossRequestDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAssignmentRequest",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAssignmentRequestDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAssignmentRequestReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignAssignmentToBPRequestDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignBucket",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignBucketFileUploadHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignBucketFileUploadHistoryDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignBusinessPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignCalendar",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignChannelType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignContractProduct",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignFixedOffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignFixedOfferProduct",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignFixedOfferProductDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignHoliday",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignInfo",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignMediumType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewBIs",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewBPsAlter",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewCustomerTarget",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossCustomer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossCustomerRule",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossCustomerRuleCustomerIndicator",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossCustomerRuleCustomerSource",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossCustomerRuleMainActivity",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossCustomerRuleRegion",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossCustomerRuleSalesman",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossPremiseCustomerItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossSalesmenCustomer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignNewLossTeleCustomerTemp",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignOrgModel",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignOrgModelLog",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignOrgPerson",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignPivotReport",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignRange",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignRegion",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignResolveDiffForClassification",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSalesman",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSalesmanBeginEndDate",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSalesmanNewCustomerTarget",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSalesMarketCalandar",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSalesMarketItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSalesmenAbsence",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreAvgROCOHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreCustomerBehaviour",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreCustomerBehaviourSnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreHistoryDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreMainActivity",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreMainActivityGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreMainActivityGroupSnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreMaxInvestmentMedium",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreMaxInvestmentMediumSnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreMediumCombination",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreMediumCombinationSnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreProductCombination",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreProductCombinationSnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreReport",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreSalesmanManagement",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreSalesmanManagementSnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreSeniority",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreSenioritySnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreValueBillingRange",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignScoreValueBillingRangeSnapshot",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSegment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSegmentMediumROCO",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSegmentSalesman",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSegmentStatus",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignSystemCriteria",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignTargetGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignTargetingNewCustomerHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignTargetingNewCustomerHistoryDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignTargetMonitorGrouping",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignTargetMonitoring",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignUDFString1",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignUDFString2",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignUDFString3",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignUDFString4",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CampaignUDFString5",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasCustomerSolvency",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasLookUpTables",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasNewLossCO",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasPlanningCalendar",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasPlanningGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasPlanningHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1AddressLocation",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1AddressSale",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1BusinessPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1Classification",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1ContractDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1ContractInfo",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1ContractProductTotals",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1CustomerSolvency",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1NoSubrChannelType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CanvasStage1SubrChannelType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Case",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CaseAttachment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CaseAttachmentType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CaseComment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CaseType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CCC_migrationScriptInserted",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ChannelTargeting",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ChannelType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CheckDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Classification",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Classifier",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ClassifierNode",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ClassifierNodeMasterHeadings",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ClassifierTree",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ClickToCallHarmonyHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ClickToCallHarmonyHistoryDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CollectionBridgeActionHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CollectionBridgeBatchHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CollectionBridgeErrorActionHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Company",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ConfigurationParameter",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Contact",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContactEmail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContactPhone",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContactRelationship",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContactRelationshipType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContentAttributeDefinition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContentAttributeValue",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Contract",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContractArchivedNumberChangeHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContractDocument",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContractOffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContractOfferDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContractProduct",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ContractTemplatePolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Country",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CreditCardInstallment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CreditCardOffLineDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CreditCardOnLineDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CreditCardType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Customer_Phone_Catalogv3",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CustomerCareCase",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CustomerCareCaseRule",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CustomerCareTaskAction",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CustomerCareTaskResult",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CustomerSolvency",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CustomerSource",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.CustomerUpdate",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerBusinessPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerCallResult",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerCampaign",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerLogging",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerRequestLog",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerRequestLogEntry",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerTask",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DialerXomeCall",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DiscountPolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DiscountPolicyItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.DistributionCampaignCriteria",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpBridgeHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpBridgePostChecks",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpCollectorBridgeBuffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpCustomerAddressBridgeBuffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpCustomerBridgeBuffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpCustomerContractBridgeBuffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpCustomerContractLinesBridgeBuffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ERPSalesCollectionBridgeBuffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ErpSalesmanBridgeBuffer",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeListingGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeListingGroupItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeListingGroupTemplate",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeListingSearchItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeListingTemplate",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeTemplate",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeTemplateAdvertisement",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeTemplateAttributeValue",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.FreeTemplateUdacMapping",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.GBAData",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.GeographicalDefinition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.GeographicDestination",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.GLSeqCode",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.GroupTargeting",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.HeadingReference",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.HeadingSynonym",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ih",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ihp",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InternalProduct",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InternalProductCommunication",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InternalProductDocument",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InternalProductType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InternalProductTypeRole",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InvoicePaymentMethod",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InvoicePaymentMonthExceptionLog",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InvoicePaymentSalesCollection",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.InvoicePolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.KEPYOStatus",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.LegalForm",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Listing",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.location",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MappingWinUserToUser",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MasterGeoAreaGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MasterHeading",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MasterHeadingGroup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MasterSection",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Medium",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumKind",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersion",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersionBroaderArea",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersionColor",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersionDistribution",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersionDistributionInset",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersionFont",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersionPrintVersion",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.MediumVersionPrintVersionSection",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Message",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.NegationReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.NoCommReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OBPSBatchRun",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OBPSBatchSearch",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OBPSBatchSearchText",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OBPSIndividualSearch",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OBPSSearchResult",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteAreaHeaderType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteDirectory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteDirectoryAreaHeader",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteDirectoryDak",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteDirectoryShippingPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteDirectoryVersion",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteDirectoryVersionProgressPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteDirectoryVersionShipping",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteProgressPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.OteShippingPoint",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PaymentDatePolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PaymentMethod",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PaymentMethodType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PaymentPolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PendingReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Phone",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PointEmail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PointPhone",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PointRelationship",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PointUrl",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PostponeReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PresaleForm",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PricelistItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PricelistItemDetail",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PricelistItemDetailPriceRange",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.PriceListMeasurementType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Product",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductExportTemplate",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductionCaseProduct",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductionColor",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductionFont",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductionWorkflow",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductKit",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductPart",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductPartDefinition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.ProductType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RejectionReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RelatedContract",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Role",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RuleCondition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RuleConditionDefinition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RuleConditionDefinitionJoin",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RuleConditionOperand",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RuleDefinition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.RuleMaster",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SalesCollection",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SalesManTargeting",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SalesTreeHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SequenceGenerator",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLColumn",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLCommand",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLCommandText",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLJobHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLJoinCondition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLJoinConditionRule",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLObject",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLSearchCondition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLSearchConditionRule",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLSelectList",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLSelectStatement",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLTableSource",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SQLUpdateStatement",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SubChannel",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.sysdiagrams",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.SystemUniqueNum",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TableIDs",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TargetChannel",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TargetChannelArea",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TargetGroupItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TargetGroupItemInfo",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TargetGroupItemPeriod",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TargetGroupItemValue",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TargetSetting",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Task",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaskActionLog",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaskAssignment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaskLog",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaskTarget",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaskTransition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaskType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaskTypeAssignment",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaxCode",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TaxOffice",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Theamatics",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Ticket",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketAdvertisementHistory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketCancellationReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketChargeOfResponsibility",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketCommunication",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketPriority",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketRequestReason",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketResolutionMethod",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketResult",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketResultCommType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketSourceType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketType",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TicketTypeRoles",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TimeLogger",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.TimeLoggerArchive",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Udac",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacContentAttributeDefinition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacDiscountPolicy",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacDiscountPolicyItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacExportTemplate",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacKit",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacPart",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacPartDefinition",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacProdRole",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UdacRelationship",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Unit",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.User",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UserLog",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UserRole",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.UserSearchCriteria",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.VatCategory",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.VersionGroupItem",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.VersionSection",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "dbo.Xac",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "HEADQUARTERS\\cstraitchof.DEV12867ClassificationBackup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "HEADQUARTERS\\cstraitchof.DEV15648ClassificationBackup",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31672",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31673",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.AttributeMapping",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.AttributeValueMapping",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.KeywordMapping",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.MergeMapping",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.ReplaceAV",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.ReplaceKeywords",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.Step1",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    },
    {
      "table": "MigrationSteps.Step2",
      "duplicate_of": null,
      "rank": 4,
      "reason": "raw table"
    }
  ],
  "audit": {
    "dialect": "mssql",
    "built_at": "2025-10-30T22:46:10.808960",
    "build_duration_seconds": 7780.129703998566,
    "discovery_timestamp": "2025-10-30T14:19:59.933945"
  }
}