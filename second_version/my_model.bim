{
  "name": "SemanticModel",
  "compatibilityLevel": 1600,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "DatabaseConnection",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "localhost",
            "database": "YourDatabase"
          },
          "authentication": "windows"
        }
      }
    ],
    "tables": [
      {
        "name": "ContentAttributeValue",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "ContractProductID",
            "dataType": "string",
            "sourceColumn": "ContractProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContractProductID"
              }
            ]
          },
          {
            "name": "ContentAttributeDefinitionID",
            "dataType": "string",
            "sourceColumn": "ContentAttributeDefinitionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContentAttributeDefinitionID"
              }
            ]
          },
          {
            "name": "ProductPartID",
            "dataType": "string",
            "sourceColumn": "ProductPartID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductPartID"
              }
            ]
          },
          {
            "name": "Value",
            "dataType": "string",
            "sourceColumn": "Value",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Value"
              }
            ]
          },
          {
            "name": "SeqNo",
            "dataType": "int64",
            "sourceColumn": "SeqNo",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SeqNo"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "AdvertisementID",
            "dataType": "string",
            "sourceColumn": "AdvertisementID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "AdvertisementID is being used as a status/association flag: NULL = no advertisement link; non-NULL = linked to an Advertisement record. To identify rows that are 'advertised' use AdvertisementID IS NOT NULL. If you need to ensure the referenced advertisement is itself active, join or test the Advertisement table (for example: AdvertisementID IS NOT NULL AND EXISTS (SELECT 1 FROM dbo.Advertisement a WHERE a.AdvertisementID = dbo.ContentAttributeValue.AdvertisementID AND a.IsActive = 1 /* or a.IsDeleted = 0 / a.Status = 'Active' depending on schema */)). Verify referential integrity and the Advertisement table's lifecycle flags before treating non-NULL as fully 'active'."
              }
            ]
          },
          {
            "name": "QA",
            "dataType": "boolean",
            "sourceColumn": "QA",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "QA"
              }
            ]
          },
          {
            "name": "HeaderLabel",
            "dataType": "string",
            "sourceColumn": "HeaderLabel",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HeaderLabel"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalSeqNo",
            "expression": "// TODO: Verify DAX expression\nSUMX(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageSeqNo",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinSeqNo",
            "expression": "// TODO: Verify DAX expression\nMIN(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxSeqNo",
            "expression": "// TODO: Verify DAX expression\nMAX(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountSeqNo",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "FreeTemplateAttributeValue",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "FreeTemplateID",
            "dataType": "string",
            "sourceColumn": "FreeTemplateID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "FreeTemplateID"
              }
            ]
          },
          {
            "name": "ContentAttributeDefinitionID",
            "dataType": "string",
            "sourceColumn": "ContentAttributeDefinitionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContentAttributeDefinitionID"
              }
            ]
          },
          {
            "name": "ProductPartID",
            "dataType": "string",
            "sourceColumn": "ProductPartID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductPartID"
              }
            ]
          },
          {
            "name": "Value",
            "dataType": "string",
            "sourceColumn": "Value",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Value"
              }
            ]
          },
          {
            "name": "SeqNo",
            "dataType": "int64",
            "sourceColumn": "SeqNo",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SeqNo"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "FreeTemplateAdvertisementID",
            "dataType": "string",
            "sourceColumn": "FreeTemplateAdvertisementID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "FreeTemplateAdvertisementID is a nullable foreign-key-style status indicator. NULL means 'no association/unassigned'; any non-NULL value denotes an association to a FreeTemplateAdvertisement record. To treat 'active' as records that are assigned, filter with IS NOT NULL. If your system uses a sentinel (e.g. 0) treat that as non-active as well: WHERE FreeTemplateAdvertisementID IS NOT NULL AND FreeTemplateAdvertisementID <> 0. To be stricter, join to the referenced FreeTemplateAdvertisement table and check that the referenced row itself is not deleted/inactive (for example, INNER JOIN dbo.FreeTemplateAdvertisement fta ON fta.ID = FreeTemplateAdvertisementID AND fta.IsActive = 1)."
              }
            ]
          },
          {
            "name": "QA",
            "dataType": "boolean",
            "sourceColumn": "QA",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "QA"
              }
            ]
          },
          {
            "name": "HeaderLabel",
            "dataType": "string",
            "sourceColumn": "HeaderLabel",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HeaderLabel"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumSeqNo",
            "expression": "// TODO: Verify DAX expression\nSUMX(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageSeqNo",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinSeqNo",
            "expression": "// TODO: Verify DAX expression\nMIN(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxSeqNo",
            "expression": "// TODO: Verify DAX expression\nMAX(SeqNo)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SeqNo"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TaskLog",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "TaskID",
            "dataType": "string",
            "sourceColumn": "TaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskID"
              }
            ]
          },
          {
            "name": "Timestamp",
            "dataType": "dateTime",
            "sourceColumn": "Timestamp",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Timestamp"
              }
            ]
          },
          {
            "name": "Outcome",
            "dataType": "string",
            "sourceColumn": "Outcome",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Outcome"
              }
            ]
          },
          {
            "name": "Text",
            "dataType": "string",
            "sourceColumn": "Text",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Text"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "OutcomeDate",
            "dataType": "dateTime",
            "sourceColumn": "OutcomeDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OutcomeDate"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TaskLogCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TaskAssignment",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "TaskID",
            "dataType": "string",
            "sourceColumn": "TaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskID"
              }
            ]
          },
          {
            "name": "RoleID",
            "dataType": "string",
            "sourceColumn": "RoleID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RoleID"
              }
            ]
          },
          {
            "name": "AssignmentType",
            "dataType": "int64",
            "sourceColumn": "AssignmentType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AssignmentType"
              }
            ]
          },
          {
            "name": "UserID",
            "dataType": "string",
            "sourceColumn": "UserID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "AssignmentCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctAssignmentTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT AssignmentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AssignmentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AssignmentTypeSum",
            "expression": "// TODO: Verify DAX expression\nSUMX(AssignmentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AssignmentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AssignmentTypeAverage",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(AssignmentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AssignmentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AssignmentTypeMin",
            "expression": "// TODO: Verify DAX expression\nMIN(AssignmentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AssignmentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AssignmentTypeMax",
            "expression": "// TODO: Verify DAX expression\nMAX(AssignmentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AssignmentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKeyMin",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKeyMax",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TimeLogger",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "EventGroup",
            "dataType": "string",
            "sourceColumn": "EventGroup",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "EventGroup"
              }
            ]
          },
          {
            "name": "EventDate",
            "dataType": "dateTime",
            "sourceColumn": "EventDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "EventDate"
              }
            ]
          },
          {
            "name": "Descr",
            "dataType": "string",
            "sourceColumn": "Descr",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Descr"
              }
            ]
          },
          {
            "name": "RowCountVal",
            "dataType": "int64",
            "sourceColumn": "RowCountVal",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RowCountVal"
              }
            ]
          },
          {
            "name": "DataSize",
            "dataType": "int64",
            "sourceColumn": "DataSize",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DataSize"
              }
            ]
          },
          {
            "name": "LogSize",
            "dataType": "int64",
            "sourceColumn": "LogSize",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LogSize"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(ID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctIDCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT ID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinID",
            "expression": "// TODO: Verify DAX expression\nMIN(ID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxID",
            "expression": "// TODO: Verify DAX expression\nMAX(ID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalRowCount",
            "expression": "// TODO: Verify DAX expression\nSUMX(RowCountVal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowCountVal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageRowCount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(RowCountVal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowCountVal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinRowCount",
            "expression": "// TODO: Verify DAX expression\nMIN(RowCountVal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowCountVal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxRowCount",
            "expression": "// TODO: Verify DAX expression\nMAX(RowCountVal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowCountVal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDataSize",
            "expression": "// TODO: Verify DAX expression\nSUMX(DataSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DataSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDataSize",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DataSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DataSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDataSize",
            "expression": "// TODO: Verify DAX expression\nMIN(DataSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DataSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDataSize",
            "expression": "// TODO: Verify DAX expression\nMAX(DataSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DataSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalLogSize",
            "expression": "// TODO: Verify DAX expression\nSUMX(LogSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LogSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageLogSize",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(LogSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LogSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinLogSize",
            "expression": "// TODO: Verify DAX expression\nMIN(LogSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LogSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxLogSize",
            "expression": "// TODO: Verify DAX expression\nMAX(LogSize)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LogSize"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDataSizePerRow",
            "expression": "// TODO: Verify DAX expression\nCASE WHEN SUMX(RowCountVal)=0 THEN NULL ELSE 1.0*SUMX(DataSize)/SUMX(RowCountVal) END",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DataSize, RowCountVal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TargetGroupItem",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "CampaignID",
            "dataType": "string",
            "sourceColumn": "CampaignID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CampaignID"
              }
            ]
          },
          {
            "name": "SourceCampaignID",
            "dataType": "string",
            "sourceColumn": "SourceCampaignID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceCampaignID"
              }
            ]
          },
          {
            "name": "CaseID",
            "dataType": "string",
            "sourceColumn": "CaseID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseID"
              }
            ]
          },
          {
            "name": "CustomerName",
            "dataType": "string",
            "sourceColumn": "CustomerName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerName"
              }
            ]
          },
          {
            "name": "Brandname",
            "dataType": "string",
            "sourceColumn": "Brandname",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Brandname"
              }
            ]
          },
          {
            "name": "Prefecture",
            "dataType": "string",
            "sourceColumn": "Prefecture",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Prefecture"
              }
            ]
          },
          {
            "name": "Municipality",
            "dataType": "string",
            "sourceColumn": "Municipality",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Municipality"
              }
            ]
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "City"
              }
            ]
          },
          {
            "name": "StreetName",
            "dataType": "string",
            "sourceColumn": "StreetName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "StreetName"
              }
            ]
          },
          {
            "name": "StreetNumber",
            "dataType": "string",
            "sourceColumn": "StreetNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "StreetNumber"
              }
            ]
          },
          {
            "name": "NumberExtension",
            "dataType": "string",
            "sourceColumn": "NumberExtension",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NumberExtension"
              }
            ]
          },
          {
            "name": "ZipCode",
            "dataType": "string",
            "sourceColumn": "ZipCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ZipCode"
              }
            ]
          },
          {
            "name": "Phone",
            "dataType": "string",
            "sourceColumn": "Phone",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone"
              }
            ]
          },
          {
            "name": "CustomerProfession",
            "dataType": "string",
            "sourceColumn": "CustomerProfession",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerProfession"
              }
            ]
          },
          {
            "name": "ReliabilityStatus",
            "dataType": "string",
            "sourceColumn": "ReliabilityStatus",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This NVARCHAR column holds a categorical reliability status using color labels. NULL means the status hasn't been provided or calculated. Non-NULL values are the assigned reliability categories; their exact business meanings (especially PURPLE) should be confirmed with stakeholders. Common alternative filters you might use depending on intent: to get only assessed records use ReliabilityStatus IS NOT NULL (shown above); to get only healthy/operational records use ReliabilityStatus = 'GREEN'; to get records that are not in a failed state exclude RED with ReliabilityStatus <> 'RED' AND ReliabilityStatus IS NOT NULL."
              }
            ]
          },
          {
            "name": "MainHeadingID",
            "dataType": "int64",
            "sourceColumn": "MainHeadingID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainHeadingID"
              }
            ]
          },
          {
            "name": "MainHeadingCode",
            "dataType": "string",
            "sourceColumn": "MainHeadingCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainHeadingCode"
              }
            ]
          },
          {
            "name": "MainHeadingName",
            "dataType": "string",
            "sourceColumn": "MainHeadingName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainHeadingName"
              }
            ]
          },
          {
            "name": "Code",
            "dataType": "string",
            "sourceColumn": "Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Code"
              }
            ]
          },
          {
            "name": "ProcessID",
            "dataType": "string",
            "sourceColumn": "ProcessID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProcessID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "PaymentRefusal",
            "dataType": "boolean",
            "sourceColumn": "PaymentRefusal",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentRefusal"
              }
            ]
          },
          {
            "name": "Disappeared",
            "dataType": "boolean",
            "sourceColumn": "Disappeared",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Disappeared is a nullable BIT that marks whether a TargetGroupItem has been removed/ceased to exist. A stored 1 should be interpreted as disappeared (inactive), and 0 as not disappeared (active). NULL typically means the flag wasn't set or the state is unknown; you should confirm with the data owner whether NULL means 'unknown' or implicitly 'not disappeared'. If you want to treat unknowns as active, filter with ISNULL(Disappeared, 0) = 0 (or WHERE Disappeared = 0 OR Disappeared IS NULL). If NULL should be excluded until clarified, use WHERE Disappeared = 0."
              }
            ]
          },
          {
            "name": "PrecariousnessLegal",
            "dataType": "boolean",
            "sourceColumn": "PrecariousnessLegal",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PrecariousnessLegal"
              }
            ]
          },
          {
            "name": "ContinuousPaymentRefusal",
            "dataType": "boolean",
            "sourceColumn": "ContinuousPaymentRefusal",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContinuousPaymentRefusal"
              }
            ]
          },
          {
            "name": "SealedCheck",
            "dataType": "boolean",
            "sourceColumn": "SealedCheck",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SealedCheck"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MainHeadingID_Count",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(MainHeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MainHeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKey_Count",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctMainHeadingCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT MainHeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MainHeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumMainHeadingID",
            "expression": "// TODO: Verify DAX expression\nSUMX(MainHeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MainHeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageMainHeadingID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(MainHeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MainHeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinMainHeadingID",
            "expression": "// TODO: Verify DAX expression\nMIN(MainHeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MainHeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxMainHeadingID",
            "expression": "// TODO: Verify DAX expression\nMAX(MainHeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MainHeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "PricelistItemDetail",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "PricelistItemID",
            "dataType": "string",
            "sourceColumn": "PricelistItemID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "PricelistItemID is an identifying foreign/key column, not a status indicator. It cannot be NULL (per schema). A populated value simply points to the related PricelistItem record. To determine whether a detail row is 'active' you must consult the status column on the referenced PricelistItem (or another dedicated status column), not this ID column."
              }
            ]
          },
          {
            "name": "ProductID",
            "dataType": "string",
            "sourceColumn": "ProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductID"
              }
            ]
          },
          {
            "name": "ProductPartID",
            "dataType": "string",
            "sourceColumn": "ProductPartID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductPartID"
              }
            ]
          },
          {
            "name": "KitID",
            "dataType": "string",
            "sourceColumn": "KitID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "KitID"
              }
            ]
          },
          {
            "name": "MeasurementType",
            "dataType": "int64",
            "sourceColumn": "MeasurementType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MeasurementType"
              }
            ]
          },
          {
            "name": "UnitAmount",
            "dataType": "decimal",
            "sourceColumn": "UnitAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UnitAmount"
              }
            ]
          },
          {
            "name": "ComplexPrice",
            "dataType": "string",
            "sourceColumn": "ComplexPrice",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ComplexPrice"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "AllowableQuantities",
            "dataType": "string",
            "sourceColumn": "AllowableQuantities",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AllowableQuantities"
              }
            ]
          },
          {
            "name": "AmountsPerAllowableQuantities",
            "dataType": "string",
            "sourceColumn": "AmountsPerAllowableQuantities",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AmountsPerAllowableQuantities"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalUnitAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(UnitAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "UnitAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageUnitAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(UnitAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "UnitAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinimumUnitAmount",
            "expression": "// TODO: Verify DAX expression\nMIN(UnitAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "UnitAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaximumUnitAmount",
            "expression": "// TODO: Verify DAX expression\nMAX(UnitAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "UnitAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctRecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MeasurementTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(MeasurementType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MeasurementType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctMeasurementTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT MeasurementType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MeasurementType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinimumMeasurementType",
            "expression": "// TODO: Verify DAX expression\nMIN(MeasurementType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MeasurementType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaximumMeasurementType",
            "expression": "// TODO: Verify DAX expression\nMAX(MeasurementType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "MeasurementType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "AuditLog",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "UserID",
            "dataType": "string",
            "sourceColumn": "UserID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserID"
              }
            ]
          },
          {
            "name": "EntityID",
            "dataType": "int64",
            "sourceColumn": "EntityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "EntityID"
              }
            ]
          },
          {
            "name": "EntityType",
            "dataType": "int64",
            "sourceColumn": "EntityType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "EntityType"
              }
            ]
          },
          {
            "name": "Timestamp",
            "dataType": "dateTime",
            "sourceColumn": "Timestamp",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Timestamp"
              }
            ]
          },
          {
            "name": "LogInfo",
            "dataType": "string",
            "sourceColumn": "LogInfo",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LogInfo"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctEntityCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "NonNullEntityCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumEntityID",
            "expression": "// TODO: Verify DAX expression\nSUMX(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageEntityID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinEntityID",
            "expression": "// TODO: Verify DAX expression\nMIN(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxEntityID",
            "expression": "// TODO: Verify DAX expression\nMAX(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctEntityTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "NonNullEntityTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumEntityType",
            "expression": "// TODO: Verify DAX expression\nSUMX(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageEntityType",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinEntityType",
            "expression": "// TODO: Verify DAX expression\nMIN(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxEntityType",
            "expression": "// TODO: Verify DAX expression\nMAX(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "NonNullDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BusinessPointComment",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "UserID",
            "dataType": "int64",
            "sourceColumn": "UserID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserID"
              }
            ]
          },
          {
            "name": "CommentDate",
            "dataType": "dateTime",
            "sourceColumn": "CommentDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CommentDate"
              }
            ]
          },
          {
            "name": "CommentText",
            "dataType": "string",
            "sourceColumn": "CommentText",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CommentText"
              }
            ]
          },
          {
            "name": "CommentType",
            "dataType": "int64",
            "sourceColumn": "CommentType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CommentType"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalComments",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctUsers",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT UserID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "UserID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctBusinessPoints",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT BusinessPointID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageCommentsPerUser",
            "expression": "// TODO: Verify DAX expression\nCAST(COUNTROWS(*) AS FLOAT) / NULLIF(COUNTROWS(DISTINCT UserID), 0)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "UserID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageCommentsPerBusinessPoint",
            "expression": "// TODO: Verify DAX expression\nCAST(COUNTROWS(*) AS FLOAT) / NULLIF(COUNTROWS(DISTINCT BusinessPointID), 0)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinCommentType",
            "expression": "// TODO: Verify DAX expression\nMIN(CommentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxCommentType",
            "expression": "// TODO: Verify DAX expression\nMAX(CommentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageCommentType",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(CommentType AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "DialerTask",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "SourceTaskID",
            "dataType": "int64",
            "sourceColumn": "SourceTaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceTaskID"
              }
            ]
          },
          {
            "name": "CurrentTaskID",
            "dataType": "int64",
            "sourceColumn": "CurrentTaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CurrentTaskID"
              }
            ]
          },
          {
            "name": "PendingImport",
            "dataType": "boolean",
            "sourceColumn": "PendingImport",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PendingImport"
              }
            ]
          },
          {
            "name": "PermitCall",
            "dataType": "boolean",
            "sourceColumn": "PermitCall",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PermitCall"
              }
            ]
          },
          {
            "name": "DialerCampaignID",
            "dataType": "int64",
            "sourceColumn": "DialerCampaignID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DialerCampaignID"
              }
            ]
          },
          {
            "name": "ImportDate",
            "dataType": "dateTime",
            "sourceColumn": "ImportDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ImportDate"
              }
            ]
          },
          {
            "name": "RequiresSynchronization",
            "dataType": "boolean",
            "sourceColumn": "RequiresSynchronization",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RequiresSynchronization"
              }
            ]
          },
          {
            "name": "LastSynchDate",
            "dataType": "dateTime",
            "sourceColumn": "LastSynchDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastSynchDate"
              }
            ]
          },
          {
            "name": "TargetGroupItemValueID",
            "dataType": "int64",
            "sourceColumn": "TargetGroupItemValueID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetGroupItemValueID"
              }
            ]
          },
          {
            "name": "LastResubmitDate",
            "dataType": "dateTime",
            "sourceColumn": "LastResubmitDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastResubmitDate"
              }
            ]
          },
          {
            "name": "LastResumeDate",
            "dataType": "dateTime",
            "sourceColumn": "LastResumeDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastResumeDate"
              }
            ]
          },
          {
            "name": "ExportDate",
            "dataType": "dateTime",
            "sourceColumn": "ExportDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExportDate"
              }
            ]
          },
          {
            "name": "BatchID",
            "dataType": "string",
            "sourceColumn": "BatchID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BatchID"
              }
            ]
          },
          {
            "name": "ProcessID",
            "dataType": "string",
            "sourceColumn": "ProcessID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProcessID"
              }
            ]
          },
          {
            "name": "CampaignID",
            "dataType": "int64",
            "sourceColumn": "CampaignID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CampaignID"
              }
            ]
          },
          {
            "name": "RecallDate",
            "dataType": "dateTime",
            "sourceColumn": "RecallDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RecallDate"
              }
            ]
          },
          {
            "name": "NotFound",
            "dataType": "int64",
            "sourceColumn": "NotFound",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NotFound"
              }
            ]
          },
          {
            "name": "NotFoundDialerDate",
            "dataType": "dateTime",
            "sourceColumn": "NotFoundDialerDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NotFoundDialerDate"
              }
            ]
          },
          {
            "name": "NotFoundImportDate",
            "dataType": "dateTime",
            "sourceColumn": "NotFoundImportDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NotFoundImportDate"
              }
            ]
          },
          {
            "name": "DialerGroupID",
            "dataType": "string",
            "sourceColumn": "DialerGroupID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DialerGroupID"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TaskCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS([ID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctTaskIDs",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT [ID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTaskID",
            "expression": "// TODO: Verify DAX expression\nMIN([ID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTaskID",
            "expression": "// TODO: Verify DAX expression\nMAX([ID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT [BusinessPointID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinBusinessPointID",
            "expression": "// TODO: Verify DAX expression\nMIN([BusinessPointID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxBusinessPointID",
            "expression": "// TODO: Verify DAX expression\nMAX([BusinessPointID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctSourceTaskCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT [SourceTaskID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SourceTaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinSourceTaskID",
            "expression": "// TODO: Verify DAX expression\nMIN([SourceTaskID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SourceTaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxSourceTaskID",
            "expression": "// TODO: Verify DAX expression\nMAX([SourceTaskID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SourceTaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctCurrentTaskCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT [CurrentTaskID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CurrentTaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinCurrentTaskID",
            "expression": "// TODO: Verify DAX expression\nMIN([CurrentTaskID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CurrentTaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxCurrentTaskID",
            "expression": "// TODO: Verify DAX expression\nMAX([CurrentTaskID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CurrentTaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDialerCampaignCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT [DialerCampaignID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DialerCampaignID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDialerCampaignID",
            "expression": "// TODO: Verify DAX expression\nMIN([DialerCampaignID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DialerCampaignID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDialerCampaignID",
            "expression": "// TODO: Verify DAX expression\nMAX([DialerCampaignID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DialerCampaignID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctTargetGroupItemValueCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT [TargetGroupItemValueID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetGroupItemValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTargetGroupItemValueID",
            "expression": "// TODO: Verify DAX expression\nMIN([TargetGroupItemValueID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetGroupItemValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTargetGroupItemValueID",
            "expression": "// TODO: Verify DAX expression\nMAX([TargetGroupItemValueID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetGroupItemValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctCampaignCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT [CampaignID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CampaignID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinCampaignID",
            "expression": "// TODO: Verify DAX expression\nMIN([CampaignID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CampaignID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxCampaignID",
            "expression": "// TODO: Verify DAX expression\nMAX([CampaignID])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CampaignID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalNotFound",
            "expression": "// TODO: Verify DAX expression\nSUMX([NotFound])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NotFound"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageNotFoundRate",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST([NotFound] AS FLOAT))",
            "formatString": "0.00%",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NotFound"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinNotFound",
            "expression": "// TODO: Verify DAX expression\nMIN([NotFound])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NotFound"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxNotFound",
            "expression": "// TODO: Verify DAX expression\nMAX([NotFound])",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NotFound"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TargetGroupItemPeriod",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "TargetGroupItemValueID",
            "dataType": "string",
            "sourceColumn": "TargetGroupItemValueID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetGroupItemValueID"
              }
            ]
          },
          {
            "name": "ContractProductID",
            "dataType": "string",
            "sourceColumn": "ContractProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContractProductID"
              }
            ]
          },
          {
            "name": "Period",
            "dataType": "int64",
            "sourceColumn": "Period",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Period"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalRecords",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKeyNonNullCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctTargetGroups",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinPeriod",
            "expression": "// TODO: Verify DAX expression\nMIN(Period)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Period"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxPeriod",
            "expression": "// TODO: Verify DAX expression\nMAX(Period)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Period"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AveragePeriod",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Period)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Period"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "PeriodSpan",
            "expression": "// TODO: Verify DAX expression\nMAX(Period) - MIN(Period)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Period"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Advertisement",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "ContractProductID",
            "dataType": "string",
            "sourceColumn": "ContractProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContractProductID"
              }
            ]
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "sourceColumn": "ProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductID"
              }
            ]
          },
          {
            "name": "VersionSectionID",
            "dataType": "int64",
            "sourceColumn": "VersionSectionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "VersionSectionID"
              }
            ]
          },
          {
            "name": "GeoAreaID",
            "dataType": "int64",
            "sourceColumn": "GeoAreaID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoAreaID"
              }
            ]
          },
          {
            "name": "HeadingID",
            "dataType": "int64",
            "sourceColumn": "HeadingID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HeadingID"
              }
            ]
          },
          {
            "name": "AdvBeginDate",
            "dataType": "dateTime",
            "sourceColumn": "AdvBeginDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AdvBeginDate"
              }
            ]
          },
          {
            "name": "AdvEndDate",
            "dataType": "dateTime",
            "sourceColumn": "AdvEndDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AdvEndDate"
              }
            ]
          },
          {
            "name": "QA",
            "dataType": "boolean",
            "sourceColumn": "QA",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "QA"
              }
            ]
          },
          {
            "name": "CaseAttachmentID",
            "dataType": "string",
            "sourceColumn": "CaseAttachmentID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseAttachmentID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "Price",
            "dataType": "decimal",
            "sourceColumn": "Price",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Price"
              }
            ]
          },
          {
            "name": "Discount",
            "dataType": "decimal",
            "sourceColumn": "Discount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Discount is a quantitative money field, not a boolean flag. Because it is NOT NULL, absence of a discount is represented by a zero value rather than NULL. To treat 'active' records as those with a discount applied, filter for Discount > 0. If your business rules differ (e.g., negative values mean something special), adjust the condition accordingly."
              }
            ]
          },
          {
            "name": "RulesDiscount",
            "dataType": "decimal",
            "sourceColumn": "RulesDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "RulesDiscount is a non-null monetary status indicator: it holds the discount amount applied by rules. Because the column is NOT NULL it will always contain a numeric value; 0 indicates no/ inactive discount, >0 indicates an active discount. Use RulesDiscount > 0 to select records with an active discount (or use RulesDiscount <> 0 if you want to treat unexpected negative values as active as well). If NULLs are found in practice, treat them as unknown/inactive and investigate ETL issues."
              }
            ]
          },
          {
            "name": "ProductKitID",
            "dataType": "string",
            "sourceColumn": "ProductKitID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductKitID"
              }
            ]
          },
          {
            "name": "IsSubscriptionBased",
            "dataType": "boolean",
            "sourceColumn": "IsSubscriptionBased",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsSubscriptionBased is a non-nullable boolean flag indicating whether an advertisement is subscription-based. Because the column cannot be NULL, every row must have either 1 (yes) or 0 (no). To select subscription-based ads, filter with IsSubscriptionBased = 1. If NULLs appear in practice, investigate and treat them as data errors or unknowns."
              }
            ]
          },
          {
            "name": "IsVerified",
            "dataType": "boolean",
            "sourceColumn": "IsVerified",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsVerified is a boolean status flag indicating whether the advertisement has been verified. Because the column is defined NOT NULL, every row should contain either 1 (verified) or 0 (not verified). Use IsVerified = 1 to select verified/active advertisements. If you need to be defensive against unexpected NULLs, use ISNULL(IsVerified, 0) = 1 to treat NULL as false."
              }
            ]
          },
          {
            "name": "AlteredAmount",
            "dataType": "decimal",
            "sourceColumn": "AlteredAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredAmount"
              }
            ]
          },
          {
            "name": "DenyExtraction",
            "dataType": "boolean",
            "sourceColumn": "DenyExtraction",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DenyExtraction"
              }
            ]
          },
          {
            "name": "DesiredBeginDate",
            "dataType": "dateTime",
            "sourceColumn": "DesiredBeginDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DesiredBeginDate"
              }
            ]
          },
          {
            "name": "DeactivationDate",
            "dataType": "dateTime",
            "sourceColumn": "DeactivationDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DeactivationDate"
              }
            ]
          },
          {
            "name": "DeactivationReason",
            "dataType": "int64",
            "sourceColumn": "DeactivationReason",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DeactivationReason"
              }
            ]
          },
          {
            "name": "ReactivatedContractID",
            "dataType": "string",
            "sourceColumn": "ReactivatedContractID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ReactivatedContractID"
              }
            ]
          },
          {
            "name": "CompletedChanges",
            "dataType": "int64",
            "sourceColumn": "CompletedChanges",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedChanges"
              }
            ]
          },
          {
            "name": "PaymentDiscount",
            "dataType": "decimal",
            "sourceColumn": "PaymentDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "PaymentDiscount is a nullable numeric flag that indicates whether a discount has been applied. NULL usually signals that no discount was recorded (unknown or not applicable). A populated decimal indicates the discount amount (or percent). To find records with an active discount, filter for non-NULL values greater than zero. If your business treats 0 as equivalent to NULL, adjust the filter accordingly (e.g., PaymentDiscount > 0). Also confirm whether the stored value is a currency or percent and whether negative values are possible or meaningful."
              }
            ]
          },
          {
            "name": "ProductDiscount",
            "dataType": "decimal",
            "sourceColumn": "ProductDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ProductDiscount is a numeric indicator of whether an advertisement carries a discount. NULL indicates absence/unknownness of a discount; a populated value conveys the discount magnitude. To treat an advertisement as \"active\" in the sense of having a discount, filter for ProductDiscount IS NOT NULL AND ProductDiscount > 0. Verify business rules about zero or negative values and whether the column represents an absolute amount or a percentage; if any explicit presence (including zero) should be considered, use ProductDiscount IS NOT NULL, and if zero should be excluded use ProductDiscount <> 0."
              }
            ]
          },
          {
            "name": "BundleDiscount",
            "dataType": "decimal",
            "sourceColumn": "BundleDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Although BundleDiscount is a numeric column (not a boolean flag), its semantics can be used as a status indicator: NULL = no discount specified / not applicable; a populated value = a discount is specified. To treat records with an active discount use a filter that requires a non-NULL, positive value. Verify business rules and units (absolute amount vs. percentage) and decide how to treat zero or negative values in your environment \u2014 e.g. use BundleDiscount > 0 to identify active discounts, or include = 0 if your domain considers an explicit zero differently."
              }
            ]
          },
          {
            "name": "BudgetAmount",
            "dataType": "decimal",
            "sourceColumn": "BudgetAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BudgetAmount"
              }
            ]
          },
          {
            "name": "OneTimeAmount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OneTimeAmount"
              }
            ]
          },
          {
            "name": "ExtraFeeAmount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmount"
              }
            ]
          },
          {
            "name": "Months",
            "dataType": "int64",
            "sourceColumn": "Months",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Months"
              }
            ]
          },
          {
            "name": "SendTo",
            "dataType": "string",
            "sourceColumn": "SendTo",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SendTo"
              }
            ]
          },
          {
            "name": "SendOn",
            "dataType": "dateTime",
            "sourceColumn": "SendOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SendOn"
              }
            ]
          },
          {
            "name": "CanExport",
            "dataType": "boolean",
            "sourceColumn": "CanExport",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CanExport"
              }
            ]
          },
          {
            "name": "RelatedAdvertisementID",
            "dataType": "int64",
            "sourceColumn": "RelatedAdvertisementID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "RelatedAdvertisementID is a foreign-key-style status indicator: NULL means no relationship; a populated integer points at another Advertisement. Without documentation you cannot be certain whether populated values mark a record as inactive (e.g., superseded) or as part of an active relationship (e.g., a variant). Typical approaches: to get records that are likely primary/not superseded use RelatedAdvertisementID IS NULL; to get records that participate in relationships use RelatedAdvertisementID IS NOT NULL. Verify against referential constraints, triggers, or business rules (or look for companion columns like IsActive/StartDate/EndDate) before applying a production filter."
              }
            ]
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Although this column is a monetary field rather than a traditional status flag, its NULL-vs-populated semantics act like a presence indicator: NULL = no applicable or unknown one\u2011time discounted charge; populated = there is a defined one\u2011time discounted charge (value shows the amount). To treat records as 'active' in the sense that they have a meaningful charge, filter for non-NULL and greater than zero. If your business defines 'active' differently (e.g., zero is considered active), adjust the SQL condition accordingly."
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This MONEY column holds the extra fee amount remaining after discounts. NULL generally indicates absence of a recorded extra fee (not applicable, not yet calculated, or missing). A non-NULL value is an explicit recorded amount; treat 0.00 as an explicit 'no extra fee' result. To select rows where an extra-fee value exists use: ExtraFeeAmountAfterDiscount IS NOT NULL. If your definition of 'active' excludes zero amounts, add: ExtraFeeAmountAfterDiscount IS NOT NULL AND ExtraFeeAmountAfterDiscount <> 0. Be cautious of negative values, currency context, and system behaviors that may use NULL vs 0 differently."
              }
            ]
          },
          {
            "name": "ActualSpentBudget",
            "dataType": "decimal",
            "sourceColumn": "ActualSpentBudget",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActualSpentBudget"
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmountAfterCC"
              }
            ]
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "AlteredPPCAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredPPCAmountAfterCC"
              }
            ]
          },
          {
            "name": "IsCustomAttributesValid",
            "dataType": "boolean",
            "sourceColumn": "IsCustomAttributesValid",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsCustomAttributesValid is a nullable boolean status flag: a value of 1 marks the record as having valid custom attributes, 0 marks them as invalid, and NULL means the validity is unknown or hasn't been set. To select records considered 'active' with respect to this flag, filter for IsCustomAttributesValid = 1. If your application treats unknown (NULL) as valid or invalid, explicitly coalesce it (for example, WHERE ISNULL(IsCustomAttributesValid, 0) = 1 to treat NULL as false, or WHERE ISNULL(IsCustomAttributesValid, 1) = 1 to treat NULL as true)."
              }
            ]
          },
          {
            "name": "DirProductId",
            "dataType": "int64",
            "sourceColumn": "DirProductId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DirProductId"
              }
            ]
          },
          {
            "name": "DirProductName",
            "dataType": "string",
            "sourceColumn": "DirProductName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DirProductName"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalProductID",
            "expression": "// TODO: Verify DAX expression\nSUMX(ProductID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ProductID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalVersionSectionID",
            "expression": "// TODO: Verify DAX expression\nSUMX(VersionSectionID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "VersionSectionID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalGeoAreaID",
            "expression": "// TODO: Verify DAX expression\nSUMX(GeoAreaID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "GeoAreaID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalHeadingID",
            "expression": "// TODO: Verify DAX expression\nSUMX(HeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "HeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "CampaignNewLossCustomer",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "RuleID",
            "dataType": "int64",
            "sourceColumn": "RuleID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RuleID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "IsRequestedToSuspend",
            "dataType": "boolean",
            "sourceColumn": "IsRequestedToSuspend",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsRequestedToSuspend is a mandatory binary flag indicating whether the record has been requested to be suspended. Because the column is non\u2011nullable every row will contain either 0 or 1. Interpret 0 as the active/unsuspended state and 1 as suspended/requested-to-suspend. If there is any uncertainty about business semantics or if the flag meaning might be inverted, confirm with the data owner before relying on it in queries."
              }
            ]
          },
          {
            "name": "IsSuspended",
            "dataType": "boolean",
            "sourceColumn": "IsSuspended",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsSuspended is a required boolean flag marking suspension state. Because it is NOT NULL every row must indicate suspended (1) or not suspended (0). To select records that are operational/active, filter for IsSuspended = 0. Any NULLs encountered are data anomalies and should be resolved according to your error-handling policy."
              }
            ]
          },
          {
            "name": "IsNewRecord",
            "dataType": "boolean",
            "sourceColumn": "IsNewRecord",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsNewRecord is a non-nullable boolean flag indicating whether the row is classified as a new record. Because the column cannot be NULL, every row must have either 0 or 1. Treat 1 as the positive/active state (new) and 0 as the negative/inactive state (not new); if you need the opposite definition for 'active' in your context, invert the condition. Verify business rules with domain owners if available."
              }
            ]
          },
          {
            "name": "ActionResult",
            "dataType": "string",
            "sourceColumn": "ActionResult",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActionResult"
              }
            ]
          },
          {
            "name": "IsRequestedToResume",
            "dataType": "boolean",
            "sourceColumn": "IsRequestedToResume",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsRequestedToResume is a non-nullable boolean flag indicating whether a resume request exists. Because the column is NOT NULL, you should expect only 0 or 1 values; treat 1 as the 'active' or positive state (request present) and 0 as the negative state (no request). Any NULLs would signal data/schema issues and should be investigated."
              }
            ]
          },
          {
            "name": "DialerAction",
            "dataType": "int64",
            "sourceColumn": "DialerAction",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DialerAction"
              }
            ]
          },
          {
            "name": "BatchID",
            "dataType": "string",
            "sourceColumn": "BatchID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BatchID"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalRecords",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctRuleCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT RuleID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RuleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinRuleID",
            "expression": "// TODO: Verify DAX expression\nMIN(RuleID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RuleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxRuleID",
            "expression": "// TODO: Verify DAX expression\nMAX(RuleID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RuleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AvgRuleID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(RuleID AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RuleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT BusinessPointID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinBusinessPointID",
            "expression": "// TODO: Verify DAX expression\nMIN(BusinessPointID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxBusinessPointID",
            "expression": "// TODO: Verify DAX expression\nMAX(BusinessPointID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AvgBusinessPointID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(BusinessPointID AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDialerActionCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DialerAction)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DialerAction"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDialerAction",
            "expression": "// TODO: Verify DAX expression\nMIN(DialerAction)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DialerAction"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDialerAction",
            "expression": "// TODO: Verify DAX expression\nMAX(DialerAction)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DialerAction"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AvgDialerAction",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(DialerAction AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DialerAction"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Classification",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "ClassifierID",
            "dataType": "string",
            "sourceColumn": "ClassifierID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ClassifierID"
              }
            ]
          },
          {
            "name": "ClassifierNodeID",
            "dataType": "string",
            "sourceColumn": "ClassifierNodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ClassifierNodeID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "UniqueDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(DMKey AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "ContractProduct",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "RelatedContractID",
            "dataType": "string",
            "sourceColumn": "RelatedContractID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RelatedContractID"
              }
            ]
          },
          {
            "name": "ProductID",
            "dataType": "string",
            "sourceColumn": "ProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductID"
              }
            ]
          },
          {
            "name": "State",
            "dataType": "int64",
            "sourceColumn": "State",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Because State is an INTEGER NOT NULL, every row contains a numeric state code; NULL is not allowed. That numeric value is a key into business semantics rather than a human-friendly label. To determine which numeric equals 'active' you should: (1) locate the canonical mapping (a lookup table such as dbo.ContractProductState or documentation); (2) if no mapping is available, inspect data (SELECT DISTINCT State FROM dbo.ContractProduct) and consult business owners. For filtering, use the integer code for 'active' (commonly 1 in many systems) or join/EXISTS against the lookup table that exposes an IsActive flag. Example safe patterns: (a) direct: WHERE State = <ACTIVE_CODE>; (b) lookup: WHERE EXISTS (SELECT 1 FROM dbo.ContractProductState s WHERE s.Code = dbo.ContractProduct.State AND s.IsActive = 1)."
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedOn"
              }
            ]
          },
          {
            "name": "ModifiedBy",
            "dataType": "string",
            "sourceColumn": "ModifiedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedBy"
              }
            ]
          },
          {
            "name": "Price",
            "dataType": "decimal",
            "sourceColumn": "Price",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Price"
              }
            ]
          },
          {
            "name": "IsSubscriptionBased",
            "dataType": "boolean",
            "sourceColumn": "IsSubscriptionBased",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsSubscriptionBased is a non-nullable BIT flag indicating whether a ContractProduct is subscription-based. It contains only 0 or 1: 1 denotes subscription-based products, 0 denotes non-subscription products. Because the column is NOT NULL, you can safely filter for subscription products with IsSubscriptionBased = 1; if NULLs appear they should be investigated as data quality issues."
              }
            ]
          },
          {
            "name": "IsROI",
            "dataType": "boolean",
            "sourceColumn": "IsROI",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsROI is a non\u2011nullable BIT status flag. Valid stored values are 1 (flagged/true) and 0 (not flagged/false). Because the column is NOT NULL, you normally do not need to guard against NULLs; if NULLs appear they represent data issues. To select records where the flag denotes the active/positive state, filter with IsROI = 1. Verify the precise business meaning of 'ROI' with domain owners if needed."
              }
            ]
          },
          {
            "name": "VersionSectionID",
            "dataType": "string",
            "sourceColumn": "VersionSectionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "VersionSectionID"
              }
            ]
          },
          {
            "name": "SalesTypeID",
            "dataType": "int64",
            "sourceColumn": "SalesTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SalesTypeID"
              }
            ]
          },
          {
            "name": "Quantity",
            "dataType": "int64",
            "sourceColumn": "Quantity",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Quantity"
              }
            ]
          },
          {
            "name": "Discount",
            "dataType": "decimal",
            "sourceColumn": "Discount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Discount is a non\u2011nullable monetary field, so every record contains a value. Interpret 0 as 'no discount' and >0 as 'discount active'. Because NULLs are not allowed by the schema, you do not need to handle missing values; if the business rules treat any non\u2011zero amount (including negatives) as active, use 'Discount <> 0' instead of 'Discount > 0'. If you need to detect originally unset discounts in a changed schema, a NULL would indicate unknown/not configured."
              }
            ]
          },
          {
            "name": "PaymentMethodID",
            "dataType": "string",
            "sourceColumn": "PaymentMethodID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentMethodID"
              }
            ]
          },
          {
            "name": "RulesDiscount",
            "dataType": "decimal",
            "sourceColumn": "RulesDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Although presented here in the status/flag analysis format, RulesDiscount is a numeric money field (NOT NULL) rather than a boolean flag. Because it cannot be NULL, presence/absence cannot be used to indicate state. Use the numeric value to infer state: treat values > 0 as an active discount, 0 as no discount, and handle negative values only after confirming business intent. If your business considers any non-zero value as active (including negatives), use RulesDiscount <> 0 instead of RulesDiscount > 0."
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "SourceContractProductID",
            "dataType": "int64",
            "sourceColumn": "SourceContractProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceContractProductID"
              }
            ]
          },
          {
            "name": "IsRenewed",
            "dataType": "boolean",
            "sourceColumn": "IsRenewed",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsRenewed is a non-nullable boolean flag that records whether the contract product has been renewed. Because it cannot be NULL, every row must be marked either renewed (1) or not renewed (0). Typically an 'active' contract product is one that has not been superseded by a renewal, so filter with IsRenewed = 0 to get active records. If your business defines 'active' differently (for example, only renewed items are considered active), invert the condition to IsRenewed = 1."
              }
            ]
          },
          {
            "name": "IsRenewable",
            "dataType": "boolean",
            "sourceColumn": "IsRenewable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsRenewable is a non-nullable BIT flag indicating whether a ContractProduct can be renewed. Under normal circumstances you will never see NULL; 1 marks renewable products and 0 marks non-renewable ones. To select records that are 'active' in the sense of being renewable, filter with IsRenewable = 1. If you must defensively handle unexpected NULLs, include an explicit NULL check (e.g. IsRenewable = 1 OR IsRenewable IS NULL) depending on how you want to treat unknowns."
              }
            ]
          },
          {
            "name": "InterruptionDate",
            "dataType": "dateTime",
            "sourceColumn": "InterruptionDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InterruptionDate"
              }
            ]
          },
          {
            "name": "AlteredAmount",
            "dataType": "decimal",
            "sourceColumn": "AlteredAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredAmount"
              }
            ]
          },
          {
            "name": "CancelledOn",
            "dataType": "dateTime",
            "sourceColumn": "CancelledOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "CancelledOn is a soft\u2011status timestamp: NULL denotes no cancellation (active), a non\u2011NULL value denotes cancellation at that datetime. When filtering for active records prefer treating both NULL and future cancellations as active (e.g. WHERE CancelledOn IS NULL OR CancelledOn > GETUTCDATE()). Be aware of timezone considerations (use GETDATE() vs GETUTCDATE() consistently with your data), possible default sentinel values, and that other date fields (effective/expiry) or status columns may also affect what you consider fully active."
              }
            ]
          },
          {
            "name": "CancelledBy",
            "dataType": "string",
            "sourceColumn": "CancelledBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "CancelledBy is a nullable NVARCHAR flag that appears to record who cancelled the ContractProduct. NULL typically means no cancellation was recorded (the record is active). A non-NULL/non-empty value is the user or system account that cancelled the row and therefore indicates the record is cancelled (soft-deleted). When filtering for active records, check for NULL or empty/whitespace values as shown. Note: if the schema also has a cancellation timestamp or a separate boolean, use those for stronger guarantees; some systems may use special values (e.g., 'AdminUpdate') or might populate this column for other administrative actions, so validate against related audit/date columns if available."
              }
            ]
          },
          {
            "name": "PaymentDiscount",
            "dataType": "decimal",
            "sourceColumn": "PaymentDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Treat NULL as 'no discount defined / not applicable'. A non-NULL numeric value means an explicit discount has been recorded. If you consider only positive discounts as active, use PaymentDiscount IS NOT NULL AND PaymentDiscount > 0. The provided active_filter (PaymentDiscount IS NOT NULL AND PaymentDiscount <> 0) finds rows with any explicit non-zero discount; adjust to >0 if negative values should be excluded."
              }
            ]
          },
          {
            "name": "ProductDiscount",
            "dataType": "decimal",
            "sourceColumn": "ProductDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ProductDiscount is a numeric field (DECIMAL(18,3)), not a boolean flag. NULL indicates no discount has been recorded (unspecified/unknown). A non-NULL value records the discount amount or rate. To find records with an active discount, filter for non-NULL and greater than zero (ProductDiscount IS NOT NULL AND ProductDiscount > 0). If your definition of \"active\" is any explicitly set discount (including zero or negative), use ProductDiscount IS NOT NULL or ProductDiscount <> 0 to capture any nonzero explicit values. If NULL should be treated as zero, use COALESCE(ProductDiscount, 0) > 0."
              }
            ]
          },
          {
            "name": "BundleDiscount",
            "dataType": "decimal",
            "sourceColumn": "BundleDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Treat NULL as 'no discount specified / not applicable.' A populated decimal means a discount has been set; interpret the numeric magnitude per business rules (amount vs percent). To find rows with an effective/active bundle discount, filter for non\u2011NULL and non\u2011zero values. If your business considers zero as active or uses negative values, adjust the condition accordingly."
              }
            ]
          },
          {
            "name": "BudgetAmount",
            "dataType": "decimal",
            "sourceColumn": "BudgetAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BudgetAmount"
              }
            ]
          },
          {
            "name": "OneTimeAmount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OneTimeAmount"
              }
            ]
          },
          {
            "name": "ExtraFeeAmount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmount"
              }
            ]
          },
          {
            "name": "Months",
            "dataType": "int64",
            "sourceColumn": "Months",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Months"
              }
            ]
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "OneTimeAmountAfterDiscount is a nullable monetary field. NULL typically means no amount was set (not applicable or not provided). A populated value is the actual post\u2011discount one\u2011time charge. Because it conveys an amount rather than a state, you cannot reliably use it alone to determine whether a record is 'active' unless your business rule defines activity by presence/size of this amount. If such a rule exists, filter for IS NOT NULL and/or <> 0 as appropriate; otherwise use explicit status/date fields to determine activity."
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This column is a monetary measure, not a binary status flag. NULL indicates absence/not-applicable/uncomputed. A non-NULL value gives the actual extra-fee amount after discounts; distinguish explicit zeros from NULLs in queries. If you need to treat rows with an applied extra fee as 'active' for this indicator, filter for non-NULL and non-zero values as shown. If your business considers explicit zero as active (or wants to include computed zeros), adjust the filter accordingly (e.g., ExtraFeeAmountAfterDiscount IS NOT NULL). Also validate unexpected negative values with data quality rules."
              }
            ]
          },
          {
            "name": "ActualSpentBudget",
            "dataType": "decimal",
            "sourceColumn": "ActualSpentBudget",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActualSpentBudget"
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmountAfterCC"
              }
            ]
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "AlteredPPCAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredPPCAmountAfterCC"
              }
            ]
          },
          {
            "name": "IsInterruptedFromCRM",
            "dataType": "boolean",
            "sourceColumn": "IsInterruptedFromCRM",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsInterruptedFromCRM is a non-nullable boolean flag where 1 signals the product was interrupted in CRM and 0 signals it was not. Because the column is NOT NULL, expect only 0/1 values; NULL would be an anomaly (or represent 'unknown' only if the schema allowed it). To select active (not interrupted) records filter for IsInterruptedFromCRM = 0. If you must defensively handle unexpected NULLs, use (IsInterruptedFromCRM = 0 OR IsInterruptedFromCRM IS NULL) to treat NULL as active."
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalState",
            "expression": "// TODO: Verify DAX expression\nSUMX(State)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "State"
              },
              {
                "name": "FiltersApplied",
                "value": "State = 1 -- (use the integer code that represents 'active' in your environment; alternatively use a lookup: EXISTS (SELECT 1 FROM dbo.ContractProductState s WHERE s.Code = dbo.ContractProduct.State AND s.IsActive = 1))"
              }
            ]
          },
          {
            "name": "TotalPrice",
            "expression": "// TODO: Verify DAX expression\nSUMX(Price)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Price"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalSalesTypeID",
            "expression": "// TODO: Verify DAX expression\nSUMX(SalesTypeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SalesTypeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalQuantity",
            "expression": "// TODO: Verify DAX expression\nSUMX(Quantity)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Quantity"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(Discount)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Discount"
              },
              {
                "name": "FiltersApplied",
                "value": "Discount > 0"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "CaseComment",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "CaseID",
            "dataType": "string",
            "sourceColumn": "CaseID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseID"
              }
            ]
          },
          {
            "name": "CommentText",
            "dataType": "string",
            "sourceColumn": "CommentText",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CommentText"
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "TaskID",
            "dataType": "string",
            "sourceColumn": "TaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskID"
              }
            ]
          },
          {
            "name": "CommentType",
            "dataType": "int64",
            "sourceColumn": "CommentType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CommentType"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalComments",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CommentType_Count",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(CommentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CommentType_DistinctCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT CommentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CommentType_Min",
            "expression": "// TODO: Verify DAX expression\nMIN(CommentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CommentType_Max",
            "expression": "// TODO: Verify DAX expression\nMAX(CommentType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CommentType_Average",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(CommentType AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CommentType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKey_Count",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKey_DistinctCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKey_Min",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKey_Max",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "CampaignScoreHistoryDetail",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "CampaignScoreHistoryID",
            "dataType": "int64",
            "sourceColumn": "CampaignScoreHistoryID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "CampaignScoreHistoryID is a required identifier that ties this detail record to a CampaignScoreHistory parent. Because it is NOT NULL, you will not see NULLs in the column; a populated integer indicates the parent linkage. If you want to treat 'active' as rows that have a valid parent, filter by CampaignScoreHistoryID IS NOT NULL (or CampaignScoreHistoryID > 0). For stronger guarantees, join to dbo.CampaignScoreHistory and apply any status flags on the parent (for example, only include rows where the parent exists and is not marked deleted)."
              }
            ]
          },
          {
            "name": "CampaignBucketID",
            "dataType": "int64",
            "sourceColumn": "CampaignBucketID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CampaignBucketID"
              }
            ]
          },
          {
            "name": "ScoreMainActivity",
            "dataType": "decimal",
            "sourceColumn": "ScoreMainActivity",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreMainActivity"
              }
            ]
          },
          {
            "name": "ScoreSeniority",
            "dataType": "decimal",
            "sourceColumn": "ScoreSeniority",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreSeniority"
              }
            ]
          },
          {
            "name": "ScoreValueBillingRange",
            "dataType": "decimal",
            "sourceColumn": "ScoreValueBillingRange",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreValueBillingRange"
              }
            ]
          },
          {
            "name": "ScoreCombinationMedium",
            "dataType": "decimal",
            "sourceColumn": "ScoreCombinationMedium",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreCombinationMedium"
              }
            ]
          },
          {
            "name": "ScoreMaxInvestmentMedium",
            "dataType": "decimal",
            "sourceColumn": "ScoreMaxInvestmentMedium",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreMaxInvestmentMedium"
              }
            ]
          },
          {
            "name": "ScoreCombinationProduct",
            "dataType": "decimal",
            "sourceColumn": "ScoreCombinationProduct",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreCombinationProduct"
              }
            ]
          },
          {
            "name": "ScoreCustomerBehavior",
            "dataType": "decimal",
            "sourceColumn": "ScoreCustomerBehavior",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreCustomerBehavior"
              }
            ]
          },
          {
            "name": "ScoreSalesmanManagement",
            "dataType": "decimal",
            "sourceColumn": "ScoreSalesmanManagement",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreSalesmanManagement"
              }
            ]
          },
          {
            "name": "ScoreTotal",
            "dataType": "decimal",
            "sourceColumn": "ScoreTotal",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreTotal"
              }
            ]
          },
          {
            "name": "TargetingAmountCalculated",
            "dataType": "decimal",
            "sourceColumn": "TargetingAmountCalculated",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetingAmountCalculated"
              }
            ]
          },
          {
            "name": "TargetingAmountByUser",
            "dataType": "decimal",
            "sourceColumn": "TargetingAmountByUser",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetingAmountByUser"
              }
            ]
          },
          {
            "name": "Characterization",
            "dataType": "int64",
            "sourceColumn": "Characterization",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Characterization"
              }
            ]
          },
          {
            "name": "ScoreDifferenceToAvg",
            "dataType": "decimal",
            "sourceColumn": "ScoreDifferenceToAvg",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreDifferenceToAvg"
              }
            ]
          },
          {
            "name": "CampaignID",
            "dataType": "int64",
            "sourceColumn": "CampaignID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CampaignID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "BussinessPointCode",
            "dataType": "string",
            "sourceColumn": "BussinessPointCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BussinessPointCode"
              }
            ]
          },
          {
            "name": "BusinessPointName",
            "dataType": "string",
            "sourceColumn": "BusinessPointName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointName"
              }
            ]
          },
          {
            "name": "ProductMixture",
            "dataType": "string",
            "sourceColumn": "ProductMixture",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductMixture"
              }
            ]
          },
          {
            "name": "VerticalsGrouping",
            "dataType": "string",
            "sourceColumn": "VerticalsGrouping",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "VerticalsGrouping"
              }
            ]
          },
          {
            "name": "PrintAmount",
            "dataType": "decimal",
            "sourceColumn": "PrintAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PrintAmount"
              }
            ]
          },
          {
            "name": "PPCAmount",
            "dataType": "decimal",
            "sourceColumn": "PPCAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PPCAmount"
              }
            ]
          },
          {
            "name": "XOGRAmount",
            "dataType": "decimal",
            "sourceColumn": "XOGRAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "XOGRAmount"
              }
            ]
          },
          {
            "name": "WebSiteAmount",
            "dataType": "decimal",
            "sourceColumn": "WebSiteAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "WebSiteAmount"
              }
            ]
          },
          {
            "name": "TotalAmount",
            "dataType": "decimal",
            "sourceColumn": "TotalAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TotalAmount"
              }
            ]
          },
          {
            "name": "NewChannel",
            "dataType": "string",
            "sourceColumn": "NewChannel",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewChannel"
              }
            ]
          },
          {
            "name": "NewChannelID",
            "dataType": "int64",
            "sourceColumn": "NewChannelID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewChannelID"
              }
            ]
          },
          {
            "name": "NewSalesmanID",
            "dataType": "int64",
            "sourceColumn": "NewSalesmanID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewSalesmanID"
              }
            ]
          },
          {
            "name": "NewSalesmanCode",
            "dataType": "string",
            "sourceColumn": "NewSalesmanCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewSalesmanCode"
              }
            ]
          },
          {
            "name": "NewSalesmanName",
            "dataType": "string",
            "sourceColumn": "NewSalesmanName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewSalesmanName"
              }
            ]
          },
          {
            "name": "FirstCustomerExpirationMonth",
            "dataType": "dateTime",
            "sourceColumn": "FirstCustomerExpirationMonth",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "FirstCustomerExpirationMonth"
              }
            ]
          },
          {
            "name": "SegmentID",
            "dataType": "int64",
            "sourceColumn": "SegmentID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SegmentID"
              }
            ]
          },
          {
            "name": "SegmentDescription",
            "dataType": "string",
            "sourceColumn": "SegmentDescription",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SegmentDescription"
              }
            ]
          },
          {
            "name": "FileID",
            "dataType": "int64",
            "sourceColumn": "FileID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "FileID"
              }
            ]
          },
          {
            "name": "ItemStatus",
            "dataType": "int64",
            "sourceColumn": "ItemStatus",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ItemStatus is a nullable integer used to carry a coded status. NULL means no explicit status was assigned (unknown, default, or not processed). A populated integer maps to a specific state; you must consult the status-code documentation or lookup table to interpret each value. For querying 'active' rows, prefer using the explicit active code (ItemStatus = <active_code>). If the code mapping is unavailable and the business rule treats any assigned status as active, use ItemStatus IS NOT NULL. Consider adding or documenting a status lookup table and avoiding NULLs for clearer semantics."
              }
            ]
          },
          {
            "name": "WorkingStatus",
            "dataType": "int64",
            "sourceColumn": "WorkingStatus",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "WorkingStatus is a nullable integer flag that encodes the record's state. NULL indicates the state is absent/unknown/not set; any non-NULL integer corresponds to an enumerated status whose semantics must be obtained from the application or a reference table. To select active records, filter for the integer value(s) that represent 'active' (commonly 1), and explicitly decide whether NULL should be included or excluded based on business rules."
              }
            ]
          },
          {
            "name": "TargetGroupItemValueID",
            "dataType": "int64",
            "sourceColumn": "TargetGroupItemValueID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetGroupItemValueID"
              }
            ]
          },
          {
            "name": "MediumCombination",
            "dataType": "int64",
            "sourceColumn": "MediumCombination",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MediumCombination"
              }
            ]
          },
          {
            "name": "MaxInvestmentMedium",
            "dataType": "string",
            "sourceColumn": "MaxInvestmentMedium",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MaxInvestmentMedium"
              }
            ]
          },
          {
            "name": "ScoreSalesmanManagementType",
            "dataType": "int64",
            "sourceColumn": "ScoreSalesmanManagementType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreSalesmanManagementType"
              }
            ]
          },
          {
            "name": "ScoreCustomerBehaviorType",
            "dataType": "int64",
            "sourceColumn": "ScoreCustomerBehaviorType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ScoreCustomerBehaviorType"
              }
            ]
          },
          {
            "name": "SupervisorID",
            "dataType": "int64",
            "sourceColumn": "SupervisorID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "SupervisorID is a nullable indicator of supervisor assignment. NULL usually means 'no supervisor assigned / unknown / removed'. A non-NULL integer is the assigned supervisor's ID. To consider a record 'active' in the sense of having an assigned supervisor, filter with WHERE SupervisorID IS NOT NULL. If your environment uses a sentinel (such as 0) for unassigned, tighten the filter to WHERE SupervisorID IS NOT NULL AND SupervisorID <> 0."
              }
            ]
          },
          {
            "name": "SupervisorName",
            "dataType": "string",
            "sourceColumn": "SupervisorName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "SupervisorName is an ownership/assignment field, not a boolean flag. NULL indicates absence of an assigned/known supervisor; a populated string indicates the supervisor recorded for that history detail. To treat a row as having an active/assigned supervisor, exclude NULLs, empty or whitespace-only strings, and known sentinel values such as 'Not available' (see active_filter). Because the column uses a case-insensitive collation (Greek_CI_AS), string comparisons are case-insensitive; if you have additional sentinel values (e.g. 'TBD', 'Unknown'), add them to the filter."
              }
            ]
          },
          {
            "name": "PreviousSalesmanID",
            "dataType": "int64",
            "sourceColumn": "PreviousSalesmanID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PreviousSalesmanID"
              }
            ]
          },
          {
            "name": "PreviousSalesmanCode",
            "dataType": "string",
            "sourceColumn": "PreviousSalesmanCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PreviousSalesmanCode"
              }
            ]
          },
          {
            "name": "PreviousSalesmanName",
            "dataType": "string",
            "sourceColumn": "PreviousSalesmanName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PreviousSalesmanName"
              }
            ]
          },
          {
            "name": "MainActivityID",
            "dataType": "int64",
            "sourceColumn": "MainActivityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainActivityID"
              }
            ]
          },
          {
            "name": "MainActivity",
            "dataType": "string",
            "sourceColumn": "MainActivity",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainActivity"
              }
            ]
          },
          {
            "name": "BucketGroup",
            "dataType": "string",
            "sourceColumn": "BucketGroup",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BucketGroup"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(ID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctCampaignCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT CampaignID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CampaignID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT BusinessPointID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctFileCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT FileID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "FileID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctSegmentCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT SegmentID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SegmentID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalTargetingAmountCalculated",
            "expression": "// TODO: Verify DAX expression\nSUMX(TargetingAmountCalculated)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountCalculated"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageTargetingAmountCalculated",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(TargetingAmountCalculated)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountCalculated"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTargetingAmountCalculated",
            "expression": "// TODO: Verify DAX expression\nMIN(TargetingAmountCalculated)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountCalculated"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTargetingAmountCalculated",
            "expression": "// TODO: Verify DAX expression\nMAX(TargetingAmountCalculated)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountCalculated"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalTargetingAmountByUser",
            "expression": "// TODO: Verify DAX expression\nSUMX(TargetingAmountByUser)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountByUser"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageTargetingAmountByUser",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(TargetingAmountByUser)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountByUser"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTargetingAmountByUser",
            "expression": "// TODO: Verify DAX expression\nMIN(TargetingAmountByUser)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountByUser"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTargetingAmountByUser",
            "expression": "// TODO: Verify DAX expression\nMAX(TargetingAmountByUser)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountByUser"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalPrintAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(PrintAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PrintAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AveragePrintAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(PrintAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PrintAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinPrintAmount",
            "expression": "// TODO: Verify DAX expression\nMIN(PrintAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PrintAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxPrintAmount",
            "expression": "// TODO: Verify DAX expression\nMAX(PrintAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PrintAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalPPCAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(PPCAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PPCAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AveragePPCAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(PPCAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PPCAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalXOGRAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(XOGRAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "XOGRAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageXOGRAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(XOGRAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "XOGRAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalWebSiteAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(WebSiteAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "WebSiteAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageWebSiteAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(WebSiteAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "WebSiteAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(TotalAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TotalAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageTotalAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(TotalAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TotalAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTotalAmount",
            "expression": "// TODO: Verify DAX expression\nMIN(TotalAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TotalAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTotalAmount",
            "expression": "// TODO: Verify DAX expression\nMAX(TotalAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TotalAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalScoreTotal",
            "expression": "// TODO: Verify DAX expression\nSUMX(ScoreTotal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreTotal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreTotal",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreTotal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreTotal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreTotal",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreTotal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreTotal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreTotal",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreTotal)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreTotal"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreMainActivity",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreMainActivity)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreMainActivity"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreMainActivity",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreMainActivity)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreMainActivity"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreMainActivity",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreMainActivity)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreMainActivity"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreSeniority",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreSeniority)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreSeniority"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreSeniority",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreSeniority)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreSeniority"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreSeniority",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreSeniority)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreSeniority"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreValueBillingRange",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreValueBillingRange)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreValueBillingRange"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreValueBillingRange",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreValueBillingRange)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreValueBillingRange"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreValueBillingRange",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreValueBillingRange)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreValueBillingRange"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreCombinationMedium",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreCombinationMedium)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCombinationMedium"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreCombinationMedium",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreCombinationMedium)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCombinationMedium"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreCombinationMedium",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreCombinationMedium)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCombinationMedium"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreMaxInvestmentMedium",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreMaxInvestmentMedium)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreMaxInvestmentMedium"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreMaxInvestmentMedium",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreMaxInvestmentMedium)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreMaxInvestmentMedium"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreMaxInvestmentMedium",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreMaxInvestmentMedium)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreMaxInvestmentMedium"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreCombinationProduct",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreCombinationProduct)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCombinationProduct"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreCombinationProduct",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreCombinationProduct)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCombinationProduct"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreCombinationProduct",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreCombinationProduct)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCombinationProduct"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreCustomerBehavior",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreCustomerBehavior)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCustomerBehavior"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreCustomerBehavior",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreCustomerBehavior)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCustomerBehavior"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreCustomerBehavior",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreCustomerBehavior)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreCustomerBehavior"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreSalesmanManagement",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreSalesmanManagement)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreSalesmanManagement"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreSalesmanManagement",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreSalesmanManagement)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreSalesmanManagement"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreSalesmanManagement",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreSalesmanManagement)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreSalesmanManagement"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageScoreDifferenceToAvg",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ScoreDifferenceToAvg)",
            "formatString": "0.00%",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreDifferenceToAvg"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinScoreDifferenceToAvg",
            "expression": "// TODO: Verify DAX expression\nMIN(ScoreDifferenceToAvg)",
            "formatString": "0.00%",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreDifferenceToAvg"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxScoreDifferenceToAvg",
            "expression": "// TODO: Verify DAX expression\nMAX(ScoreDifferenceToAvg)",
            "formatString": "0.00%",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ScoreDifferenceToAvg"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumTargetingCalculatedMinusByUser",
            "expression": "// TODO: Verify DAX expression\nSUMX(TargetingAmountCalculated - TargetingAmountByUser)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TargetingAmountCalculated, TargetingAmountByUser"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountByItemStatus",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(ItemStatus)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ItemStatus"
              },
              {
                "name": "FiltersApplied",
                "value": "ItemStatus IS NOT NULL -- or, if you know the specific code for 'active', use: ItemStatus = <active_code> (replace <active_code> with the integer that represents active in your system)."
              }
            ]
          },
          {
            "name": "CountByWorkingStatus",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(WorkingStatus)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "WorkingStatus"
              },
              {
                "name": "FiltersApplied",
                "value": "WHERE WorkingStatus = 1 -- replace 1 with the integer code that your system defines as 'active'; do not treat NULL as active unless your business rules say so"
              }
            ]
          },
          {
            "name": "MinCharacterization",
            "expression": "// TODO: Verify DAX expression\nMIN(Characterization)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Characterization"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxCharacterization",
            "expression": "// TODO: Verify DAX expression\nMAX(Characterization)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Characterization"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "PointRelationship",
        "description": "",
        "columns": [
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "TargetBussinessPointID",
            "dataType": "string",
            "sourceColumn": "TargetBussinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetBussinessPointID"
              }
            ]
          },
          {
            "name": "Type",
            "dataType": "int64",
            "sourceColumn": "Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Type"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinType",
            "expression": "// TODO: Verify DAX expression\nMIN(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxType",
            "expression": "// TODO: Verify DAX expression\nMAX(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AvgType",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(Type AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AvgDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CAST(DMKey AS FLOAT))",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BusinessPointConfirmationHistory",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "BusinessPointIdentificationID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointIdentificationID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointIdentificationID"
              }
            ]
          },
          {
            "name": "TimeStamp",
            "dataType": "dateTime",
            "sourceColumn": "TimeStamp",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TimeStamp"
              }
            ]
          },
          {
            "name": "PerformedByID",
            "dataType": "int64",
            "sourceColumn": "PerformedByID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PerformedByID"
              }
            ]
          },
          {
            "name": "ActionType",
            "dataType": "int64",
            "sourceColumn": "ActionType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActionType"
              }
            ]
          },
          {
            "name": "TaskID",
            "dataType": "int64",
            "sourceColumn": "TaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskID"
              }
            ]
          },
          {
            "name": "SourceType",
            "dataType": "int64",
            "sourceColumn": "SourceType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceType"
              }
            ]
          },
          {
            "name": "IsThirdPartyDataSource",
            "dataType": "boolean",
            "sourceColumn": "IsThirdPartyDataSource",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsThirdPartyDataSource is a non-nullable boolean flag indicating whether a BusinessPointConfirmationHistory row originated from a third\u2011party data source. Valid values are 1 (third\u2011party) and 0 (not third\u2011party). NULL is not expected; if present it would signal an unexpected/missing origin. To select records marked as true/\"active\" for this flag, filter with IsThirdPartyDataSource = 1 (or use = 0 to get non\u2011third\u2011party rows)."
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "CountConfirmations",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT BusinessPointIdentificationID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointIdentificationID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctPerformerCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT PerformedByID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PerformedByID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctTaskCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT TaskID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctActionTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT ActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctSourceTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT SourceType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SourceType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinBusinessPointIdentificationID",
            "expression": "// TODO: Verify DAX expression\nMIN(BusinessPointIdentificationID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointIdentificationID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxBusinessPointIdentificationID",
            "expression": "// TODO: Verify DAX expression\nMAX(BusinessPointIdentificationID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BusinessPointIdentificationID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinPerformedByID",
            "expression": "// TODO: Verify DAX expression\nMIN(PerformedByID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PerformedByID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxPerformedByID",
            "expression": "// TODO: Verify DAX expression\nMAX(PerformedByID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PerformedByID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTaskID",
            "expression": "// TODO: Verify DAX expression\nMIN(TaskID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTaskID",
            "expression": "// TODO: Verify DAX expression\nMAX(TaskID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TaskID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinActionType",
            "expression": "// TODO: Verify DAX expression\nMIN(ActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxActionType",
            "expression": "// TODO: Verify DAX expression\nMAX(ActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageActionType",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinSourceType",
            "expression": "// TODO: Verify DAX expression\nMIN(SourceType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SourceType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxSourceType",
            "expression": "// TODO: Verify DAX expression\nMAX(SourceType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SourceType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "UserLog",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "UserID",
            "dataType": "string",
            "sourceColumn": "UserID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserID"
              }
            ]
          },
          {
            "name": "Timestamp",
            "dataType": "dateTime",
            "sourceColumn": "Timestamp",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Timestamp"
              }
            ]
          },
          {
            "name": "PC",
            "dataType": "string",
            "sourceColumn": "PC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PC"
              }
            ]
          },
          {
            "name": "IP",
            "dataType": "string",
            "sourceColumn": "IP",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "IP"
              }
            ]
          },
          {
            "name": "Action",
            "dataType": "int64",
            "sourceColumn": "Action",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Action"
              }
            ]
          },
          {
            "name": "User_Version",
            "dataType": "string",
            "sourceColumn": "User_Version",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "User_Version"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "ActionNonNullCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(Action)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Action"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctActionCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Action)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Action"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumAction",
            "expression": "// TODO: Verify DAX expression\nSUMX(Action)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Action"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageAction",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Action)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Action"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinAction",
            "expression": "// TODO: Verify DAX expression\nMIN(Action)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Action"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxAction",
            "expression": "// TODO: Verify DAX expression\nMAX(Action)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Action"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Ticket",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Result"
              }
            ]
          },
          {
            "name": "TicketTypeID",
            "dataType": "string",
            "sourceColumn": "TicketTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TicketTypeID"
              }
            ]
          },
          {
            "name": "NeedEval",
            "dataType": "boolean",
            "sourceColumn": "NeedEval",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NeedEval"
              }
            ]
          },
          {
            "name": "PriorityID",
            "dataType": "string",
            "sourceColumn": "PriorityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PriorityID"
              }
            ]
          },
          {
            "name": "SourceTypeID",
            "dataType": "string",
            "sourceColumn": "SourceTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceTypeID"
              }
            ]
          },
          {
            "name": "ResultComm",
            "dataType": "boolean",
            "sourceColumn": "ResultComm",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultComm"
              }
            ]
          },
          {
            "name": "ResultCommDate",
            "dataType": "dateTime",
            "sourceColumn": "ResultCommDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultCommDate"
              }
            ]
          },
          {
            "name": "Status",
            "dataType": "int64",
            "sourceColumn": "Status",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Status is a required integer code representing the ticket's lifecycle state. Because the column is NOT NULL, you will always see a numeric code; NULL is not used. To identify active tickets you must filter by the specific code(s) that denote non-terminal/working states in your environment. If you do not know the codes, either consult the status lookup/metadata or use the inverse approach to exclude terminal statuses: WHERE Status NOT IN (<closed_cancelled_codes>). Always use explicit code lists rather than relying on presence/absence of NULL."
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedByID",
            "dataType": "string",
            "sourceColumn": "CreatedByID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedByID"
              }
            ]
          },
          {
            "name": "NeedSupervisor",
            "dataType": "boolean",
            "sourceColumn": "NeedSupervisor",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "NeedSupervisor is a non-nullable boolean flag indicating whether a ticket requires supervisor intervention. Because the column is NOT NULL, every row will contain either 0 or 1. Use NeedSupervisor = 1 to select tickets that are flagged (require supervisor), and NeedSupervisor = 0 to select tickets that are not flagged."
              }
            ]
          },
          {
            "name": "ResultCustomer",
            "dataType": "boolean",
            "sourceColumn": "ResultCustomer",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultCustomer"
              }
            ]
          },
          {
            "name": "CompletedOn",
            "dataType": "dateTime",
            "sourceColumn": "CompletedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedOn"
              }
            ]
          },
          {
            "name": "CompletedByID",
            "dataType": "string",
            "sourceColumn": "CompletedByID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedByID"
              }
            ]
          },
          {
            "name": "ResultCommTypeID",
            "dataType": "string",
            "sourceColumn": "ResultCommTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultCommTypeID"
              }
            ]
          },
          {
            "name": "CancellationResonID",
            "dataType": "string",
            "sourceColumn": "CancellationResonID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CancellationResonID"
              }
            ]
          },
          {
            "name": "ChargeOfResponsibilityID",
            "dataType": "string",
            "sourceColumn": "ChargeOfResponsibilityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ChargeOfResponsibilityID"
              }
            ]
          },
          {
            "name": "RequestReasonID",
            "dataType": "string",
            "sourceColumn": "RequestReasonID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RequestReasonID"
              }
            ]
          },
          {
            "name": "ResolutionMethodID",
            "dataType": "string",
            "sourceColumn": "ResolutionMethodID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResolutionMethodID"
              }
            ]
          },
          {
            "name": "RelatedContractID",
            "dataType": "string",
            "sourceColumn": "RelatedContractID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RelatedContractID"
              }
            ]
          },
          {
            "name": "RelatedSalesmanID",
            "dataType": "string",
            "sourceColumn": "RelatedSalesmanID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RelatedSalesmanID"
              }
            ]
          },
          {
            "name": "HandlerID",
            "dataType": "string",
            "sourceColumn": "HandlerID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HandlerID"
              }
            ]
          },
          {
            "name": "NeedCancelContractEval",
            "dataType": "boolean",
            "sourceColumn": "NeedCancelContractEval",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NeedCancelContractEval"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "LastAssignUserID",
            "dataType": "int64",
            "sourceColumn": "LastAssignUserID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastAssignUserID"
              }
            ]
          },
          {
            "name": "LastAssignRoleID",
            "dataType": "int64",
            "sourceColumn": "LastAssignRoleID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastAssignRoleID"
              }
            ]
          },
          {
            "name": "ContactName",
            "dataType": "string",
            "sourceColumn": "ContactName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContactName"
              }
            ]
          },
          {
            "name": "ReceivedOn",
            "dataType": "dateTime",
            "sourceColumn": "ReceivedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ReceivedOn"
              }
            ]
          },
          {
            "name": "CreditNumber",
            "dataType": "int64",
            "sourceColumn": "CreditNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreditNumber"
              }
            ]
          },
          {
            "name": "CreditAmount",
            "dataType": "decimal",
            "sourceColumn": "CreditAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreditAmount"
              }
            ]
          },
          {
            "name": "CancelAmount",
            "dataType": "decimal",
            "sourceColumn": "CancelAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CancelAmount"
              }
            ]
          },
          {
            "name": "DPSCurrentNodeID",
            "dataType": "int64",
            "sourceColumn": "DPSCurrentNodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DPSCurrentNodeID"
              }
            ]
          },
          {
            "name": "TargetCampaignID",
            "dataType": "string",
            "sourceColumn": "TargetCampaignID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetCampaignID"
              }
            ]
          },
          {
            "name": "TargetSubChannelID",
            "dataType": "string",
            "sourceColumn": "TargetSubChannelID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetSubChannelID"
              }
            ]
          },
          {
            "name": "TargetSalesmanID",
            "dataType": "string",
            "sourceColumn": "TargetSalesmanID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetSalesmanID"
              }
            ]
          },
          {
            "name": "TargetSupervisorID",
            "dataType": "string",
            "sourceColumn": "TargetSupervisorID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "TargetSupervisorID is a nullable foreign-key style status column. NULL indicates there is no specific supervisor target (unassigned or not applicable). A populated integer value indicates the ticket is targeted/assigned to the supervisor with that ID. To treat 'active' records as tickets that have a target supervisor, filter for TargetSupervisorID IS NOT NULL. If you need to ensure the referenced supervisor actually exists and is not soft-deleted, join to the supervisor table and add that table's active flag (for example: JOIN dbo.Supervisor s ON Ticket.TargetSupervisorID = s.SupervisorID WHERE Ticket.TargetSupervisorID IS NOT NULL AND s.IsActive = 1). Also verify whether your system ever uses sentinel values (0 or negative) to mean unassigned and adjust the filter accordingly."
              }
            ]
          },
          {
            "name": "MaterialDeliveryDate",
            "dataType": "dateTime",
            "sourceColumn": "MaterialDeliveryDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MaterialDeliveryDate"
              }
            ]
          },
          {
            "name": "IsEditContractType",
            "dataType": "boolean",
            "sourceColumn": "IsEditContractType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsEditContractType is a non-nullable boolean status flag. Because the column is NOT NULL, you will never see NULL; every row will have either 0 or 1. Interpret 1 as the flag being active/true and 0 as inactive/false. To select rows where this flag is active, filter with IsEditContractType = 1. If the precise business meaning (allowed vs. performed) is important, validate with application or product owners."
              }
            ]
          },
          {
            "name": "InParallelRoleID",
            "dataType": "string",
            "sourceColumn": "InParallelRoleID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InParallelRoleID"
              }
            ]
          },
          {
            "name": "RelatedAdvertisementID",
            "dataType": "int64",
            "sourceColumn": "RelatedAdvertisementID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "RelatedAdvertisementID is a nullable foreign-key-style status indicator: NULL signals no associated advertisement, a populated integer is the ID of the related advertisement. To treat \"active\" as \"has an associated advertisement\", filter with RelatedAdvertisementID IS NOT NULL; to be strict, also validate the reference exists via a JOIN or EXISTS against the Advertisement table."
              }
            ]
          },
          {
            "name": "InitialTicketTypeID",
            "dataType": "int64",
            "sourceColumn": "InitialTicketTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InitialTicketTypeID"
              }
            ]
          },
          {
            "name": "SerialTicketTypdeID",
            "dataType": "int64",
            "sourceColumn": "SerialTicketTypdeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SerialTicketTypdeID"
              }
            ]
          },
          {
            "name": "SerialRoleID",
            "dataType": "int64",
            "sourceColumn": "SerialRoleID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SerialRoleID"
              }
            ]
          },
          {
            "name": "RequestedChanges",
            "dataType": "int64",
            "sourceColumn": "RequestedChanges",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RequestedChanges"
              }
            ]
          },
          {
            "name": "WebChangesContractID",
            "dataType": "string",
            "sourceColumn": "WebChangesContractID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "WebChangesContractID"
              }
            ]
          },
          {
            "name": "SelectedSalesmanID",
            "dataType": "int64",
            "sourceColumn": "SelectedSalesmanID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SelectedSalesmanID"
              }
            ]
          },
          {
            "name": "Code",
            "dataType": "string",
            "sourceColumn": "Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Code"
              }
            ]
          },
          {
            "name": "CampaignLeadId",
            "dataType": "string",
            "sourceColumn": "CampaignLeadId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CampaignLeadId"
              }
            ]
          },
          {
            "name": "BusinessPointIdentificationId",
            "dataType": "string",
            "sourceColumn": "BusinessPointIdentificationId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointIdentificationId"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TicketCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctResultCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "ResultMin",
            "expression": "// TODO: Verify DAX expression\nMIN(Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "ResultMax",
            "expression": "// TODO: Verify DAX expression\nMAX(Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctStatusCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Status)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Status"
              },
              {
                "name": "FiltersApplied",
                "value": "WHERE Status IN (<active_status_codes>)  -- replace <active_status_codes> with the integer code(s) that represent active states (e.g. WHERE Status = 1)"
              }
            ]
          },
          {
            "name": "StatusMin",
            "expression": "// TODO: Verify DAX expression\nMIN(Status)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Status"
              },
              {
                "name": "FiltersApplied",
                "value": "WHERE Status IN (<active_status_codes>)  -- replace <active_status_codes> with the integer code(s) that represent active states (e.g. WHERE Status = 1)"
              }
            ]
          },
          {
            "name": "StatusMax",
            "expression": "// TODO: Verify DAX expression\nMAX(Status)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Status"
              },
              {
                "name": "FiltersApplied",
                "value": "WHERE Status IN (<active_status_codes>)  -- replace <active_status_codes> with the integer code(s) that represent active states (e.g. WHERE Status = 1)"
              }
            ]
          },
          {
            "name": "DMKeyMin",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DMKeyMax",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctLastAssignUserCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT LastAssignUserID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LastAssignUserID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "LastAssignUserIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(LastAssignUserID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LastAssignUserID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctLastAssignRoleCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT LastAssignRoleID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LastAssignRoleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "LastAssignRoleIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(LastAssignRoleID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "LastAssignRoleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalCreditNumber",
            "expression": "// TODO: Verify DAX expression\nSUMX(CreditNumber)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CreditNumber"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageCreditNumber",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CreditNumber)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CreditNumber"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalCreditAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(CreditAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CreditAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageCreditAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CreditAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CreditAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinCreditAmount",
            "expression": "// TODO: Verify DAX expression\nMIN(CreditAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CreditAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxCreditAmount",
            "expression": "// TODO: Verify DAX expression\nMAX(CreditAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CreditAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalCancelAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(CancelAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CancelAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageCancelAmount",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CancelAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CancelAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinCancelAmount",
            "expression": "// TODO: Verify DAX expression\nMIN(CancelAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CancelAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxCancelAmount",
            "expression": "// TODO: Verify DAX expression\nMAX(CancelAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CancelAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDPSCurrentNodeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DPSCurrentNodeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DPSCurrentNodeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DPSCurrentNodeIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(DPSCurrentNodeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DPSCurrentNodeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctRelatedAdvertisementCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT RelatedAdvertisementID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RelatedAdvertisementID"
              },
              {
                "name": "FiltersApplied",
                "value": "RelatedAdvertisementID IS NOT NULL"
              }
            ]
          },
          {
            "name": "RelatedAdvertisementIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(RelatedAdvertisementID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RelatedAdvertisementID"
              },
              {
                "name": "FiltersApplied",
                "value": "RelatedAdvertisementID IS NOT NULL"
              }
            ]
          },
          {
            "name": "DistinctInitialTicketTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT InitialTicketTypeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "InitialTicketTypeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "InitialTicketTypeIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(InitialTicketTypeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "InitialTicketTypeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctSerialTicketTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT SerialTicketTypdeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SerialTicketTypdeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SerialTicketTypdeIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(SerialTicketTypdeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SerialTicketTypdeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctSerialRoleCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT SerialRoleID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SerialRoleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SerialRoleIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(SerialRoleID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SerialRoleID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalRequestedChanges",
            "expression": "// TODO: Verify DAX expression\nSUMX(RequestedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RequestedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageRequestedChanges",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(RequestedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RequestedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinRequestedChanges",
            "expression": "// TODO: Verify DAX expression\nMIN(RequestedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RequestedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxRequestedChanges",
            "expression": "// TODO: Verify DAX expression\nMAX(RequestedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RequestedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctSelectedSalesmanCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT SelectedSalesmanID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SelectedSalesmanID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SelectedSalesmanIDMin",
            "expression": "// TODO: Verify DAX expression\nMIN(SelectedSalesmanID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SelectedSalesmanID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TicketResult",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "TicketID",
            "dataType": "string",
            "sourceColumn": "TicketID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TicketID"
              }
            ]
          },
          {
            "name": "TaskID",
            "dataType": "string",
            "sourceColumn": "TaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskID"
              }
            ]
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Result"
              }
            ]
          },
          {
            "name": "ResultComm",
            "dataType": "boolean",
            "sourceColumn": "ResultComm",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultComm"
              }
            ]
          },
          {
            "name": "ResultCommDate",
            "dataType": "dateTime",
            "sourceColumn": "ResultCommDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultCommDate"
              }
            ]
          },
          {
            "name": "ResultCustomer",
            "dataType": "boolean",
            "sourceColumn": "ResultCustomer",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultCustomer"
              }
            ]
          },
          {
            "name": "PendingReview",
            "dataType": "boolean",
            "sourceColumn": "PendingReview",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PendingReview"
              }
            ]
          },
          {
            "name": "ResultCommTypeID",
            "dataType": "string",
            "sourceColumn": "ResultCommTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResultCommTypeID"
              }
            ]
          },
          {
            "name": "ResolutionMethodID",
            "dataType": "string",
            "sourceColumn": "ResolutionMethodID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ResolutionMethodID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "PerformedOn",
            "dataType": "dateTime",
            "sourceColumn": "PerformedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PerformedOn"
              }
            ]
          },
          {
            "name": "PerformedByID",
            "dataType": "int64",
            "sourceColumn": "PerformedByID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PerformedByID"
              }
            ]
          },
          {
            "name": "InParallelRoleID",
            "dataType": "string",
            "sourceColumn": "InParallelRoleID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InParallelRoleID"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalResult",
            "expression": "// TODO: Verify DAX expression\nSUMX(Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageResult",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinResult",
            "expression": "// TODO: Verify DAX expression\nMIN(Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxResult",
            "expression": "// TODO: Verify DAX expression\nMAX(Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountResults",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctResultCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Result)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Result"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountDMKey",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountPerformedBy",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(PerformedByID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PerformedByID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctPerformers",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT PerformedByID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PerformedByID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinPerformedByID",
            "expression": "// TODO: Verify DAX expression\nMIN(PerformedByID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PerformedByID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxPerformedByID",
            "expression": "// TODO: Verify DAX expression\nMAX(PerformedByID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PerformedByID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "FreeTemplate",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "ProductID",
            "dataType": "string",
            "sourceColumn": "ProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductID"
              }
            ]
          },
          {
            "name": "State",
            "dataType": "int64",
            "sourceColumn": "State",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "State is a non-nullable integer status code. Because NULL is not permitted, you should not rely on NULL to mean unknown or not applicable; encountering NULL would signal a data quality issue. Populated integers represent one of the predefined status codes; the exact mapping must be obtained from the system documentation or a reference table. To select active records, use an equality filter for the integer code that represents 'active' (commonly State = 1); if your system uses multiple active codes use State IN (...), or if 0 means inactive use State <> 0. Confirm the correct code(s) before applying the filter."
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedOn"
              }
            ]
          },
          {
            "name": "ModifiedBy",
            "dataType": "string",
            "sourceColumn": "ModifiedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedBy"
              }
            ]
          },
          {
            "name": "Price",
            "dataType": "decimal",
            "sourceColumn": "Price",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Price"
              }
            ]
          },
          {
            "name": "IsSubscriptionBased",
            "dataType": "boolean",
            "sourceColumn": "IsSubscriptionBased",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsSubscriptionBased is a required boolean flag indicating whether a FreeTemplate is subscription-based. Because the column is NOT NULL every row will have either 0 or 1. Interpret 1 as the positive/\"on\" state (subscription-based) and 0 as the negative/\"off\" state (not subscription-based). To select subscription-based records filter using IsSubscriptionBased = 1; to select non-subscription records use IsSubscriptionBased = 0."
              }
            ]
          },
          {
            "name": "IsROI",
            "dataType": "boolean",
            "sourceColumn": "IsROI",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsROI is a non\u2011nullable BIT status flag. Because it cannot be NULL, every row will contain either 0 or 1. Interpret 1 as the positive/active state (the template is an ROI) and 0 as the negative/inactive state (the template is not an ROI). To return 'active' (ROI) records filter with WHERE IsROI = 1."
              }
            ]
          },
          {
            "name": "VersionSectionID",
            "dataType": "string",
            "sourceColumn": "VersionSectionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "VersionSectionID"
              }
            ]
          },
          {
            "name": "SalesTypeID",
            "dataType": "int64",
            "sourceColumn": "SalesTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SalesTypeID"
              }
            ]
          },
          {
            "name": "Quantity",
            "dataType": "int64",
            "sourceColumn": "Quantity",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Quantity"
              }
            ]
          },
          {
            "name": "Discount",
            "dataType": "decimal",
            "sourceColumn": "Discount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Discount is a non\u2011nullable monetary field that represents the discount amount for the template. Because the column cannot be NULL, you will always see a numeric value; interpret 0 as no discount and >0 as an active discount. If your business treats negative amounts differently (e.g., as reductions stored as negative numbers), adjust the active filter accordingly (for example Discount <> 0 or Discount < 0)."
              }
            ]
          },
          {
            "name": "PaymentMethodID",
            "dataType": "string",
            "sourceColumn": "PaymentMethodID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentMethodID"
              }
            ]
          },
          {
            "name": "RulesDiscount",
            "dataType": "decimal",
            "sourceColumn": "RulesDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "RulesDiscount is a non-null money value that functions as a numeric status: non\u2011zero (typically > 0) means a discount is applied, and 0 means no discount. Because the column cannot be NULL, do not rely on NULL checks. If your business rules allow negative discounts or treat any non-zero as active, use 'RulesDiscount <> 0' instead of 'RulesDiscount > 0'."
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "SourceContractProductID",
            "dataType": "int64",
            "sourceColumn": "SourceContractProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceContractProductID"
              }
            ]
          },
          {
            "name": "IsRenewed",
            "dataType": "boolean",
            "sourceColumn": "IsRenewed",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsRenewed is a boolean status flag (BIT NOT NULL) indicating whether a FreeTemplate record has been renewed. Because the column is NOT NULL every row will have either 0 or 1. Use IsRenewed = 1 to select records that are 'renewed/active' (or IsRenewed = 0 to select 'not renewed' records). If your business definition of 'active' differs, adjust the filter accordingly."
              }
            ]
          },
          {
            "name": "IsRenewable",
            "dataType": "boolean",
            "sourceColumn": "IsRenewable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsRenewable is a Boolean status flag (BIT NOT NULL). Because it cannot be NULL, every row will explicitly indicate renewable (1) or not renewable (0). To select records considered 'active' with respect to renewable status, filter for IsRenewable = 1. If you need to treat the value as a proper boolean in client code, interpret 1 as true and 0 as false."
              }
            ]
          },
          {
            "name": "InterruptionDate",
            "dataType": "dateTime",
            "sourceColumn": "InterruptionDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InterruptionDate"
              }
            ]
          },
          {
            "name": "AlteredAmount",
            "dataType": "decimal",
            "sourceColumn": "AlteredAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredAmount"
              }
            ]
          },
          {
            "name": "CancelledOn",
            "dataType": "dateTime",
            "sourceColumn": "CancelledOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "CancelledOn is a cancellation timestamp. NULL indicates no cancellation has been recorded (the item is considered active unless other rules apply). A non-NULL datetime is the moment the item was/will be cancelled; past datetimes mean already cancelled, future datetimes mean a scheduled cancellation. To treat scheduled future cancellations as still active you would use CancelledOn IS NULL OR CancelledOn > GETUTCDATE(), otherwise use CancelledOn IS NULL to select currently active (not cancelled) records."
              }
            ]
          },
          {
            "name": "CancelledBy",
            "dataType": "string",
            "sourceColumn": "CancelledBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "CancelledBy is a cancellation flag stored as the cancelling user's name/ID. If NULL (or an empty string) there is no recorded cancellation and the template is considered active. If the column contains a non-empty value, it represents who performed the cancellation and the record should be treated as cancelled. If your environment uses special placeholders (e.g. 'N/A', 'Unknown'), extend the filter to exclude those values as needed."
              }
            ]
          },
          {
            "name": "PaymentDiscount",
            "dataType": "decimal",
            "sourceColumn": "PaymentDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "PaymentDiscount is a numeric status-like column indicating whether a discount has been recorded for the record. NULL = no discount configured / not applicable / unknown. A populated value = a discount amount or rate has been stored; interpretation (currency vs fraction) depends on system conventions. To find records with an active discount, filter for non\u2011NULL and non\u2011zero values (recommended): PaymentDiscount IS NOT NULL AND PaymentDiscount <> 0. If your business rule guarantees only positive discounts, you can use PaymentDiscount > 0. Confirm with domain documentation whether 0.000 is used to mean explicit 'no discount' and whether negative values are valid before applying stricter filters."
              }
            ]
          },
          {
            "name": "ProductDiscount",
            "dataType": "decimal",
            "sourceColumn": "ProductDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ProductDiscount is a nullable numeric field used to indicate whether a discount applies to the FreeTemplate row. NULL = no discount specified/not applicable. A populated DECIMAL value = a discount is defined (interpretation as currency vs percent must be confirmed with business rules). To treat a row as 'active' meaning a discount is in effect, filter for ProductDiscount IS NOT NULL AND ProductDiscount <> 0. If your business treats a zero value as meaningful (explicitly 'no discount') then use ProductDiscount IS NOT NULL to find rows where a discount was set, or ProductDiscount > 0 to find only positive discounts. Also validate whether negative values are allowed and prefer exact numeric comparisons (DECIMAL is precise); use COALESCE/ProductDiscount defaulting only when appropriate."
              }
            ]
          },
          {
            "name": "BundleDiscount",
            "dataType": "decimal",
            "sourceColumn": "BundleDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "BundleDiscount is not a boolean flag but a numeric indicator of a discount. NULL signals absence/unspecified discount; any populated number means an explicitly stored discount magnitude. To treat \"active\" as rows with an actual discount applied, filter for non-NULL values greater than zero (BundleDiscount IS NOT NULL AND BundleDiscount > 0). If your business defines \"active\" differently (for example, zero is considered active, or the column stores a percentage vs. absolute amount), adapt the condition accordingly and confirm the intended units/semantics with domain rules."
              }
            ]
          },
          {
            "name": "BudgetAmount",
            "dataType": "decimal",
            "sourceColumn": "BudgetAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BudgetAmount"
              }
            ]
          },
          {
            "name": "OneTimeAmount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OneTimeAmount"
              }
            ]
          },
          {
            "name": "ExtraFeeAmount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmount"
              }
            ]
          },
          {
            "name": "Months",
            "dataType": "int64",
            "sourceColumn": "Months",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Months"
              }
            ]
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This column indicates whether a one\u2011time charge (after discounts) exists and, if so, its amount. NULL should be interpreted as 'no value recorded / not applicable / unknown.' Any non\u2011NULL value indicates a defined post\u2011discount amount; consumers of the data should treat 0.00 as an explicit zero charge and decide whether that counts as 'active' for their use case. If you want rows that merely have an amount defined, filter with OneTimeAmountAfterDiscount IS NOT NULL. If you only want rows with a positive charge, use OneTimeAmountAfterDiscount > 0. If you want to treat zero as inactive, use OneTimeAmountAfterDiscount IS NOT NULL AND OneTimeAmountAfterDiscount <> 0."
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This column is a quantitative money field rather than a boolean flag. NULL typically means no fee is applicable or the amount hasn't been set/calculated. A populated money value is the extra fee remaining after discounts have been applied; interpreting that value depends on business rules (treat >0 as an active fee, =0 as no fee, negative as credit). To find rows with an active/recorded fee, filter for non-NULL and non-zero (or use > 0 if you only consider positive charges as active)."
              }
            ]
          },
          {
            "name": "ActualSpentBudget",
            "dataType": "decimal",
            "sourceColumn": "ActualSpentBudget",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActualSpentBudget"
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmountAfterCC"
              }
            ]
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "AlteredPPCAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredPPCAmountAfterCC"
              }
            ]
          },
          {
            "name": "IsInterruptedFromCRM",
            "dataType": "boolean",
            "sourceColumn": "IsInterruptedFromCRM",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsInterruptedFromCRM is a NOT NULL BIT flag that marks whether a FreeTemplate was interrupted by CRM. Because it cannot be NULL under the schema, every row should contain either 0 (not interrupted) or 1 (interrupted). Treat rows with 0 as the active/normal templates and rows with 1 as interrupted/flagged templates. If you need defensive code against unexpected NULLs from upstream issues, use ISNULL(IsInterruptedFromCRM, 0) = 0 or filter out NULLs explicitly while investigating."
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalState",
            "expression": "// TODO: Verify DAX expression\nSUMX(State)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "State"
              },
              {
                "name": "FiltersApplied",
                "value": "State = 1"
              }
            ]
          },
          {
            "name": "TotalPrice",
            "expression": "// TODO: Verify DAX expression\nSUMX(Price)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Price"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalSalesTypeID",
            "expression": "// TODO: Verify DAX expression\nSUMX(SalesTypeID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "SalesTypeID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalQuantity",
            "expression": "// TODO: Verify DAX expression\nSUMX(Quantity)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Quantity"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(Discount)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Discount"
              },
              {
                "name": "FiltersApplied",
                "value": "Discount > 0"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "FreeTemplateAdvertisement",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "FreeTemplateID",
            "dataType": "string",
            "sourceColumn": "FreeTemplateID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "FreeTemplateID"
              }
            ]
          },
          {
            "name": "ProductID",
            "dataType": "int64",
            "sourceColumn": "ProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductID"
              }
            ]
          },
          {
            "name": "VersionSectionID",
            "dataType": "int64",
            "sourceColumn": "VersionSectionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "VersionSectionID"
              }
            ]
          },
          {
            "name": "GeoAreaID",
            "dataType": "int64",
            "sourceColumn": "GeoAreaID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoAreaID"
              }
            ]
          },
          {
            "name": "HeadingID",
            "dataType": "int64",
            "sourceColumn": "HeadingID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HeadingID"
              }
            ]
          },
          {
            "name": "AdvBeginDate",
            "dataType": "dateTime",
            "sourceColumn": "AdvBeginDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AdvBeginDate"
              }
            ]
          },
          {
            "name": "AdvEndDate",
            "dataType": "dateTime",
            "sourceColumn": "AdvEndDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AdvEndDate"
              }
            ]
          },
          {
            "name": "QA",
            "dataType": "boolean",
            "sourceColumn": "QA",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "QA"
              }
            ]
          },
          {
            "name": "CaseAttachmentID",
            "dataType": "string",
            "sourceColumn": "CaseAttachmentID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseAttachmentID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "Price",
            "dataType": "decimal",
            "sourceColumn": "Price",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Price"
              }
            ]
          },
          {
            "name": "Discount",
            "dataType": "decimal",
            "sourceColumn": "Discount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Although requested as a status/flag analysis, Discount is a numeric money field rather than a true status indicator. Because it is non-nullable there is no NULL state to indicate unknown/inactive. Use Discount > 0 to find records with an active discount (adjust to >= 0 or include negatives only if your business rules treat zero or negative values as active)."
              }
            ]
          },
          {
            "name": "RulesDiscount",
            "dataType": "decimal",
            "sourceColumn": "RulesDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Because RulesDiscount is non-nullable, NULL does not signal 'inactive'. Instead a zero value normally means 'no discount' and any non-zero value means the record carries a rules discount. To select records with an applied discount use RulesDiscount <> 0; if your business definition of active requires only positive discounts use RulesDiscount > 0. Be cautious about negative values and handle them according to business rules."
              }
            ]
          },
          {
            "name": "ProductKitID",
            "dataType": "string",
            "sourceColumn": "ProductKitID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductKitID"
              }
            ]
          },
          {
            "name": "IsSubscriptionBased",
            "dataType": "boolean",
            "sourceColumn": "IsSubscriptionBased",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsSubscriptionBased is a mandatory boolean flag that marks whether a FreeTemplateAdvertisement is subscription\u2011based. Because the column is NOT NULL, every row should contain either 0 (not subscription\u2011based) or 1 (subscription\u2011based). Use WHERE IsSubscriptionBased = 1 to retrieve subscription\u2011based records and WHERE IsSubscriptionBased = 0 for non\u2011subscription records. If NULLs are unexpectedly present, treat them as an unknown/unset state and investigate or normalize them with ISNULL/COALESCE as appropriate."
              }
            ]
          },
          {
            "name": "IsVerified",
            "dataType": "boolean",
            "sourceColumn": "IsVerified",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsVerified is a non-nullable boolean flag indicating whether the FreeTemplateAdvertisement has been verified. Because the column is NOT NULL, every row should have either 1 (verified) or 0 (not verified). To select records considered \"active\" in the sense of being verified, filter with IsVerified = 1. To select unverified records use IsVerified = 0. If you encounter NULLs despite the NOT NULL definition, investigate data corruption, ETL issues, or an out-of-date schema."
              }
            ]
          },
          {
            "name": "AlteredAmount",
            "dataType": "decimal",
            "sourceColumn": "AlteredAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredAmount"
              }
            ]
          },
          {
            "name": "DenyExtraction",
            "dataType": "boolean",
            "sourceColumn": "DenyExtraction",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DenyExtraction"
              }
            ]
          },
          {
            "name": "DesiredBeginDate",
            "dataType": "dateTime",
            "sourceColumn": "DesiredBeginDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DesiredBeginDate"
              }
            ]
          },
          {
            "name": "DeactivationDate",
            "dataType": "dateTime",
            "sourceColumn": "DeactivationDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DeactivationDate"
              }
            ]
          },
          {
            "name": "DeactivationReason",
            "dataType": "int64",
            "sourceColumn": "DeactivationReason",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DeactivationReason"
              }
            ]
          },
          {
            "name": "CompletedChanges",
            "dataType": "int64",
            "sourceColumn": "CompletedChanges",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedChanges"
              }
            ]
          },
          {
            "name": "PaymentDiscount",
            "dataType": "decimal",
            "sourceColumn": "PaymentDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Although labeled here as a status/flag analysis, PaymentDiscount is a numeric field (not a boolean flag). NULL should be treated as 'no discount specified / not applicable'. A non-NULL value indicates a recorded discount amount or percentage. To identify records with an active/meaningful discount, filter for PaymentDiscount IS NOT NULL AND PaymentDiscount > 0. If your definition of active includes explicitly recorded zero discounts, use PaymentDiscount IS NOT NULL. Verify domain rules (currency vs percent, allowed negative values) with source documentation before applying business logic."
              }
            ]
          },
          {
            "name": "ProductDiscount",
            "dataType": "decimal",
            "sourceColumn": "ProductDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ProductDiscount is a numeric status-like field indicating whether a discount exists. NULL means no discount information (not applicable or unknown). A populated DECIMAL means a discount value was supplied; interpret units from business rules (currency vs percent). To select records where a discount is actively applied, filter for non-NULL values greater than zero (ProductDiscount IS NOT NULL AND ProductDiscount > 0). If your domain treats 0 differently, adjust the condition accordingly (e.g., include = 0 if 0 should be considered active)."
              }
            ]
          },
          {
            "name": "BundleDiscount",
            "dataType": "decimal",
            "sourceColumn": "BundleDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "BundleDiscount is primarily a numeric attribute, not a boolean flag. NULL indicates absence of a configured discount (or not applicable). A populated DECIMAL value conveys the discount amount; you must consult business metadata to know if the number is a percent, absolute currency, or stored in basis points. To treat records with an effective discount as \"active\", filter for non\u2011NULL and positive values (BundleDiscount IS NOT NULL AND BundleDiscount > 0). If your domain uses 0 as a sentinel for \"no discount\" but allows negative or zero values for other reasons, adjust the filter (for example use BundleDiscount IS NOT NULL AND BundleDiscount <> 0) after confirming business rules."
              }
            ]
          },
          {
            "name": "BudgetAmount",
            "dataType": "decimal",
            "sourceColumn": "BudgetAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BudgetAmount"
              }
            ]
          },
          {
            "name": "OneTimeAmount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OneTimeAmount"
              }
            ]
          },
          {
            "name": "ExtraFeeAmount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmount"
              }
            ]
          },
          {
            "name": "Months",
            "dataType": "int64",
            "sourceColumn": "Months",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Months"
              }
            ]
          },
          {
            "name": "SendTo",
            "dataType": "string",
            "sourceColumn": "SendTo",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SendTo"
              }
            ]
          },
          {
            "name": "SendOn",
            "dataType": "dateTime",
            "sourceColumn": "SendOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SendOn"
              }
            ]
          },
          {
            "name": "CanExport",
            "dataType": "boolean",
            "sourceColumn": "CanExport",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CanExport"
              }
            ]
          },
          {
            "name": "RelatedFreeTemplateAdvertisementID",
            "dataType": "int64",
            "sourceColumn": "RelatedFreeTemplateAdvertisementID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This nullable integer likely functions as a self-referential foreign key to indicate that a row is linked to another advertisement. NULL typically denotes a primary/original or otherwise standalone record (often treated as the active/current item), while a populated value points to a related record (child/derivative/replacement). If you consider 'active' records to be the primary/unreplaced ones, filter using RelatedFreeTemplateAdvertisementID IS NULL. If your domain defines 'active' differently (for example, only linked records are active), use RelatedFreeTemplateAdvertisementID IS NOT NULL. Confirm intent against application logic or documentation before relying on this for business-critical filters."
              }
            ]
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "OneTimeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This nullable money column acts like a presence/amount indicator: NULL signals absence/unknown of a one-time discounted charge; a populated MONEY value gives the actual post-discount amount. If you treat \"active\" as having a defined one-time amount, filter with OneTimeAmountAfterDiscount IS NOT NULL. If you instead need only positive charges, use OneTimeAmountAfterDiscount > 0."
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterDiscount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Although this is a monetary column rather than a classic boolean status flag, NULL typically denotes 'no data / not applicable / not charged', while a populated MONEY value indicates an explicitly recorded post-discount extra fee. To treat rows with an actual fee (including credits) as 'active', filter for non-null and non-zero values. If you only care about positive charges, use ExtraFeeAmountAfterDiscount > 0 instead."
              }
            ]
          },
          {
            "name": "ActualSpentBudget",
            "dataType": "decimal",
            "sourceColumn": "ActualSpentBudget",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActualSpentBudget"
              }
            ]
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "ExtraFeeAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraFeeAmountAfterCC"
              }
            ]
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "dataType": "decimal",
            "sourceColumn": "AlteredPPCAmountAfterCC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AlteredPPCAmountAfterCC"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctProductCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT ProductID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ProductID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctVersionSectionCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT VersionSectionID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "VersionSectionID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctGeoAreaCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT GeoAreaID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "GeoAreaID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctHeadingCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT HeadingID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "HeadingID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalPrice",
            "expression": "// TODO: Verify DAX expression\nSUMX(Price)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Price"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AveragePrice",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Price)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Price"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinPrice",
            "expression": "// TODO: Verify DAX expression\nMIN(Price)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Price"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxPrice",
            "expression": "// TODO: Verify DAX expression\nMAX(Price)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Price"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(Discount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Discount"
              },
              {
                "name": "FiltersApplied",
                "value": "Discount > 0"
              }
            ]
          },
          {
            "name": "TotalRulesDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(RulesDiscount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RulesDiscount"
              },
              {
                "name": "FiltersApplied",
                "value": "RulesDiscount <> 0 -- (or use RulesDiscount > 0 if you only want positive discounts considered 'active')"
              }
            ]
          },
          {
            "name": "TotalAlteredAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(AlteredAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AlteredAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalPaymentDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(PaymentDiscount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "PaymentDiscount"
              },
              {
                "name": "FiltersApplied",
                "value": "PaymentDiscount IS NOT NULL AND PaymentDiscount > 0"
              }
            ]
          },
          {
            "name": "TotalProductDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(ProductDiscount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ProductDiscount"
              },
              {
                "name": "FiltersApplied",
                "value": "ProductDiscount IS NOT NULL AND ProductDiscount > 0"
              }
            ]
          },
          {
            "name": "TotalBundleDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(BundleDiscount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BundleDiscount"
              },
              {
                "name": "FiltersApplied",
                "value": "BundleDiscount IS NOT NULL AND BundleDiscount > 0"
              }
            ]
          },
          {
            "name": "TotalDiscountsCombined",
            "expression": "// TODO: Verify DAX expression\nSUMX(COALESCE(Discount,0) + COALESCE(RulesDiscount,0) + COALESCE(PaymentDiscount,0) + COALESCE(ProductDiscount,0) + COALESCE(BundleDiscount,0))",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Discount, RulesDiscount, PaymentDiscount, ProductDiscount, BundleDiscount"
              },
              {
                "name": "FiltersApplied",
                "value": "Discount > 0, RulesDiscount <> 0 -- (or use RulesDiscount > 0 if you only want positive discounts considered 'active'), PaymentDiscount IS NOT NULL AND PaymentDiscount > 0, ProductDiscount IS NOT NULL AND ProductDiscount > 0, BundleDiscount IS NOT NULL AND BundleDiscount > 0"
              }
            ]
          },
          {
            "name": "AverageDiscountToPriceRatio",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CASE WHEN Price <> 0 THEN (COALESCE(Discount,0) / Price) ELSE NULL END)",
            "formatString": "0.00%",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Discount, Price"
              },
              {
                "name": "FiltersApplied",
                "value": "Discount > 0"
              }
            ]
          },
          {
            "name": "TotalBudgetAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(BudgetAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BudgetAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalActualSpentBudget",
            "expression": "// TODO: Verify DAX expression\nSUMX(ActualSpentBudget)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActualSpentBudget"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageBudgetUtilization",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CASE WHEN COALESCE(BudgetAmount,0) <> 0 THEN (ActualSpentBudget / BudgetAmount) ELSE NULL END)",
            "formatString": "0.00%",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BudgetAmount, ActualSpentBudget"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalOneTimeAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(OneTimeAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "OneTimeAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalExtraFeeAmount",
            "expression": "// TODO: Verify DAX expression\nSUMX(ExtraFeeAmount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ExtraFeeAmount"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalOneTimeAmountAfterDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(OneTimeAmountAfterDiscount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "OneTimeAmountAfterDiscount"
              },
              {
                "name": "FiltersApplied",
                "value": "OneTimeAmountAfterDiscount IS NOT NULL"
              }
            ]
          },
          {
            "name": "TotalExtraFeeAmountAfterDiscount",
            "expression": "// TODO: Verify DAX expression\nSUMX(ExtraFeeAmountAfterDiscount)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ExtraFeeAmountAfterDiscount"
              },
              {
                "name": "FiltersApplied",
                "value": "ExtraFeeAmountAfterDiscount IS NOT NULL AND ExtraFeeAmountAfterDiscount <> 0"
              }
            ]
          },
          {
            "name": "TotalExtraFeeAmountAfterCC",
            "expression": "// TODO: Verify DAX expression\nSUMX(ExtraFeeAmountAfterCC)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ExtraFeeAmountAfterCC"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalAlteredPPCAmountAfterCC",
            "expression": "// TODO: Verify DAX expression\nSUMX(AlteredPPCAmountAfterCC)",
            "formatString": "$#,##0.00",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AlteredPPCAmountAfterCC"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumMonths",
            "expression": "// TODO: Verify DAX expression\nSUMX(Months)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Months"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageMonths",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Months)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Months"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinMonths",
            "expression": "// TODO: Verify DAX expression\nMIN(Months)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Months"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxMonths",
            "expression": "// TODO: Verify DAX expression\nMAX(Months)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Months"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumCompletedChanges",
            "expression": "// TODO: Verify DAX expression\nSUMX(CompletedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CompletedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageCompletedChanges",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(CompletedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CompletedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinCompletedChanges",
            "expression": "// TODO: Verify DAX expression\nMIN(CompletedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CompletedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxCompletedChanges",
            "expression": "// TODO: Verify DAX expression\nMAX(CompletedChanges)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "CompletedChanges"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountWithDeactivationReason",
            "expression": "// TODO: Verify DAX expression\nSUMX(CASE WHEN DeactivationReason IS NOT NULL THEN 1 ELSE 0 END)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DeactivationReason"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDeactivationReasonCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DeactivationReason)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DeactivationReason"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctRelatedFreeTemplateAdvertisementCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT RelatedFreeTemplateAdvertisementID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RelatedFreeTemplateAdvertisementID"
              },
              {
                "name": "FiltersApplied",
                "value": "RelatedFreeTemplateAdvertisementID IS NULL"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BatchActionHistoryAnalysis",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BatchID",
            "dataType": "string",
            "sourceColumn": "BatchID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BatchID"
              }
            ]
          },
          {
            "name": "EntityID",
            "dataType": "int64",
            "sourceColumn": "EntityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "EntityID"
              }
            ]
          },
          {
            "name": "EntityType",
            "dataType": "int64",
            "sourceColumn": "EntityType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "EntityType"
              }
            ]
          },
          {
            "name": "Type",
            "dataType": "int64",
            "sourceColumn": "Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Type"
              }
            ]
          },
          {
            "name": "EntityData",
            "dataType": "string",
            "sourceColumn": "EntityData",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "EntityData"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctEntityCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctEntityTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctTypeCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageEntityID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageEntityType",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageType",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinEntityID",
            "expression": "// TODO: Verify DAX expression\nMIN(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxEntityID",
            "expression": "// TODO: Verify DAX expression\nMAX(EntityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinEntityType",
            "expression": "// TODO: Verify DAX expression\nMIN(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxEntityType",
            "expression": "// TODO: Verify DAX expression\nMAX(EntityType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "EntityType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinType",
            "expression": "// TODO: Verify DAX expression\nMIN(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxType",
            "expression": "// TODO: Verify DAX expression\nMAX(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TaskTarget",
        "description": "",
        "columns": [
          {
            "name": "TaskID",
            "dataType": "string",
            "sourceColumn": "TaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskID"
              }
            ]
          },
          {
            "name": "TargetCaseID",
            "dataType": "string",
            "sourceColumn": "TargetCaseID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetCaseID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalDMKey",
            "expression": "// TODO: Verify DAX expression\nSUMX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageDMKey",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinDMKey",
            "expression": "// TODO: Verify DAX expression\nMIN(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxDMKey",
            "expression": "// TODO: Verify DAX expression\nMAX(DMKey)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MissingDMKeyCount",
            "expression": "// TODO: Verify DAX expression\nSUMX(CASE WHEN DMKey IS NULL THEN 1 ELSE 0 END)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "DMKey"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BatchActionHistory",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BatchID",
            "dataType": "string",
            "sourceColumn": "BatchID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BatchID"
              }
            ]
          },
          {
            "name": "BatchActionType",
            "dataType": "int64",
            "sourceColumn": "BatchActionType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BatchActionType"
              }
            ]
          },
          {
            "name": "TimeStamp",
            "dataType": "dateTime",
            "sourceColumn": "TimeStamp",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TimeStamp"
              }
            ]
          },
          {
            "name": "RowsAffected",
            "dataType": "int64",
            "sourceColumn": "RowsAffected",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RowsAffected"
              }
            ]
          },
          {
            "name": "Text",
            "dataType": "string",
            "sourceColumn": "Text",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Text"
              }
            ]
          },
          {
            "name": "Status",
            "dataType": "int64",
            "sourceColumn": "Status",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Because Status is NOT NULL, there is no NULL state \u2014 every record has a status code. Populated values are encoded integers whose meanings are defined by the application (common patterns include 0=New,1=Active/Completed,2=Failed,3=Cancelled, etc.). To select active records you must use the integer value(s) that the application designates as 'active' (example filter shown; consult documentation or a status lookup table to determine the correct code(s))."
              }
            ]
          },
          {
            "name": "Type",
            "dataType": "int64",
            "sourceColumn": "Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Type"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "ActionCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "TotalRowsAffected",
            "expression": "// TODO: Verify DAX expression\nSUMX(RowsAffected)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowsAffected"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageRowsAffected",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(RowsAffected)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowsAffected"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinRowsAffected",
            "expression": "// TODO: Verify DAX expression\nMIN(RowsAffected)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowsAffected"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxRowsAffected",
            "expression": "// TODO: Verify DAX expression\nMAX(RowsAffected)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowsAffected"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "ActionsWithRowsAffectedCount",
            "expression": "// TODO: Verify DAX expression\nSUMX(CASE WHEN RowsAffected > 0 THEN 1 ELSE 0 END)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowsAffected"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "PercentActionsWithRowsAffected",
            "expression": "// TODO: Verify DAX expression\nSUMX(CASE WHEN RowsAffected > 0 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNTROWS(*), 0)",
            "formatString": "0.00%",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "RowsAffected"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctBatchActionTypes",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT BatchActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BatchActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinBatchActionTypeCode",
            "expression": "// TODO: Verify DAX expression\nMIN(BatchActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BatchActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxBatchActionTypeCode",
            "expression": "// TODO: Verify DAX expression\nMAX(BatchActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BatchActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageBatchActionTypeCode",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(BatchActionType)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "BatchActionType"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctStatuses",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Status)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Status"
              },
              {
                "name": "FiltersApplied",
                "value": "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
              }
            ]
          },
          {
            "name": "MinStatusCode",
            "expression": "// TODO: Verify DAX expression\nMIN(Status)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Status"
              },
              {
                "name": "FiltersApplied",
                "value": "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
              }
            ]
          },
          {
            "name": "MaxStatusCode",
            "expression": "// TODO: Verify DAX expression\nMAX(Status)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Status"
              },
              {
                "name": "FiltersApplied",
                "value": "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
              }
            ]
          },
          {
            "name": "AverageStatusCode",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Status)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Status"
              },
              {
                "name": "FiltersApplied",
                "value": "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
              }
            ]
          },
          {
            "name": "DistinctTypes",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTypeCode",
            "expression": "// TODO: Verify DAX expression\nMIN(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTypeCode",
            "expression": "// TODO: Verify DAX expression\nMAX(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageTypeCode",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(Type)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "Type"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TicketCommunication",
        "description": "",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "TicketID",
            "dataType": "int64",
            "sourceColumn": "TicketID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TicketID"
              }
            ]
          },
          {
            "name": "CommunicationText",
            "dataType": "string",
            "sourceColumn": "CommunicationText",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CommunicationText"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "CommunicationCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctTicketCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT TicketID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TicketID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CommunicationsPerTicket",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*) * 1.0 / NULLIF(COUNTROWS(DISTINCT TicketID), 0)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TicketID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinTicketID",
            "expression": "// TODO: Verify DAX expression\nMIN(TicketID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TicketID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxTicketID",
            "expression": "// TODO: Verify DAX expression\nMAX(TicketID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TicketID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageTicketID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(TicketID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "TicketID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "KeywordMapping",
        "description": "",
        "columns": [
          {
            "name": "ActivityID",
            "dataType": "int64",
            "sourceColumn": "ActivityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActivityID"
              }
            ]
          },
          {
            "name": "KeywordID",
            "dataType": "int64",
            "sourceColumn": "KeywordID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "KeywordID"
              }
            ]
          },
          {
            "name": "NewAttributeValueID",
            "dataType": "int64",
            "sourceColumn": "NewAttributeValueID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewAttributeValueID"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "TotalRecords",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctActivityCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctKeywordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT KeywordID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "KeywordID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctNewAttributeValueCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT NewAttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NewAttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "RecordsWithNewAttributeValue",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(NewAttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NewAttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinActivityID",
            "expression": "// TODO: Verify DAX expression\nMIN(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxActivityID",
            "expression": "// TODO: Verify DAX expression\nMAX(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageActivityID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinKeywordID",
            "expression": "// TODO: Verify DAX expression\nMIN(KeywordID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "KeywordID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxKeywordID",
            "expression": "// TODO: Verify DAX expression\nMAX(KeywordID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "KeywordID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageKeywordID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(KeywordID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "KeywordID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinNewAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nMIN(NewAttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NewAttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxNewAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nMAX(NewAttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NewAttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageNewAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(NewAttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "NewAttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Step1",
        "description": "",
        "columns": [
          {
            "name": "ActivityID",
            "dataType": "int64",
            "sourceColumn": "ActivityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActivityID"
              }
            ]
          },
          {
            "name": "AttributeValueID",
            "dataType": "int64",
            "sourceColumn": "AttributeValueID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AttributeValueID"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(*)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": ""
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumActivityID",
            "expression": "// TODO: Verify DAX expression\nSUMX(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageActivityID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinActivityID",
            "expression": "// TODO: Verify DAX expression\nMIN(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxActivityID",
            "expression": "// TODO: Verify DAX expression\nMAX(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountActivityID",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctActivityIDCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT ActivityID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "ActivityID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "SumAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nSUMX(AttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "AverageAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nAVERAGEX(AttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MinAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nMIN(AttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "MaxAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nMAX(AttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "CountAttributeValueID",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(AttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          },
          {
            "name": "DistinctAttributeValueIDCount",
            "expression": "// TODO: Verify DAX expression\nCOUNTROWS(DISTINCT AttributeValueID)",
            "formatString": "#,##0",
            "description": "",
            "annotations": [
              {
                "name": "DependsOn",
                "value": "AttributeValueID"
              },
              {
                "name": "FiltersApplied",
                "value": ""
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "TaxCode",
        "description": "Dimension: TaxCode",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "CountryID",
            "dataType": "string",
            "sourceColumn": "CountryID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CountryID"
              }
            ]
          },
          {
            "name": "TaxCode",
            "dataType": "string",
            "sourceColumn": "TaxCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaxCode"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "DEV12867ClassificationBackup",
        "description": "Dimension: DEV12867ClassificationBackup",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "ClassifierID",
            "dataType": "string",
            "sourceColumn": "ClassifierID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ClassifierID"
              }
            ]
          },
          {
            "name": "ClassifierNodeID",
            "dataType": "string",
            "sourceColumn": "ClassifierNodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ClassifierNodeID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "BpCode",
            "dataType": "string",
            "sourceColumn": "BpCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BpCode"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "devops11385_InvoicePaymentMethod_NULL_PaymentMonth",
        "description": "Dimension: devops11385_InvoicePaymentMethod_NULL_PaymentMonth",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "PaymentMethodTypeID",
            "dataType": "string",
            "sourceColumn": "PaymentMethodTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentMethodTypeID"
              }
            ]
          },
          {
            "name": "Installments",
            "dataType": "int64",
            "sourceColumn": "Installments",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Installments"
              }
            ]
          },
          {
            "name": "Interval",
            "dataType": "int64",
            "sourceColumn": "Interval",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Interval"
              }
            ]
          },
          {
            "name": "IsExchangeSale",
            "dataType": "boolean",
            "sourceColumn": "IsExchangeSale",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsExchangeSale is a non-nullable boolean status flag indicating whether the invoice/payment method is an exchange sale. Because the column is NOT NULL, absence of a value is an error condition. Interpret populated values as 1 = exchange sale (active for this status) and 0 = not an exchange sale. To retrieve exchange-sale records use WHERE IsExchangeSale = 1; to retrieve non-exchange use WHERE IsExchangeSale = 0. If sample values are unavailable, validate this interpretation against business rules or lookups (SELECT DISTINCT IsExchangeSale) to confirm actual stored values."
              }
            ]
          },
          {
            "name": "PaymentPhoneAccount",
            "dataType": "string",
            "sourceColumn": "PaymentPhoneAccount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentPhoneAccount"
              }
            ]
          },
          {
            "name": "PaymentPhoneID",
            "dataType": "string",
            "sourceColumn": "PaymentPhoneID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentPhoneID"
              }
            ]
          },
          {
            "name": "PaymentCreditTransactionCode",
            "dataType": "string",
            "sourceColumn": "PaymentCreditTransactionCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentCreditTransactionCode"
              }
            ]
          },
          {
            "name": "BillingEmailID",
            "dataType": "string",
            "sourceColumn": "BillingEmailID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BillingEmailID"
              }
            ]
          },
          {
            "name": "NumberOfInvoices",
            "dataType": "int64",
            "sourceColumn": "NumberOfInvoices",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NumberOfInvoices"
              }
            ]
          },
          {
            "name": "UserSpecifiedPaymentMonth",
            "dataType": "boolean",
            "sourceColumn": "UserSpecifiedPaymentMonth",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserSpecifiedPaymentMonth"
              }
            ]
          },
          {
            "name": "BankID",
            "dataType": "string",
            "sourceColumn": "BankID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BankID"
              }
            ]
          },
          {
            "name": "CheckEndDate",
            "dataType": "dateTime",
            "sourceColumn": "CheckEndDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CheckEndDate"
              }
            ]
          },
          {
            "name": "CheckPublisherIsSame",
            "dataType": "boolean",
            "sourceColumn": "CheckPublisherIsSame",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "CheckPublisherIsSame is a nullable boolean flag indicating whether the publisher was verified as being the same. NULL = no decision/unknown/not checked. A stored 1 means confirmed 'same'; 0 means 'not same'. To select records where the flag is actively true, filter for value = 1; using ISNULL(CheckPublisherIsSame, 0) = 1 treats NULL as false and safely returns only confirmed-true rows."
              }
            ]
          },
          {
            "name": "CheckPublisher",
            "dataType": "string",
            "sourceColumn": "CheckPublisher",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Treat CheckPublisher as a flag that is NULL until a check/publish event is recorded. When populated it signals the record was checked/published and gives the publisher identifier. Beware of empty strings or sentinel text ('N/A', 'UNKNOWN', 'None', etc.); include a trim and exclusion of common sentinel values if your dataset uses them. Example safe filter for 'active' records: WHERE CheckPublisher IS NOT NULL AND LTRIM(RTRIM(CheckPublisher)) <> '' (and optionally AND CheckPublisher NOT IN ('N/A','UNKNOWN','None')). The Greek_CI_AS collation is case-insensitive, so you do not need additional case handling for textual sentinel comparisons."
              }
            ]
          },
          {
            "name": "CheckPublisherTaxCode",
            "dataType": "string",
            "sourceColumn": "CheckPublisherTaxCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This NVARCHAR(20) nullable column functions as a status/value indicator: NULL means no data or no check performed (unknown/missing/not applicable). A populated value means the row has a recorded outcome or tax identifier; the payload could be the tax code itself or a status token. To treat \"active\" as \"has been processed / has a recorded value\", filter for non-NULL, non-empty strings using the provided condition. If your system uses explicit positive/negative tokens (e.g. 'Y'/'N', 'VALID'/'INVALID'), refine the filter to match the positive token(s) (for example: CheckPublisherTaxCode = 'Y' OR CheckPublisherTaxCode = 'VALID'). Verify actual stored values before finalizing any rules."
              }
            ]
          },
          {
            "name": "CheckNumber",
            "dataType": "string",
            "sourceColumn": "CheckNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CheckNumber"
              }
            ]
          },
          {
            "name": "CreditCardTypeID",
            "dataType": "string",
            "sourceColumn": "CreditCardTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreditCardTypeID"
              }
            ]
          },
          {
            "name": "CreditCardNumber",
            "dataType": "string",
            "sourceColumn": "CreditCardNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreditCardNumber"
              }
            ]
          },
          {
            "name": "CreditCardEndDate",
            "dataType": "dateTime",
            "sourceColumn": "CreditCardEndDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreditCardEndDate"
              }
            ]
          },
          {
            "name": "CreditCardOwner",
            "dataType": "string",
            "sourceColumn": "CreditCardOwner",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreditCardOwner"
              }
            ]
          },
          {
            "name": "CreditCardInstallments",
            "dataType": "int64",
            "sourceColumn": "CreditCardInstallments",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreditCardInstallments"
              }
            ]
          },
          {
            "name": "BlockSeries",
            "dataType": "string",
            "sourceColumn": "BlockSeries",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BlockSeries"
              }
            ]
          },
          {
            "name": "BlockReceiptNumber",
            "dataType": "string",
            "sourceColumn": "BlockReceiptNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BlockReceiptNumber"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "SystemReceiptNumber",
            "dataType": "int64",
            "sourceColumn": "SystemReceiptNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SystemReceiptNumber"
              }
            ]
          },
          {
            "name": "SalesCollectionID",
            "dataType": "string",
            "sourceColumn": "SalesCollectionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SalesCollectionID"
              }
            ]
          },
          {
            "name": "PaymentMonth",
            "dataType": "dateTime",
            "sourceColumn": "PaymentMonth",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentMonth"
              }
            ]
          },
          {
            "name": "CheckPublishDate",
            "dataType": "dateTime",
            "sourceColumn": "CheckPublishDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This DATETIME column is acting as a completion/publish flag: NULL denotes that publishing has not yet occurred (the record is still pending or active for work), while a populated datetime marks the moment the check was published (completed). To select records that are still active/pending use the NULL check (CheckPublishDate IS NULL). If you instead need records that have been published/closed, filter with CheckPublishDate IS NOT NULL."
              }
            ]
          },
          {
            "name": "BankDepositNumber",
            "dataType": "string",
            "sourceColumn": "BankDepositNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BankDepositNumber"
              }
            ]
          },
          {
            "name": "BankDepositDate",
            "dataType": "dateTime",
            "sourceColumn": "BankDepositDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BankDepositDate"
              }
            ]
          },
          {
            "name": "CollectionDate",
            "dataType": "dateTime",
            "sourceColumn": "CollectionDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CollectionDate"
              }
            ]
          },
          {
            "name": "AdvancedPolicyAmount",
            "dataType": "decimal",
            "sourceColumn": "AdvancedPolicyAmount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AdvancedPolicyAmount"
              }
            ]
          },
          {
            "name": "InvoicePolicyID",
            "dataType": "int64",
            "sourceColumn": "InvoicePolicyID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InvoicePolicyID"
              }
            ]
          },
          {
            "name": "PreInvoice",
            "dataType": "boolean",
            "sourceColumn": "PreInvoice",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PreInvoice"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "ViewPrefectureBPs",
        "description": "Dimension: ViewPrefectureBPs",
        "columns": [
          {
            "name": "ActiveFlag",
            "dataType": "boolean",
            "sourceColumn": "ActiveFlag",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ActiveFlag is a required boolean status indicator for the record. Because the column is non\u2011nullable, every row must explicitly indicate active (1) or inactive (0). To retrieve active records, filter for ActiveFlag = 1. To retrieve inactive records, filter for ActiveFlag = 0. If you need to handle legacy or unexpected values, validate data quality or check for constraints/defaults in the schema."
              }
            ]
          },
          {
            "name": "AreaID",
            "dataType": "string",
            "sourceColumn": "AreaID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AreaID"
              }
            ]
          },
          {
            "name": "AreaName",
            "dataType": "string",
            "sourceColumn": "AreaName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AreaName"
              }
            ]
          },
          {
            "name": "BPcount",
            "dataType": "int64",
            "sourceColumn": "BPcount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BPcount"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "AttributeMapping",
        "description": "Dimension: AttributeMapping",
        "columns": [
          {
            "name": "ActivityID",
            "dataType": "int64",
            "sourceColumn": "ActivityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActivityID"
              }
            ]
          },
          {
            "name": "OldAttributeID",
            "dataType": "int64",
            "sourceColumn": "OldAttributeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OldAttributeID"
              }
            ]
          },
          {
            "name": "NewAttributeID",
            "dataType": "int64",
            "sourceColumn": "NewAttributeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewAttributeID"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "ReplaceKeywords",
        "description": "Dimension: ReplaceKeywords",
        "columns": [
          {
            "name": "KeywordID",
            "dataType": "int64",
            "sourceColumn": "KeywordID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "KeywordID"
              }
            ]
          },
          {
            "name": "ReplaceWithKeywordID",
            "dataType": "int64",
            "sourceColumn": "ReplaceWithKeywordID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ReplaceWithKeywordID"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Step2",
        "description": "Dimension: Step2",
        "columns": [
          {
            "name": "Activity_ID",
            "dataType": "int64",
            "sourceColumn": "Activity_ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Activity_ID"
              }
            ]
          },
          {
            "name": "NameGr",
            "dataType": "string",
            "sourceColumn": "NameGr",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NameGr"
              }
            ]
          },
          {
            "name": "NameEn",
            "dataType": "string",
            "sourceColumn": "NameEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NameEn"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "MergeMapping",
        "description": "Dimension: MergeMapping",
        "columns": [
          {
            "name": "SourceID",
            "dataType": "int64",
            "sourceColumn": "SourceID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceID"
              }
            ]
          },
          {
            "name": "TargetID",
            "dataType": "int64",
            "sourceColumn": "TargetID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TargetID"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "ReplaceAV",
        "description": "Dimension: ReplaceAV",
        "columns": [
          {
            "name": "Initial_OldAttributeValueId",
            "dataType": "int64",
            "sourceColumn": "Initial_OldAttributeValueId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Initial_OldAttributeValueId"
              }
            ]
          },
          {
            "name": "ReplaceWithAttributeValueId",
            "dataType": "int64",
            "sourceColumn": "ReplaceWithAttributeValueId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ReplaceWithAttributeValueId"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Task",
        "description": "Entity: dbo.Task",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Description"
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "Status",
            "dataType": "int64",
            "sourceColumn": "Status",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Because Status is NOT NULL every Task row has a defined integer status. You should not assume particular mappings without metadata: first query the distinct values (SELECT DISTINCT Status FROM dbo.Task), check for a related lookup table or FK, and review application logic or documentation to map codes to human states. To filter active tasks, identify which integer codes correspond to 'active' (commonly values like New, Assigned, InProgress) and use Status IN (..). If the column is a bitmask, use a bitwise test (Status & mask) <> 0. If metadata is unavailable, inspect frequencies and recent activity to hypothesize which codes are active, then validate with stakeholders or code."
              }
            ]
          },
          {
            "name": "CaseID",
            "dataType": "string",
            "sourceColumn": "CaseID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseID"
              }
            ]
          },
          {
            "name": "TaskTypeID",
            "dataType": "string",
            "sourceColumn": "TaskTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskTypeID"
              }
            ]
          },
          {
            "name": "Outcome",
            "dataType": "string",
            "sourceColumn": "Outcome",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Outcome"
              }
            ]
          },
          {
            "name": "CompletedOn",
            "dataType": "dateTime",
            "sourceColumn": "CompletedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedOn"
              }
            ]
          },
          {
            "name": "ActualOwnerID",
            "dataType": "string",
            "sourceColumn": "ActualOwnerID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActualOwnerID"
              }
            ]
          },
          {
            "name": "DynamicCode",
            "dataType": "string",
            "sourceColumn": "DynamicCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DynamicCode"
              }
            ]
          },
          {
            "name": "DynamicDescription",
            "dataType": "string",
            "sourceColumn": "DynamicDescription",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DynamicDescription"
              }
            ]
          },
          {
            "name": "SenderID",
            "dataType": "string",
            "sourceColumn": "SenderID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SenderID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "SubStatus",
            "dataType": "int64",
            "sourceColumn": "SubStatus",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Because SubStatus is non\u2011nullable, absence of a value is not represented by NULL; instead a particular integer would indicate 'not set' if needed. Populated integers are code values that describe the task's finer\u2011grained state; you must consult the code map to know which codes represent 'active'. To filter for active records, replace the placeholder list with the actual active codes used in your system (or, if your domain defines active as all positive codes, use a predicate such as SubStatus > 0)."
              }
            ]
          },
          {
            "name": "EditorState",
            "dataType": "int64",
            "sourceColumn": "EditorState",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "EditorState is a required integer status flag. There are no NULLs by design; every record has a state code. To interpret or filter by 'active' you must use the application's enum mapping. Absent that mapping, typical heuristics are to treat 0 as inactive and non-zero as active (WHERE EditorState <> 0) or to filter explicitly by the known active code values (WHERE EditorState IN (...))."
              }
            ]
          },
          {
            "name": "SavedOn",
            "dataType": "dateTime",
            "sourceColumn": "SavedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SavedOn"
              }
            ]
          },
          {
            "name": "Version",
            "dataType": "dateTime",
            "sourceColumn": "Version",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Version"
              }
            ]
          },
          {
            "name": "ActualOwnerModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ActualOwnerModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActualOwnerModifiedOn"
              }
            ]
          },
          {
            "name": "ActualRoleID",
            "dataType": "int64",
            "sourceColumn": "ActualRoleID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActualRoleID"
              }
            ]
          },
          {
            "name": "Input",
            "dataType": "string",
            "sourceColumn": "Input",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Input"
              }
            ]
          },
          {
            "name": "Output",
            "dataType": "string",
            "sourceColumn": "Output",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Output"
              }
            ]
          },
          {
            "name": "CorrelationKey",
            "dataType": "string",
            "sourceColumn": "CorrelationKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CorrelationKey"
              }
            ]
          },
          {
            "name": "CompletedById",
            "dataType": "string",
            "sourceColumn": "CompletedById",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedById"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BroaderArea",
        "description": "Entity: dbo.BroaderArea",
        "columns": [
          {
            "name": "BroaderAreaID",
            "dataType": "string",
            "sourceColumn": "BroaderAreaID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BroaderAreaID"
              }
            ]
          },
          {
            "name": "AddressID",
            "dataType": "string",
            "sourceColumn": "AddressID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AddressID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Case",
        "description": "Entity: dbo.Case",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "ReferencePointID",
            "dataType": "string",
            "sourceColumn": "ReferencePointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ReferencePointID"
              }
            ]
          },
          {
            "name": "CaseTypeID",
            "dataType": "int64",
            "sourceColumn": "CaseTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseTypeID"
              }
            ]
          },
          {
            "name": "State",
            "dataType": "int64",
            "sourceColumn": "State",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "State is an enumerated status column stored as an integer. NULL means the state was not set (unknown/not applicable). A populated integer means the case has an explicit lifecycle status according to a codeset maintained elsewhere. To identify active cases you must filter by the integer codes that your application treats as active; if you do not yet know those codes, locate the state lookup or ask the owner. As a template use: State IS NOT NULL AND State IN (<active_codes>). Avoid assuming specific meanings (e.g., 0 = closed, 1 = open) without confirming the mapping."
              }
            ]
          },
          {
            "name": "Substate",
            "dataType": "int64",
            "sourceColumn": "Substate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Substate is a nullable integer that augments the primary state of a case. Because no sample values or lookup were provided, treat NULL as 'no substate assigned' and a populated value as a pointer to a substate code defined elsewhere. To reliably filter for 'active' records you must confirm which substate codes represent active versus inactive/terminal conditions by consulting the domain/lookup table or business documentation. Common approaches: (1) If a lookup table exists, join or filter by its active flag, e.g. WHERE Substate IS NULL OR Substate IN (SELECT Id FROM dbo.SubstateLookup WHERE IsActive = 1). (2) If you have an explicit list, substitute it into the placeholder: WHERE Substate IS NULL OR Substate IN (1,2,3). (3) If terminal codes are known, exclude them: WHERE Substate IS NULL OR Substate NOT IN (9,10). Before applying any filter, run SELECT DISTINCT Substate FROM dbo.Case; and review lookup metadata to determine the correct active_code_list."
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "CompletedOn",
            "dataType": "dateTime",
            "sourceColumn": "CompletedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedOn"
              }
            ]
          },
          {
            "name": "CompletedBy",
            "dataType": "string",
            "sourceColumn": "CompletedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompletedBy"
              }
            ]
          },
          {
            "name": "OwnerChannel",
            "dataType": "int64",
            "sourceColumn": "OwnerChannel",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OwnerChannel"
              }
            ]
          },
          {
            "name": "OwnerUnit",
            "dataType": "int64",
            "sourceColumn": "OwnerUnit",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OwnerUnit"
              }
            ]
          },
          {
            "name": "OwnerUser",
            "dataType": "int64",
            "sourceColumn": "OwnerUser",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "OwnerUser"
              }
            ]
          },
          {
            "name": "ContextEntityID",
            "dataType": "int64",
            "sourceColumn": "ContextEntityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContextEntityID"
              }
            ]
          },
          {
            "name": "MasterCaseID",
            "dataType": "int64",
            "sourceColumn": "MasterCaseID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MasterCaseID"
              }
            ]
          },
          {
            "name": "InitiatorID",
            "dataType": "string",
            "sourceColumn": "InitiatorID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InitiatorID"
              }
            ]
          },
          {
            "name": "ContextEntityType",
            "dataType": "string",
            "sourceColumn": "ContextEntityType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContextEntityType"
              }
            ]
          },
          {
            "name": "ContextEntityID2",
            "dataType": "int64",
            "sourceColumn": "ContextEntityID2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContextEntityID2"
              }
            ]
          },
          {
            "name": "ContextEntityType2",
            "dataType": "string",
            "sourceColumn": "ContextEntityType2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContextEntityType2"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "PointCode",
            "dataType": "string",
            "sourceColumn": "PointCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PointCode"
              }
            ]
          },
          {
            "name": "PointName",
            "dataType": "string",
            "sourceColumn": "PointName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PointName"
              }
            ]
          },
          {
            "name": "CustomerIndicatorId",
            "dataType": "int64",
            "sourceColumn": "CustomerIndicatorId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerIndicatorId"
              }
            ]
          },
          {
            "name": "ParentTaskId",
            "dataType": "string",
            "sourceColumn": "ParentTaskId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ParentTaskId"
              }
            ]
          },
          {
            "name": "Outcome",
            "dataType": "string",
            "sourceColumn": "Outcome",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Outcome"
              }
            ]
          },
          {
            "name": "Variables",
            "dataType": "string",
            "sourceColumn": "Variables",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Variables"
              }
            ]
          },
          {
            "name": "PermanentOwnerId",
            "dataType": "string",
            "sourceColumn": "PermanentOwnerId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PermanentOwnerId"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "PricelistItem",
        "description": "Entity: dbo.PricelistItem",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "VersionSectionID",
            "dataType": "string",
            "sourceColumn": "VersionSectionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "VersionSectionID"
              }
            ]
          },
          {
            "name": "ProductID",
            "dataType": "string",
            "sourceColumn": "ProductID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProductID"
              }
            ]
          },
          {
            "name": "ApplyToSection",
            "dataType": "boolean",
            "sourceColumn": "ApplyToSection",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ApplyToSection"
              }
            ]
          },
          {
            "name": "ApplyToSubSection",
            "dataType": "boolean",
            "sourceColumn": "ApplyToSubSection",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ApplyToSubSection"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "IsInactive",
            "dataType": "boolean",
            "sourceColumn": "IsInactive",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsInactive is a nullable boolean flag indicating whether a pricelist item is inactive. A value of 1 means the item is inactive; 0 means the item is active. NULL means the flag was not set/recorded and should be interpreted per business policy (commonly treated as active). For most queries wanting items that are usable/active, filter with IsInactive = 0 OR IsInactive IS NULL; if you require only explicitly-marked active rows, filter with IsInactive = 0."
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "ContractDocument",
        "description": "Entity: dbo.ContractDocument",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "ContractID",
            "dataType": "int64",
            "sourceColumn": "ContractID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContractID"
              }
            ]
          },
          {
            "name": "Filename",
            "dataType": "string",
            "sourceColumn": "Filename",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Filename"
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "ContractDocumentType",
            "dataType": "int64",
            "sourceColumn": "ContractDocumentType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContractDocumentType"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "PaymentMethod",
        "description": "Entity: dbo.PaymentMethod",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "PaymentMethodTypeID",
            "dataType": "string",
            "sourceColumn": "PaymentMethodTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentMethodTypeID"
              }
            ]
          },
          {
            "name": "Installments",
            "dataType": "int64",
            "sourceColumn": "Installments",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Installments"
              }
            ]
          },
          {
            "name": "Interval",
            "dataType": "int64",
            "sourceColumn": "Interval",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Interval"
              }
            ]
          },
          {
            "name": "PaymentMonth",
            "dataType": "dateTime",
            "sourceColumn": "PaymentMonth",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentMonth"
              }
            ]
          },
          {
            "name": "AdvancedPayment",
            "dataType": "decimal",
            "sourceColumn": "AdvancedPayment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AdvancedPayment"
              }
            ]
          },
          {
            "name": "IsExchangeSale",
            "dataType": "boolean",
            "sourceColumn": "IsExchangeSale",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsExchangeSale is a boolean status flag on PaymentMethod indicating whether that payment method is used for exchange sales. Because the column is NOT NULL, the expected values are 0 or 1. NULL should be treated as an error/unknown state. To select records considered 'active' for this flag, filter for value = 1 (or use COALESCE to guard against unexpected NULLs). Verify with business rules whether 'active' should mean true (1) in downstream logic."
              }
            ]
          },
          {
            "name": "PaymentPhoneAccount",
            "dataType": "string",
            "sourceColumn": "PaymentPhoneAccount",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentPhoneAccount"
              }
            ]
          },
          {
            "name": "PaymentPhoneID",
            "dataType": "string",
            "sourceColumn": "PaymentPhoneID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentPhoneID"
              }
            ]
          },
          {
            "name": "PaymentCreditTransactionCode",
            "dataType": "string",
            "sourceColumn": "PaymentCreditTransactionCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PaymentCreditTransactionCode"
              }
            ]
          },
          {
            "name": "BillingEmailID",
            "dataType": "string",
            "sourceColumn": "BillingEmailID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BillingEmailID"
              }
            ]
          },
          {
            "name": "NumberOfInvoices",
            "dataType": "int64",
            "sourceColumn": "NumberOfInvoices",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NumberOfInvoices"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "UserSpecifiedPaymentMonth",
            "dataType": "boolean",
            "sourceColumn": "UserSpecifiedPaymentMonth",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserSpecifiedPaymentMonth"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "PointPhone",
        "description": "Entity: dbo.PointPhone",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "Number",
            "dataType": "string",
            "sourceColumn": "Number",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Number"
              }
            ]
          },
          {
            "name": "Extension",
            "dataType": "string",
            "sourceColumn": "Extension",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Extension"
              }
            ]
          },
          {
            "name": "Usage",
            "dataType": "int64",
            "sourceColumn": "Usage",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Usage"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsActive is a non-nullable boolean flag indicating whether the PointPhone row is active. Because it is NOT NULL, you do not need to guard against NULLs when filtering; treat 1 as active and 0 as inactive. If you require a third state (unknown, pending) you would need a nullable column or a separate status field. If NULLs are found in practice, investigate data load or schema issues."
              }
            ]
          },
          {
            "name": "ProjectionFirst",
            "dataType": "boolean",
            "sourceColumn": "ProjectionFirst",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProjectionFirst"
              }
            ]
          },
          {
            "name": "Mitr11",
            "dataType": "boolean",
            "sourceColumn": "Mitr11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Mitr11"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "VersionGroupItem",
        "description": "Entity: dbo.VersionGroupItem",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "ParentID",
            "dataType": "string",
            "sourceColumn": "ParentID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ParentID"
              }
            ]
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Description"
              }
            ]
          },
          {
            "name": "Type",
            "dataType": "int64",
            "sourceColumn": "Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Type"
              }
            ]
          },
          {
            "name": "MediumVersionID",
            "dataType": "string",
            "sourceColumn": "MediumVersionID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MediumVersionID"
              }
            ]
          },
          {
            "name": "SourceGroupItemID",
            "dataType": "string",
            "sourceColumn": "SourceGroupItemID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceGroupItemID"
              }
            ]
          },
          {
            "name": "SourceHeadingID",
            "dataType": "string",
            "sourceColumn": "SourceHeadingID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceHeadingID"
              }
            ]
          },
          {
            "name": "SourceGeoID",
            "dataType": "string",
            "sourceColumn": "SourceGeoID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceGeoID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsActive is a non-nullable boolean status flag indicating whether a VersionGroupItem is active. Because the column is NOT NULL, every row must contain either 1 (active) or 0 (inactive). Use WHERE IsActive = 1 to select active records. If NULLs are encountered in practice, investigate schema drift or data corruption and decide on a policy (for example, coerce NULL to 0 with ISNULL(IsActive,0) = 1) before relying on the flag."
              }
            ]
          },
          {
            "name": "DescriptionCIAI",
            "dataType": "string",
            "sourceColumn": "DescriptionCIAI",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DescriptionCIAI"
              }
            ]
          },
          {
            "name": "RootID",
            "dataType": "int64",
            "sourceColumn": "RootID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RootID"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Address",
        "description": "Entity: dbo.Address",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "Line1",
            "dataType": "string",
            "sourceColumn": "Line1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line1"
              }
            ]
          },
          {
            "name": "Line2",
            "dataType": "string",
            "sourceColumn": "Line2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line2"
              }
            ]
          },
          {
            "name": "Line3",
            "dataType": "string",
            "sourceColumn": "Line3",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line3"
              }
            ]
          },
          {
            "name": "Line4",
            "dataType": "string",
            "sourceColumn": "Line4",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line4"
              }
            ]
          },
          {
            "name": "Longitude",
            "dataType": "double",
            "sourceColumn": "Longitude",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Longitude"
              }
            ]
          },
          {
            "name": "Latitude",
            "dataType": "double",
            "sourceColumn": "Latitude",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Latitude"
              }
            ]
          },
          {
            "name": "GeoModelType",
            "dataType": "int64",
            "sourceColumn": "GeoModelType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelType"
              }
            ]
          },
          {
            "name": "GeoModelVersion",
            "dataType": "string",
            "sourceColumn": "GeoModelVersion",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelVersion"
              }
            ]
          },
          {
            "name": "GeoModelSearchDate",
            "dataType": "dateTime",
            "sourceColumn": "GeoModelSearchDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelSearchDate"
              }
            ]
          },
          {
            "name": "GeoModelScore",
            "dataType": "int64",
            "sourceColumn": "GeoModelScore",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelScore"
              }
            ]
          },
          {
            "name": "GeoModelStreet1ID",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet1ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet1ID"
              }
            ]
          },
          {
            "name": "GeoModelStreet2ID",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet2ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet2ID"
              }
            ]
          },
          {
            "name": "GeoModelLocID",
            "dataType": "string",
            "sourceColumn": "GeoModelLocID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelLocID"
              }
            ]
          },
          {
            "name": "GeoModelZip",
            "dataType": "string",
            "sourceColumn": "GeoModelZip",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelZip"
              }
            ]
          },
          {
            "name": "CountryID",
            "dataType": "string",
            "sourceColumn": "CountryID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CountryID"
              }
            ]
          },
          {
            "name": "GeoModelQueryString",
            "dataType": "string",
            "sourceColumn": "GeoModelQueryString",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelQueryString"
              }
            ]
          },
          {
            "name": "GeoModelStreet1Text",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet1Text",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet1Text"
              }
            ]
          },
          {
            "name": "GeoModelStreet1Num",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet1Num",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet1Num"
              }
            ]
          },
          {
            "name": "GeoModelStreet2Text",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet2Text",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet2Text"
              }
            ]
          },
          {
            "name": "GeoModelStreet2Num",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet2Num",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet2Num"
              }
            ]
          },
          {
            "name": "GeoModelLocText",
            "dataType": "string",
            "sourceColumn": "GeoModelLocText",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelLocText"
              }
            ]
          },
          {
            "name": "GeoModelLongitude",
            "dataType": "string",
            "sourceColumn": "GeoModelLongitude",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelLongitude"
              }
            ]
          },
          {
            "name": "GeoModelLatitude",
            "dataType": "string",
            "sourceColumn": "GeoModelLatitude",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelLatitude"
              }
            ]
          },
          {
            "name": "GeoBroaderAreas",
            "dataType": "string",
            "sourceColumn": "GeoBroaderAreas",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoBroaderAreas"
              }
            ]
          },
          {
            "name": "NumericZip",
            "dataType": "int64",
            "sourceColumn": "NumericZip",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NumericZip"
              }
            ]
          },
          {
            "name": "GeoModelDistrict",
            "dataType": "string",
            "sourceColumn": "GeoModelDistrict",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "GeoModelDistrict is a nullable text field that functions as an assignment/status indicator for which geo-model district an address belongs to. NULL typically means the district is not set or is unknown; any populated string ordinarily means the address has been assigned a district (the value will usually be a district name or code). Because sample values are not available, watch for placeholder or sentinel strings (e.g., 'Unknown', 'N/A', 'Not available', empty strings, or whitespace). To treat an address as 'active' or classified by district, filter for non-NULL, non-empty, non-placeholder values (example SQL condition provided). Also consider normalizing whitespace/case and confirming the canonical list of placeholder tokens or valid district codes with the data owner before relying on this rule in production."
              }
            ]
          },
          {
            "name": "GeoModelArea",
            "dataType": "string",
            "sourceColumn": "GeoModelArea",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelArea"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "GeoModelGC_Type",
            "dataType": "string",
            "sourceColumn": "GeoModelGC_Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelGC_Type"
              }
            ]
          },
          {
            "name": "UserOverrideLine1",
            "dataType": "boolean",
            "sourceColumn": "UserOverrideLine1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserOverrideLine1"
              }
            ]
          },
          {
            "name": "Line1En",
            "dataType": "string",
            "sourceColumn": "Line1En",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line1En"
              }
            ]
          },
          {
            "name": "Line2En",
            "dataType": "string",
            "sourceColumn": "Line2En",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line2En"
              }
            ]
          },
          {
            "name": "Line3En",
            "dataType": "string",
            "sourceColumn": "Line3En",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line3En"
              }
            ]
          },
          {
            "name": "Line4En",
            "dataType": "string",
            "sourceColumn": "Line4En",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Line4En"
              }
            ]
          },
          {
            "name": "GeoModelStreet1TextEn",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet1TextEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet1TextEn"
              }
            ]
          },
          {
            "name": "GeoModelStreet2TextEn",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet2TextEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet2TextEn"
              }
            ]
          },
          {
            "name": "GeoModelLocTextEn",
            "dataType": "string",
            "sourceColumn": "GeoModelLocTextEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelLocTextEn"
              }
            ]
          },
          {
            "name": "GeoModelDistrictEn",
            "dataType": "string",
            "sourceColumn": "GeoModelDistrictEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "GeoModelDistrictEn appears to be a nullable textual indicator that identifies the geographic/model district in English. NULL = no assignment or missing data. Populated = an assigned district name or code. To treat a record as 'active' for having a valid district, filter for non-NULL, non-empty, trimmed values and exclude common placeholder tokens (example condition provided). Adjust the placeholder list to match your data."
              }
            ]
          },
          {
            "name": "GeoModelAreaEn",
            "dataType": "string",
            "sourceColumn": "GeoModelAreaEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelAreaEn"
              }
            ]
          },
          {
            "name": "UserOverrideLine1En",
            "dataType": "boolean",
            "sourceColumn": "UserOverrideLine1En",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "UserOverrideLine1En"
              }
            ]
          },
          {
            "name": "GeoModelStreet1NumEn",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet1NumEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet1NumEn"
              }
            ]
          },
          {
            "name": "GeoModelStreet2NumEn",
            "dataType": "string",
            "sourceColumn": "GeoModelStreet2NumEn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeoModelStreet2NumEn"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Phone",
        "description": "Entity: dbo.Phone",
        "columns": [
          {
            "name": "Number",
            "dataType": "string",
            "sourceColumn": "Number",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Number"
              }
            ]
          },
          {
            "name": "CountryCode",
            "dataType": "string",
            "sourceColumn": "CountryCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CountryCode"
              }
            ]
          },
          {
            "name": "AreaCode",
            "dataType": "string",
            "sourceColumn": "AreaCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AreaCode"
              }
            ]
          },
          {
            "name": "SubscriberNumber",
            "dataType": "string",
            "sourceColumn": "SubscriberNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SubscriberNumber"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Listing",
        "description": "Entity: dbo.Listing",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "Code",
            "dataType": "string",
            "sourceColumn": "Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Code"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "MasterHeadingCode",
            "dataType": "string",
            "sourceColumn": "MasterHeadingCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MasterHeadingCode"
              }
            ]
          },
          {
            "name": "LocalityID",
            "dataType": "int64",
            "sourceColumn": "LocalityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LocalityID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "int64",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "IsPotentialFreelister",
            "dataType": "boolean",
            "sourceColumn": "IsPotentialFreelister",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsPotentialFreelister is a non\u2011nullable boolean flag that marks whether a listing is considered a potential freelister. Because the column is NOT NULL, every row will contain either 0 or 1 (no NULL/unknown state). Use equality against 1 to select listings that are flagged as potential freelisters, or against 0 to select those that are not. In SQL Server BIT semantics, use = 1 or = 0 (or direct boolean checks in client code) when filtering."
              }
            ]
          },
          {
            "name": "IsPrimary",
            "dataType": "boolean",
            "sourceColumn": "IsPrimary",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsPrimary is a NOT NULL BIT flag indicating whether a listing is the 'primary' listing. Every row should contain either 1 (primary) or 0 (not primary). To select primary (i.e., 'active' in this context) records, filter on IsPrimary = 1. Any NULLs would represent a data quality issue and should be investigated."
              }
            ]
          },
          {
            "name": "IsSecondary",
            "dataType": "boolean",
            "sourceColumn": "IsSecondary",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsSecondary is a boolean classification flag (not an active/inactive switch). Because the column is NOT NULL every record is either 0 (primary) or 1 (secondary). Use WHERE IsSecondary = 0 to select primary/non-secondary listings, or WHERE IsSecondary = 1 to select secondary listings. If you see NULLs in downstream data, treat them as unknown and handle explicitly."
              }
            ]
          },
          {
            "name": "IsContract",
            "dataType": "boolean",
            "sourceColumn": "IsContract",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsContract is a non-nullable boolean flag indicating whether a listing is a contract. Every row must be 0 or 1. Use IsContract = 1 to select contract listings and IsContract = 0 to select non-contract listings. Any NULLs should be treated as an anomaly."
              }
            ]
          },
          {
            "name": "SourceUdacs",
            "dataType": "string",
            "sourceColumn": "SourceUdacs",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SourceUdacs"
              }
            ]
          },
          {
            "name": "LogInfo",
            "dataType": "string",
            "sourceColumn": "LogInfo",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LogInfo"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BusinessPoint",
        "description": "Entity: dbo.BusinessPoint",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "LocationNodeID",
            "dataType": "string",
            "sourceColumn": "LocationNodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LocationNodeID"
              }
            ]
          },
          {
            "name": "LocationAddressID",
            "dataType": "string",
            "sourceColumn": "LocationAddressID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LocationAddressID"
              }
            ]
          },
          {
            "name": "ActivityClassifierNodeID",
            "dataType": "string",
            "sourceColumn": "ActivityClassifierNodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ActivityClassifierNodeID"
              }
            ]
          },
          {
            "name": "SalesNodeID",
            "dataType": "string",
            "sourceColumn": "SalesNodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SalesNodeID"
              }
            ]
          },
          {
            "name": "BillingAddressID",
            "dataType": "string",
            "sourceColumn": "BillingAddressID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BillingAddressID"
              }
            ]
          },
          {
            "name": "SalesContactID",
            "dataType": "string",
            "sourceColumn": "SalesContactID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SalesContactID"
              }
            ]
          },
          {
            "name": "LegalFormID",
            "dataType": "string",
            "sourceColumn": "LegalFormID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LegalFormID"
              }
            ]
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Name"
              }
            ]
          },
          {
            "name": "Url",
            "dataType": "string",
            "sourceColumn": "Url",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Url"
              }
            ]
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsActive is a non-nullable BIT status flag. Because it cannot be NULL, every row must be explicitly marked active (1) or inactive (0). Use IsActive = 1 to select active records; IsActive = 0 to select inactive ones. Treat unexpected NULLs as an error to investigate. Confirm with business rules whether 0 represents a soft-delete, a temporary disable, or another state before relying on it for irreversible logic."
              }
            ]
          },
          {
            "name": "DeactivationReason",
            "dataType": "string",
            "sourceColumn": "DeactivationReason",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DeactivationReason"
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedOn"
              }
            ]
          },
          {
            "name": "ModifiedBy",
            "dataType": "string",
            "sourceColumn": "ModifiedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedBy"
              }
            ]
          },
          {
            "name": "BrandName",
            "dataType": "string",
            "sourceColumn": "BrandName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BrandName"
              }
            ]
          },
          {
            "name": "TaxOfficeID",
            "dataType": "string",
            "sourceColumn": "TaxOfficeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaxOfficeID"
              }
            ]
          },
          {
            "name": "VatCategoryID",
            "dataType": "string",
            "sourceColumn": "VatCategoryID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "VatCategoryID"
              }
            ]
          },
          {
            "name": "Code",
            "dataType": "string",
            "sourceColumn": "Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Code"
              }
            ]
          },
          {
            "name": "Profession",
            "dataType": "string",
            "sourceColumn": "Profession",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Profession"
              }
            ]
          },
          {
            "name": "IsPOI",
            "dataType": "boolean",
            "sourceColumn": "IsPOI",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsPOI is a non-nullable boolean flag stored as BIT. Because NULLs are disallowed, every row will have either 0 or 1. Use IsPOI = 1 to select rows that are considered 'active' in the sense of being POIs; IsPOI = 0 selects non-POIs. Any occurrence of NULL would be anomalous and merit investigation."
              }
            ]
          },
          {
            "name": "CustomerSourceID",
            "dataType": "string",
            "sourceColumn": "CustomerSourceID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerSourceID"
              }
            ]
          },
          {
            "name": "LastUpdateOn",
            "dataType": "dateTime",
            "sourceColumn": "LastUpdateOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastUpdateOn"
              }
            ]
          },
          {
            "name": "LastUpdateBy",
            "dataType": "string",
            "sourceColumn": "LastUpdateBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastUpdateBy"
              }
            ]
          },
          {
            "name": "SalesAddressID",
            "dataType": "string",
            "sourceColumn": "SalesAddressID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SalesAddressID"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "GLSeqCodeID",
            "dataType": "string",
            "sourceColumn": "GLSeqCodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GLSeqCodeID"
              }
            ]
          },
          {
            "name": "KEPYOStatusID",
            "dataType": "string",
            "sourceColumn": "KEPYOStatusID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "KEPYOStatusID is a nullable lookup/key column. NULL means no status was set (treated as 'no explicit status' \u2014 which may or may not imply the record is operational depending on business rules). A non-NULL value points to a lookup table row that defines the exact status. To reliably select 'active' BusinessPoint rows, join or consult the KEPYOStatus lookup and use its authoritative flag/name (for example an IsActive boolean or StatusName = 'Active'). The provided SQL condition is a practical pattern that: 1) includes rows with no explicit status (KEPYOStatusID IS NULL) and 2) includes rows whose lookup row is marked active. Before applying this filter in production, confirm whether NULL should be treated as active in your business context or whether NULL rows should be excluded."
              }
            ]
          },
          {
            "name": "HasCRMTicket",
            "dataType": "boolean",
            "sourceColumn": "HasCRMTicket",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "HasCRMTicket is a non\u2011nullable boolean flag that denotes whether a BusinessPoint has at least one CRM ticket. Expected stored values are 1 (has a ticket) and 0 (does not). Because the column is NOT NULL you normally filter for 'active' (i.e., those with a ticket) using WHERE HasCRMTicket = 1. If you need to defensively handle unexpected NULLs, use WHERE ISNULL(HasCRMTicket,0) = 1 or WHERE COALESCE(HasCRMTicket,0) = 1."
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "CustomerSolvencyID",
            "dataType": "string",
            "sourceColumn": "CustomerSolvencyID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerSolvencyID"
              }
            ]
          },
          {
            "name": "NoTaxVat",
            "dataType": "boolean",
            "sourceColumn": "NoTaxVat",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NoTaxVat"
              }
            ]
          },
          {
            "name": "SpecialInformation",
            "dataType": "string",
            "sourceColumn": "SpecialInformation",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SpecialInformation"
              }
            ]
          },
          {
            "name": "ExtraCardInformation",
            "dataType": "string",
            "sourceColumn": "ExtraCardInformation",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraCardInformation"
              }
            ]
          },
          {
            "name": "TransferDateToEBS",
            "dataType": "dateTime",
            "sourceColumn": "TransferDateToEBS",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TransferDateToEBS"
              }
            ]
          },
          {
            "name": "CustomerSourceModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "CustomerSourceModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerSourceModifiedOn"
              }
            ]
          },
          {
            "name": "CustomerUpdateModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "CustomerUpdateModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerUpdateModifiedOn"
              }
            ]
          },
          {
            "name": "CustomerUpdateID",
            "dataType": "string",
            "sourceColumn": "CustomerUpdateID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerUpdateID"
              }
            ]
          },
          {
            "name": "Version",
            "dataType": "dateTime",
            "sourceColumn": "Version",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Version"
              }
            ]
          },
          {
            "name": "HasLiveProfilePageInXOGR",
            "dataType": "boolean",
            "sourceColumn": "HasLiveProfilePageInXOGR",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "This nullable BIT column is a boolean flag: TRUE (1) means the business point has a live profile page in XOGR; FALSE (0) means it does not. NULL indicates the information is missing/undetermined. When selecting 'active' records (those with a confirmed live page), filter for value = 1; use COALESCE(...,0) = 1 if you want to treat NULL as false in your predicate."
              }
            ]
          },
          {
            "name": "ShowDistrictInXOGR",
            "dataType": "boolean",
            "sourceColumn": "ShowDistrictInXOGR",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ShowDistrictInXOGR is a nullable boolean flag controlling whether a business point's district should be displayed in the XOGR view. NULL means the flag was not set (unknown or default behavior); 1 means explicitly show the district; 0 means explicitly hide it. When querying for records where the feature is active, filter for ShowDistrictInXOGR = 1. If your business rules treat unset values as false, use ISNULL(ShowDistrictInXOGR, 0) = 1 (SQL Server) or COALESCE(ShowDistrictInXOGR, 0) = 1. Consider normalizing data by replacing NULLs with an explicit default (0 or 1) if the tri-state is not required."
              }
            ]
          },
          {
            "name": "InitialCustomerSourceID",
            "dataType": "string",
            "sourceColumn": "InitialCustomerSourceID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "InitialCustomerSourceID"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BusinessPointCustomAttributeValue",
        "description": "Entity: dbo.BusinessPointCustomAttributeValue",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointListingID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointListingID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "BusinessPointListingID is a required FK that associates each custom attribute value with a specific business point listing. Because it is NOT NULL, absence of a value cannot be used to indicate an inactive or unlinked record. To find 'active' custom attribute values you must consult the related BusinessPointListing (or its status column); join or use an EXISTS check against the BusinessPointListing table and filter on that table's active/status column (for example b.IsActive = 1 or b.ListingStatus = 'Active')."
              }
            ]
          },
          {
            "name": "AttributeID",
            "dataType": "int64",
            "sourceColumn": "AttributeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AttributeID"
              }
            ]
          },
          {
            "name": "Value",
            "dataType": "string",
            "sourceColumn": "Value",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Value"
              }
            ]
          },
          {
            "name": "DraftValue",
            "dataType": "string",
            "sourceColumn": "DraftValue",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DraftValue"
              }
            ]
          },
          {
            "name": "IsDraftInit",
            "dataType": "boolean",
            "sourceColumn": "IsDraftInit",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsDraftInit is a non\u2011nullable BIT flag that marks whether a BusinessPointCustomAttributeValue was initialized as a draft. Because the column is NOT NULL you will only encounter 0 or 1. By convention 1 indicates a draft-initialized record (usually not treated as active/production), and 0 indicates a non-draft record (usually the active/usable state). Use IsDraftInit = 0 to filter for active records, but confirm this interpretation with business rules if available."
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "CaseAttachment",
        "description": "Entity: dbo.CaseAttachment",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "CaseID",
            "dataType": "string",
            "sourceColumn": "CaseID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseID"
              }
            ]
          },
          {
            "name": "TaskID",
            "dataType": "string",
            "sourceColumn": "TaskID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaskID"
              }
            ]
          },
          {
            "name": "AttachmentType",
            "dataType": "int64",
            "sourceColumn": "AttachmentType",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AttachmentType"
              }
            ]
          },
          {
            "name": "FileName",
            "dataType": "string",
            "sourceColumn": "FileName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "FileName"
              }
            ]
          },
          {
            "name": "DisplayName",
            "dataType": "string",
            "sourceColumn": "DisplayName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "DisplayName is a descriptive, non-null text column (NVARCHAR(256)) used to present the attachment name. It does not encode record state (active/inactive). Therefore you should not rely on it as a status indicator. To select \"active\" records you should not filter by this column; use no condition (or a table-level active/status column if available). If you must test this column for presence, note that it cannot be NULL but it could be an empty string \u2014 to treat non-empty names as present use: RTRIM(LTRIM(DisplayName)) <> ''."
              }
            ]
          },
          {
            "name": "ProtocolNumber",
            "dataType": "string",
            "sourceColumn": "ProtocolNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProtocolNumber"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "DeletionComment",
            "dataType": "string",
            "sourceColumn": "DeletionComment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DeletionComment"
              }
            ]
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsDeleted is a NOT NULL BIT flag used to mark soft-deleted attachments. A value of 0 means the row is active (not deleted); 1 means the row is marked deleted. Since the column is non-nullable, NULL is not expected; if NULLs occur, decide on a definitive handling strategy (e.g., treat NULL as 0). To select active records use WHERE IsDeleted = 0. If you want a defensive check against unexpected NULLs, use WHERE ISNULL(IsDeleted, 0) = 0."
              }
            ]
          },
          {
            "name": "IsLast",
            "dataType": "boolean",
            "sourceColumn": "IsLast",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsLast is a boolean flag indicating whether a CaseAttachment is the final/current attachment for its case or grouping. Because the column is NOT NULL, rows should always contain either 0 (not last) or 1 (last). To select the active/current attachments, filter where IsLast = 1. Note: if business rules expect a single 'last' per case, multiple IsLast = 1 rows signal data integrity issues; if none exist, the 'last' is missing."
              }
            ]
          },
          {
            "name": "Metadata",
            "dataType": "string",
            "sourceColumn": "Metadata",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Metadata"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "CaseAttachmentTypeID",
            "dataType": "int64",
            "sourceColumn": "CaseAttachmentTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CaseAttachmentTypeID"
              }
            ]
          },
          {
            "name": "DeletedOn",
            "dataType": "dateTime",
            "sourceColumn": "DeletedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "DeletedOn is a soft\u2011delete timestamp column. If NULL the record has not been deleted and should be treated as active. If populated it contains the date/time the record was marked deleted and should be treated as inactive; you can filter active rows with 'WHERE DeletedOn IS NULL'. Consider timezone/UTC conventions and any application-specific sentinel values if present when implementing queries or cleanup jobs."
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BusinessPointIdentification",
        "description": "Entity: dbo.BusinessPointIdentification",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Name"
              }
            ]
          },
          {
            "name": "BrandName",
            "dataType": "string",
            "sourceColumn": "BrandName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BrandName"
              }
            ]
          },
          {
            "name": "TaxCode",
            "dataType": "string",
            "sourceColumn": "TaxCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaxCode"
              }
            ]
          },
          {
            "name": "Profession",
            "dataType": "string",
            "sourceColumn": "Profession",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Profession"
              }
            ]
          },
          {
            "name": "Phone1",
            "dataType": "string",
            "sourceColumn": "Phone1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone1"
              }
            ]
          },
          {
            "name": "Phone2",
            "dataType": "string",
            "sourceColumn": "Phone2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone2"
              }
            ]
          },
          {
            "name": "Phone3",
            "dataType": "string",
            "sourceColumn": "Phone3",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone3"
              }
            ]
          },
          {
            "name": "MobilePhone",
            "dataType": "string",
            "sourceColumn": "MobilePhone",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MobilePhone"
              }
            ]
          },
          {
            "name": "Fax",
            "dataType": "string",
            "sourceColumn": "Fax",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Fax"
              }
            ]
          },
          {
            "name": "Email1",
            "dataType": "string",
            "sourceColumn": "Email1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Email1"
              }
            ]
          },
          {
            "name": "Email2",
            "dataType": "string",
            "sourceColumn": "Email2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Email2"
              }
            ]
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Address"
              }
            ]
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "City"
              }
            ]
          },
          {
            "name": "PostalCode",
            "dataType": "string",
            "sourceColumn": "PostalCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PostalCode"
              }
            ]
          },
          {
            "name": "LegalForm",
            "dataType": "string",
            "sourceColumn": "LegalForm",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LegalForm"
              }
            ]
          },
          {
            "name": "TaxOffice",
            "dataType": "string",
            "sourceColumn": "TaxOffice",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "TaxOffice"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          },
          {
            "name": "BillingEmailAddress",
            "dataType": "string",
            "sourceColumn": "BillingEmailAddress",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BillingEmailAddress"
              }
            ]
          },
          {
            "name": "BillingTelephone",
            "dataType": "string",
            "sourceColumn": "BillingTelephone",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BillingTelephone"
              }
            ]
          },
          {
            "name": "ExtraInformation",
            "dataType": "string",
            "sourceColumn": "ExtraInformation",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExtraInformation"
              }
            ]
          },
          {
            "name": "CustomerURL",
            "dataType": "string",
            "sourceColumn": "CustomerURL",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerURL"
              }
            ]
          },
          {
            "name": "Heading",
            "dataType": "string",
            "sourceColumn": "Heading",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Heading"
              }
            ]
          },
          {
            "name": "GeographicalPositionUrl",
            "dataType": "string",
            "sourceColumn": "GeographicalPositionUrl",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "GeographicalPositionUrl"
              }
            ]
          },
          {
            "name": "NewBusinessPointCodes",
            "dataType": "string",
            "sourceColumn": "NewBusinessPointCodes",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NewBusinessPointCodes"
              }
            ]
          },
          {
            "name": "RelatedBPComments",
            "dataType": "string",
            "sourceColumn": "RelatedBPComments",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RelatedBPComments"
              }
            ]
          },
          {
            "name": "RejectionReasonId",
            "dataType": "string",
            "sourceColumn": "RejectionReasonId",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "RejectionReasonId"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "DialerBusinessPoint",
        "description": "Entity: dbo.DialerBusinessPoint",
        "columns": [
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "BusinessPointCode",
            "dataType": "string",
            "sourceColumn": "BusinessPointCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointCode"
              }
            ]
          },
          {
            "name": "CustomerName",
            "dataType": "string",
            "sourceColumn": "CustomerName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerName"
              }
            ]
          },
          {
            "name": "Brandname",
            "dataType": "string",
            "sourceColumn": "Brandname",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Brandname"
              }
            ]
          },
          {
            "name": "Prefecture",
            "dataType": "string",
            "sourceColumn": "Prefecture",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Prefecture"
              }
            ]
          },
          {
            "name": "Municipality",
            "dataType": "string",
            "sourceColumn": "Municipality",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Municipality"
              }
            ]
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "City"
              }
            ]
          },
          {
            "name": "StreetName",
            "dataType": "string",
            "sourceColumn": "StreetName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "StreetName"
              }
            ]
          },
          {
            "name": "StreetNumber",
            "dataType": "string",
            "sourceColumn": "StreetNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "StreetNumber"
              }
            ]
          },
          {
            "name": "NumberExtension",
            "dataType": "string",
            "sourceColumn": "NumberExtension",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NumberExtension"
              }
            ]
          },
          {
            "name": "ZipCode",
            "dataType": "string",
            "sourceColumn": "ZipCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ZipCode"
              }
            ]
          },
          {
            "name": "Phone",
            "dataType": "string",
            "sourceColumn": "Phone",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone"
              }
            ]
          },
          {
            "name": "CustomerProfession",
            "dataType": "string",
            "sourceColumn": "CustomerProfession",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerProfession"
              }
            ]
          },
          {
            "name": "MainHeadingName",
            "dataType": "string",
            "sourceColumn": "MainHeadingName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainHeadingName"
              }
            ]
          },
          {
            "name": "ExpirationDateInternet",
            "dataType": "dateTime",
            "sourceColumn": "ExpirationDateInternet",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExpirationDateInternet"
              }
            ]
          },
          {
            "name": "SubscriptionValue",
            "dataType": "decimal",
            "sourceColumn": "SubscriptionValue",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SubscriptionValue"
              }
            ]
          },
          {
            "name": "SubscriptionSignDate",
            "dataType": "dateTime",
            "sourceColumn": "SubscriptionSignDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SubscriptionSignDate"
              }
            ]
          },
          {
            "name": "Y01ADTotalPreprintedValue",
            "dataType": "decimal",
            "sourceColumn": "Y01ADTotalPreprintedValue",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Y01ADTotalPreprintedValue"
              }
            ]
          },
          {
            "name": "LossPrintedNew",
            "dataType": "int64",
            "sourceColumn": "LossPrintedNew",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LossPrintedNew"
              }
            ]
          },
          {
            "name": "SubchannelID",
            "dataType": "int64",
            "sourceColumn": "SubchannelID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SubchannelID"
              }
            ]
          },
          {
            "name": "HandlerName",
            "dataType": "string",
            "sourceColumn": "HandlerName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HandlerName"
              }
            ]
          },
          {
            "name": "LastSignedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastSignedDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastSignedDate"
              }
            ]
          },
          {
            "name": "LastPrintSalesMan01",
            "dataType": "string",
            "sourceColumn": "LastPrintSalesMan01",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastPrintSalesMan01"
              }
            ]
          },
          {
            "name": "LastInternetSalesMan01",
            "dataType": "string",
            "sourceColumn": "LastInternetSalesMan01",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastInternetSalesMan01"
              }
            ]
          },
          {
            "name": "Y01PSalesrepFullName",
            "dataType": "string",
            "sourceColumn": "Y01PSalesrepFullName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Y01PSalesrepFullName"
              }
            ]
          },
          {
            "name": "ReliabilityStatus",
            "dataType": "string",
            "sourceColumn": "ReliabilityStatus",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "Treat NULL as unknown/unset and exclude from confidently classified states unless you have rules to infer them. Use 'GREEN' to represent clearly active/healthy records. If your business considers broader operational states active, use an alternative such as: ReliabilityStatus IS NOT NULL AND ReliabilityStatus <> 'RED' (to include YELLOW/ORANGE/PURPLE as operational but exclude critical). Confirm the exact meanings of 'PURPLE' and any other non-standard color with the domain owners before broadening the active definition."
              }
            ]
          },
          {
            "name": "Phone1",
            "dataType": "string",
            "sourceColumn": "Phone1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone1"
              }
            ]
          },
          {
            "name": "Phone2",
            "dataType": "string",
            "sourceColumn": "Phone2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone2"
              }
            ]
          },
          {
            "name": "Phone3",
            "dataType": "string",
            "sourceColumn": "Phone3",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone3"
              }
            ]
          },
          {
            "name": "Phone4",
            "dataType": "string",
            "sourceColumn": "Phone4",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone4"
              }
            ]
          },
          {
            "name": "Phone5",
            "dataType": "string",
            "sourceColumn": "Phone5",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone5"
              }
            ]
          },
          {
            "name": "ProcessID",
            "dataType": "string",
            "sourceColumn": "ProcessID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProcessID"
              }
            ]
          },
          {
            "name": "PhoneM11",
            "dataType": "boolean",
            "sourceColumn": "PhoneM11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PhoneM11"
              }
            ]
          },
          {
            "name": "Phone1M11",
            "dataType": "boolean",
            "sourceColumn": "Phone1M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone1M11"
              }
            ]
          },
          {
            "name": "Phone2M11",
            "dataType": "boolean",
            "sourceColumn": "Phone2M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone2M11"
              }
            ]
          },
          {
            "name": "Phone3M11",
            "dataType": "boolean",
            "sourceColumn": "Phone3M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone3M11"
              }
            ]
          },
          {
            "name": "Phone4M11",
            "dataType": "boolean",
            "sourceColumn": "Phone4M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone4M11"
              }
            ]
          },
          {
            "name": "Phone5M11",
            "dataType": "boolean",
            "sourceColumn": "Phone5M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone5M11"
              }
            ]
          },
          {
            "name": "Score",
            "dataType": "string",
            "sourceColumn": "Score",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Score"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "BusinessPointListing",
        "description": "Entity: dbo.BusinessPointListing",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "ClassifierNodeID",
            "dataType": "int64",
            "sourceColumn": "ClassifierNodeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ClassifierNodeID"
              }
            ]
          },
          {
            "name": "HeadingCode",
            "dataType": "string",
            "sourceColumn": "HeadingCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HeadingCode"
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedByID",
            "dataType": "int64",
            "sourceColumn": "CreatedByID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedByID"
              }
            ]
          },
          {
            "name": "CreatedOnLogGroupID",
            "dataType": "string",
            "sourceColumn": "CreatedOnLogGroupID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOnLogGroupID"
              }
            ]
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedOn"
              }
            ]
          },
          {
            "name": "ModifiedByID",
            "dataType": "int64",
            "sourceColumn": "ModifiedByID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedByID"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "FreeListingSearchItem",
        "description": "Entity: dbo.FreeListingSearchItem",
        "columns": [
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "BusinessPointCode",
            "dataType": "string",
            "sourceColumn": "BusinessPointCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointCode"
              }
            ]
          },
          {
            "name": "BrandName",
            "dataType": "string",
            "sourceColumn": "BrandName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BrandName"
              }
            ]
          },
          {
            "name": "BusinessPointName",
            "dataType": "string",
            "sourceColumn": "BusinessPointName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointName"
              }
            ]
          },
          {
            "name": "LocationAddressID",
            "dataType": "int64",
            "sourceColumn": "LocationAddressID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LocationAddressID"
              }
            ]
          },
          {
            "name": "MainActivityID",
            "dataType": "int64",
            "sourceColumn": "MainActivityID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainActivityID"
              }
            ]
          },
          {
            "name": "MainActivityName",
            "dataType": "string",
            "sourceColumn": "MainActivityName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainActivityName"
              }
            ]
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "City"
              }
            ]
          },
          {
            "name": "PrefectureName",
            "dataType": "string",
            "sourceColumn": "PrefectureName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PrefectureName"
              }
            ]
          },
          {
            "name": "AreaName",
            "dataType": "string",
            "sourceColumn": "AreaName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "AreaName"
              }
            ]
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Address"
              }
            ]
          },
          {
            "name": "CompanyPhone",
            "dataType": "string",
            "sourceColumn": "CompanyPhone",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CompanyPhone"
              }
            ]
          },
          {
            "name": "CustomerSourceID",
            "dataType": "int64",
            "sourceColumn": "CustomerSourceID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerSourceID"
              }
            ]
          },
          {
            "name": "CustomerUpdateID",
            "dataType": "int64",
            "sourceColumn": "CustomerUpdateID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerUpdateID"
              }
            ]
          },
          {
            "name": "BusinessPointSource",
            "dataType": "string",
            "sourceColumn": "BusinessPointSource",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointSource"
              }
            ]
          },
          {
            "name": "SolvencyID",
            "dataType": "int64",
            "sourceColumn": "SolvencyID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SolvencyID"
              }
            ]
          },
          {
            "name": "SolvencyDescription",
            "dataType": "string",
            "sourceColumn": "SolvencyDescription",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SolvencyDescription"
              }
            ]
          },
          {
            "name": "LastSignedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastSignedDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastSignedDate"
              }
            ]
          },
          {
            "name": "HasInternetMasterHeading",
            "dataType": "boolean",
            "sourceColumn": "HasInternetMasterHeading",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "HasInternetMasterHeading is a nullable boolean flag. NULL means the state is not recorded or is unknown. When populated, 1 signifies presence of an Internet Master Heading and 0 signifies its absence. To select 'active' records (those that have the heading) filter for HasInternetMasterHeading = 1; if you want to defensively treat NULL as false, use ISNULL(HasInternetMasterHeading,0) = 1 (or COALESCE(HasInternetMasterHeading,0) = 1)."
              }
            ]
          },
          {
            "name": "IsRegular",
            "dataType": "boolean",
            "sourceColumn": "IsRegular",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsRegular is a nullable boolean flag indicating whether the FreeListingSearchItem is a 'regular' listing. NULL indicates the flag was not set (unknown); 1 means explicitly regular; 0 means explicitly not regular. To return only items considered regular, filter where IsRegular = 1 (or use ISNULL(IsRegular, 0) = 1 to treat NULL as false)."
              }
            ]
          },
          {
            "name": "IsProspect",
            "dataType": "boolean",
            "sourceColumn": "IsProspect",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsProspect is a nullable boolean tri-state: NULL = unknown/not recorded, 1 = is a prospect, 0 = not a prospect. To select records that are explicitly marked as prospects use the condition IsProspect = 1. If you prefer to treat NULL as false use WHERE ISNULL(IsProspect, 0) = 1; if you need to treat NULL as active, include OR IsProspect IS NULL."
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "PointEmail",
        "description": "Entity: dbo.PointEmail",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Email"
              }
            ]
          },
          {
            "name": "Usage",
            "dataType": "int64",
            "sourceColumn": "Usage",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Usage"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "Contact",
        "description": "Entity: dbo.Contact",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "ContactAddressID",
            "dataType": "string",
            "sourceColumn": "ContactAddressID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContactAddressID"
              }
            ]
          },
          {
            "name": "Firstname",
            "dataType": "string",
            "sourceColumn": "Firstname",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Firstname"
              }
            ]
          },
          {
            "name": "Lastname",
            "dataType": "string",
            "sourceColumn": "Lastname",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Lastname"
              }
            ]
          },
          {
            "name": "Url",
            "dataType": "string",
            "sourceColumn": "Url",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Url"
              }
            ]
          },
          {
            "name": "Comments",
            "dataType": "string",
            "sourceColumn": "Comments",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Comments"
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedOn"
              }
            ]
          },
          {
            "name": "ModifiedBy",
            "dataType": "string",
            "sourceColumn": "ModifiedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedBy"
              }
            ]
          },
          {
            "name": "Title",
            "dataType": "int64",
            "sourceColumn": "Title",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Title"
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "ContactRelationship",
        "description": "Entity: dbo.ContactRelationship",
        "columns": [
          {
            "name": "ID",
            "dataType": "string",
            "sourceColumn": "ID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ID"
              }
            ]
          },
          {
            "name": "BusinessPointID",
            "dataType": "string",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "ContactID",
            "dataType": "string",
            "sourceColumn": "ContactID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContactID"
              }
            ]
          },
          {
            "name": "ContactRelationshipTypeID",
            "dataType": "string",
            "sourceColumn": "ContactRelationshipTypeID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ContactRelationshipTypeID"
              }
            ]
          },
          {
            "name": "IsActive",
            "dataType": "boolean",
            "sourceColumn": "IsActive",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsActive is a non-nullable boolean flag that marks whether a ContactRelationship is considered active. In normal data, 1 = active (include these records), 0 = inactive (exclude these records). Because the column is NOT NULL, NULL does not represent a legitimate state; its presence would suggest corrupted or nonconforming data. Use WHERE IsActive = 1 to retrieve active records."
              }
            ]
          },
          {
            "name": "CreatedOn",
            "dataType": "dateTime",
            "sourceColumn": "CreatedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedOn"
              }
            ]
          },
          {
            "name": "CreatedBy",
            "dataType": "string",
            "sourceColumn": "CreatedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CreatedBy"
              }
            ]
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedOn"
              }
            ]
          },
          {
            "name": "ModifiedBy",
            "dataType": "string",
            "sourceColumn": "ModifiedBy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ModifiedBy"
              }
            ]
          },
          {
            "name": "IsContactPerson",
            "dataType": "boolean",
            "sourceColumn": "IsContactPerson",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "IsContactPerson is a nullable boolean status flag. NULL = unknown / not set. 1 = positive/active (is a contact person). 0 = negative/inactive (not a contact person). To select active records use IsContactPerson = 1. If you need to treat NULL as false explicitly, use COALESCE(IsContactPerson, 0) = 1 or add IS NOT NULL (IsContactPerson IS NOT NULL AND IsContactPerson = 1)."
              }
            ]
          },
          {
            "name": "DMKey",
            "dataType": "int64",
            "sourceColumn": "DMKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMKey"
              }
            ]
          },
          {
            "name": "DMTable",
            "dataType": "string",
            "sourceColumn": "DMTable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMTable"
              }
            ]
          },
          {
            "name": "DMCharKey",
            "dataType": "string",
            "sourceColumn": "DMCharKey",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "DMCharKey"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      },
      {
        "name": "DialerBusinessPoint_20240704_31672",
        "description": "Entity: HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31672",
        "columns": [
          {
            "name": "BusinessPointID",
            "dataType": "int64",
            "sourceColumn": "BusinessPointID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointID"
              }
            ]
          },
          {
            "name": "BusinessPointCode",
            "dataType": "string",
            "sourceColumn": "BusinessPointCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "BusinessPointCode"
              }
            ]
          },
          {
            "name": "CustomerName",
            "dataType": "string",
            "sourceColumn": "CustomerName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerName"
              }
            ]
          },
          {
            "name": "Brandname",
            "dataType": "string",
            "sourceColumn": "Brandname",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Brandname"
              }
            ]
          },
          {
            "name": "Prefecture",
            "dataType": "string",
            "sourceColumn": "Prefecture",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Prefecture"
              }
            ]
          },
          {
            "name": "Municipality",
            "dataType": "string",
            "sourceColumn": "Municipality",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Municipality"
              }
            ]
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "City"
              }
            ]
          },
          {
            "name": "StreetName",
            "dataType": "string",
            "sourceColumn": "StreetName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "StreetName"
              }
            ]
          },
          {
            "name": "StreetNumber",
            "dataType": "string",
            "sourceColumn": "StreetNumber",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "StreetNumber"
              }
            ]
          },
          {
            "name": "NumberExtension",
            "dataType": "string",
            "sourceColumn": "NumberExtension",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "NumberExtension"
              }
            ]
          },
          {
            "name": "ZipCode",
            "dataType": "string",
            "sourceColumn": "ZipCode",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ZipCode"
              }
            ]
          },
          {
            "name": "Phone",
            "dataType": "string",
            "sourceColumn": "Phone",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone"
              }
            ]
          },
          {
            "name": "CustomerProfession",
            "dataType": "string",
            "sourceColumn": "CustomerProfession",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "CustomerProfession"
              }
            ]
          },
          {
            "name": "MainHeadingName",
            "dataType": "string",
            "sourceColumn": "MainHeadingName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "MainHeadingName"
              }
            ]
          },
          {
            "name": "ExpirationDateInternet",
            "dataType": "dateTime",
            "sourceColumn": "ExpirationDateInternet",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ExpirationDateInternet"
              }
            ]
          },
          {
            "name": "SubscriptionValue",
            "dataType": "decimal",
            "sourceColumn": "SubscriptionValue",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SubscriptionValue"
              }
            ]
          },
          {
            "name": "SubscriptionSignDate",
            "dataType": "dateTime",
            "sourceColumn": "SubscriptionSignDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SubscriptionSignDate"
              }
            ]
          },
          {
            "name": "Y01ADTotalPreprintedValue",
            "dataType": "decimal",
            "sourceColumn": "Y01ADTotalPreprintedValue",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Y01ADTotalPreprintedValue"
              }
            ]
          },
          {
            "name": "LossPrintedNew",
            "dataType": "int64",
            "sourceColumn": "LossPrintedNew",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LossPrintedNew"
              }
            ]
          },
          {
            "name": "SubchannelID",
            "dataType": "int64",
            "sourceColumn": "SubchannelID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "SubchannelID"
              }
            ]
          },
          {
            "name": "HandlerName",
            "dataType": "string",
            "sourceColumn": "HandlerName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "HandlerName"
              }
            ]
          },
          {
            "name": "LastSignedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastSignedDate",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastSignedDate"
              }
            ]
          },
          {
            "name": "LastPrintSalesMan01",
            "dataType": "string",
            "sourceColumn": "LastPrintSalesMan01",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastPrintSalesMan01"
              }
            ]
          },
          {
            "name": "LastInternetSalesMan01",
            "dataType": "string",
            "sourceColumn": "LastInternetSalesMan01",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "LastInternetSalesMan01"
              }
            ]
          },
          {
            "name": "Y01PSalesrepFullName",
            "dataType": "string",
            "sourceColumn": "Y01PSalesrepFullName",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Y01PSalesrepFullName"
              }
            ]
          },
          {
            "name": "ReliabilityStatus",
            "dataType": "string",
            "sourceColumn": "ReliabilityStatus",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "status_indicator"
              },
              {
                "name": "Description",
                "value": "ReliabilityStatus is a discretionary text flag: NULL indicates no assessment was provided (unknown/missing). Any non\u2011NULL entry is an explicit assessment; some values (like 'Not available') explicitly state that reliability data is not present. To treat a record as 'active' with respect to reliability, filter for rows that have a non\u2011NULL, non\u2011negative status value. Because the exact set of negative/unusable tokens may vary, use a normalized comparison (trim and lower) and exclude known negative tokens (example shown). For full correctness, enumerate the actual allowed positive status values from the data source and prefer whitelisting those (e.g., WHERE LTRIM(RTRIM(LOWER(ReliabilityStatus))) IN ('reliable','validated') ) rather than relying only on a blacklist."
              }
            ]
          },
          {
            "name": "Phone1",
            "dataType": "string",
            "sourceColumn": "Phone1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone1"
              }
            ]
          },
          {
            "name": "Phone2",
            "dataType": "string",
            "sourceColumn": "Phone2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone2"
              }
            ]
          },
          {
            "name": "Phone3",
            "dataType": "string",
            "sourceColumn": "Phone3",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone3"
              }
            ]
          },
          {
            "name": "Phone4",
            "dataType": "string",
            "sourceColumn": "Phone4",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone4"
              }
            ]
          },
          {
            "name": "Phone5",
            "dataType": "string",
            "sourceColumn": "Phone5",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone5"
              }
            ]
          },
          {
            "name": "ProcessID",
            "dataType": "string",
            "sourceColumn": "ProcessID",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "ProcessID"
              }
            ]
          },
          {
            "name": "PhoneM11",
            "dataType": "boolean",
            "sourceColumn": "PhoneM11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "PhoneM11"
              }
            ]
          },
          {
            "name": "Phone1M11",
            "dataType": "boolean",
            "sourceColumn": "Phone1M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone1M11"
              }
            ]
          },
          {
            "name": "Phone2M11",
            "dataType": "boolean",
            "sourceColumn": "Phone2M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone2M11"
              }
            ]
          },
          {
            "name": "Phone3M11",
            "dataType": "boolean",
            "sourceColumn": "Phone3M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone3M11"
              }
            ]
          },
          {
            "name": "Phone4M11",
            "dataType": "boolean",
            "sourceColumn": "Phone4M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone4M11"
              }
            ]
          },
          {
            "name": "Phone5M11",
            "dataType": "boolean",
            "sourceColumn": "Phone5M11",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Phone5M11"
              }
            ]
          },
          {
            "name": "Score",
            "dataType": "string",
            "sourceColumn": "Score",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SemanticRole",
                "value": "metadata"
              },
              {
                "name": "Description",
                "value": "Score"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"localhost\", \"YourDatabase\"),",
                " ",
                "in",
                "    Table"
              ]
            }
          }
        ]
      }
    ],
    "relationships": []
  }
}