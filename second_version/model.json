{
  "metadata": {
    "exported_at": "2025-10-23T15:15:40.157389",
    "version": "1.0",
    "format": "semantic_model_json",
    "compatible_with": [
      "Power BI",
      "Tableau",
      "Looker",
      "Custom BI Tools"
    ]
  },
  "model": {
    "entities": [
      {
        "name": "Task",
        "source": "dbo.Task",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.Task",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "Description",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Description"
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "Status",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Because Status is NOT NULL every Task row has a defined integer status. You should not assume particular mappings without metadata: first query the distinct values (SELECT DISTINCT Status FROM dbo.Task), check for a related lookup table or FK, and review application logic or documentation to map codes to human states. To filter active tasks, identify which integer codes correspond to 'active' (commonly values like New, Assigned, InProgress) and use Status IN (..). If the column is a bitmask, use a bitwise test (Status & mask) <> 0. If metadata is unavailable, inspect frequencies and recent activity to hypothesize which codes are active, then validate with stakeholders or code."
          },
          {
            "name": "CaseID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CaseID"
          },
          {
            "name": "TaskTypeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TaskTypeID"
          },
          {
            "name": "Outcome",
            "type": "NVARCHAR(512) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Outcome"
          },
          {
            "name": "CompletedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CompletedOn"
          },
          {
            "name": "ActualOwnerID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActualOwnerID"
          },
          {
            "name": "DynamicCode",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DynamicCode"
          },
          {
            "name": "DynamicDescription",
            "type": "NVARCHAR(512) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DynamicDescription"
          },
          {
            "name": "SenderID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SenderID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "SubStatus",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Because SubStatus is non\u2011nullable, absence of a value is not represented by NULL; instead a particular integer would indicate 'not set' if needed. Populated integers are code values that describe the task's finer\u2011grained state; you must consult the code map to know which codes represent 'active'. To filter for active records, replace the placeholder list with the actual active codes used in your system (or, if your domain defines active as all positive codes, use a predicate such as SubStatus > 0)."
          },
          {
            "name": "EditorState",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "EditorState is a required integer status flag. There are no NULLs by design; every record has a state code. To interpret or filter by 'active' you must use the application's enum mapping. Absent that mapping, typical heuristics are to treat 0 as inactive and non-zero as active (WHERE EditorState <> 0) or to filter explicitly by the known active code values (WHERE EditorState IN (...))."
          },
          {
            "name": "SavedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SavedOn"
          },
          {
            "name": "Version",
            "type": "TIMESTAMP",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Version"
          },
          {
            "name": "ActualOwnerModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActualOwnerModifiedOn"
          },
          {
            "name": "ActualRoleID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActualRoleID"
          },
          {
            "name": "Input",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Input"
          },
          {
            "name": "Output",
            "type": "NVARCHAR(2000) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Output"
          },
          {
            "name": "CorrelationKey",
            "type": "NVARCHAR(36) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CorrelationKey"
          },
          {
            "name": "CompletedById",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CompletedById"
          }
        ]
      },
      {
        "name": "BroaderArea",
        "source": "dbo.BroaderArea",
        "primary_key": [
          "BroaderAreaID",
          "AddressID"
        ],
        "description": "Entity: dbo.BroaderArea",
        "columns": [
          {
            "name": "BroaderAreaID",
            "type": "VARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BroaderAreaID"
          },
          {
            "name": "AddressID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "AddressID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ]
      },
      {
        "name": "Case",
        "source": "dbo.Case",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.Case",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "ReferencePointID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ReferencePointID"
          },
          {
            "name": "CaseTypeID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CaseTypeID"
          },
          {
            "name": "State",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "State is an enumerated status column stored as an integer. NULL means the state was not set (unknown/not applicable). A populated integer means the case has an explicit lifecycle status according to a codeset maintained elsewhere. To identify active cases you must filter by the integer codes that your application treats as active; if you do not yet know those codes, locate the state lookup or ask the owner. As a template use: State IS NOT NULL AND State IN (<active_codes>). Avoid assuming specific meanings (e.g., 0 = closed, 1 = open) without confirming the mapping."
          },
          {
            "name": "Substate",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Substate is a nullable integer that augments the primary state of a case. Because no sample values or lookup were provided, treat NULL as 'no substate assigned' and a populated value as a pointer to a substate code defined elsewhere. To reliably filter for 'active' records you must confirm which substate codes represent active versus inactive/terminal conditions by consulting the domain/lookup table or business documentation. Common approaches: (1) If a lookup table exists, join or filter by its active flag, e.g. WHERE Substate IS NULL OR Substate IN (SELECT Id FROM dbo.SubstateLookup WHERE IsActive = 1). (2) If you have an explicit list, substitute it into the placeholder: WHERE Substate IS NULL OR Substate IN (1,2,3). (3) If terminal codes are known, exclude them: WHERE Substate IS NULL OR Substate NOT IN (9,10). Before applying any filter, run SELECT DISTINCT Substate FROM dbo.Case; and review lookup metadata to determine the correct active_code_list."
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "CompletedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CompletedOn"
          },
          {
            "name": "CompletedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CompletedBy"
          },
          {
            "name": "OwnerChannel",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OwnerChannel"
          },
          {
            "name": "OwnerUnit",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OwnerUnit"
          },
          {
            "name": "OwnerUser",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OwnerUser"
          },
          {
            "name": "ContextEntityID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContextEntityID"
          },
          {
            "name": "MasterCaseID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MasterCaseID"
          },
          {
            "name": "InitiatorID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "InitiatorID"
          },
          {
            "name": "ContextEntityType",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContextEntityType"
          },
          {
            "name": "ContextEntityID2",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContextEntityID2"
          },
          {
            "name": "ContextEntityType2",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContextEntityType2"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "PointCode",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PointCode"
          },
          {
            "name": "PointName",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PointName"
          },
          {
            "name": "CustomerIndicatorId",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerIndicatorId"
          },
          {
            "name": "ParentTaskId",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ParentTaskId"
          },
          {
            "name": "Outcome",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Outcome"
          },
          {
            "name": "Variables",
            "type": "NVARCHAR(2000) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Variables"
          },
          {
            "name": "PermanentOwnerId",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PermanentOwnerId"
          }
        ]
      },
      {
        "name": "PricelistItem",
        "source": "dbo.PricelistItem",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.PricelistItem",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "VersionSectionID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "VersionSectionID"
          },
          {
            "name": "ProductID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductID"
          },
          {
            "name": "ApplyToSection",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ApplyToSection"
          },
          {
            "name": "ApplyToSubSection",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ApplyToSubSection"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "IsInactive",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "IsInactive is a nullable boolean flag indicating whether a pricelist item is inactive. A value of 1 means the item is inactive; 0 means the item is active. NULL means the flag was not set/recorded and should be interpreted per business policy (commonly treated as active). For most queries wanting items that are usable/active, filter with IsInactive = 0 OR IsInactive IS NULL; if you require only explicitly-marked active rows, filter with IsInactive = 0."
          }
        ]
      },
      {
        "name": "ContractDocument",
        "source": "dbo.ContractDocument",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.ContractDocument",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "ContractID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ContractID"
          },
          {
            "name": "Filename",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Filename"
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "ContractDocumentType",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContractDocumentType"
          }
        ]
      },
      {
        "name": "PaymentMethod",
        "source": "dbo.PaymentMethod",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.PaymentMethod",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "PaymentMethodTypeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PaymentMethodTypeID"
          },
          {
            "name": "Installments",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Installments"
          },
          {
            "name": "Interval",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Interval"
          },
          {
            "name": "PaymentMonth",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentMonth"
          },
          {
            "name": "AdvancedPayment",
            "type": "DECIMAL(18, 0)",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "AdvancedPayment"
          },
          {
            "name": "IsExchangeSale",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsExchangeSale is a boolean status flag on PaymentMethod indicating whether that payment method is used for exchange sales. Because the column is NOT NULL, the expected values are 0 or 1. NULL should be treated as an error/unknown state. To select records considered 'active' for this flag, filter for value = 1 (or use COALESCE to guard against unexpected NULLs). Verify with business rules whether 'active' should mean true (1) in downstream logic."
          },
          {
            "name": "PaymentPhoneAccount",
            "type": "NVARCHAR(64) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentPhoneAccount"
          },
          {
            "name": "PaymentPhoneID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentPhoneID"
          },
          {
            "name": "PaymentCreditTransactionCode",
            "type": "VARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentCreditTransactionCode"
          },
          {
            "name": "BillingEmailID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BillingEmailID"
          },
          {
            "name": "NumberOfInvoices",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NumberOfInvoices"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "UserSpecifiedPaymentMonth",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UserSpecifiedPaymentMonth"
          }
        ]
      },
      {
        "name": "PointPhone",
        "source": "dbo.PointPhone",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.PointPhone",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "Number",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Number"
          },
          {
            "name": "Extension",
            "type": "NVARCHAR(54) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Extension"
          },
          {
            "name": "Usage",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Usage"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "IsActive",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsActive is a non-nullable boolean flag indicating whether the PointPhone row is active. Because it is NOT NULL, you do not need to guard against NULLs when filtering; treat 1 as active and 0 as inactive. If you require a third state (unknown, pending) you would need a nullable column or a separate status field. If NULLs are found in practice, investigate data load or schema issues."
          },
          {
            "name": "ProjectionFirst",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProjectionFirst"
          },
          {
            "name": "Mitr11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Mitr11"
          }
        ]
      },
      {
        "name": "VersionGroupItem",
        "source": "dbo.VersionGroupItem",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.VersionGroupItem",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "ParentID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ParentID"
          },
          {
            "name": "Description",
            "type": "NVARCHAR(130) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Description"
          },
          {
            "name": "Type",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Type"
          },
          {
            "name": "MediumVersionID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MediumVersionID"
          },
          {
            "name": "SourceGroupItemID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SourceGroupItemID"
          },
          {
            "name": "SourceHeadingID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SourceHeadingID"
          },
          {
            "name": "SourceGeoID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SourceGeoID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "IsActive",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsActive is a non-nullable boolean status flag indicating whether a VersionGroupItem is active. Because the column is NOT NULL, every row must contain either 1 (active) or 0 (inactive). Use WHERE IsActive = 1 to select active records. If NULLs are encountered in practice, investigate schema drift or data corruption and decide on a policy (for example, coerce NULL to 0 with ISNULL(IsActive,0) = 1) before relying on the flag."
          },
          {
            "name": "DescriptionCIAI",
            "type": "NVARCHAR(130) COLLATE \"Greek_CI_AI\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DescriptionCIAI"
          },
          {
            "name": "RootID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RootID"
          }
        ]
      },
      {
        "name": "Address",
        "source": "dbo.Address",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.Address",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "Line1",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line1"
          },
          {
            "name": "Line2",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line2"
          },
          {
            "name": "Line3",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line3"
          },
          {
            "name": "Line4",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line4"
          },
          {
            "name": "Longitude",
            "type": "FLOAT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Longitude"
          },
          {
            "name": "Latitude",
            "type": "FLOAT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Latitude"
          },
          {
            "name": "GeoModelType",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelType"
          },
          {
            "name": "GeoModelVersion",
            "type": "NVARCHAR(16) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelVersion"
          },
          {
            "name": "GeoModelSearchDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelSearchDate"
          },
          {
            "name": "GeoModelScore",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelScore"
          },
          {
            "name": "GeoModelStreet1ID",
            "type": "NVARCHAR(64) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet1ID"
          },
          {
            "name": "GeoModelStreet2ID",
            "type": "NVARCHAR(64) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet2ID"
          },
          {
            "name": "GeoModelLocID",
            "type": "NVARCHAR(64) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelLocID"
          },
          {
            "name": "GeoModelZip",
            "type": "NVARCHAR(64) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelZip"
          },
          {
            "name": "CountryID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CountryID"
          },
          {
            "name": "GeoModelQueryString",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelQueryString"
          },
          {
            "name": "GeoModelStreet1Text",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet1Text"
          },
          {
            "name": "GeoModelStreet1Num",
            "type": "NVARCHAR(32) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet1Num"
          },
          {
            "name": "GeoModelStreet2Text",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet2Text"
          },
          {
            "name": "GeoModelStreet2Num",
            "type": "NVARCHAR(32) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet2Num"
          },
          {
            "name": "GeoModelLocText",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelLocText"
          },
          {
            "name": "GeoModelLongitude",
            "type": "VARCHAR(30) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelLongitude"
          },
          {
            "name": "GeoModelLatitude",
            "type": "VARCHAR(30) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelLatitude"
          },
          {
            "name": "GeoBroaderAreas",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoBroaderAreas"
          },
          {
            "name": "NumericZip",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NumericZip"
          },
          {
            "name": "GeoModelDistrict",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "GeoModelDistrict is a nullable text field that functions as an assignment/status indicator for which geo-model district an address belongs to. NULL typically means the district is not set or is unknown; any populated string ordinarily means the address has been assigned a district (the value will usually be a district name or code). Because sample values are not available, watch for placeholder or sentinel strings (e.g., 'Unknown', 'N/A', 'Not available', empty strings, or whitespace). To treat an address as 'active' or classified by district, filter for non-NULL, non-empty, non-placeholder values (example SQL condition provided). Also consider normalizing whitespace/case and confirming the canonical list of placeholder tokens or valid district codes with the data owner before relying on this rule in production."
          },
          {
            "name": "GeoModelArea",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelArea"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "GeoModelGC_Type",
            "type": "NVARCHAR(1) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelGC_Type"
          },
          {
            "name": "UserOverrideLine1",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UserOverrideLine1"
          },
          {
            "name": "Line1En",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line1En"
          },
          {
            "name": "Line2En",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line2En"
          },
          {
            "name": "Line3En",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line3En"
          },
          {
            "name": "Line4En",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Line4En"
          },
          {
            "name": "GeoModelStreet1TextEn",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet1TextEn"
          },
          {
            "name": "GeoModelStreet2TextEn",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet2TextEn"
          },
          {
            "name": "GeoModelLocTextEn",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelLocTextEn"
          },
          {
            "name": "GeoModelDistrictEn",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "GeoModelDistrictEn appears to be a nullable textual indicator that identifies the geographic/model district in English. NULL = no assignment or missing data. Populated = an assigned district name or code. To treat a record as 'active' for having a valid district, filter for non-NULL, non-empty, trimmed values and exclude common placeholder tokens (example condition provided). Adjust the placeholder list to match your data."
          },
          {
            "name": "GeoModelAreaEn",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelAreaEn"
          },
          {
            "name": "UserOverrideLine1En",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UserOverrideLine1En"
          },
          {
            "name": "GeoModelStreet1NumEn",
            "type": "NVARCHAR(32) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet1NumEn"
          },
          {
            "name": "GeoModelStreet2NumEn",
            "type": "NVARCHAR(32) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoModelStreet2NumEn"
          }
        ]
      },
      {
        "name": "Phone",
        "source": "dbo.Phone",
        "primary_key": [
          "Number"
        ],
        "description": "Entity: dbo.Phone",
        "columns": [
          {
            "name": "Number",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Number"
          },
          {
            "name": "CountryCode",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CountryCode"
          },
          {
            "name": "AreaCode",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AreaCode"
          },
          {
            "name": "SubscriberNumber",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SubscriberNumber"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ]
      },
      {
        "name": "Listing",
        "source": "dbo.Listing",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.Listing",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "Code",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Code"
          },
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "MasterHeadingCode",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "MasterHeadingCode"
          },
          {
            "name": "LocalityID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "LocalityID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMCharKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "IsPotentialFreelister",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsPotentialFreelister is a non\u2011nullable boolean flag that marks whether a listing is considered a potential freelister. Because the column is NOT NULL, every row will contain either 0 or 1 (no NULL/unknown state). Use equality against 1 to select listings that are flagged as potential freelisters, or against 0 to select those that are not. In SQL Server BIT semantics, use = 1 or = 0 (or direct boolean checks in client code) when filtering."
          },
          {
            "name": "IsPrimary",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsPrimary is a NOT NULL BIT flag indicating whether a listing is the 'primary' listing. Every row should contain either 1 (primary) or 0 (not primary). To select primary (i.e., 'active' in this context) records, filter on IsPrimary = 1. Any NULLs would represent a data quality issue and should be investigated."
          },
          {
            "name": "IsSecondary",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsSecondary is a boolean classification flag (not an active/inactive switch). Because the column is NOT NULL every record is either 0 (primary) or 1 (secondary). Use WHERE IsSecondary = 0 to select primary/non-secondary listings, or WHERE IsSecondary = 1 to select secondary listings. If you see NULLs in downstream data, treat them as unknown and handle explicitly."
          },
          {
            "name": "IsContract",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsContract is a non-nullable boolean flag indicating whether a listing is a contract. Every row must be 0 or 1. Use IsContract = 1 to select contract listings and IsContract = 0 to select non-contract listings. Any NULLs should be treated as an anomaly."
          },
          {
            "name": "SourceUdacs",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SourceUdacs"
          },
          {
            "name": "LogInfo",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LogInfo"
          }
        ]
      },
      {
        "name": "BusinessPoint",
        "source": "dbo.BusinessPoint",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.BusinessPoint",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "LocationNodeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LocationNodeID"
          },
          {
            "name": "LocationAddressID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "LocationAddressID"
          },
          {
            "name": "ActivityClassifierNodeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ActivityClassifierNodeID"
          },
          {
            "name": "SalesNodeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SalesNodeID"
          },
          {
            "name": "BillingAddressID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BillingAddressID"
          },
          {
            "name": "SalesContactID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SalesContactID"
          },
          {
            "name": "LegalFormID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LegalFormID"
          },
          {
            "name": "Name",
            "type": "NVARCHAR(250) COLLATE \"SQL_Latin1_General_CP1_CI_AI\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Name"
          },
          {
            "name": "Url",
            "type": "NVARCHAR(254) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Url"
          },
          {
            "name": "IsActive",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsActive is a non-nullable BIT status flag. Because it cannot be NULL, every row must be explicitly marked active (1) or inactive (0). Use IsActive = 1 to select active records; IsActive = 0 to select inactive ones. Treat unexpected NULLs as an error to investigate. Confirm with business rules whether 0 represents a soft-delete, a temporary disable, or another state before relying on it for irreversible logic."
          },
          {
            "name": "DeactivationReason",
            "type": "NVARCHAR(254) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DeactivationReason"
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "ModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedOn"
          },
          {
            "name": "ModifiedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedBy"
          },
          {
            "name": "BrandName",
            "type": "NVARCHAR(250) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BrandName"
          },
          {
            "name": "TaxOfficeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TaxOfficeID"
          },
          {
            "name": "VatCategoryID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "VatCategoryID"
          },
          {
            "name": "Code",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Code"
          },
          {
            "name": "Profession",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Profession"
          },
          {
            "name": "IsPOI",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsPOI is a non-nullable boolean flag stored as BIT. Because NULLs are disallowed, every row will have either 0 or 1. Use IsPOI = 1 to select rows that are considered 'active' in the sense of being POIs; IsPOI = 0 selects non-POIs. Any occurrence of NULL would be anomalous and merit investigation."
          },
          {
            "name": "CustomerSourceID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerSourceID"
          },
          {
            "name": "LastUpdateOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastUpdateOn"
          },
          {
            "name": "LastUpdateBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastUpdateBy"
          },
          {
            "name": "SalesAddressID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SalesAddressID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "VARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "GLSeqCodeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GLSeqCodeID"
          },
          {
            "name": "KEPYOStatusID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "KEPYOStatusID is a nullable lookup/key column. NULL means no status was set (treated as 'no explicit status' \u2014 which may or may not imply the record is operational depending on business rules). A non-NULL value points to a lookup table row that defines the exact status. To reliably select 'active' BusinessPoint rows, join or consult the KEPYOStatus lookup and use its authoritative flag/name (for example an IsActive boolean or StatusName = 'Active'). The provided SQL condition is a practical pattern that: 1) includes rows with no explicit status (KEPYOStatusID IS NULL) and 2) includes rows whose lookup row is marked active. Before applying this filter in production, confirm whether NULL should be treated as active in your business context or whether NULL rows should be excluded."
          },
          {
            "name": "HasCRMTicket",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "HasCRMTicket is a non\u2011nullable boolean flag that denotes whether a BusinessPoint has at least one CRM ticket. Expected stored values are 1 (has a ticket) and 0 (does not). Because the column is NOT NULL you normally filter for 'active' (i.e., those with a ticket) using WHERE HasCRMTicket = 1. If you need to defensively handle unexpected NULLs, use WHERE ISNULL(HasCRMTicket,0) = 1 or WHERE COALESCE(HasCRMTicket,0) = 1."
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "CustomerSolvencyID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerSolvencyID"
          },
          {
            "name": "NoTaxVat",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NoTaxVat"
          },
          {
            "name": "SpecialInformation",
            "type": "NVARCHAR(200) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SpecialInformation"
          },
          {
            "name": "ExtraCardInformation",
            "type": "NVARCHAR(200) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraCardInformation"
          },
          {
            "name": "TransferDateToEBS",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TransferDateToEBS"
          },
          {
            "name": "CustomerSourceModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerSourceModifiedOn"
          },
          {
            "name": "CustomerUpdateModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerUpdateModifiedOn"
          },
          {
            "name": "CustomerUpdateID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerUpdateID"
          },
          {
            "name": "Version",
            "type": "TIMESTAMP",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Version"
          },
          {
            "name": "HasLiveProfilePageInXOGR",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This nullable BIT column is a boolean flag: TRUE (1) means the business point has a live profile page in XOGR; FALSE (0) means it does not. NULL indicates the information is missing/undetermined. When selecting 'active' records (those with a confirmed live page), filter for value = 1; use COALESCE(...,0) = 1 if you want to treat NULL as false in your predicate."
          },
          {
            "name": "ShowDistrictInXOGR",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "ShowDistrictInXOGR is a nullable boolean flag controlling whether a business point's district should be displayed in the XOGR view. NULL means the flag was not set (unknown or default behavior); 1 means explicitly show the district; 0 means explicitly hide it. When querying for records where the feature is active, filter for ShowDistrictInXOGR = 1. If your business rules treat unset values as false, use ISNULL(ShowDistrictInXOGR, 0) = 1 (SQL Server) or COALESCE(ShowDistrictInXOGR, 0) = 1. Consider normalizing data by replacing NULLs with an explicit default (0 or 1) if the tri-state is not required."
          },
          {
            "name": "InitialCustomerSourceID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "InitialCustomerSourceID"
          }
        ]
      },
      {
        "name": "BusinessPointCustomAttributeValue",
        "source": "dbo.BusinessPointCustomAttributeValue",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.BusinessPointCustomAttributeValue",
        "columns": [
          {
            "name": "ID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointListingID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "BusinessPointListingID is a required FK that associates each custom attribute value with a specific business point listing. Because it is NOT NULL, absence of a value cannot be used to indicate an inactive or unlinked record. To find 'active' custom attribute values you must consult the related BusinessPointListing (or its status column); join or use an EXISTS check against the BusinessPointListing table and filter on that table's active/status column (for example b.IsActive = 1 or b.ListingStatus = 'Active')."
          },
          {
            "name": "AttributeID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "AttributeID"
          },
          {
            "name": "Value",
            "type": "NVARCHAR(1024) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Value"
          },
          {
            "name": "DraftValue",
            "type": "NVARCHAR(1024) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DraftValue"
          },
          {
            "name": "IsDraftInit",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsDraftInit is a non\u2011nullable BIT flag that marks whether a BusinessPointCustomAttributeValue was initialized as a draft. Because the column is NOT NULL you will only encounter 0 or 1. By convention 1 indicates a draft-initialized record (usually not treated as active/production), and 0 indicates a non-draft record (usually the active/usable state). Use IsDraftInit = 0 to filter for active records, but confirm this interpretation with business rules if available."
          }
        ]
      },
      {
        "name": "CaseAttachment",
        "source": "dbo.CaseAttachment",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.CaseAttachment",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "CaseID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CaseID"
          },
          {
            "name": "TaskID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TaskID"
          },
          {
            "name": "AttachmentType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "AttachmentType"
          },
          {
            "name": "FileName",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "FileName"
          },
          {
            "name": "DisplayName",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "DisplayName is a descriptive, non-null text column (NVARCHAR(256)) used to present the attachment name. It does not encode record state (active/inactive). Therefore you should not rely on it as a status indicator. To select \"active\" records you should not filter by this column; use no condition (or a table-level active/status column if available). If you must test this column for presence, note that it cannot be NULL but it could be an empty string \u2014 to treat non-empty names as present use: RTRIM(LTRIM(DisplayName)) <> ''."
          },
          {
            "name": "ProtocolNumber",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProtocolNumber"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "DeletionComment",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DeletionComment"
          },
          {
            "name": "IsDeleted",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsDeleted is a NOT NULL BIT flag used to mark soft-deleted attachments. A value of 0 means the row is active (not deleted); 1 means the row is marked deleted. Since the column is non-nullable, NULL is not expected; if NULLs occur, decide on a definitive handling strategy (e.g., treat NULL as 0). To select active records use WHERE IsDeleted = 0. If you want a defensive check against unexpected NULLs, use WHERE ISNULL(IsDeleted, 0) = 0."
          },
          {
            "name": "IsLast",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsLast is a boolean flag indicating whether a CaseAttachment is the final/current attachment for its case or grouping. Because the column is NOT NULL, rows should always contain either 0 (not last) or 1 (last). To select the active/current attachments, filter where IsLast = 1. Note: if business rules expect a single 'last' per case, multiple IsLast = 1 rows signal data integrity issues; if none exist, the 'last' is missing."
          },
          {
            "name": "Metadata",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Metadata"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "CaseAttachmentTypeID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CaseAttachmentTypeID"
          },
          {
            "name": "DeletedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "DeletedOn is a soft\u2011delete timestamp column. If NULL the record has not been deleted and should be treated as active. If populated it contains the date/time the record was marked deleted and should be treated as inactive; you can filter active rows with 'WHERE DeletedOn IS NULL'. Consider timezone/UTC conventions and any application-specific sentinel values if present when implementing queries or cleanup jobs."
          }
        ]
      },
      {
        "name": "BusinessPointIdentification",
        "source": "dbo.BusinessPointIdentification",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.BusinessPointIdentification",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "Name",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Name"
          },
          {
            "name": "BrandName",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BrandName"
          },
          {
            "name": "TaxCode",
            "type": "NVARCHAR(30) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TaxCode"
          },
          {
            "name": "Profession",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Profession"
          },
          {
            "name": "Phone1",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone1"
          },
          {
            "name": "Phone2",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone2"
          },
          {
            "name": "Phone3",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone3"
          },
          {
            "name": "MobilePhone",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MobilePhone"
          },
          {
            "name": "Fax",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Fax"
          },
          {
            "name": "Email1",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Email1"
          },
          {
            "name": "Email2",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Email2"
          },
          {
            "name": "Address",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Address"
          },
          {
            "name": "City",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "City"
          },
          {
            "name": "PostalCode",
            "type": "NVARCHAR(64) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PostalCode"
          },
          {
            "name": "LegalForm",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LegalForm"
          },
          {
            "name": "TaxOffice",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TaxOffice"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "BillingEmailAddress",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BillingEmailAddress"
          },
          {
            "name": "BillingTelephone",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BillingTelephone"
          },
          {
            "name": "ExtraInformation",
            "type": "NVARCHAR(2048) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraInformation"
          },
          {
            "name": "CustomerURL",
            "type": "NVARCHAR(254) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerURL"
          },
          {
            "name": "Heading",
            "type": "NVARCHAR(1500) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Heading"
          },
          {
            "name": "GeographicalPositionUrl",
            "type": "NVARCHAR(1500) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeographicalPositionUrl"
          },
          {
            "name": "NewBusinessPointCodes",
            "type": "NVARCHAR(1500) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NewBusinessPointCodes"
          },
          {
            "name": "RelatedBPComments",
            "type": "NVARCHAR(1500) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RelatedBPComments"
          },
          {
            "name": "RejectionReasonId",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RejectionReasonId"
          }
        ]
      },
      {
        "name": "DialerBusinessPoint",
        "source": "dbo.DialerBusinessPoint",
        "primary_key": [
          "BusinessPointID"
        ],
        "description": "Entity: dbo.DialerBusinessPoint",
        "columns": [
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "BusinessPointCode",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointCode"
          },
          {
            "name": "CustomerName",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerName"
          },
          {
            "name": "Brandname",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Brandname"
          },
          {
            "name": "Prefecture",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Prefecture"
          },
          {
            "name": "Municipality",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Municipality"
          },
          {
            "name": "City",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "City"
          },
          {
            "name": "StreetName",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "StreetName"
          },
          {
            "name": "StreetNumber",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "StreetNumber"
          },
          {
            "name": "NumberExtension",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NumberExtension"
          },
          {
            "name": "ZipCode",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ZipCode"
          },
          {
            "name": "Phone",
            "type": "NVARCHAR(200) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone"
          },
          {
            "name": "CustomerProfession",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerProfession"
          },
          {
            "name": "MainHeadingName",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MainHeadingName"
          },
          {
            "name": "ExpirationDateInternet",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExpirationDateInternet"
          },
          {
            "name": "SubscriptionValue",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SubscriptionValue"
          },
          {
            "name": "SubscriptionSignDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SubscriptionSignDate"
          },
          {
            "name": "Y01ADTotalPreprintedValue",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Y01ADTotalPreprintedValue"
          },
          {
            "name": "LossPrintedNew",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LossPrintedNew"
          },
          {
            "name": "SubchannelID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SubchannelID"
          },
          {
            "name": "HandlerName",
            "type": "NVARCHAR(201) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "HandlerName"
          },
          {
            "name": "LastSignedDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastSignedDate"
          },
          {
            "name": "LastPrintSalesMan01",
            "type": "NVARCHAR(201) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastPrintSalesMan01"
          },
          {
            "name": "LastInternetSalesMan01",
            "type": "NVARCHAR(201) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastInternetSalesMan01"
          },
          {
            "name": "Y01PSalesrepFullName",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Y01PSalesrepFullName"
          },
          {
            "name": "ReliabilityStatus",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Treat NULL as unknown/unset and exclude from confidently classified states unless you have rules to infer them. Use 'GREEN' to represent clearly active/healthy records. If your business considers broader operational states active, use an alternative such as: ReliabilityStatus IS NOT NULL AND ReliabilityStatus <> 'RED' (to include YELLOW/ORANGE/PURPLE as operational but exclude critical). Confirm the exact meanings of 'PURPLE' and any other non-standard color with the domain owners before broadening the active definition."
          },
          {
            "name": "Phone1",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone1"
          },
          {
            "name": "Phone2",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone2"
          },
          {
            "name": "Phone3",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone3"
          },
          {
            "name": "Phone4",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone4"
          },
          {
            "name": "Phone5",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone5"
          },
          {
            "name": "ProcessID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProcessID"
          },
          {
            "name": "PhoneM11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PhoneM11"
          },
          {
            "name": "Phone1M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone1M11"
          },
          {
            "name": "Phone2M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone2M11"
          },
          {
            "name": "Phone3M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone3M11"
          },
          {
            "name": "Phone4M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone4M11"
          },
          {
            "name": "Phone5M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone5M11"
          },
          {
            "name": "Score",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Score"
          }
        ]
      },
      {
        "name": "BusinessPointListing",
        "source": "dbo.BusinessPointListing",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.BusinessPointListing",
        "columns": [
          {
            "name": "ID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "ClassifierNodeID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ClassifierNodeID"
          },
          {
            "name": "HeadingCode",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "HeadingCode"
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedByID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedByID"
          },
          {
            "name": "CreatedOnLogGroupID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedOnLogGroupID"
          },
          {
            "name": "ModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedOn"
          },
          {
            "name": "ModifiedByID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedByID"
          }
        ]
      },
      {
        "name": "FreeListingSearchItem",
        "source": "dbo.FreeListingSearchItem",
        "primary_key": [],
        "description": "Entity: dbo.FreeListingSearchItem",
        "columns": [
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "BusinessPointCode",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointCode"
          },
          {
            "name": "BrandName",
            "type": "NVARCHAR(250) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BrandName"
          },
          {
            "name": "BusinessPointName",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointName"
          },
          {
            "name": "LocationAddressID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "LocationAddressID"
          },
          {
            "name": "MainActivityID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "MainActivityID"
          },
          {
            "name": "MainActivityName",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "MainActivityName"
          },
          {
            "name": "City",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "City"
          },
          {
            "name": "PrefectureName",
            "type": "NVARCHAR(300) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PrefectureName"
          },
          {
            "name": "AreaName",
            "type": "NVARCHAR(300) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AreaName"
          },
          {
            "name": "Address",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Address"
          },
          {
            "name": "CompanyPhone",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CompanyPhone"
          },
          {
            "name": "CustomerSourceID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerSourceID"
          },
          {
            "name": "CustomerUpdateID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerUpdateID"
          },
          {
            "name": "BusinessPointSource",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointSource"
          },
          {
            "name": "SolvencyID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SolvencyID"
          },
          {
            "name": "SolvencyDescription",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SolvencyDescription"
          },
          {
            "name": "LastSignedDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastSignedDate"
          },
          {
            "name": "HasInternetMasterHeading",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "HasInternetMasterHeading is a nullable boolean flag. NULL means the state is not recorded or is unknown. When populated, 1 signifies presence of an Internet Master Heading and 0 signifies its absence. To select 'active' records (those that have the heading) filter for HasInternetMasterHeading = 1; if you want to defensively treat NULL as false, use ISNULL(HasInternetMasterHeading,0) = 1 (or COALESCE(HasInternetMasterHeading,0) = 1)."
          },
          {
            "name": "IsRegular",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "IsRegular is a nullable boolean flag indicating whether the FreeListingSearchItem is a 'regular' listing. NULL indicates the flag was not set (unknown); 1 means explicitly regular; 0 means explicitly not regular. To return only items considered regular, filter where IsRegular = 1 (or use ISNULL(IsRegular, 0) = 1 to treat NULL as false)."
          },
          {
            "name": "IsProspect",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "IsProspect is a nullable boolean tri-state: NULL = unknown/not recorded, 1 = is a prospect, 0 = not a prospect. To select records that are explicitly marked as prospects use the condition IsProspect = 1. If you prefer to treat NULL as false use WHERE ISNULL(IsProspect, 0) = 1; if you need to treat NULL as active, include OR IsProspect IS NULL."
          }
        ]
      },
      {
        "name": "PointEmail",
        "source": "dbo.PointEmail",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.PointEmail",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "Email",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Email"
          },
          {
            "name": "Usage",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Usage"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ]
      },
      {
        "name": "Contact",
        "source": "dbo.Contact",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.Contact",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "ContactAddressID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContactAddressID"
          },
          {
            "name": "Firstname",
            "type": "NVARCHAR(100) COLLATE \"SQL_Latin1_General_CP1_CI_AI\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Firstname"
          },
          {
            "name": "Lastname",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Lastname"
          },
          {
            "name": "Url",
            "type": "NVARCHAR(254) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Url"
          },
          {
            "name": "Comments",
            "type": "NVARCHAR(254) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Comments"
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "ModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedOn"
          },
          {
            "name": "ModifiedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedBy"
          },
          {
            "name": "Title",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Title"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ]
      },
      {
        "name": "ContactRelationship",
        "source": "dbo.ContactRelationship",
        "primary_key": [
          "ID"
        ],
        "description": "Entity: dbo.ContactRelationship",
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "ContactID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ContactID"
          },
          {
            "name": "ContactRelationshipTypeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContactRelationshipTypeID"
          },
          {
            "name": "IsActive",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsActive is a non-nullable boolean flag that marks whether a ContactRelationship is considered active. In normal data, 1 = active (include these records), 0 = inactive (exclude these records). Because the column is NOT NULL, NULL does not represent a legitimate state; its presence would suggest corrupted or nonconforming data. Use WHERE IsActive = 1 to retrieve active records."
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "ModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedOn"
          },
          {
            "name": "ModifiedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedBy"
          },
          {
            "name": "IsContactPerson",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "IsContactPerson is a nullable boolean status flag. NULL = unknown / not set. 1 = positive/active (is a contact person). 0 = negative/inactive (not a contact person). To select active records use IsContactPerson = 1. If you need to treat NULL as false explicitly, use COALESCE(IsContactPerson, 0) = 1 or add IS NOT NULL (IsContactPerson IS NOT NULL AND IsContactPerson = 1)."
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ]
      },
      {
        "name": "DialerBusinessPoint_20240704_31672",
        "source": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31672",
        "primary_key": [],
        "description": "Entity: HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31672",
        "columns": [
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "BusinessPointCode",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointCode"
          },
          {
            "name": "CustomerName",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerName"
          },
          {
            "name": "Brandname",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Brandname"
          },
          {
            "name": "Prefecture",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Prefecture"
          },
          {
            "name": "Municipality",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Municipality"
          },
          {
            "name": "City",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "City"
          },
          {
            "name": "StreetName",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "StreetName"
          },
          {
            "name": "StreetNumber",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "StreetNumber"
          },
          {
            "name": "NumberExtension",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NumberExtension"
          },
          {
            "name": "ZipCode",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ZipCode"
          },
          {
            "name": "Phone",
            "type": "NVARCHAR(200) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone"
          },
          {
            "name": "CustomerProfession",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerProfession"
          },
          {
            "name": "MainHeadingName",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MainHeadingName"
          },
          {
            "name": "ExpirationDateInternet",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExpirationDateInternet"
          },
          {
            "name": "SubscriptionValue",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SubscriptionValue"
          },
          {
            "name": "SubscriptionSignDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SubscriptionSignDate"
          },
          {
            "name": "Y01ADTotalPreprintedValue",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Y01ADTotalPreprintedValue"
          },
          {
            "name": "LossPrintedNew",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LossPrintedNew"
          },
          {
            "name": "SubchannelID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SubchannelID"
          },
          {
            "name": "HandlerName",
            "type": "NVARCHAR(201) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "HandlerName"
          },
          {
            "name": "LastSignedDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastSignedDate"
          },
          {
            "name": "LastPrintSalesMan01",
            "type": "NVARCHAR(201) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastPrintSalesMan01"
          },
          {
            "name": "LastInternetSalesMan01",
            "type": "NVARCHAR(201) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastInternetSalesMan01"
          },
          {
            "name": "Y01PSalesrepFullName",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Y01PSalesrepFullName"
          },
          {
            "name": "ReliabilityStatus",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "ReliabilityStatus is a discretionary text flag: NULL indicates no assessment was provided (unknown/missing). Any non\u2011NULL entry is an explicit assessment; some values (like 'Not available') explicitly state that reliability data is not present. To treat a record as 'active' with respect to reliability, filter for rows that have a non\u2011NULL, non\u2011negative status value. Because the exact set of negative/unusable tokens may vary, use a normalized comparison (trim and lower) and exclude known negative tokens (example shown). For full correctness, enumerate the actual allowed positive status values from the data source and prefer whitelisting those (e.g., WHERE LTRIM(RTRIM(LOWER(ReliabilityStatus))) IN ('reliable','validated') ) rather than relying only on a blacklist."
          },
          {
            "name": "Phone1",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone1"
          },
          {
            "name": "Phone2",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone2"
          },
          {
            "name": "Phone3",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone3"
          },
          {
            "name": "Phone4",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone4"
          },
          {
            "name": "Phone5",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone5"
          },
          {
            "name": "ProcessID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProcessID"
          },
          {
            "name": "PhoneM11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PhoneM11"
          },
          {
            "name": "Phone1M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone1M11"
          },
          {
            "name": "Phone2M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone2M11"
          },
          {
            "name": "Phone3M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone3M11"
          },
          {
            "name": "Phone4M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone4M11"
          },
          {
            "name": "Phone5M11",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Phone5M11"
          },
          {
            "name": "Score",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Score"
          }
        ]
      }
    ],
    "dimensions": [
      {
        "name": "TaxCode",
        "source": "dbo.TaxCode",
        "keys": [
          "ID"
        ],
        "attributes": [
          "ID",
          "CountryID",
          "TaxCode",
          "DMKey",
          "DMTable",
          "DMCharKey"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "CountryID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CountryID"
          },
          {
            "name": "TaxCode",
            "type": "NVARCHAR(30) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TaxCode"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ]
      },
      {
        "name": "DEV12867ClassificationBackup",
        "source": "HEADQUARTERS\\cstraitchof.DEV12867ClassificationBackup",
        "keys": [],
        "attributes": [
          "ID",
          "BusinessPointID",
          "ClassifierID",
          "ClassifierNodeID",
          "DMKey",
          "DMTable",
          "DMCharKey",
          "BpCode"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "ClassifierID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ClassifierID"
          },
          {
            "name": "ClassifierNodeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ClassifierNodeID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "BpCode",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BpCode"
          }
        ]
      },
      {
        "name": "devops11385_InvoicePaymentMethod_NULL_PaymentMonth",
        "source": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth",
        "keys": [],
        "attributes": [
          "ID",
          "PaymentMethodTypeID",
          "Installments",
          "Interval",
          "IsExchangeSale",
          "PaymentPhoneAccount",
          "PaymentPhoneID",
          "PaymentCreditTransactionCode",
          "BillingEmailID",
          "NumberOfInvoices",
          "UserSpecifiedPaymentMonth",
          "BankID",
          "CheckEndDate",
          "CheckPublisherIsSame",
          "CheckPublisher",
          "CheckPublisherTaxCode",
          "CheckNumber",
          "CreditCardTypeID",
          "CreditCardNumber",
          "CreditCardEndDate",
          "CreditCardOwner",
          "CreditCardInstallments",
          "BlockSeries",
          "BlockReceiptNumber",
          "DMKey",
          "DMTable",
          "DMCharKey",
          "SystemReceiptNumber",
          "SalesCollectionID",
          "PaymentMonth",
          "CheckPublishDate",
          "BankDepositNumber",
          "BankDepositDate",
          "CollectionDate",
          "AdvancedPolicyAmount",
          "InvoicePolicyID",
          "PreInvoice"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "PaymentMethodTypeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PaymentMethodTypeID"
          },
          {
            "name": "Installments",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Installments"
          },
          {
            "name": "Interval",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Interval"
          },
          {
            "name": "IsExchangeSale",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsExchangeSale is a non-nullable boolean status flag indicating whether the invoice/payment method is an exchange sale. Because the column is NOT NULL, absence of a value is an error condition. Interpret populated values as 1 = exchange sale (active for this status) and 0 = not an exchange sale. To retrieve exchange-sale records use WHERE IsExchangeSale = 1; to retrieve non-exchange use WHERE IsExchangeSale = 0. If sample values are unavailable, validate this interpretation against business rules or lookups (SELECT DISTINCT IsExchangeSale) to confirm actual stored values."
          },
          {
            "name": "PaymentPhoneAccount",
            "type": "NVARCHAR(64) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentPhoneAccount"
          },
          {
            "name": "PaymentPhoneID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentPhoneID"
          },
          {
            "name": "PaymentCreditTransactionCode",
            "type": "VARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentCreditTransactionCode"
          },
          {
            "name": "BillingEmailID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BillingEmailID"
          },
          {
            "name": "NumberOfInvoices",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NumberOfInvoices"
          },
          {
            "name": "UserSpecifiedPaymentMonth",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UserSpecifiedPaymentMonth"
          },
          {
            "name": "BankID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BankID"
          },
          {
            "name": "CheckEndDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CheckEndDate"
          },
          {
            "name": "CheckPublisherIsSame",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "CheckPublisherIsSame is a nullable boolean flag indicating whether the publisher was verified as being the same. NULL = no decision/unknown/not checked. A stored 1 means confirmed 'same'; 0 means 'not same'. To select records where the flag is actively true, filter for value = 1; using ISNULL(CheckPublisherIsSame, 0) = 1 treats NULL as false and safely returns only confirmed-true rows."
          },
          {
            "name": "CheckPublisher",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Treat CheckPublisher as a flag that is NULL until a check/publish event is recorded. When populated it signals the record was checked/published and gives the publisher identifier. Beware of empty strings or sentinel text ('N/A', 'UNKNOWN', 'None', etc.); include a trim and exclusion of common sentinel values if your dataset uses them. Example safe filter for 'active' records: WHERE CheckPublisher IS NOT NULL AND LTRIM(RTRIM(CheckPublisher)) <> '' (and optionally AND CheckPublisher NOT IN ('N/A','UNKNOWN','None')). The Greek_CI_AS collation is case-insensitive, so you do not need additional case handling for textual sentinel comparisons."
          },
          {
            "name": "CheckPublisherTaxCode",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This NVARCHAR(20) nullable column functions as a status/value indicator: NULL means no data or no check performed (unknown/missing/not applicable). A populated value means the row has a recorded outcome or tax identifier; the payload could be the tax code itself or a status token. To treat \"active\" as \"has been processed / has a recorded value\", filter for non-NULL, non-empty strings using the provided condition. If your system uses explicit positive/negative tokens (e.g. 'Y'/'N', 'VALID'/'INVALID'), refine the filter to match the positive token(s) (for example: CheckPublisherTaxCode = 'Y' OR CheckPublisherTaxCode = 'VALID'). Verify actual stored values before finalizing any rules."
          },
          {
            "name": "CheckNumber",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CheckNumber"
          },
          {
            "name": "CreditCardTypeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreditCardTypeID"
          },
          {
            "name": "CreditCardNumber",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreditCardNumber"
          },
          {
            "name": "CreditCardEndDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreditCardEndDate"
          },
          {
            "name": "CreditCardOwner",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreditCardOwner"
          },
          {
            "name": "CreditCardInstallments",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreditCardInstallments"
          },
          {
            "name": "BlockSeries",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BlockSeries"
          },
          {
            "name": "BlockReceiptNumber",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BlockReceiptNumber"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "SystemReceiptNumber",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SystemReceiptNumber"
          },
          {
            "name": "SalesCollectionID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SalesCollectionID"
          },
          {
            "name": "PaymentMonth",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentMonth"
          },
          {
            "name": "CheckPublishDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This DATETIME column is acting as a completion/publish flag: NULL denotes that publishing has not yet occurred (the record is still pending or active for work), while a populated datetime marks the moment the check was published (completed). To select records that are still active/pending use the NULL check (CheckPublishDate IS NULL). If you instead need records that have been published/closed, filter with CheckPublishDate IS NOT NULL."
          },
          {
            "name": "BankDepositNumber",
            "type": "NVARCHAR(128) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BankDepositNumber"
          },
          {
            "name": "BankDepositDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BankDepositDate"
          },
          {
            "name": "CollectionDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CollectionDate"
          },
          {
            "name": "AdvancedPolicyAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AdvancedPolicyAmount"
          },
          {
            "name": "InvoicePolicyID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "InvoicePolicyID"
          },
          {
            "name": "PreInvoice",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PreInvoice"
          }
        ]
      },
      {
        "name": "ViewPrefectureBPs",
        "source": "HEADQUARTERS\\spitsaris.ViewPrefectureBPs",
        "keys": [],
        "attributes": [
          "ActiveFlag",
          "AreaID",
          "AreaName",
          "BPcount"
        ],
        "columns": [
          {
            "name": "ActiveFlag",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "ActiveFlag is a required boolean status indicator for the record. Because the column is non\u2011nullable, every row must explicitly indicate active (1) or inactive (0). To retrieve active records, filter for ActiveFlag = 1. To retrieve inactive records, filter for ActiveFlag = 0. If you need to handle legacy or unexpected values, validate data quality or check for constraints/defaults in the schema."
          },
          {
            "name": "AreaID",
            "type": "VARCHAR(5) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "AreaID"
          },
          {
            "name": "AreaName",
            "type": "NVARCHAR(300) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AreaName"
          },
          {
            "name": "BPcount",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BPcount"
          }
        ]
      },
      {
        "name": "AttributeMapping",
        "source": "MigrationSteps.AttributeMapping",
        "keys": [],
        "attributes": [
          "ActivityID",
          "OldAttributeID",
          "NewAttributeID"
        ],
        "columns": [
          {
            "name": "ActivityID",
            "type": "SMALLINT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ActivityID"
          },
          {
            "name": "OldAttributeID",
            "type": "SMALLINT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "OldAttributeID"
          },
          {
            "name": "NewAttributeID",
            "type": "SMALLINT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NewAttributeID"
          }
        ]
      },
      {
        "name": "ReplaceKeywords",
        "source": "MigrationSteps.ReplaceKeywords",
        "keys": [],
        "attributes": [
          "KeywordID",
          "ReplaceWithKeywordID"
        ],
        "columns": [
          {
            "name": "KeywordID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "KeywordID"
          },
          {
            "name": "ReplaceWithKeywordID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ReplaceWithKeywordID"
          }
        ]
      },
      {
        "name": "Step2",
        "source": "MigrationSteps.Step2",
        "keys": [],
        "attributes": [
          "Activity_ID",
          "NameGr",
          "NameEn"
        ],
        "columns": [
          {
            "name": "Activity_ID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Activity_ID"
          },
          {
            "name": "NameGr",
            "type": "NVARCHAR(500) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NameGr"
          },
          {
            "name": "NameEn",
            "type": "NVARCHAR(500) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NameEn"
          }
        ]
      },
      {
        "name": "MergeMapping",
        "source": "MigrationSteps.MergeMapping",
        "keys": [],
        "attributes": [
          "SourceID",
          "TargetID"
        ],
        "columns": [
          {
            "name": "SourceID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "SourceID"
          },
          {
            "name": "TargetID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TargetID"
          }
        ]
      },
      {
        "name": "ReplaceAV",
        "source": "MigrationSteps.ReplaceAV",
        "keys": [],
        "attributes": [
          "Initial_OldAttributeValueId",
          "ReplaceWithAttributeValueId"
        ],
        "columns": [
          {
            "name": "Initial_OldAttributeValueId",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Initial_OldAttributeValueId"
          },
          {
            "name": "ReplaceWithAttributeValueId",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ReplaceWithAttributeValueId"
          }
        ]
      }
    ],
    "facts": [
      {
        "name": "ContentAttributeValue",
        "source": "dbo.ContentAttributeValue",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "ContractProductID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ContractProductID"
          },
          {
            "name": "ContentAttributeDefinitionID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ContentAttributeDefinitionID"
          },
          {
            "name": "ProductPartID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductPartID"
          },
          {
            "name": "Value",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Value"
          },
          {
            "name": "SeqNo",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "SeqNo"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "AdvertisementID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "AdvertisementID is being used as a status/association flag: NULL = no advertisement link; non-NULL = linked to an Advertisement record. To identify rows that are 'advertised' use AdvertisementID IS NOT NULL. If you need to ensure the referenced advertisement is itself active, join or test the Advertisement table (for example: AdvertisementID IS NOT NULL AND EXISTS (SELECT 1 FROM dbo.Advertisement a WHERE a.AdvertisementID = dbo.ContentAttributeValue.AdvertisementID AND a.IsActive = 1 /* or a.IsDeleted = 0 / a.Status = 'Active' depending on schema */)). Verify referential integrity and the Advertisement table's lifecycle flags before treating non-NULL as fully 'active'."
          },
          {
            "name": "QA",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "QA"
          },
          {
            "name": "HeaderLabel",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "HeaderLabel"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "TotalSeqNo",
            "expression": "SUM(SeqNo)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageSeqNo",
            "expression": "AVG(SeqNo)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "MinSeqNo",
            "expression": "MIN(SeqNo)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxSeqNo",
            "expression": "MAX(SeqNo)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "CountSeqNo",
            "expression": "COUNT(SeqNo)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(DMKey)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "ContractProductID",
            "references": "dbo"
          },
          {
            "column": "AdvertisementID",
            "references": "dbo"
          },
          {
            "column": "ContentAttributeDefinitionID",
            "references": "dbo"
          },
          {
            "column": "ProductPartID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "FreeTemplateAttributeValue",
        "source": "dbo.FreeTemplateAttributeValue",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "FreeTemplateID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "FreeTemplateID"
          },
          {
            "name": "ContentAttributeDefinitionID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ContentAttributeDefinitionID"
          },
          {
            "name": "ProductPartID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductPartID"
          },
          {
            "name": "Value",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Value"
          },
          {
            "name": "SeqNo",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "SeqNo"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "FreeTemplateAdvertisementID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "FreeTemplateAdvertisementID is a nullable foreign-key-style status indicator. NULL means 'no association/unassigned'; any non-NULL value denotes an association to a FreeTemplateAdvertisement record. To treat 'active' as records that are assigned, filter with IS NOT NULL. If your system uses a sentinel (e.g. 0) treat that as non-active as well: WHERE FreeTemplateAdvertisementID IS NOT NULL AND FreeTemplateAdvertisementID <> 0. To be stricter, join to the referenced FreeTemplateAdvertisement table and check that the referenced row itself is not deleted/inactive (for example, INNER JOIN dbo.FreeTemplateAdvertisement fta ON fta.ID = FreeTemplateAdvertisementID AND fta.IsActive = 1)."
          },
          {
            "name": "QA",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "QA"
          },
          {
            "name": "HeaderLabel",
            "type": "NVARCHAR(256) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "HeaderLabel"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "SumSeqNo",
            "expression": "SUM(SeqNo)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageSeqNo",
            "expression": "AVG(SeqNo)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "MinSeqNo",
            "expression": "MIN(SeqNo)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxSeqNo",
            "expression": "MAX(SeqNo)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SeqNo"
            ],
            "filters_applied": []
          },
          {
            "name": "SumDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(DMKey)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "FreeTemplateID",
            "references": "dbo"
          },
          {
            "column": "FreeTemplateAdvertisementID",
            "references": "dbo"
          },
          {
            "column": "ContentAttributeDefinitionID",
            "references": "dbo"
          },
          {
            "column": "ProductPartID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "TaskLog",
        "source": "dbo.TaskLog",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "TaskID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TaskID"
          },
          {
            "name": "Timestamp",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Timestamp"
          },
          {
            "name": "Outcome",
            "type": "NVARCHAR(512) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Outcome"
          },
          {
            "name": "Text",
            "type": "NVARCHAR(4000) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Text"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "OutcomeDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OutcomeDate"
          }
        ],
        "measures": [
          {
            "name": "TaskLogCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(DMKey)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "TaskID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "TaskAssignment",
        "source": "dbo.TaskAssignment",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "TaskID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TaskID"
          },
          {
            "name": "RoleID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RoleID"
          },
          {
            "name": "AssignmentType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "AssignmentType"
          },
          {
            "name": "UserID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "UserID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ],
        "measures": [
          {
            "name": "AssignmentCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctAssignmentTypeCount",
            "expression": "COUNT(DISTINCT AssignmentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AssignmentType"
            ],
            "filters_applied": []
          },
          {
            "name": "AssignmentTypeSum",
            "expression": "SUM(AssignmentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AssignmentType"
            ],
            "filters_applied": []
          },
          {
            "name": "AssignmentTypeAverage",
            "expression": "AVG(AssignmentType)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "AssignmentType"
            ],
            "filters_applied": []
          },
          {
            "name": "AssignmentTypeMin",
            "expression": "MIN(AssignmentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AssignmentType"
            ],
            "filters_applied": []
          },
          {
            "name": "AssignmentTypeMax",
            "expression": "MAX(AssignmentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AssignmentType"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKeyMin",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKeyMax",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "RoleID",
            "references": "dbo"
          },
          {
            "column": "TaskID",
            "references": "dbo"
          },
          {
            "column": "UserID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "TimeLogger",
        "source": "dbo.TimeLogger",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "BIGINT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "EventGroup",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "EventGroup"
          },
          {
            "name": "EventDate",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "EventDate"
          },
          {
            "name": "Descr",
            "type": "NVARCHAR(255) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Descr"
          },
          {
            "name": "RowCountVal",
            "type": "BIGINT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RowCountVal"
          },
          {
            "name": "DataSize",
            "type": "BIGINT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DataSize"
          },
          {
            "name": "LogSize",
            "type": "BIGINT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LogSize"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(ID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctIDCount",
            "expression": "COUNT(DISTINCT ID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinID",
            "expression": "MIN(ID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxID",
            "expression": "MAX(ID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalRowCount",
            "expression": "SUM(RowCountVal)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RowCountVal"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageRowCount",
            "expression": "AVG(RowCountVal)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "RowCountVal"
            ],
            "filters_applied": []
          },
          {
            "name": "MinRowCount",
            "expression": "MIN(RowCountVal)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RowCountVal"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxRowCount",
            "expression": "MAX(RowCountVal)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RowCountVal"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDataSize",
            "expression": "SUM(DataSize)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DataSize"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDataSize",
            "expression": "AVG(DataSize)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "DataSize"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDataSize",
            "expression": "MIN(DataSize)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DataSize"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDataSize",
            "expression": "MAX(DataSize)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DataSize"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalLogSize",
            "expression": "SUM(LogSize)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "LogSize"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageLogSize",
            "expression": "AVG(LogSize)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "LogSize"
            ],
            "filters_applied": []
          },
          {
            "name": "MinLogSize",
            "expression": "MIN(LogSize)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "LogSize"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxLogSize",
            "expression": "MAX(LogSize)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "LogSize"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDataSizePerRow",
            "expression": "CASE WHEN SUM(RowCountVal)=0 THEN NULL ELSE 1.0*SUM(DataSize)/SUM(RowCountVal) END",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "DataSize",
              "RowCountVal"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": []
      },
      {
        "name": "TargetGroupItem",
        "source": "dbo.TargetGroupItem",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "CampaignID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CampaignID"
          },
          {
            "name": "SourceCampaignID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SourceCampaignID"
          },
          {
            "name": "CaseID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CaseID"
          },
          {
            "name": "CustomerName",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerName"
          },
          {
            "name": "Brandname",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Brandname"
          },
          {
            "name": "Prefecture",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Prefecture"
          },
          {
            "name": "Municipality",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Municipality"
          },
          {
            "name": "City",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "City"
          },
          {
            "name": "StreetName",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "StreetName"
          },
          {
            "name": "StreetNumber",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "StreetNumber"
          },
          {
            "name": "NumberExtension",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NumberExtension"
          },
          {
            "name": "ZipCode",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ZipCode"
          },
          {
            "name": "Phone",
            "type": "NVARCHAR(200) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Phone"
          },
          {
            "name": "CustomerProfession",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CustomerProfession"
          },
          {
            "name": "ReliabilityStatus",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This NVARCHAR column holds a categorical reliability status using color labels. NULL means the status hasn't been provided or calculated. Non-NULL values are the assigned reliability categories; their exact business meanings (especially PURPLE) should be confirmed with stakeholders. Common alternative filters you might use depending on intent: to get only assessed records use ReliabilityStatus IS NOT NULL (shown above); to get only healthy/operational records use ReliabilityStatus = 'GREEN'; to get records that are not in a failed state exclude RED with ReliabilityStatus <> 'RED' AND ReliabilityStatus IS NOT NULL."
          },
          {
            "name": "MainHeadingID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MainHeadingID"
          },
          {
            "name": "MainHeadingCode",
            "type": "NVARCHAR(10) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MainHeadingCode"
          },
          {
            "name": "MainHeadingName",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MainHeadingName"
          },
          {
            "name": "Code",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Code"
          },
          {
            "name": "ProcessID",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProcessID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "PaymentRefusal",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentRefusal"
          },
          {
            "name": "Disappeared",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Disappeared is a nullable BIT that marks whether a TargetGroupItem has been removed/ceased to exist. A stored 1 should be interpreted as disappeared (inactive), and 0 as not disappeared (active). NULL typically means the flag wasn't set or the state is unknown; you should confirm with the data owner whether NULL means 'unknown' or implicitly 'not disappeared'. If you want to treat unknowns as active, filter with ISNULL(Disappeared, 0) = 0 (or WHERE Disappeared = 0 OR Disappeared IS NULL). If NULL should be excluded until clarified, use WHERE Disappeared = 0."
          },
          {
            "name": "PrecariousnessLegal",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PrecariousnessLegal"
          },
          {
            "name": "ContinuousPaymentRefusal",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContinuousPaymentRefusal"
          },
          {
            "name": "SealedCheck",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SealedCheck"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "MainHeadingID_Count",
            "expression": "COUNT(MainHeadingID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MainHeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKey_Count",
            "expression": "COUNT(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctMainHeadingCount",
            "expression": "COUNT(DISTINCT MainHeadingID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MainHeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "SumMainHeadingID",
            "expression": "SUM(MainHeadingID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MainHeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageMainHeadingID",
            "expression": "AVG(MainHeadingID)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "MainHeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinMainHeadingID",
            "expression": "MIN(MainHeadingID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MainHeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxMainHeadingID",
            "expression": "MAX(MainHeadingID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MainHeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "SumDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(DMKey)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "CampaignID",
            "references": "dbo"
          },
          {
            "column": "SourceCampaignID",
            "references": "dbo"
          },
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "CaseID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "PricelistItemDetail",
        "source": "dbo.PricelistItemDetail",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "PricelistItemID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "PricelistItemID is an identifying foreign/key column, not a status indicator. It cannot be NULL (per schema). A populated value simply points to the related PricelistItem record. To determine whether a detail row is 'active' you must consult the status column on the referenced PricelistItem (or another dedicated status column), not this ID column."
          },
          {
            "name": "ProductID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductID"
          },
          {
            "name": "ProductPartID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProductPartID"
          },
          {
            "name": "KitID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "KitID"
          },
          {
            "name": "MeasurementType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "MeasurementType"
          },
          {
            "name": "UnitAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UnitAmount"
          },
          {
            "name": "ComplexPrice",
            "type": "NVARCHAR(1024) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ComplexPrice"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "AllowableQuantities",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AllowableQuantities"
          },
          {
            "name": "AmountsPerAllowableQuantities",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AmountsPerAllowableQuantities"
          }
        ],
        "measures": [
          {
            "name": "TotalUnitAmount",
            "expression": "SUM(UnitAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "UnitAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageUnitAmount",
            "expression": "AVG(UnitAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "UnitAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MinimumUnitAmount",
            "expression": "MIN(UnitAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "UnitAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MaximumUnitAmount",
            "expression": "MAX(UnitAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "UnitAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "RecordCount",
            "expression": "COUNT(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctRecordCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MeasurementTypeCount",
            "expression": "COUNT(MeasurementType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MeasurementType"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctMeasurementTypeCount",
            "expression": "COUNT(DISTINCT MeasurementType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MeasurementType"
            ],
            "filters_applied": []
          },
          {
            "name": "MinimumMeasurementType",
            "expression": "MIN(MeasurementType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MeasurementType"
            ],
            "filters_applied": []
          },
          {
            "name": "MaximumMeasurementType",
            "expression": "MAX(MeasurementType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "MeasurementType"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "PricelistItemID",
            "references": "dbo"
          },
          {
            "column": "ProductID",
            "references": "dbo"
          },
          {
            "column": "KitID",
            "references": "dbo"
          },
          {
            "column": "MeasurementType",
            "references": "dbo"
          },
          {
            "column": "ProductPartID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "AuditLog",
        "source": "dbo.AuditLog",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "UserID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UserID"
          },
          {
            "name": "EntityID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "EntityID"
          },
          {
            "name": "EntityType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "EntityType"
          },
          {
            "name": "Timestamp",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Timestamp"
          },
          {
            "name": "LogInfo",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "LogInfo"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctEntityCount",
            "expression": "COUNT(DISTINCT EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "NonNullEntityCount",
            "expression": "COUNT(EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "SumEntityID",
            "expression": "SUM(EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageEntityID",
            "expression": "AVG(EntityID)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinEntityID",
            "expression": "MIN(EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxEntityID",
            "expression": "MAX(EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctEntityTypeCount",
            "expression": "COUNT(DISTINCT EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "NonNullEntityTypeCount",
            "expression": "COUNT(EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "SumEntityType",
            "expression": "SUM(EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageEntityType",
            "expression": "AVG(EntityType)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "MinEntityType",
            "expression": "MIN(EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxEntityType",
            "expression": "MAX(EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "NonNullDMKeyCount",
            "expression": "COUNT(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "SumDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(DMKey)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "UserID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "BusinessPointComment",
        "source": "dbo.BusinessPointComment",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "UserID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UserID"
          },
          {
            "name": "CommentDate",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CommentDate"
          },
          {
            "name": "CommentText",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CommentText"
          },
          {
            "name": "CommentType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CommentType"
          }
        ],
        "measures": [
          {
            "name": "TotalComments",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctUsers",
            "expression": "COUNT(DISTINCT UserID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "UserID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctBusinessPoints",
            "expression": "COUNT(DISTINCT BusinessPointID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageCommentsPerUser",
            "expression": "CAST(COUNT(*) AS FLOAT) / NULLIF(COUNT(DISTINCT UserID), 0)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "UserID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageCommentsPerBusinessPoint",
            "expression": "CAST(COUNT(*) AS FLOAT) / NULLIF(COUNT(DISTINCT BusinessPointID), 0)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinCommentType",
            "expression": "MIN(CommentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxCommentType",
            "expression": "MAX(CommentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageCommentType",
            "expression": "AVG(CAST(CommentType AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "UserID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "DialerTask",
        "source": "dbo.DialerTask",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "SourceTaskID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "SourceTaskID"
          },
          {
            "name": "CurrentTaskID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CurrentTaskID"
          },
          {
            "name": "PendingImport",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PendingImport"
          },
          {
            "name": "PermitCall",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PermitCall"
          },
          {
            "name": "DialerCampaignID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DialerCampaignID"
          },
          {
            "name": "ImportDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ImportDate"
          },
          {
            "name": "RequiresSynchronization",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RequiresSynchronization"
          },
          {
            "name": "LastSynchDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastSynchDate"
          },
          {
            "name": "TargetGroupItemValueID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TargetGroupItemValueID"
          },
          {
            "name": "LastResubmitDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastResubmitDate"
          },
          {
            "name": "LastResumeDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastResumeDate"
          },
          {
            "name": "ExportDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExportDate"
          },
          {
            "name": "BatchID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BatchID"
          },
          {
            "name": "ProcessID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProcessID"
          },
          {
            "name": "CampaignID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CampaignID"
          },
          {
            "name": "RecallDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RecallDate"
          },
          {
            "name": "NotFound",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NotFound"
          },
          {
            "name": "NotFoundDialerDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NotFoundDialerDate"
          },
          {
            "name": "NotFoundImportDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NotFoundImportDate"
          },
          {
            "name": "DialerGroupID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DialerGroupID"
          }
        ],
        "measures": [
          {
            "name": "TaskCount",
            "expression": "COUNT([ID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctTaskIDs",
            "expression": "COUNT(DISTINCT [ID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTaskID",
            "expression": "MIN([ID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTaskID",
            "expression": "MAX([ID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "COUNT(DISTINCT [BusinessPointID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinBusinessPointID",
            "expression": "MIN([BusinessPointID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxBusinessPointID",
            "expression": "MAX([BusinessPointID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctSourceTaskCount",
            "expression": "COUNT(DISTINCT [SourceTaskID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SourceTaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinSourceTaskID",
            "expression": "MIN([SourceTaskID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SourceTaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxSourceTaskID",
            "expression": "MAX([SourceTaskID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SourceTaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctCurrentTaskCount",
            "expression": "COUNT(DISTINCT [CurrentTaskID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CurrentTaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinCurrentTaskID",
            "expression": "MIN([CurrentTaskID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CurrentTaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxCurrentTaskID",
            "expression": "MAX([CurrentTaskID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CurrentTaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDialerCampaignCount",
            "expression": "COUNT(DISTINCT [DialerCampaignID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DialerCampaignID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDialerCampaignID",
            "expression": "MIN([DialerCampaignID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DialerCampaignID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDialerCampaignID",
            "expression": "MAX([DialerCampaignID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DialerCampaignID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctTargetGroupItemValueCount",
            "expression": "COUNT(DISTINCT [TargetGroupItemValueID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TargetGroupItemValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTargetGroupItemValueID",
            "expression": "MIN([TargetGroupItemValueID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TargetGroupItemValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTargetGroupItemValueID",
            "expression": "MAX([TargetGroupItemValueID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TargetGroupItemValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctCampaignCount",
            "expression": "COUNT(DISTINCT [CampaignID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CampaignID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinCampaignID",
            "expression": "MIN([CampaignID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CampaignID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxCampaignID",
            "expression": "MAX([CampaignID])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CampaignID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalNotFound",
            "expression": "SUM([NotFound])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "NotFound"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageNotFoundRate",
            "expression": "AVG(CAST([NotFound] AS FLOAT))",
            "datatype": "decimal",
            "format": "percentage",
            "depends_on": [
              "NotFound"
            ],
            "filters_applied": []
          },
          {
            "name": "MinNotFound",
            "expression": "MIN([NotFound])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "NotFound"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxNotFound",
            "expression": "MAX([NotFound])",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "NotFound"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "CurrentTaskID",
            "references": "dbo"
          },
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "SourceTaskID",
            "references": "dbo"
          },
          {
            "column": "TargetGroupItemValueID",
            "references": "dbo"
          },
          {
            "column": "DialerGroupID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "TargetGroupItemPeriod",
        "source": "dbo.TargetGroupItemPeriod",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "TargetGroupItemValueID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TargetGroupItemValueID"
          },
          {
            "name": "ContractProductID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ContractProductID"
          },
          {
            "name": "Period",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Period"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ],
        "measures": [
          {
            "name": "TotalRecords",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DMKeyNonNullCount",
            "expression": "COUNT(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctTargetGroups",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinPeriod",
            "expression": "MIN(Period)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Period"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxPeriod",
            "expression": "MAX(Period)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Period"
            ],
            "filters_applied": []
          },
          {
            "name": "AveragePeriod",
            "expression": "AVG(Period)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "Period"
            ],
            "filters_applied": []
          },
          {
            "name": "PeriodSpan",
            "expression": "MAX(Period) - MIN(Period)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Period"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(DMKey)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "ContractProductID",
            "references": "dbo"
          },
          {
            "column": "TargetGroupItemValueID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "Advertisement",
        "source": "dbo.Advertisement",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "ContractProductID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ContractProductID"
          },
          {
            "name": "ProductID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductID"
          },
          {
            "name": "VersionSectionID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "VersionSectionID"
          },
          {
            "name": "GeoAreaID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoAreaID"
          },
          {
            "name": "HeadingID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "HeadingID"
          },
          {
            "name": "AdvBeginDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AdvBeginDate"
          },
          {
            "name": "AdvEndDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AdvEndDate"
          },
          {
            "name": "QA",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "QA"
          },
          {
            "name": "CaseAttachmentID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CaseAttachmentID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "Price",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Price"
          },
          {
            "name": "Discount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Discount is a quantitative money field, not a boolean flag. Because it is NOT NULL, absence of a discount is represented by a zero value rather than NULL. To treat 'active' records as those with a discount applied, filter for Discount > 0. If your business rules differ (e.g., negative values mean something special), adjust the condition accordingly."
          },
          {
            "name": "RulesDiscount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "RulesDiscount is a non-null monetary status indicator: it holds the discount amount applied by rules. Because the column is NOT NULL it will always contain a numeric value; 0 indicates no/ inactive discount, >0 indicates an active discount. Use RulesDiscount > 0 to select records with an active discount (or use RulesDiscount <> 0 if you want to treat unexpected negative values as active as well). If NULLs are found in practice, treat them as unknown/inactive and investigate ETL issues."
          },
          {
            "name": "ProductKitID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProductKitID"
          },
          {
            "name": "IsSubscriptionBased",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsSubscriptionBased is a non-nullable boolean flag indicating whether an advertisement is subscription-based. Because the column cannot be NULL, every row must have either 1 (yes) or 0 (no). To select subscription-based ads, filter with IsSubscriptionBased = 1. If NULLs appear in practice, investigate and treat them as data errors or unknowns."
          },
          {
            "name": "IsVerified",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsVerified is a boolean status flag indicating whether the advertisement has been verified. Because the column is defined NOT NULL, every row should contain either 1 (verified) or 0 (not verified). Use IsVerified = 1 to select verified/active advertisements. If you need to be defensive against unexpected NULLs, use ISNULL(IsVerified, 0) = 1 to treat NULL as false."
          },
          {
            "name": "AlteredAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredAmount"
          },
          {
            "name": "DenyExtraction",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "DenyExtraction"
          },
          {
            "name": "DesiredBeginDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DesiredBeginDate"
          },
          {
            "name": "DeactivationDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DeactivationDate"
          },
          {
            "name": "DeactivationReason",
            "type": "TINYINT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DeactivationReason"
          },
          {
            "name": "ReactivatedContractID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ReactivatedContractID"
          },
          {
            "name": "CompletedChanges",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CompletedChanges"
          },
          {
            "name": "PaymentDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "PaymentDiscount is a nullable numeric flag that indicates whether a discount has been applied. NULL usually signals that no discount was recorded (unknown or not applicable). A populated decimal indicates the discount amount (or percent). To find records with an active discount, filter for non-NULL values greater than zero. If your business treats 0 as equivalent to NULL, adjust the filter accordingly (e.g., PaymentDiscount > 0). Also confirm whether the stored value is a currency or percent and whether negative values are possible or meaningful."
          },
          {
            "name": "ProductDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "ProductDiscount is a numeric indicator of whether an advertisement carries a discount. NULL indicates absence/unknownness of a discount; a populated value conveys the discount magnitude. To treat an advertisement as \"active\" in the sense of having a discount, filter for ProductDiscount IS NOT NULL AND ProductDiscount > 0. Verify business rules about zero or negative values and whether the column represents an absolute amount or a percentage; if any explicit presence (including zero) should be considered, use ProductDiscount IS NOT NULL, and if zero should be excluded use ProductDiscount <> 0."
          },
          {
            "name": "BundleDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Although BundleDiscount is a numeric column (not a boolean flag), its semantics can be used as a status indicator: NULL = no discount specified / not applicable; a populated value = a discount is specified. To treat records with an active discount use a filter that requires a non-NULL, positive value. Verify business rules and units (absolute amount vs. percentage) and decide how to treat zero or negative values in your environment \u2014 e.g. use BundleDiscount > 0 to identify active discounts, or include = 0 if your domain considers an explicit zero differently."
          },
          {
            "name": "BudgetAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BudgetAmount"
          },
          {
            "name": "OneTimeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OneTimeAmount"
          },
          {
            "name": "ExtraFeeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmount"
          },
          {
            "name": "Months",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Months"
          },
          {
            "name": "SendTo",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SendTo"
          },
          {
            "name": "SendOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SendOn"
          },
          {
            "name": "CanExport",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CanExport"
          },
          {
            "name": "RelatedAdvertisementID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "RelatedAdvertisementID is a foreign-key-style status indicator: NULL means no relationship; a populated integer points at another Advertisement. Without documentation you cannot be certain whether populated values mark a record as inactive (e.g., superseded) or as part of an active relationship (e.g., a variant). Typical approaches: to get records that are likely primary/not superseded use RelatedAdvertisementID IS NULL; to get records that participate in relationships use RelatedAdvertisementID IS NOT NULL. Verify against referential constraints, triggers, or business rules (or look for companion columns like IsActive/StartDate/EndDate) before applying a production filter."
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Although this column is a monetary field rather than a traditional status flag, its NULL-vs-populated semantics act like a presence indicator: NULL = no applicable or unknown one\u2011time discounted charge; populated = there is a defined one\u2011time discounted charge (value shows the amount). To treat records as 'active' in the sense that they have a meaningful charge, filter for non-NULL and greater than zero. If your business defines 'active' differently (e.g., zero is considered active), adjust the SQL condition accordingly."
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This MONEY column holds the extra fee amount remaining after discounts. NULL generally indicates absence of a recorded extra fee (not applicable, not yet calculated, or missing). A non-NULL value is an explicit recorded amount; treat 0.00 as an explicit 'no extra fee' result. To select rows where an extra-fee value exists use: ExtraFeeAmountAfterDiscount IS NOT NULL. If your definition of 'active' excludes zero amounts, add: ExtraFeeAmountAfterDiscount IS NOT NULL AND ExtraFeeAmountAfterDiscount <> 0. Be cautious of negative values, currency context, and system behaviors that may use NULL vs 0 differently."
          },
          {
            "name": "ActualSpentBudget",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActualSpentBudget"
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmountAfterCC"
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredPPCAmountAfterCC"
          },
          {
            "name": "IsCustomAttributesValid",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "IsCustomAttributesValid is a nullable boolean status flag: a value of 1 marks the record as having valid custom attributes, 0 marks them as invalid, and NULL means the validity is unknown or hasn't been set. To select records considered 'active' with respect to this flag, filter for IsCustomAttributesValid = 1. If your application treats unknown (NULL) as valid or invalid, explicitly coalesce it (for example, WHERE ISNULL(IsCustomAttributesValid, 0) = 1 to treat NULL as false, or WHERE ISNULL(IsCustomAttributesValid, 1) = 1 to treat NULL as true)."
          },
          {
            "name": "DirProductId",
            "type": "BIGINT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DirProductId"
          },
          {
            "name": "DirProductName",
            "type": "NVARCHAR(200) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DirProductName"
          }
        ],
        "measures": [
          {
            "name": "TotalProductID",
            "expression": "SUM(ProductID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ProductID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalVersionSectionID",
            "expression": "SUM(VersionSectionID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "VersionSectionID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalGeoAreaID",
            "expression": "SUM(GeoAreaID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "GeoAreaID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalHeadingID",
            "expression": "SUM(HeadingID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "HeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "VersionSectionID",
            "references": "dbo"
          },
          {
            "column": "CaseAttachmentID",
            "references": "dbo"
          },
          {
            "column": "ContractProductID",
            "references": "dbo"
          },
          {
            "column": "ProductID",
            "references": "dbo"
          },
          {
            "column": "ProductKitID",
            "references": "dbo"
          },
          {
            "column": "HeadingID",
            "references": "dbo"
          },
          {
            "column": "ReactivatedContractID",
            "references": "dbo"
          },
          {
            "column": "RelatedAdvertisementID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "CampaignNewLossCustomer",
        "source": "dbo.CampaignNewLossCustomer",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "RuleID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "RuleID"
          },
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "IsRequestedToSuspend",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsRequestedToSuspend is a mandatory binary flag indicating whether the record has been requested to be suspended. Because the column is non\u2011nullable every row will contain either 0 or 1. Interpret 0 as the active/unsuspended state and 1 as suspended/requested-to-suspend. If there is any uncertainty about business semantics or if the flag meaning might be inverted, confirm with the data owner before relying on it in queries."
          },
          {
            "name": "IsSuspended",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsSuspended is a required boolean flag marking suspension state. Because it is NOT NULL every row must indicate suspended (1) or not suspended (0). To select records that are operational/active, filter for IsSuspended = 0. Any NULLs encountered are data anomalies and should be resolved according to your error-handling policy."
          },
          {
            "name": "IsNewRecord",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsNewRecord is a non-nullable boolean flag indicating whether the row is classified as a new record. Because the column cannot be NULL, every row must have either 0 or 1. Treat 1 as the positive/active state (new) and 0 as the negative/inactive state (not new); if you need the opposite definition for 'active' in your context, invert the condition. Verify business rules with domain owners if available."
          },
          {
            "name": "ActionResult",
            "type": "NVARCHAR(226) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActionResult"
          },
          {
            "name": "IsRequestedToResume",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsRequestedToResume is a non-nullable boolean flag indicating whether a resume request exists. Because the column is NOT NULL, you should expect only 0 or 1 values; treat 1 as the 'active' or positive state (request present) and 0 as the negative state (no request). Any NULLs would signal data/schema issues and should be investigated."
          },
          {
            "name": "DialerAction",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DialerAction"
          },
          {
            "name": "BatchID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BatchID"
          }
        ],
        "measures": [
          {
            "name": "TotalRecords",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctRuleCount",
            "expression": "COUNT(DISTINCT RuleID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RuleID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinRuleID",
            "expression": "MIN(RuleID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RuleID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxRuleID",
            "expression": "MAX(RuleID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RuleID"
            ],
            "filters_applied": []
          },
          {
            "name": "AvgRuleID",
            "expression": "AVG(CAST(RuleID AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "RuleID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "COUNT(DISTINCT BusinessPointID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinBusinessPointID",
            "expression": "MIN(BusinessPointID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxBusinessPointID",
            "expression": "MAX(BusinessPointID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "AvgBusinessPointID",
            "expression": "AVG(CAST(BusinessPointID AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDialerActionCount",
            "expression": "COUNT(DISTINCT DialerAction)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DialerAction"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDialerAction",
            "expression": "MIN(DialerAction)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DialerAction"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDialerAction",
            "expression": "MAX(DialerAction)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DialerAction"
            ],
            "filters_applied": []
          },
          {
            "name": "AvgDialerAction",
            "expression": "AVG(CAST(DialerAction AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "DialerAction"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "RuleID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "Classification",
        "source": "dbo.Classification",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "ClassifierID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ClassifierID"
          },
          {
            "name": "ClassifierNodeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ClassifierNodeID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "UniqueDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(CAST(DMKey AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "ClassifierID",
            "references": "dbo"
          },
          {
            "column": "ClassifierNodeID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "ContractProduct",
        "source": "dbo.ContractProduct",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "RelatedContractID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "RelatedContractID"
          },
          {
            "name": "ProductID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductID"
          },
          {
            "name": "State",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Because State is an INTEGER NOT NULL, every row contains a numeric state code; NULL is not allowed. That numeric value is a key into business semantics rather than a human-friendly label. To determine which numeric equals 'active' you should: (1) locate the canonical mapping (a lookup table such as dbo.ContractProductState or documentation); (2) if no mapping is available, inspect data (SELECT DISTINCT State FROM dbo.ContractProduct) and consult business owners. For filtering, use the integer code for 'active' (commonly 1 in many systems) or join/EXISTS against the lookup table that exposes an IsActive flag. Example safe patterns: (a) direct: WHERE State = <ACTIVE_CODE>; (b) lookup: WHERE EXISTS (SELECT 1 FROM dbo.ContractProductState s WHERE s.Code = dbo.ContractProduct.State AND s.IsActive = 1)."
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "ModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedOn"
          },
          {
            "name": "ModifiedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedBy"
          },
          {
            "name": "Price",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Price"
          },
          {
            "name": "IsSubscriptionBased",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsSubscriptionBased is a non-nullable BIT flag indicating whether a ContractProduct is subscription-based. It contains only 0 or 1: 1 denotes subscription-based products, 0 denotes non-subscription products. Because the column is NOT NULL, you can safely filter for subscription products with IsSubscriptionBased = 1; if NULLs appear they should be investigated as data quality issues."
          },
          {
            "name": "IsROI",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsROI is a non\u2011nullable BIT status flag. Valid stored values are 1 (flagged/true) and 0 (not flagged/false). Because the column is NOT NULL, you normally do not need to guard against NULLs; if NULLs appear they represent data issues. To select records where the flag denotes the active/positive state, filter with IsROI = 1. Verify the precise business meaning of 'ROI' with domain owners if needed."
          },
          {
            "name": "VersionSectionID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "VersionSectionID"
          },
          {
            "name": "SalesTypeID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SalesTypeID"
          },
          {
            "name": "Quantity",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Quantity"
          },
          {
            "name": "Discount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Discount is a non\u2011nullable monetary field, so every record contains a value. Interpret 0 as 'no discount' and >0 as 'discount active'. Because NULLs are not allowed by the schema, you do not need to handle missing values; if the business rules treat any non\u2011zero amount (including negatives) as active, use 'Discount <> 0' instead of 'Discount > 0'. If you need to detect originally unset discounts in a changed schema, a NULL would indicate unknown/not configured."
          },
          {
            "name": "PaymentMethodID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentMethodID"
          },
          {
            "name": "RulesDiscount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Although presented here in the status/flag analysis format, RulesDiscount is a numeric money field (NOT NULL) rather than a boolean flag. Because it cannot be NULL, presence/absence cannot be used to indicate state. Use the numeric value to infer state: treat values > 0 as an active discount, 0 as no discount, and handle negative values only after confirming business intent. If your business considers any non-zero value as active (including negatives), use RulesDiscount <> 0 instead of RulesDiscount > 0."
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "SourceContractProductID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SourceContractProductID"
          },
          {
            "name": "IsRenewed",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsRenewed is a non-nullable boolean flag that records whether the contract product has been renewed. Because it cannot be NULL, every row must be marked either renewed (1) or not renewed (0). Typically an 'active' contract product is one that has not been superseded by a renewal, so filter with IsRenewed = 0 to get active records. If your business defines 'active' differently (for example, only renewed items are considered active), invert the condition to IsRenewed = 1."
          },
          {
            "name": "IsRenewable",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsRenewable is a non-nullable BIT flag indicating whether a ContractProduct can be renewed. Under normal circumstances you will never see NULL; 1 marks renewable products and 0 marks non-renewable ones. To select records that are 'active' in the sense of being renewable, filter with IsRenewable = 1. If you must defensively handle unexpected NULLs, include an explicit NULL check (e.g. IsRenewable = 1 OR IsRenewable IS NULL) depending on how you want to treat unknowns."
          },
          {
            "name": "InterruptionDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "InterruptionDate"
          },
          {
            "name": "AlteredAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredAmount"
          },
          {
            "name": "CancelledOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "CancelledOn is a soft\u2011status timestamp: NULL denotes no cancellation (active), a non\u2011NULL value denotes cancellation at that datetime. When filtering for active records prefer treating both NULL and future cancellations as active (e.g. WHERE CancelledOn IS NULL OR CancelledOn > GETUTCDATE()). Be aware of timezone considerations (use GETDATE() vs GETUTCDATE() consistently with your data), possible default sentinel values, and that other date fields (effective/expiry) or status columns may also affect what you consider fully active."
          },
          {
            "name": "CancelledBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "CancelledBy is a nullable NVARCHAR flag that appears to record who cancelled the ContractProduct. NULL typically means no cancellation was recorded (the record is active). A non-NULL/non-empty value is the user or system account that cancelled the row and therefore indicates the record is cancelled (soft-deleted). When filtering for active records, check for NULL or empty/whitespace values as shown. Note: if the schema also has a cancellation timestamp or a separate boolean, use those for stronger guarantees; some systems may use special values (e.g., 'AdminUpdate') or might populate this column for other administrative actions, so validate against related audit/date columns if available."
          },
          {
            "name": "PaymentDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Treat NULL as 'no discount defined / not applicable'. A non-NULL numeric value means an explicit discount has been recorded. If you consider only positive discounts as active, use PaymentDiscount IS NOT NULL AND PaymentDiscount > 0. The provided active_filter (PaymentDiscount IS NOT NULL AND PaymentDiscount <> 0) finds rows with any explicit non-zero discount; adjust to >0 if negative values should be excluded."
          },
          {
            "name": "ProductDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "ProductDiscount is a numeric field (DECIMAL(18,3)), not a boolean flag. NULL indicates no discount has been recorded (unspecified/unknown). A non-NULL value records the discount amount or rate. To find records with an active discount, filter for non-NULL and greater than zero (ProductDiscount IS NOT NULL AND ProductDiscount > 0). If your definition of \"active\" is any explicitly set discount (including zero or negative), use ProductDiscount IS NOT NULL or ProductDiscount <> 0 to capture any nonzero explicit values. If NULL should be treated as zero, use COALESCE(ProductDiscount, 0) > 0."
          },
          {
            "name": "BundleDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Treat NULL as 'no discount specified / not applicable.' A populated decimal means a discount has been set; interpret the numeric magnitude per business rules (amount vs percent). To find rows with an effective/active bundle discount, filter for non\u2011NULL and non\u2011zero values. If your business considers zero as active or uses negative values, adjust the condition accordingly."
          },
          {
            "name": "BudgetAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BudgetAmount"
          },
          {
            "name": "OneTimeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OneTimeAmount"
          },
          {
            "name": "ExtraFeeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmount"
          },
          {
            "name": "Months",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Months"
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "OneTimeAmountAfterDiscount is a nullable monetary field. NULL typically means no amount was set (not applicable or not provided). A populated value is the actual post\u2011discount one\u2011time charge. Because it conveys an amount rather than a state, you cannot reliably use it alone to determine whether a record is 'active' unless your business rule defines activity by presence/size of this amount. If such a rule exists, filter for IS NOT NULL and/or <> 0 as appropriate; otherwise use explicit status/date fields to determine activity."
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This column is a monetary measure, not a binary status flag. NULL indicates absence/not-applicable/uncomputed. A non-NULL value gives the actual extra-fee amount after discounts; distinguish explicit zeros from NULLs in queries. If you need to treat rows with an applied extra fee as 'active' for this indicator, filter for non-NULL and non-zero values as shown. If your business considers explicit zero as active (or wants to include computed zeros), adjust the filter accordingly (e.g., ExtraFeeAmountAfterDiscount IS NOT NULL). Also validate unexpected negative values with data quality rules."
          },
          {
            "name": "ActualSpentBudget",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActualSpentBudget"
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmountAfterCC"
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredPPCAmountAfterCC"
          },
          {
            "name": "IsInterruptedFromCRM",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsInterruptedFromCRM is a non-nullable boolean flag where 1 signals the product was interrupted in CRM and 0 signals it was not. Because the column is NOT NULL, expect only 0/1 values; NULL would be an anomaly (or represent 'unknown' only if the schema allowed it). To select active (not interrupted) records filter for IsInterruptedFromCRM = 0. If you must defensively handle unexpected NULLs, use (IsInterruptedFromCRM = 0 OR IsInterruptedFromCRM IS NULL) to treat NULL as active."
          }
        ],
        "measures": [
          {
            "name": "TotalState",
            "expression": "SUM(State)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "State"
            ],
            "filters_applied": [
              "State = 1 -- (use the integer code that represents 'active' in your environment; alternatively use a lookup: EXISTS (SELECT 1 FROM dbo.ContractProductState s WHERE s.Code = dbo.ContractProduct.State AND s.IsActive = 1))"
            ]
          },
          {
            "name": "TotalPrice",
            "expression": "SUM(Price)",
            "datatype": "moneyvalue(precision=18, scale=3)",
            "format": "currency",
            "depends_on": [
              "Price"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalSalesTypeID",
            "expression": "SUM(SalesTypeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SalesTypeID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalQuantity",
            "expression": "SUM(Quantity)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Quantity"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDiscount",
            "expression": "SUM(Discount)",
            "datatype": "moneyvalue(precision=18, scale=3)",
            "format": "number",
            "depends_on": [
              "Discount"
            ],
            "filters_applied": [
              "Discount > 0"
            ]
          }
        ],
        "foreign_keys": [
          {
            "column": "VersionSectionID",
            "references": "dbo"
          },
          {
            "column": "SalesTypeID",
            "references": "dbo"
          },
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "ProductID",
            "references": "dbo"
          },
          {
            "column": "RelatedContractID",
            "references": "dbo"
          },
          {
            "column": "PaymentMethodID",
            "references": "dbo"
          },
          {
            "column": "SourceContractProductID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "CaseComment",
        "source": "dbo.CaseComment",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "CaseID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CaseID"
          },
          {
            "name": "CommentText",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CommentText"
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "TaskID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TaskID"
          },
          {
            "name": "CommentType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CommentType"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ],
        "measures": [
          {
            "name": "TotalComments",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "CommentType_Count",
            "expression": "COUNT(CommentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          },
          {
            "name": "CommentType_DistinctCount",
            "expression": "COUNT(DISTINCT CommentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          },
          {
            "name": "CommentType_Min",
            "expression": "MIN(CommentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          },
          {
            "name": "CommentType_Max",
            "expression": "MAX(CommentType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          },
          {
            "name": "CommentType_Average",
            "expression": "AVG(CAST(CommentType AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "CommentType"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKey_Count",
            "expression": "COUNT(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKey_DistinctCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKey_Min",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKey_Max",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "TaskID",
            "references": "dbo"
          },
          {
            "column": "CaseID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "CampaignScoreHistoryDetail",
        "source": "dbo.CampaignScoreHistoryDetail",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "CampaignScoreHistoryID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "CampaignScoreHistoryID is a required identifier that ties this detail record to a CampaignScoreHistory parent. Because it is NOT NULL, you will not see NULLs in the column; a populated integer indicates the parent linkage. If you want to treat 'active' as rows that have a valid parent, filter by CampaignScoreHistoryID IS NOT NULL (or CampaignScoreHistoryID > 0). For stronger guarantees, join to dbo.CampaignScoreHistory and apply any status flags on the parent (for example, only include rows where the parent exists and is not marked deleted)."
          },
          {
            "name": "CampaignBucketID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CampaignBucketID"
          },
          {
            "name": "ScoreMainActivity",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreMainActivity"
          },
          {
            "name": "ScoreSeniority",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreSeniority"
          },
          {
            "name": "ScoreValueBillingRange",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreValueBillingRange"
          },
          {
            "name": "ScoreCombinationMedium",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreCombinationMedium"
          },
          {
            "name": "ScoreMaxInvestmentMedium",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreMaxInvestmentMedium"
          },
          {
            "name": "ScoreCombinationProduct",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreCombinationProduct"
          },
          {
            "name": "ScoreCustomerBehavior",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreCustomerBehavior"
          },
          {
            "name": "ScoreSalesmanManagement",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreSalesmanManagement"
          },
          {
            "name": "ScoreTotal",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreTotal"
          },
          {
            "name": "TargetingAmountCalculated",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TargetingAmountCalculated"
          },
          {
            "name": "TargetingAmountByUser",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TargetingAmountByUser"
          },
          {
            "name": "Characterization",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Characterization"
          },
          {
            "name": "ScoreDifferenceToAvg",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreDifferenceToAvg"
          },
          {
            "name": "CampaignID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CampaignID"
          },
          {
            "name": "BusinessPointID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "BussinessPointCode",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BussinessPointCode"
          },
          {
            "name": "BusinessPointName",
            "type": "NVARCHAR(150) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointName"
          },
          {
            "name": "ProductMixture",
            "type": "NVARCHAR(255) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProductMixture"
          },
          {
            "name": "VerticalsGrouping",
            "type": "NVARCHAR(255) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "VerticalsGrouping"
          },
          {
            "name": "PrintAmount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PrintAmount"
          },
          {
            "name": "PPCAmount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PPCAmount"
          },
          {
            "name": "XOGRAmount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "XOGRAmount"
          },
          {
            "name": "WebSiteAmount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "WebSiteAmount"
          },
          {
            "name": "TotalAmount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TotalAmount"
          },
          {
            "name": "NewChannel",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NewChannel"
          },
          {
            "name": "NewChannelID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NewChannelID"
          },
          {
            "name": "NewSalesmanID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NewSalesmanID"
          },
          {
            "name": "NewSalesmanCode",
            "type": "NVARCHAR(40) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NewSalesmanCode"
          },
          {
            "name": "NewSalesmanName",
            "type": "NVARCHAR(255) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "NewSalesmanName"
          },
          {
            "name": "FirstCustomerExpirationMonth",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "FirstCustomerExpirationMonth"
          },
          {
            "name": "SegmentID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SegmentID"
          },
          {
            "name": "SegmentDescription",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SegmentDescription"
          },
          {
            "name": "FileID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "FileID"
          },
          {
            "name": "ItemStatus",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "ItemStatus is a nullable integer used to carry a coded status. NULL means no explicit status was assigned (unknown, default, or not processed). A populated integer maps to a specific state; you must consult the status-code documentation or lookup table to interpret each value. For querying 'active' rows, prefer using the explicit active code (ItemStatus = <active_code>). If the code mapping is unavailable and the business rule treats any assigned status as active, use ItemStatus IS NOT NULL. Consider adding or documenting a status lookup table and avoiding NULLs for clearer semantics."
          },
          {
            "name": "WorkingStatus",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "WorkingStatus is a nullable integer flag that encodes the record's state. NULL indicates the state is absent/unknown/not set; any non-NULL integer corresponds to an enumerated status whose semantics must be obtained from the application or a reference table. To select active records, filter for the integer value(s) that represent 'active' (commonly 1), and explicitly decide whether NULL should be included or excluded based on business rules."
          },
          {
            "name": "TargetGroupItemValueID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TargetGroupItemValueID"
          },
          {
            "name": "MediumCombination",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MediumCombination"
          },
          {
            "name": "MaxInvestmentMedium",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MaxInvestmentMedium"
          },
          {
            "name": "ScoreSalesmanManagementType",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreSalesmanManagementType"
          },
          {
            "name": "ScoreCustomerBehaviorType",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ScoreCustomerBehaviorType"
          },
          {
            "name": "SupervisorID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "SupervisorID is a nullable indicator of supervisor assignment. NULL usually means 'no supervisor assigned / unknown / removed'. A non-NULL integer is the assigned supervisor's ID. To consider a record 'active' in the sense of having an assigned supervisor, filter with WHERE SupervisorID IS NOT NULL. If your environment uses a sentinel (such as 0) for unassigned, tighten the filter to WHERE SupervisorID IS NOT NULL AND SupervisorID <> 0."
          },
          {
            "name": "SupervisorName",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "SupervisorName is an ownership/assignment field, not a boolean flag. NULL indicates absence of an assigned/known supervisor; a populated string indicates the supervisor recorded for that history detail. To treat a row as having an active/assigned supervisor, exclude NULLs, empty or whitespace-only strings, and known sentinel values such as 'Not available' (see active_filter). Because the column uses a case-insensitive collation (Greek_CI_AS), string comparisons are case-insensitive; if you have additional sentinel values (e.g. 'TBD', 'Unknown'), add them to the filter."
          },
          {
            "name": "PreviousSalesmanID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PreviousSalesmanID"
          },
          {
            "name": "PreviousSalesmanCode",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PreviousSalesmanCode"
          },
          {
            "name": "PreviousSalesmanName",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PreviousSalesmanName"
          },
          {
            "name": "MainActivityID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MainActivityID"
          },
          {
            "name": "MainActivity",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MainActivity"
          },
          {
            "name": "BucketGroup",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BucketGroup"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(ID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctCampaignCount",
            "expression": "COUNT(DISTINCT CampaignID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CampaignID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "COUNT(DISTINCT BusinessPointID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctFileCount",
            "expression": "COUNT(DISTINCT FileID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "FileID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctSegmentCount",
            "expression": "COUNT(DISTINCT SegmentID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SegmentID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalTargetingAmountCalculated",
            "expression": "SUM(TargetingAmountCalculated)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountCalculated"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageTargetingAmountCalculated",
            "expression": "AVG(TargetingAmountCalculated)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountCalculated"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTargetingAmountCalculated",
            "expression": "MIN(TargetingAmountCalculated)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountCalculated"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTargetingAmountCalculated",
            "expression": "MAX(TargetingAmountCalculated)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountCalculated"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalTargetingAmountByUser",
            "expression": "SUM(TargetingAmountByUser)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountByUser"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageTargetingAmountByUser",
            "expression": "AVG(TargetingAmountByUser)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountByUser"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTargetingAmountByUser",
            "expression": "MIN(TargetingAmountByUser)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountByUser"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTargetingAmountByUser",
            "expression": "MAX(TargetingAmountByUser)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountByUser"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalPrintAmount",
            "expression": "SUM(PrintAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "PrintAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AveragePrintAmount",
            "expression": "AVG(PrintAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "PrintAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MinPrintAmount",
            "expression": "MIN(PrintAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "PrintAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxPrintAmount",
            "expression": "MAX(PrintAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "PrintAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalPPCAmount",
            "expression": "SUM(PPCAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "PPCAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AveragePPCAmount",
            "expression": "AVG(PPCAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "PPCAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalXOGRAmount",
            "expression": "SUM(XOGRAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "XOGRAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageXOGRAmount",
            "expression": "AVG(XOGRAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "XOGRAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalWebSiteAmount",
            "expression": "SUM(WebSiteAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "WebSiteAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageWebSiteAmount",
            "expression": "AVG(WebSiteAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "WebSiteAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalAmount",
            "expression": "SUM(TotalAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TotalAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageTotalAmount",
            "expression": "AVG(TotalAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TotalAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTotalAmount",
            "expression": "MIN(TotalAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TotalAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTotalAmount",
            "expression": "MAX(TotalAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TotalAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalScoreTotal",
            "expression": "SUM(ScoreTotal)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreTotal"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreTotal",
            "expression": "AVG(ScoreTotal)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreTotal"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreTotal",
            "expression": "MIN(ScoreTotal)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreTotal"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreTotal",
            "expression": "MAX(ScoreTotal)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreTotal"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreMainActivity",
            "expression": "AVG(ScoreMainActivity)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreMainActivity"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreMainActivity",
            "expression": "MIN(ScoreMainActivity)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreMainActivity"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreMainActivity",
            "expression": "MAX(ScoreMainActivity)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreMainActivity"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreSeniority",
            "expression": "AVG(ScoreSeniority)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreSeniority"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreSeniority",
            "expression": "MIN(ScoreSeniority)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreSeniority"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreSeniority",
            "expression": "MAX(ScoreSeniority)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreSeniority"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreValueBillingRange",
            "expression": "AVG(ScoreValueBillingRange)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreValueBillingRange"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreValueBillingRange",
            "expression": "MIN(ScoreValueBillingRange)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreValueBillingRange"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreValueBillingRange",
            "expression": "MAX(ScoreValueBillingRange)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreValueBillingRange"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreCombinationMedium",
            "expression": "AVG(ScoreCombinationMedium)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCombinationMedium"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreCombinationMedium",
            "expression": "MIN(ScoreCombinationMedium)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCombinationMedium"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreCombinationMedium",
            "expression": "MAX(ScoreCombinationMedium)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCombinationMedium"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreMaxInvestmentMedium",
            "expression": "AVG(ScoreMaxInvestmentMedium)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreMaxInvestmentMedium"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreMaxInvestmentMedium",
            "expression": "MIN(ScoreMaxInvestmentMedium)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreMaxInvestmentMedium"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreMaxInvestmentMedium",
            "expression": "MAX(ScoreMaxInvestmentMedium)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreMaxInvestmentMedium"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreCombinationProduct",
            "expression": "AVG(ScoreCombinationProduct)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCombinationProduct"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreCombinationProduct",
            "expression": "MIN(ScoreCombinationProduct)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCombinationProduct"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreCombinationProduct",
            "expression": "MAX(ScoreCombinationProduct)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCombinationProduct"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreCustomerBehavior",
            "expression": "AVG(ScoreCustomerBehavior)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCustomerBehavior"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreCustomerBehavior",
            "expression": "MIN(ScoreCustomerBehavior)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCustomerBehavior"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreCustomerBehavior",
            "expression": "MAX(ScoreCustomerBehavior)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreCustomerBehavior"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreSalesmanManagement",
            "expression": "AVG(ScoreSalesmanManagement)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreSalesmanManagement"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreSalesmanManagement",
            "expression": "MIN(ScoreSalesmanManagement)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreSalesmanManagement"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreSalesmanManagement",
            "expression": "MAX(ScoreSalesmanManagement)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "ScoreSalesmanManagement"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageScoreDifferenceToAvg",
            "expression": "AVG(ScoreDifferenceToAvg)",
            "datatype": "decimal",
            "format": "percentage",
            "depends_on": [
              "ScoreDifferenceToAvg"
            ],
            "filters_applied": []
          },
          {
            "name": "MinScoreDifferenceToAvg",
            "expression": "MIN(ScoreDifferenceToAvg)",
            "datatype": "decimal",
            "format": "percentage",
            "depends_on": [
              "ScoreDifferenceToAvg"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxScoreDifferenceToAvg",
            "expression": "MAX(ScoreDifferenceToAvg)",
            "datatype": "decimal",
            "format": "percentage",
            "depends_on": [
              "ScoreDifferenceToAvg"
            ],
            "filters_applied": []
          },
          {
            "name": "SumTargetingCalculatedMinusByUser",
            "expression": "SUM(TargetingAmountCalculated - TargetingAmountByUser)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "TargetingAmountCalculated",
              "TargetingAmountByUser"
            ],
            "filters_applied": []
          },
          {
            "name": "CountByItemStatus",
            "expression": "COUNT(ItemStatus)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ItemStatus"
            ],
            "filters_applied": [
              "ItemStatus IS NOT NULL -- or, if you know the specific code for 'active', use: ItemStatus = <active_code> (replace <active_code> with the integer that represents active in your system)."
            ]
          },
          {
            "name": "CountByWorkingStatus",
            "expression": "COUNT(WorkingStatus)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "WorkingStatus"
            ],
            "filters_applied": [
              "WHERE WorkingStatus = 1 -- replace 1 with the integer code that your system defines as 'active'; do not treat NULL as active unless your business rules say so"
            ]
          },
          {
            "name": "MinCharacterization",
            "expression": "MIN(Characterization)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Characterization"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxCharacterization",
            "expression": "MAX(Characterization)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Characterization"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "CampaignScoreHistoryID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "PointRelationship",
        "source": "dbo.PointRelationship",
        "grain": [
          "BusinessPointID",
          "TargetBussinessPointID",
          "Type"
        ],
        "columns": [
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "TargetBussinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TargetBussinessPointID"
          },
          {
            "name": "Type",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Type"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctTypeCount",
            "expression": "COUNT(DISTINCT Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "MinType",
            "expression": "MIN(Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxType",
            "expression": "MAX(Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "AvgType",
            "expression": "AVG(CAST(Type AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AvgDMKey",
            "expression": "AVG(CAST(DMKey AS FLOAT))",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "TargetBussinessPointID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "BusinessPointConfirmationHistory",
        "source": "dbo.BusinessPointConfirmationHistory",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "BusinessPointIdentificationID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointIdentificationID"
          },
          {
            "name": "TimeStamp",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TimeStamp"
          },
          {
            "name": "PerformedByID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PerformedByID"
          },
          {
            "name": "ActionType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ActionType"
          },
          {
            "name": "TaskID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TaskID"
          },
          {
            "name": "SourceType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "SourceType"
          },
          {
            "name": "IsThirdPartyDataSource",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsThirdPartyDataSource is a non-nullable boolean flag indicating whether a BusinessPointConfirmationHistory row originated from a third\u2011party data source. Valid values are 1 (third\u2011party) and 0 (not third\u2011party). NULL is not expected; if present it would signal an unexpected/missing origin. To select records marked as true/\"active\" for this flag, filter with IsThirdPartyDataSource = 1 (or use = 0 to get non\u2011third\u2011party rows)."
          }
        ],
        "measures": [
          {
            "name": "CountConfirmations",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctBusinessPointCount",
            "expression": "COUNT(DISTINCT BusinessPointIdentificationID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointIdentificationID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctPerformerCount",
            "expression": "COUNT(DISTINCT PerformedByID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "PerformedByID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctTaskCount",
            "expression": "COUNT(DISTINCT TaskID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctActionTypeCount",
            "expression": "COUNT(DISTINCT ActionType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctSourceTypeCount",
            "expression": "COUNT(DISTINCT SourceType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SourceType"
            ],
            "filters_applied": []
          },
          {
            "name": "MinBusinessPointIdentificationID",
            "expression": "MIN(BusinessPointIdentificationID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointIdentificationID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxBusinessPointIdentificationID",
            "expression": "MAX(BusinessPointIdentificationID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BusinessPointIdentificationID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinPerformedByID",
            "expression": "MIN(PerformedByID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "PerformedByID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxPerformedByID",
            "expression": "MAX(PerformedByID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "PerformedByID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTaskID",
            "expression": "MIN(TaskID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTaskID",
            "expression": "MAX(TaskID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TaskID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinActionType",
            "expression": "MIN(ActionType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxActionType",
            "expression": "MAX(ActionType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageActionType",
            "expression": "AVG(ActionType)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "ActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "MinSourceType",
            "expression": "MIN(SourceType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SourceType"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxSourceType",
            "expression": "MAX(SourceType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SourceType"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "BusinessPointIdentificationID",
            "references": "dbo"
          },
          {
            "column": "TaskID",
            "references": "dbo"
          },
          {
            "column": "PerformedByID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "UserLog",
        "source": "dbo.UserLog",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "UserID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "UserID"
          },
          {
            "name": "Timestamp",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Timestamp"
          },
          {
            "name": "PC",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PC"
          },
          {
            "name": "IP",
            "type": "NVARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "IP"
          },
          {
            "name": "Action",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Action"
          },
          {
            "name": "User_Version",
            "type": "VARCHAR(20) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "User_Version"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "ActionNonNullCount",
            "expression": "COUNT(Action)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Action"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctActionCount",
            "expression": "COUNT(DISTINCT Action)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Action"
            ],
            "filters_applied": []
          },
          {
            "name": "SumAction",
            "expression": "SUM(Action)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Action"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageAction",
            "expression": "AVG(Action)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "Action"
            ],
            "filters_applied": []
          },
          {
            "name": "MinAction",
            "expression": "MIN(Action)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Action"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxAction",
            "expression": "MAX(Action)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Action"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "UserID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "Ticket",
        "source": "dbo.Ticket",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "Result",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Result"
          },
          {
            "name": "TicketTypeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TicketTypeID"
          },
          {
            "name": "NeedEval",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NeedEval"
          },
          {
            "name": "PriorityID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PriorityID"
          },
          {
            "name": "SourceTypeID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "SourceTypeID"
          },
          {
            "name": "ResultComm",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultComm"
          },
          {
            "name": "ResultCommDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultCommDate"
          },
          {
            "name": "Status",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Status is a required integer code representing the ticket's lifecycle state. Because the column is NOT NULL, you will always see a numeric code; NULL is not used. To identify active tickets you must filter by the specific code(s) that denote non-terminal/working states in your environment. If you do not know the codes, either consult the status lookup/metadata or use the inverse approach to exclude terminal statuses: WHERE Status NOT IN (<closed_cancelled_codes>). Always use explicit code lists rather than relying on presence/absence of NULL."
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedByID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CreatedByID"
          },
          {
            "name": "NeedSupervisor",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "NeedSupervisor is a non-nullable boolean flag indicating whether a ticket requires supervisor intervention. Because the column is NOT NULL, every row will contain either 0 or 1. Use NeedSupervisor = 1 to select tickets that are flagged (require supervisor), and NeedSupervisor = 0 to select tickets that are not flagged."
          },
          {
            "name": "ResultCustomer",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultCustomer"
          },
          {
            "name": "CompletedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CompletedOn"
          },
          {
            "name": "CompletedByID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CompletedByID"
          },
          {
            "name": "ResultCommTypeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultCommTypeID"
          },
          {
            "name": "CancellationResonID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CancellationResonID"
          },
          {
            "name": "ChargeOfResponsibilityID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ChargeOfResponsibilityID"
          },
          {
            "name": "RequestReasonID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RequestReasonID"
          },
          {
            "name": "ResolutionMethodID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResolutionMethodID"
          },
          {
            "name": "RelatedContractID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RelatedContractID"
          },
          {
            "name": "RelatedSalesmanID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RelatedSalesmanID"
          },
          {
            "name": "HandlerID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "HandlerID"
          },
          {
            "name": "NeedCancelContractEval",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NeedCancelContractEval"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "LastAssignUserID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastAssignUserID"
          },
          {
            "name": "LastAssignRoleID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "LastAssignRoleID"
          },
          {
            "name": "ContactName",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ContactName"
          },
          {
            "name": "ReceivedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ReceivedOn"
          },
          {
            "name": "CreditNumber",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreditNumber"
          },
          {
            "name": "CreditAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreditAmount"
          },
          {
            "name": "CancelAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CancelAmount"
          },
          {
            "name": "DPSCurrentNodeID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DPSCurrentNodeID"
          },
          {
            "name": "TargetCampaignID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TargetCampaignID"
          },
          {
            "name": "TargetSubChannelID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TargetSubChannelID"
          },
          {
            "name": "TargetSalesmanID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "TargetSalesmanID"
          },
          {
            "name": "TargetSupervisorID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "TargetSupervisorID is a nullable foreign-key style status column. NULL indicates there is no specific supervisor target (unassigned or not applicable). A populated integer value indicates the ticket is targeted/assigned to the supervisor with that ID. To treat 'active' records as tickets that have a target supervisor, filter for TargetSupervisorID IS NOT NULL. If you need to ensure the referenced supervisor actually exists and is not soft-deleted, join to the supervisor table and add that table's active flag (for example: JOIN dbo.Supervisor s ON Ticket.TargetSupervisorID = s.SupervisorID WHERE Ticket.TargetSupervisorID IS NOT NULL AND s.IsActive = 1). Also verify whether your system ever uses sentinel values (0 or negative) to mean unassigned and adjust the filter accordingly."
          },
          {
            "name": "MaterialDeliveryDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "MaterialDeliveryDate"
          },
          {
            "name": "IsEditContractType",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsEditContractType is a non-nullable boolean status flag. Because the column is NOT NULL, you will never see NULL; every row will have either 0 or 1. Interpret 1 as the flag being active/true and 0 as inactive/false. To select rows where this flag is active, filter with IsEditContractType = 1. If the precise business meaning (allowed vs. performed) is important, validate with application or product owners."
          },
          {
            "name": "InParallelRoleID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "InParallelRoleID"
          },
          {
            "name": "RelatedAdvertisementID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "RelatedAdvertisementID is a nullable foreign-key-style status indicator: NULL signals no associated advertisement, a populated integer is the ID of the related advertisement. To treat \"active\" as \"has an associated advertisement\", filter with RelatedAdvertisementID IS NOT NULL; to be strict, also validate the reference exists via a JOIN or EXISTS against the Advertisement table."
          },
          {
            "name": "InitialTicketTypeID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "InitialTicketTypeID"
          },
          {
            "name": "SerialTicketTypdeID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SerialTicketTypdeID"
          },
          {
            "name": "SerialRoleID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SerialRoleID"
          },
          {
            "name": "RequestedChanges",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RequestedChanges"
          },
          {
            "name": "WebChangesContractID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "WebChangesContractID"
          },
          {
            "name": "SelectedSalesmanID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SelectedSalesmanID"
          },
          {
            "name": "Code",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Code"
          },
          {
            "name": "CampaignLeadId",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CampaignLeadId"
          },
          {
            "name": "BusinessPointIdentificationId",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BusinessPointIdentificationId"
          }
        ],
        "measures": [
          {
            "name": "TicketCount",
            "expression": "COUNT(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctResultCount",
            "expression": "COUNT(DISTINCT Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "ResultMin",
            "expression": "MIN(Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "ResultMax",
            "expression": "MAX(Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctStatusCount",
            "expression": "COUNT(DISTINCT Status)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Status"
            ],
            "filters_applied": [
              "WHERE Status IN (<active_status_codes>)  -- replace <active_status_codes> with the integer code(s) that represent active states (e.g. WHERE Status = 1)"
            ]
          },
          {
            "name": "StatusMin",
            "expression": "MIN(Status)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Status"
            ],
            "filters_applied": [
              "WHERE Status IN (<active_status_codes>)  -- replace <active_status_codes> with the integer code(s) that represent active states (e.g. WHERE Status = 1)"
            ]
          },
          {
            "name": "StatusMax",
            "expression": "MAX(Status)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Status"
            ],
            "filters_applied": [
              "WHERE Status IN (<active_status_codes>)  -- replace <active_status_codes> with the integer code(s) that represent active states (e.g. WHERE Status = 1)"
            ]
          },
          {
            "name": "DMKeyMin",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DMKeyMax",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctLastAssignUserCount",
            "expression": "COUNT(DISTINCT LastAssignUserID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "LastAssignUserID"
            ],
            "filters_applied": []
          },
          {
            "name": "LastAssignUserIDMin",
            "expression": "MIN(LastAssignUserID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "LastAssignUserID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctLastAssignRoleCount",
            "expression": "COUNT(DISTINCT LastAssignRoleID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "LastAssignRoleID"
            ],
            "filters_applied": []
          },
          {
            "name": "LastAssignRoleIDMin",
            "expression": "MIN(LastAssignRoleID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "LastAssignRoleID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalCreditNumber",
            "expression": "SUM(CreditNumber)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CreditNumber"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageCreditNumber",
            "expression": "AVG(CreditNumber)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "CreditNumber"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalCreditAmount",
            "expression": "SUM(CreditAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CreditAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageCreditAmount",
            "expression": "AVG(CreditAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CreditAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MinCreditAmount",
            "expression": "MIN(CreditAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CreditAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxCreditAmount",
            "expression": "MAX(CreditAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CreditAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalCancelAmount",
            "expression": "SUM(CancelAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CancelAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageCancelAmount",
            "expression": "AVG(CancelAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CancelAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MinCancelAmount",
            "expression": "MIN(CancelAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CancelAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxCancelAmount",
            "expression": "MAX(CancelAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "CancelAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDPSCurrentNodeCount",
            "expression": "COUNT(DISTINCT DPSCurrentNodeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DPSCurrentNodeID"
            ],
            "filters_applied": []
          },
          {
            "name": "DPSCurrentNodeIDMin",
            "expression": "MIN(DPSCurrentNodeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DPSCurrentNodeID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctRelatedAdvertisementCount",
            "expression": "COUNT(DISTINCT RelatedAdvertisementID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RelatedAdvertisementID"
            ],
            "filters_applied": [
              "RelatedAdvertisementID IS NOT NULL"
            ]
          },
          {
            "name": "RelatedAdvertisementIDMin",
            "expression": "MIN(RelatedAdvertisementID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RelatedAdvertisementID"
            ],
            "filters_applied": [
              "RelatedAdvertisementID IS NOT NULL"
            ]
          },
          {
            "name": "DistinctInitialTicketTypeCount",
            "expression": "COUNT(DISTINCT InitialTicketTypeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "InitialTicketTypeID"
            ],
            "filters_applied": []
          },
          {
            "name": "InitialTicketTypeIDMin",
            "expression": "MIN(InitialTicketTypeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "InitialTicketTypeID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctSerialTicketTypeCount",
            "expression": "COUNT(DISTINCT SerialTicketTypdeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SerialTicketTypdeID"
            ],
            "filters_applied": []
          },
          {
            "name": "SerialTicketTypdeIDMin",
            "expression": "MIN(SerialTicketTypdeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SerialTicketTypdeID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctSerialRoleCount",
            "expression": "COUNT(DISTINCT SerialRoleID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SerialRoleID"
            ],
            "filters_applied": []
          },
          {
            "name": "SerialRoleIDMin",
            "expression": "MIN(SerialRoleID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SerialRoleID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalRequestedChanges",
            "expression": "SUM(RequestedChanges)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RequestedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageRequestedChanges",
            "expression": "AVG(RequestedChanges)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "RequestedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "MinRequestedChanges",
            "expression": "MIN(RequestedChanges)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RequestedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxRequestedChanges",
            "expression": "MAX(RequestedChanges)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RequestedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctSelectedSalesmanCount",
            "expression": "COUNT(DISTINCT SelectedSalesmanID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SelectedSalesmanID"
            ],
            "filters_applied": []
          },
          {
            "name": "SelectedSalesmanIDMin",
            "expression": "MIN(SelectedSalesmanID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SelectedSalesmanID"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "LastAssignRoleID",
            "references": "dbo"
          },
          {
            "column": "LastAssignUserID",
            "references": "dbo"
          },
          {
            "column": "InParallelRoleID",
            "references": "dbo"
          },
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "SerialRoleID",
            "references": "dbo"
          },
          {
            "column": "SerialTicketTypdeID",
            "references": "dbo"
          },
          {
            "column": "RelatedContractID",
            "references": "dbo"
          },
          {
            "column": "SelectedSalesmanID",
            "references": "dbo"
          },
          {
            "column": "TargetCampaignID",
            "references": "dbo"
          },
          {
            "column": "TargetSalesmanID",
            "references": "dbo"
          },
          {
            "column": "TargetSubChannelID",
            "references": "dbo"
          },
          {
            "column": "TargetSupervisorID",
            "references": "dbo"
          },
          {
            "column": "RelatedSalesmanID",
            "references": "dbo"
          },
          {
            "column": "BusinessPointIdentificationId",
            "references": "dbo"
          },
          {
            "column": "CancellationResonID",
            "references": "dbo"
          },
          {
            "column": "ChargeOfResponsibilityID",
            "references": "dbo"
          },
          {
            "column": "CompletedByID",
            "references": "dbo"
          },
          {
            "column": "CreatedByID",
            "references": "dbo"
          },
          {
            "column": "HandlerID",
            "references": "dbo"
          },
          {
            "column": "PriorityID",
            "references": "dbo"
          },
          {
            "column": "RequestReasonID",
            "references": "dbo"
          },
          {
            "column": "ResolutionMethodID",
            "references": "dbo"
          },
          {
            "column": "SourceTypeID",
            "references": "dbo"
          },
          {
            "column": "TicketTypeID",
            "references": "dbo"
          },
          {
            "column": "WebChangesContractID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "TicketResult",
        "source": "dbo.TicketResult",
        "grain": [
          "TicketID",
          "TaskID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "TicketID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TicketID"
          },
          {
            "name": "TaskID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TaskID"
          },
          {
            "name": "Result",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Result"
          },
          {
            "name": "ResultComm",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultComm"
          },
          {
            "name": "ResultCommDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultCommDate"
          },
          {
            "name": "ResultCustomer",
            "type": "BIT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultCustomer"
          },
          {
            "name": "PendingReview",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "PendingReview"
          },
          {
            "name": "ResultCommTypeID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResultCommTypeID"
          },
          {
            "name": "ResolutionMethodID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ResolutionMethodID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "PerformedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PerformedOn"
          },
          {
            "name": "PerformedByID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PerformedByID"
          },
          {
            "name": "InParallelRoleID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "InParallelRoleID"
          }
        ],
        "measures": [
          {
            "name": "TotalResult",
            "expression": "SUM(Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageResult",
            "expression": "AVG(Result)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "MinResult",
            "expression": "MIN(Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxResult",
            "expression": "MAX(Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "CountResults",
            "expression": "COUNT(Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctResultCount",
            "expression": "COUNT(DISTINCT Result)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Result"
            ],
            "filters_applied": []
          },
          {
            "name": "CountDMKey",
            "expression": "COUNT(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "CountPerformedBy",
            "expression": "COUNT(PerformedByID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "PerformedByID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctPerformers",
            "expression": "COUNT(DISTINCT PerformedByID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "PerformedByID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinPerformedByID",
            "expression": "MIN(PerformedByID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "PerformedByID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxPerformedByID",
            "expression": "MAX(PerformedByID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "PerformedByID"
            ],
            "filters_applied": []
          },
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "InParallelRoleID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "ResultCommTypeID",
            "references": "dbo"
          },
          {
            "column": "TaskID",
            "references": "dbo"
          },
          {
            "column": "TicketID",
            "references": "dbo"
          },
          {
            "column": "ResolutionMethodID",
            "references": "dbo"
          },
          {
            "column": "PerformedByID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "FreeTemplate",
        "source": "dbo.FreeTemplate",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BusinessPointID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BusinessPointID"
          },
          {
            "name": "ProductID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductID"
          },
          {
            "name": "State",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "State is a non-nullable integer status code. Because NULL is not permitted, you should not rely on NULL to mean unknown or not applicable; encountering NULL would signal a data quality issue. Populated integers represent one of the predefined status codes; the exact mapping must be obtained from the system documentation or a reference table. To select active records, use an equality filter for the integer code that represents 'active' (commonly State = 1); if your system uses multiple active codes use State IN (...), or if 0 means inactive use State <> 0. Confirm the correct code(s) before applying the filter."
          },
          {
            "name": "CreatedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedOn"
          },
          {
            "name": "CreatedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CreatedBy"
          },
          {
            "name": "ModifiedOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedOn"
          },
          {
            "name": "ModifiedBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ModifiedBy"
          },
          {
            "name": "Price",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Price"
          },
          {
            "name": "IsSubscriptionBased",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsSubscriptionBased is a required boolean flag indicating whether a FreeTemplate is subscription-based. Because the column is NOT NULL every row will have either 0 or 1. Interpret 1 as the positive/\"on\" state (subscription-based) and 0 as the negative/\"off\" state (not subscription-based). To select subscription-based records filter using IsSubscriptionBased = 1; to select non-subscription records use IsSubscriptionBased = 0."
          },
          {
            "name": "IsROI",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsROI is a non\u2011nullable BIT status flag. Because it cannot be NULL, every row will contain either 0 or 1. Interpret 1 as the positive/active state (the template is an ROI) and 0 as the negative/inactive state (the template is not an ROI). To return 'active' (ROI) records filter with WHERE IsROI = 1."
          },
          {
            "name": "VersionSectionID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "VersionSectionID"
          },
          {
            "name": "SalesTypeID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SalesTypeID"
          },
          {
            "name": "Quantity",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Quantity"
          },
          {
            "name": "Discount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Discount is a non\u2011nullable monetary field that represents the discount amount for the template. Because the column cannot be NULL, you will always see a numeric value; interpret 0 as no discount and >0 as an active discount. If your business treats negative amounts differently (e.g., as reductions stored as negative numbers), adjust the active filter accordingly (for example Discount <> 0 or Discount < 0)."
          },
          {
            "name": "PaymentMethodID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "PaymentMethodID"
          },
          {
            "name": "RulesDiscount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "RulesDiscount is a non-null money value that functions as a numeric status: non\u2011zero (typically > 0) means a discount is applied, and 0 means no discount. Because the column cannot be NULL, do not rely on NULL checks. If your business rules allow negative discounts or treat any non-zero as active, use 'RulesDiscount <> 0' instead of 'RulesDiscount > 0'."
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "SourceContractProductID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SourceContractProductID"
          },
          {
            "name": "IsRenewed",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsRenewed is a boolean status flag (BIT NOT NULL) indicating whether a FreeTemplate record has been renewed. Because the column is NOT NULL every row will have either 0 or 1. Use IsRenewed = 1 to select records that are 'renewed/active' (or IsRenewed = 0 to select 'not renewed' records). If your business definition of 'active' differs, adjust the filter accordingly."
          },
          {
            "name": "IsRenewable",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsRenewable is a Boolean status flag (BIT NOT NULL). Because it cannot be NULL, every row will explicitly indicate renewable (1) or not renewable (0). To select records considered 'active' with respect to renewable status, filter for IsRenewable = 1. If you need to treat the value as a proper boolean in client code, interpret 1 as true and 0 as false."
          },
          {
            "name": "InterruptionDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "InterruptionDate"
          },
          {
            "name": "AlteredAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredAmount"
          },
          {
            "name": "CancelledOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "CancelledOn is a cancellation timestamp. NULL indicates no cancellation has been recorded (the item is considered active unless other rules apply). A non-NULL datetime is the moment the item was/will be cancelled; past datetimes mean already cancelled, future datetimes mean a scheduled cancellation. To treat scheduled future cancellations as still active you would use CancelledOn IS NULL OR CancelledOn > GETUTCDATE(), otherwise use CancelledOn IS NULL to select currently active (not cancelled) records."
          },
          {
            "name": "CancelledBy",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "CancelledBy is a cancellation flag stored as the cancelling user's name/ID. If NULL (or an empty string) there is no recorded cancellation and the template is considered active. If the column contains a non-empty value, it represents who performed the cancellation and the record should be treated as cancelled. If your environment uses special placeholders (e.g. 'N/A', 'Unknown'), extend the filter to exclude those values as needed."
          },
          {
            "name": "PaymentDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "PaymentDiscount is a numeric status-like column indicating whether a discount has been recorded for the record. NULL = no discount configured / not applicable / unknown. A populated value = a discount amount or rate has been stored; interpretation (currency vs fraction) depends on system conventions. To find records with an active discount, filter for non\u2011NULL and non\u2011zero values (recommended): PaymentDiscount IS NOT NULL AND PaymentDiscount <> 0. If your business rule guarantees only positive discounts, you can use PaymentDiscount > 0. Confirm with domain documentation whether 0.000 is used to mean explicit 'no discount' and whether negative values are valid before applying stricter filters."
          },
          {
            "name": "ProductDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "ProductDiscount is a nullable numeric field used to indicate whether a discount applies to the FreeTemplate row. NULL = no discount specified/not applicable. A populated DECIMAL value = a discount is defined (interpretation as currency vs percent must be confirmed with business rules). To treat a row as 'active' meaning a discount is in effect, filter for ProductDiscount IS NOT NULL AND ProductDiscount <> 0. If your business treats a zero value as meaningful (explicitly 'no discount') then use ProductDiscount IS NOT NULL to find rows where a discount was set, or ProductDiscount > 0 to find only positive discounts. Also validate whether negative values are allowed and prefer exact numeric comparisons (DECIMAL is precise); use COALESCE/ProductDiscount defaulting only when appropriate."
          },
          {
            "name": "BundleDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "BundleDiscount is not a boolean flag but a numeric indicator of a discount. NULL signals absence/unspecified discount; any populated number means an explicitly stored discount magnitude. To treat \"active\" as rows with an actual discount applied, filter for non-NULL values greater than zero (BundleDiscount IS NOT NULL AND BundleDiscount > 0). If your business defines \"active\" differently (for example, zero is considered active, or the column stores a percentage vs. absolute amount), adapt the condition accordingly and confirm the intended units/semantics with domain rules."
          },
          {
            "name": "BudgetAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BudgetAmount"
          },
          {
            "name": "OneTimeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OneTimeAmount"
          },
          {
            "name": "ExtraFeeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmount"
          },
          {
            "name": "Months",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Months"
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This column indicates whether a one\u2011time charge (after discounts) exists and, if so, its amount. NULL should be interpreted as 'no value recorded / not applicable / unknown.' Any non\u2011NULL value indicates a defined post\u2011discount amount; consumers of the data should treat 0.00 as an explicit zero charge and decide whether that counts as 'active' for their use case. If you want rows that merely have an amount defined, filter with OneTimeAmountAfterDiscount IS NOT NULL. If you only want rows with a positive charge, use OneTimeAmountAfterDiscount > 0. If you want to treat zero as inactive, use OneTimeAmountAfterDiscount IS NOT NULL AND OneTimeAmountAfterDiscount <> 0."
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This column is a quantitative money field rather than a boolean flag. NULL typically means no fee is applicable or the amount hasn't been set/calculated. A populated money value is the extra fee remaining after discounts have been applied; interpreting that value depends on business rules (treat >0 as an active fee, =0 as no fee, negative as credit). To find rows with an active/recorded fee, filter for non-NULL and non-zero (or use > 0 if you only consider positive charges as active)."
          },
          {
            "name": "ActualSpentBudget",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActualSpentBudget"
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmountAfterCC"
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredPPCAmountAfterCC"
          },
          {
            "name": "IsInterruptedFromCRM",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsInterruptedFromCRM is a NOT NULL BIT flag that marks whether a FreeTemplate was interrupted by CRM. Because it cannot be NULL under the schema, every row should contain either 0 (not interrupted) or 1 (interrupted). Treat rows with 0 as the active/normal templates and rows with 1 as interrupted/flagged templates. If you need defensive code against unexpected NULLs from upstream issues, use ISNULL(IsInterruptedFromCRM, 0) = 0 or filter out NULLs explicitly while investigating."
          }
        ],
        "measures": [
          {
            "name": "TotalState",
            "expression": "SUM(State)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "State"
            ],
            "filters_applied": [
              "State = 1"
            ]
          },
          {
            "name": "TotalPrice",
            "expression": "SUM(Price)",
            "datatype": "moneyvalue(precision=18, scale=3)",
            "format": "currency",
            "depends_on": [
              "Price"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalSalesTypeID",
            "expression": "SUM(SalesTypeID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "SalesTypeID"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalQuantity",
            "expression": "SUM(Quantity)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Quantity"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDiscount",
            "expression": "SUM(Discount)",
            "datatype": "moneyvalue(precision=18, scale=3)",
            "format": "number",
            "depends_on": [
              "Discount"
            ],
            "filters_applied": [
              "Discount > 0"
            ]
          }
        ],
        "foreign_keys": [
          {
            "column": "VersionSectionID",
            "references": "dbo"
          },
          {
            "column": "SalesTypeID",
            "references": "dbo"
          },
          {
            "column": "BusinessPointID",
            "references": "dbo"
          },
          {
            "column": "ProductID",
            "references": "dbo"
          },
          {
            "column": "PaymentMethodID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "FreeTemplateAdvertisement",
        "source": "dbo.FreeTemplateAdvertisement",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "FreeTemplateID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "FreeTemplateID"
          },
          {
            "name": "ProductID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ProductID"
          },
          {
            "name": "VersionSectionID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "VersionSectionID"
          },
          {
            "name": "GeoAreaID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "GeoAreaID"
          },
          {
            "name": "HeadingID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "HeadingID"
          },
          {
            "name": "AdvBeginDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AdvBeginDate"
          },
          {
            "name": "AdvEndDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AdvEndDate"
          },
          {
            "name": "QA",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "QA"
          },
          {
            "name": "CaseAttachmentID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CaseAttachmentID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          },
          {
            "name": "Price",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Price"
          },
          {
            "name": "Discount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Although requested as a status/flag analysis, Discount is a numeric money field rather than a true status indicator. Because it is non-nullable there is no NULL state to indicate unknown/inactive. Use Discount > 0 to find records with an active discount (adjust to >= 0 or include negatives only if your business rules treat zero or negative values as active)."
          },
          {
            "name": "RulesDiscount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Because RulesDiscount is non-nullable, NULL does not signal 'inactive'. Instead a zero value normally means 'no discount' and any non-zero value means the record carries a rules discount. To select records with an applied discount use RulesDiscount <> 0; if your business definition of active requires only positive discounts use RulesDiscount > 0. Be cautious about negative values and handle them according to business rules."
          },
          {
            "name": "ProductKitID",
            "type": "TableID()",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ProductKitID"
          },
          {
            "name": "IsSubscriptionBased",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsSubscriptionBased is a mandatory boolean flag that marks whether a FreeTemplateAdvertisement is subscription\u2011based. Because the column is NOT NULL, every row should contain either 0 (not subscription\u2011based) or 1 (subscription\u2011based). Use WHERE IsSubscriptionBased = 1 to retrieve subscription\u2011based records and WHERE IsSubscriptionBased = 0 for non\u2011subscription records. If NULLs are unexpectedly present, treat them as an unknown/unset state and investigate or normalize them with ISNULL/COALESCE as appropriate."
          },
          {
            "name": "IsVerified",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "IsVerified is a non-nullable boolean flag indicating whether the FreeTemplateAdvertisement has been verified. Because the column is NOT NULL, every row should have either 1 (verified) or 0 (not verified). To select records considered \"active\" in the sense of being verified, filter with IsVerified = 1. To select unverified records use IsVerified = 0. If you encounter NULLs despite the NOT NULL definition, investigate data corruption, ETL issues, or an out-of-date schema."
          },
          {
            "name": "AlteredAmount",
            "type": "MoneyValue(precision=18, scale=3)",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredAmount"
          },
          {
            "name": "DenyExtraction",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "DenyExtraction"
          },
          {
            "name": "DesiredBeginDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DesiredBeginDate"
          },
          {
            "name": "DeactivationDate",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DeactivationDate"
          },
          {
            "name": "DeactivationReason",
            "type": "TINYINT",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DeactivationReason"
          },
          {
            "name": "CompletedChanges",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CompletedChanges"
          },
          {
            "name": "PaymentDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Although labeled here as a status/flag analysis, PaymentDiscount is a numeric field (not a boolean flag). NULL should be treated as 'no discount specified / not applicable'. A non-NULL value indicates a recorded discount amount or percentage. To identify records with an active/meaningful discount, filter for PaymentDiscount IS NOT NULL AND PaymentDiscount > 0. If your definition of active includes explicitly recorded zero discounts, use PaymentDiscount IS NOT NULL. Verify domain rules (currency vs percent, allowed negative values) with source documentation before applying business logic."
          },
          {
            "name": "ProductDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "ProductDiscount is a numeric status-like field indicating whether a discount exists. NULL means no discount information (not applicable or unknown). A populated DECIMAL means a discount value was supplied; interpret units from business rules (currency vs percent). To select records where a discount is actively applied, filter for non-NULL values greater than zero (ProductDiscount IS NOT NULL AND ProductDiscount > 0). If your domain treats 0 differently, adjust the condition accordingly (e.g., include = 0 if 0 should be considered active)."
          },
          {
            "name": "BundleDiscount",
            "type": "DECIMAL(18, 3)",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "BundleDiscount is primarily a numeric attribute, not a boolean flag. NULL indicates absence of a configured discount (or not applicable). A populated DECIMAL value conveys the discount amount; you must consult business metadata to know if the number is a percent, absolute currency, or stored in basis points. To treat records with an effective discount as \"active\", filter for non\u2011NULL and positive values (BundleDiscount IS NOT NULL AND BundleDiscount > 0). If your domain uses 0 as a sentinel for \"no discount\" but allows negative or zero values for other reasons, adjust the filter (for example use BundleDiscount IS NOT NULL AND BundleDiscount <> 0) after confirming business rules."
          },
          {
            "name": "BudgetAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "BudgetAmount"
          },
          {
            "name": "OneTimeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "OneTimeAmount"
          },
          {
            "name": "ExtraFeeAmount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmount"
          },
          {
            "name": "Months",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Months"
          },
          {
            "name": "SendTo",
            "type": "NVARCHAR(100) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SendTo"
          },
          {
            "name": "SendOn",
            "type": "DATETIME",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "SendOn"
          },
          {
            "name": "CanExport",
            "type": "BIT",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "CanExport"
          },
          {
            "name": "RelatedFreeTemplateAdvertisementID",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This nullable integer likely functions as a self-referential foreign key to indicate that a row is linked to another advertisement. NULL typically denotes a primary/original or otherwise standalone record (often treated as the active/current item), while a populated value points to a related record (child/derivative/replacement). If you consider 'active' records to be the primary/unreplaced ones, filter using RelatedFreeTemplateAdvertisementID IS NULL. If your domain defines 'active' differently (for example, only linked records are active), use RelatedFreeTemplateAdvertisementID IS NOT NULL. Confirm intent against application logic or documentation before relying on this for business-critical filters."
          },
          {
            "name": "OneTimeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "This nullable money column acts like a presence/amount indicator: NULL signals absence/unknown of a one-time discounted charge; a populated MONEY value gives the actual post-discount amount. If you treat \"active\" as having a defined one-time amount, filter with OneTimeAmountAfterDiscount IS NOT NULL. If you instead need only positive charges, use OneTimeAmountAfterDiscount > 0."
          },
          {
            "name": "ExtraFeeAmountAfterDiscount",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "status_indicator",
            "description": "Although this is a monetary column rather than a classic boolean status flag, NULL typically denotes 'no data / not applicable / not charged', while a populated MONEY value indicates an explicitly recorded post-discount extra fee. To treat rows with an actual fee (including credits) as 'active', filter for non-null and non-zero values. If you only care about positive charges, use ExtraFeeAmountAfterDiscount > 0 instead."
          },
          {
            "name": "ActualSpentBudget",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ActualSpentBudget"
          },
          {
            "name": "ExtraFeeAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "ExtraFeeAmountAfterCC"
          },
          {
            "name": "AlteredPPCAmountAfterCC",
            "type": "MONEY",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "AlteredPPCAmountAfterCC"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctProductCount",
            "expression": "COUNT(DISTINCT ProductID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ProductID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctVersionSectionCount",
            "expression": "COUNT(DISTINCT VersionSectionID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "VersionSectionID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctGeoAreaCount",
            "expression": "COUNT(DISTINCT GeoAreaID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "GeoAreaID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctHeadingCount",
            "expression": "COUNT(DISTINCT HeadingID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "HeadingID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalPrice",
            "expression": "SUM(Price)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "Price"
            ],
            "filters_applied": []
          },
          {
            "name": "AveragePrice",
            "expression": "AVG(Price)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "Price"
            ],
            "filters_applied": []
          },
          {
            "name": "MinPrice",
            "expression": "MIN(Price)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "Price"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxPrice",
            "expression": "MAX(Price)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "Price"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDiscount",
            "expression": "SUM(Discount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "Discount"
            ],
            "filters_applied": [
              "Discount > 0"
            ]
          },
          {
            "name": "TotalRulesDiscount",
            "expression": "SUM(RulesDiscount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "RulesDiscount"
            ],
            "filters_applied": [
              "RulesDiscount <> 0 -- (or use RulesDiscount > 0 if you only want positive discounts considered 'active')"
            ]
          },
          {
            "name": "TotalAlteredAmount",
            "expression": "SUM(AlteredAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "AlteredAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalPaymentDiscount",
            "expression": "SUM(PaymentDiscount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "PaymentDiscount"
            ],
            "filters_applied": [
              "PaymentDiscount IS NOT NULL AND PaymentDiscount > 0"
            ]
          },
          {
            "name": "TotalProductDiscount",
            "expression": "SUM(ProductDiscount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "ProductDiscount"
            ],
            "filters_applied": [
              "ProductDiscount IS NOT NULL AND ProductDiscount > 0"
            ]
          },
          {
            "name": "TotalBundleDiscount",
            "expression": "SUM(BundleDiscount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "BundleDiscount"
            ],
            "filters_applied": [
              "BundleDiscount IS NOT NULL AND BundleDiscount > 0"
            ]
          },
          {
            "name": "TotalDiscountsCombined",
            "expression": "SUM(COALESCE(Discount,0) + COALESCE(RulesDiscount,0) + COALESCE(PaymentDiscount,0) + COALESCE(ProductDiscount,0) + COALESCE(BundleDiscount,0))",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "Discount",
              "RulesDiscount",
              "PaymentDiscount",
              "ProductDiscount",
              "BundleDiscount"
            ],
            "filters_applied": [
              "Discount > 0",
              "RulesDiscount <> 0 -- (or use RulesDiscount > 0 if you only want positive discounts considered 'active')",
              "PaymentDiscount IS NOT NULL AND PaymentDiscount > 0",
              "ProductDiscount IS NOT NULL AND ProductDiscount > 0",
              "BundleDiscount IS NOT NULL AND BundleDiscount > 0"
            ]
          },
          {
            "name": "AverageDiscountToPriceRatio",
            "expression": "AVG(CASE WHEN Price <> 0 THEN (COALESCE(Discount,0) / Price) ELSE NULL END)",
            "datatype": "float",
            "format": "percentage",
            "depends_on": [
              "Discount",
              "Price"
            ],
            "filters_applied": [
              "Discount > 0"
            ]
          },
          {
            "name": "TotalBudgetAmount",
            "expression": "SUM(BudgetAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "BudgetAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalActualSpentBudget",
            "expression": "SUM(ActualSpentBudget)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "ActualSpentBudget"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageBudgetUtilization",
            "expression": "AVG(CASE WHEN COALESCE(BudgetAmount,0) <> 0 THEN (ActualSpentBudget / BudgetAmount) ELSE NULL END)",
            "datatype": "float",
            "format": "percentage",
            "depends_on": [
              "BudgetAmount",
              "ActualSpentBudget"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalOneTimeAmount",
            "expression": "SUM(OneTimeAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "OneTimeAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalExtraFeeAmount",
            "expression": "SUM(ExtraFeeAmount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "ExtraFeeAmount"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalOneTimeAmountAfterDiscount",
            "expression": "SUM(OneTimeAmountAfterDiscount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "OneTimeAmountAfterDiscount"
            ],
            "filters_applied": [
              "OneTimeAmountAfterDiscount IS NOT NULL"
            ]
          },
          {
            "name": "TotalExtraFeeAmountAfterDiscount",
            "expression": "SUM(ExtraFeeAmountAfterDiscount)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "ExtraFeeAmountAfterDiscount"
            ],
            "filters_applied": [
              "ExtraFeeAmountAfterDiscount IS NOT NULL AND ExtraFeeAmountAfterDiscount <> 0"
            ]
          },
          {
            "name": "TotalExtraFeeAmountAfterCC",
            "expression": "SUM(ExtraFeeAmountAfterCC)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "ExtraFeeAmountAfterCC"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalAlteredPPCAmountAfterCC",
            "expression": "SUM(AlteredPPCAmountAfterCC)",
            "datatype": "decimal",
            "format": "currency",
            "depends_on": [
              "AlteredPPCAmountAfterCC"
            ],
            "filters_applied": []
          },
          {
            "name": "SumMonths",
            "expression": "SUM(Months)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Months"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageMonths",
            "expression": "AVG(Months)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "Months"
            ],
            "filters_applied": []
          },
          {
            "name": "MinMonths",
            "expression": "MIN(Months)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Months"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxMonths",
            "expression": "MAX(Months)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Months"
            ],
            "filters_applied": []
          },
          {
            "name": "SumCompletedChanges",
            "expression": "SUM(CompletedChanges)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CompletedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageCompletedChanges",
            "expression": "AVG(CompletedChanges)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "CompletedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "MinCompletedChanges",
            "expression": "MIN(CompletedChanges)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CompletedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxCompletedChanges",
            "expression": "MAX(CompletedChanges)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "CompletedChanges"
            ],
            "filters_applied": []
          },
          {
            "name": "CountWithDeactivationReason",
            "expression": "SUM(CASE WHEN DeactivationReason IS NOT NULL THEN 1 ELSE 0 END)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DeactivationReason"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctDeactivationReasonCount",
            "expression": "COUNT(DISTINCT DeactivationReason)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DeactivationReason"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctRelatedFreeTemplateAdvertisementCount",
            "expression": "COUNT(DISTINCT RelatedFreeTemplateAdvertisementID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RelatedFreeTemplateAdvertisementID"
            ],
            "filters_applied": [
              "RelatedFreeTemplateAdvertisementID IS NULL"
            ]
          }
        ],
        "foreign_keys": [
          {
            "column": "VersionSectionID",
            "references": "dbo"
          },
          {
            "column": "CaseAttachmentID",
            "references": "dbo"
          },
          {
            "column": "FreeTemplateID",
            "references": "dbo"
          },
          {
            "column": "ProductID",
            "references": "dbo"
          },
          {
            "column": "ProductKitID",
            "references": "dbo"
          },
          {
            "column": "HeadingID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "BatchActionHistoryAnalysis",
        "source": "dbo.BatchActionHistoryAnalysis",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BatchID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BatchID"
          },
          {
            "name": "EntityID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "EntityID"
          },
          {
            "name": "EntityType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "EntityType"
          },
          {
            "name": "Type",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Type"
          },
          {
            "name": "EntityData",
            "type": "XML",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "EntityData"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctEntityCount",
            "expression": "COUNT(DISTINCT EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctEntityTypeCount",
            "expression": "COUNT(DISTINCT EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctTypeCount",
            "expression": "COUNT(DISTINCT Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageEntityID",
            "expression": "AVG(EntityID)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageEntityType",
            "expression": "AVG(EntityType)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageType",
            "expression": "AVG(Type)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "MinEntityID",
            "expression": "MIN(EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxEntityID",
            "expression": "MAX(EntityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinEntityType",
            "expression": "MIN(EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxEntityType",
            "expression": "MAX(EntityType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "EntityType"
            ],
            "filters_applied": []
          },
          {
            "name": "MinType",
            "expression": "MIN(Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxType",
            "expression": "MAX(Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": []
      },
      {
        "name": "TaskTarget",
        "source": "dbo.TaskTarget",
        "grain": [
          "TaskID",
          "TargetCaseID"
        ],
        "columns": [
          {
            "name": "TaskID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TaskID"
          },
          {
            "name": "TargetCaseID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TargetCaseID"
          },
          {
            "name": "DMKey",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMKey"
          },
          {
            "name": "DMTable",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMTable"
          },
          {
            "name": "DMCharKey",
            "type": "NVARCHAR(50) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "DMCharKey"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctDMKeyCount",
            "expression": "COUNT(DISTINCT DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "TotalDMKey",
            "expression": "SUM(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageDMKey",
            "expression": "AVG(DMKey)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MinDMKey",
            "expression": "MIN(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxDMKey",
            "expression": "MAX(DMKey)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          },
          {
            "name": "MissingDMKeyCount",
            "expression": "SUM(CASE WHEN DMKey IS NULL THEN 1 ELSE 0 END)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "DMKey"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "TargetCaseID",
            "references": "dbo"
          },
          {
            "column": "TaskID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "BatchActionHistory",
        "source": "dbo.BatchActionHistory",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "BatchID",
            "type": "UNIQUEIDENTIFIER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BatchID"
          },
          {
            "name": "BatchActionType",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "BatchActionType"
          },
          {
            "name": "TimeStamp",
            "type": "DATETIME",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TimeStamp"
          },
          {
            "name": "RowsAffected",
            "type": "INTEGER",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "RowsAffected"
          },
          {
            "name": "Text",
            "type": "NVARCHAR(512) COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "Text"
          },
          {
            "name": "Status",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "status_indicator",
            "description": "Because Status is NOT NULL, there is no NULL state \u2014 every record has a status code. Populated values are encoded integers whose meanings are defined by the application (common patterns include 0=New,1=Active/Completed,2=Failed,3=Cancelled, etc.). To select active records you must use the integer value(s) that the application designates as 'active' (example filter shown; consult documentation or a status lookup table to determine the correct code(s))."
          },
          {
            "name": "Type",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "Type"
          }
        ],
        "measures": [
          {
            "name": "ActionCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "TotalRowsAffected",
            "expression": "SUM(RowsAffected)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RowsAffected"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageRowsAffected",
            "expression": "AVG(RowsAffected)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "RowsAffected"
            ],
            "filters_applied": []
          },
          {
            "name": "MinRowsAffected",
            "expression": "MIN(RowsAffected)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RowsAffected"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxRowsAffected",
            "expression": "MAX(RowsAffected)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RowsAffected"
            ],
            "filters_applied": []
          },
          {
            "name": "ActionsWithRowsAffectedCount",
            "expression": "SUM(CASE WHEN RowsAffected > 0 THEN 1 ELSE 0 END)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "RowsAffected"
            ],
            "filters_applied": []
          },
          {
            "name": "PercentActionsWithRowsAffected",
            "expression": "SUM(CASE WHEN RowsAffected > 0 THEN 1 ELSE 0 END) * 1.0 / NULLIF(COUNT(*), 0)",
            "datatype": "float",
            "format": "percentage",
            "depends_on": [
              "RowsAffected"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctBatchActionTypes",
            "expression": "COUNT(DISTINCT BatchActionType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BatchActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "MinBatchActionTypeCode",
            "expression": "MIN(BatchActionType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BatchActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxBatchActionTypeCode",
            "expression": "MAX(BatchActionType)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "BatchActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageBatchActionTypeCode",
            "expression": "AVG(BatchActionType)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "BatchActionType"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctStatuses",
            "expression": "COUNT(DISTINCT Status)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Status"
            ],
            "filters_applied": [
              "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
            ]
          },
          {
            "name": "MinStatusCode",
            "expression": "MIN(Status)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Status"
            ],
            "filters_applied": [
              "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
            ]
          },
          {
            "name": "MaxStatusCode",
            "expression": "MAX(Status)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Status"
            ],
            "filters_applied": [
              "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
            ]
          },
          {
            "name": "AverageStatusCode",
            "expression": "AVG(Status)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "Status"
            ],
            "filters_applied": [
              "Status = 1 -- replace 1 with the integer code (or Status IN (1,2) with the appropriate codes) that your application uses to denote 'active'"
            ]
          },
          {
            "name": "DistinctTypes",
            "expression": "COUNT(DISTINCT Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTypeCode",
            "expression": "MIN(Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTypeCode",
            "expression": "MAX(Type)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageTypeCode",
            "expression": "AVG(Type)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "Type"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": []
      },
      {
        "name": "TicketCommunication",
        "source": "dbo.TicketCommunication",
        "grain": [
          "ID"
        ],
        "columns": [
          {
            "name": "ID",
            "type": "TableID()",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ID"
          },
          {
            "name": "TicketID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "TicketID"
          },
          {
            "name": "CommunicationText",
            "type": "NVARCHAR COLLATE \"Greek_CI_AS\"",
            "nullable": true,
            "semantic_role": "metadata",
            "description": "CommunicationText"
          }
        ],
        "measures": [
          {
            "name": "CommunicationCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctTicketCount",
            "expression": "COUNT(DISTINCT TicketID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TicketID"
            ],
            "filters_applied": []
          },
          {
            "name": "CommunicationsPerTicket",
            "expression": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT TicketID), 0)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "TicketID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinTicketID",
            "expression": "MIN(TicketID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TicketID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxTicketID",
            "expression": "MAX(TicketID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "TicketID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageTicketID",
            "expression": "AVG(TicketID)",
            "datatype": "decimal",
            "format": "number",
            "depends_on": [
              "TicketID"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": [
          {
            "column": "TicketID",
            "references": "dbo"
          }
        ]
      },
      {
        "name": "KeywordMapping",
        "source": "MigrationSteps.KeywordMapping",
        "grain": [],
        "columns": [
          {
            "name": "ActivityID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ActivityID"
          },
          {
            "name": "KeywordID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "KeywordID"
          },
          {
            "name": "NewAttributeValueID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "NewAttributeValueID"
          }
        ],
        "measures": [
          {
            "name": "TotalRecords",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "DistinctActivityCount",
            "expression": "COUNT(DISTINCT ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctKeywordCount",
            "expression": "COUNT(DISTINCT KeywordID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "KeywordID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctNewAttributeValueCount",
            "expression": "COUNT(DISTINCT NewAttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "NewAttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "RecordsWithNewAttributeValue",
            "expression": "COUNT(NewAttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "NewAttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinActivityID",
            "expression": "MIN(ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxActivityID",
            "expression": "MAX(ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageActivityID",
            "expression": "AVG(ActivityID)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinKeywordID",
            "expression": "MIN(KeywordID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "KeywordID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxKeywordID",
            "expression": "MAX(KeywordID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "KeywordID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageKeywordID",
            "expression": "AVG(KeywordID)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "KeywordID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinNewAttributeValueID",
            "expression": "MIN(NewAttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "NewAttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxNewAttributeValueID",
            "expression": "MAX(NewAttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "NewAttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageNewAttributeValueID",
            "expression": "AVG(NewAttributeValueID)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "NewAttributeValueID"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": []
      },
      {
        "name": "Step1",
        "source": "MigrationSteps.Step1",
        "grain": [],
        "columns": [
          {
            "name": "ActivityID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "ActivityID"
          },
          {
            "name": "AttributeValueID",
            "type": "INTEGER",
            "nullable": false,
            "semantic_role": "metadata",
            "description": "AttributeValueID"
          }
        ],
        "measures": [
          {
            "name": "RecordCount",
            "expression": "COUNT(*)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [],
            "filters_applied": []
          },
          {
            "name": "SumActivityID",
            "expression": "SUM(ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageActivityID",
            "expression": "AVG(ActivityID)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinActivityID",
            "expression": "MIN(ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxActivityID",
            "expression": "MAX(ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "CountActivityID",
            "expression": "COUNT(ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctActivityIDCount",
            "expression": "COUNT(DISTINCT ActivityID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "ActivityID"
            ],
            "filters_applied": []
          },
          {
            "name": "SumAttributeValueID",
            "expression": "SUM(AttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "AverageAttributeValueID",
            "expression": "AVG(AttributeValueID)",
            "datatype": "float",
            "format": "number",
            "depends_on": [
              "AttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "MinAttributeValueID",
            "expression": "MIN(AttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "MaxAttributeValueID",
            "expression": "MAX(AttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "CountAttributeValueID",
            "expression": "COUNT(AttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AttributeValueID"
            ],
            "filters_applied": []
          },
          {
            "name": "DistinctAttributeValueIDCount",
            "expression": "COUNT(DISTINCT AttributeValueID)",
            "datatype": "integer",
            "format": "number",
            "depends_on": [
              "AttributeValueID"
            ],
            "filters_applied": []
          }
        ],
        "foreign_keys": []
      }
    ],
    "relationships": [],
    "metrics": [
      {
        "name": "ContentAttributeValue RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "ContentAttributeValue.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from ContentAttributeValue"
      },
      {
        "name": "ContentAttributeValue TotalSeqNo",
        "purpose": "Track TotalSeqNo",
        "logic": "SUM(SeqNo)",
        "inputs": [
          "ContentAttributeValue.TotalSeqNo"
        ],
        "constraints": [],
        "explain": "Aggregate TotalSeqNo from ContentAttributeValue"
      },
      {
        "name": "ContentAttributeValue AverageSeqNo",
        "purpose": "Track AverageSeqNo",
        "logic": "AVG(SeqNo)",
        "inputs": [
          "ContentAttributeValue.AverageSeqNo"
        ],
        "constraints": [],
        "explain": "Aggregate AverageSeqNo from ContentAttributeValue"
      },
      {
        "name": "FreeTemplateAttributeValue RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "FreeTemplateAttributeValue.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from FreeTemplateAttributeValue"
      },
      {
        "name": "FreeTemplateAttributeValue DistinctDMKeyCount",
        "purpose": "Track DistinctDMKeyCount",
        "logic": "COUNT(DISTINCT DMKey)",
        "inputs": [
          "FreeTemplateAttributeValue.DistinctDMKeyCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctDMKeyCount from FreeTemplateAttributeValue"
      },
      {
        "name": "FreeTemplateAttributeValue SumSeqNo",
        "purpose": "Track SumSeqNo",
        "logic": "SUM(SeqNo)",
        "inputs": [
          "FreeTemplateAttributeValue.SumSeqNo"
        ],
        "constraints": [],
        "explain": "Aggregate SumSeqNo from FreeTemplateAttributeValue"
      },
      {
        "name": "TaskLog TaskLogCount",
        "purpose": "Track TaskLogCount",
        "logic": "COUNT(*)",
        "inputs": [
          "TaskLog.TaskLogCount"
        ],
        "constraints": [],
        "explain": "Aggregate TaskLogCount from TaskLog"
      },
      {
        "name": "TaskLog DistinctDMKeyCount",
        "purpose": "Track DistinctDMKeyCount",
        "logic": "COUNT(DISTINCT DMKey)",
        "inputs": [
          "TaskLog.DistinctDMKeyCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctDMKeyCount from TaskLog"
      },
      {
        "name": "TaskLog TotalDMKey",
        "purpose": "Track TotalDMKey",
        "logic": "SUM(DMKey)",
        "inputs": [
          "TaskLog.TotalDMKey"
        ],
        "constraints": [],
        "explain": "Aggregate TotalDMKey from TaskLog"
      },
      {
        "name": "TaskAssignment AssignmentCount",
        "purpose": "Track AssignmentCount",
        "logic": "COUNT(*)",
        "inputs": [
          "TaskAssignment.AssignmentCount"
        ],
        "constraints": [],
        "explain": "Aggregate AssignmentCount from TaskAssignment"
      },
      {
        "name": "TaskAssignment DistinctDMKeyCount",
        "purpose": "Track DistinctDMKeyCount",
        "logic": "COUNT(DISTINCT DMKey)",
        "inputs": [
          "TaskAssignment.DistinctDMKeyCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctDMKeyCount from TaskAssignment"
      },
      {
        "name": "TaskAssignment DistinctAssignmentTypeCount",
        "purpose": "Track DistinctAssignmentTypeCount",
        "logic": "COUNT(DISTINCT AssignmentType)",
        "inputs": [
          "TaskAssignment.DistinctAssignmentTypeCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctAssignmentTypeCount from TaskAssignment"
      },
      {
        "name": "TimeLogger RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(ID)",
        "inputs": [
          "TimeLogger.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from TimeLogger"
      },
      {
        "name": "TimeLogger DistinctIDCount",
        "purpose": "Track DistinctIDCount",
        "logic": "COUNT(DISTINCT ID)",
        "inputs": [
          "TimeLogger.DistinctIDCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctIDCount from TimeLogger"
      },
      {
        "name": "TimeLogger MinID",
        "purpose": "Track MinID",
        "logic": "MIN(ID)",
        "inputs": [
          "TimeLogger.MinID"
        ],
        "constraints": [],
        "explain": "Aggregate MinID from TimeLogger"
      },
      {
        "name": "TargetGroupItem RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "TargetGroupItem.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from TargetGroupItem"
      },
      {
        "name": "TargetGroupItem MainHeadingID_Count",
        "purpose": "Track MainHeadingID_Count",
        "logic": "COUNT(MainHeadingID)",
        "inputs": [
          "TargetGroupItem.MainHeadingID_Count"
        ],
        "constraints": [],
        "explain": "Aggregate MainHeadingID_Count from TargetGroupItem"
      },
      {
        "name": "TargetGroupItem DMKey_Count",
        "purpose": "Track DMKey_Count",
        "logic": "COUNT(DMKey)",
        "inputs": [
          "TargetGroupItem.DMKey_Count"
        ],
        "constraints": [],
        "explain": "Aggregate DMKey_Count from TargetGroupItem"
      },
      {
        "name": "PricelistItemDetail TotalUnitAmount",
        "purpose": "Track TotalUnitAmount",
        "logic": "SUM(UnitAmount)",
        "inputs": [
          "PricelistItemDetail.TotalUnitAmount"
        ],
        "constraints": [],
        "explain": "Aggregate TotalUnitAmount from PricelistItemDetail"
      },
      {
        "name": "PricelistItemDetail AverageUnitAmount",
        "purpose": "Track AverageUnitAmount",
        "logic": "AVG(UnitAmount)",
        "inputs": [
          "PricelistItemDetail.AverageUnitAmount"
        ],
        "constraints": [],
        "explain": "Aggregate AverageUnitAmount from PricelistItemDetail"
      },
      {
        "name": "PricelistItemDetail MinimumUnitAmount",
        "purpose": "Track MinimumUnitAmount",
        "logic": "MIN(UnitAmount)",
        "inputs": [
          "PricelistItemDetail.MinimumUnitAmount"
        ],
        "constraints": [],
        "explain": "Aggregate MinimumUnitAmount from PricelistItemDetail"
      },
      {
        "name": "AuditLog RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "AuditLog.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from AuditLog"
      },
      {
        "name": "AuditLog DistinctEntityCount",
        "purpose": "Track DistinctEntityCount",
        "logic": "COUNT(DISTINCT EntityID)",
        "inputs": [
          "AuditLog.DistinctEntityCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctEntityCount from AuditLog"
      },
      {
        "name": "AuditLog NonNullEntityCount",
        "purpose": "Track NonNullEntityCount",
        "logic": "COUNT(EntityID)",
        "inputs": [
          "AuditLog.NonNullEntityCount"
        ],
        "constraints": [],
        "explain": "Aggregate NonNullEntityCount from AuditLog"
      },
      {
        "name": "BusinessPointComment TotalComments",
        "purpose": "Track TotalComments",
        "logic": "COUNT(*)",
        "inputs": [
          "BusinessPointComment.TotalComments"
        ],
        "constraints": [],
        "explain": "Aggregate TotalComments from BusinessPointComment"
      },
      {
        "name": "BusinessPointComment DistinctUsers",
        "purpose": "Track DistinctUsers",
        "logic": "COUNT(DISTINCT UserID)",
        "inputs": [
          "BusinessPointComment.DistinctUsers"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctUsers from BusinessPointComment"
      },
      {
        "name": "BusinessPointComment DistinctBusinessPoints",
        "purpose": "Track DistinctBusinessPoints",
        "logic": "COUNT(DISTINCT BusinessPointID)",
        "inputs": [
          "BusinessPointComment.DistinctBusinessPoints"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctBusinessPoints from BusinessPointComment"
      },
      {
        "name": "DialerTask TaskCount",
        "purpose": "Track TaskCount",
        "logic": "COUNT([ID])",
        "inputs": [
          "DialerTask.TaskCount"
        ],
        "constraints": [],
        "explain": "Aggregate TaskCount from DialerTask"
      },
      {
        "name": "DialerTask DistinctTaskIDs",
        "purpose": "Track DistinctTaskIDs",
        "logic": "COUNT(DISTINCT [ID])",
        "inputs": [
          "DialerTask.DistinctTaskIDs"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctTaskIDs from DialerTask"
      },
      {
        "name": "DialerTask MinTaskID",
        "purpose": "Track MinTaskID",
        "logic": "MIN([ID])",
        "inputs": [
          "DialerTask.MinTaskID"
        ],
        "constraints": [],
        "explain": "Aggregate MinTaskID from DialerTask"
      },
      {
        "name": "TargetGroupItemPeriod TotalRecords",
        "purpose": "Track TotalRecords",
        "logic": "COUNT(*)",
        "inputs": [
          "TargetGroupItemPeriod.TotalRecords"
        ],
        "constraints": [],
        "explain": "Aggregate TotalRecords from TargetGroupItemPeriod"
      },
      {
        "name": "TargetGroupItemPeriod DMKeyNonNullCount",
        "purpose": "Track DMKeyNonNullCount",
        "logic": "COUNT(DMKey)",
        "inputs": [
          "TargetGroupItemPeriod.DMKeyNonNullCount"
        ],
        "constraints": [],
        "explain": "Aggregate DMKeyNonNullCount from TargetGroupItemPeriod"
      },
      {
        "name": "TargetGroupItemPeriod DistinctTargetGroups",
        "purpose": "Track DistinctTargetGroups",
        "logic": "COUNT(DISTINCT DMKey)",
        "inputs": [
          "TargetGroupItemPeriod.DistinctTargetGroups"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctTargetGroups from TargetGroupItemPeriod"
      },
      {
        "name": "Advertisement TotalProductID",
        "purpose": "Track TotalProductID",
        "logic": "SUM(ProductID)",
        "inputs": [
          "Advertisement.TotalProductID"
        ],
        "constraints": [],
        "explain": "Aggregate TotalProductID from Advertisement"
      },
      {
        "name": "Advertisement TotalVersionSectionID",
        "purpose": "Track TotalVersionSectionID",
        "logic": "SUM(VersionSectionID)",
        "inputs": [
          "Advertisement.TotalVersionSectionID"
        ],
        "constraints": [],
        "explain": "Aggregate TotalVersionSectionID from Advertisement"
      },
      {
        "name": "Advertisement TotalGeoAreaID",
        "purpose": "Track TotalGeoAreaID",
        "logic": "SUM(GeoAreaID)",
        "inputs": [
          "Advertisement.TotalGeoAreaID"
        ],
        "constraints": [],
        "explain": "Aggregate TotalGeoAreaID from Advertisement"
      },
      {
        "name": "CampaignNewLossCustomer TotalRecords",
        "purpose": "Track TotalRecords",
        "logic": "COUNT(*)",
        "inputs": [
          "CampaignNewLossCustomer.TotalRecords"
        ],
        "constraints": [],
        "explain": "Aggregate TotalRecords from CampaignNewLossCustomer"
      },
      {
        "name": "CampaignNewLossCustomer DistinctRuleCount",
        "purpose": "Track DistinctRuleCount",
        "logic": "COUNT(DISTINCT RuleID)",
        "inputs": [
          "CampaignNewLossCustomer.DistinctRuleCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctRuleCount from CampaignNewLossCustomer"
      },
      {
        "name": "CampaignNewLossCustomer MinRuleID",
        "purpose": "Track MinRuleID",
        "logic": "MIN(RuleID)",
        "inputs": [
          "CampaignNewLossCustomer.MinRuleID"
        ],
        "constraints": [],
        "explain": "Aggregate MinRuleID from CampaignNewLossCustomer"
      },
      {
        "name": "Classification RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "Classification.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from Classification"
      },
      {
        "name": "Classification UniqueDMKeyCount",
        "purpose": "Track UniqueDMKeyCount",
        "logic": "COUNT(DISTINCT DMKey)",
        "inputs": [
          "Classification.UniqueDMKeyCount"
        ],
        "constraints": [],
        "explain": "Aggregate UniqueDMKeyCount from Classification"
      },
      {
        "name": "Classification TotalDMKey",
        "purpose": "Track TotalDMKey",
        "logic": "SUM(DMKey)",
        "inputs": [
          "Classification.TotalDMKey"
        ],
        "constraints": [],
        "explain": "Aggregate TotalDMKey from Classification"
      },
      {
        "name": "ContractProduct TotalState",
        "purpose": "Track TotalState",
        "logic": "SUM(State)",
        "inputs": [
          "ContractProduct.TotalState"
        ],
        "constraints": [
          "State = 1 -- (use the integer code that represents 'active' in your environment; alternatively use a lookup: EXISTS (SELECT 1 FROM dbo.ContractProductState s WHERE s.Code = dbo.ContractProduct.State AND s.IsActive = 1))"
        ],
        "explain": "Aggregate TotalState from ContractProduct"
      },
      {
        "name": "ContractProduct TotalPrice",
        "purpose": "Track TotalPrice",
        "logic": "SUM(Price)",
        "inputs": [
          "ContractProduct.TotalPrice"
        ],
        "constraints": [],
        "explain": "Aggregate TotalPrice from ContractProduct"
      },
      {
        "name": "ContractProduct TotalSalesTypeID",
        "purpose": "Track TotalSalesTypeID",
        "logic": "SUM(SalesTypeID)",
        "inputs": [
          "ContractProduct.TotalSalesTypeID"
        ],
        "constraints": [],
        "explain": "Aggregate TotalSalesTypeID from ContractProduct"
      },
      {
        "name": "CaseComment TotalComments",
        "purpose": "Track TotalComments",
        "logic": "COUNT(*)",
        "inputs": [
          "CaseComment.TotalComments"
        ],
        "constraints": [],
        "explain": "Aggregate TotalComments from CaseComment"
      },
      {
        "name": "CaseComment CommentType_Count",
        "purpose": "Track CommentType_Count",
        "logic": "COUNT(CommentType)",
        "inputs": [
          "CaseComment.CommentType_Count"
        ],
        "constraints": [],
        "explain": "Aggregate CommentType_Count from CaseComment"
      },
      {
        "name": "CaseComment CommentType_DistinctCount",
        "purpose": "Track CommentType_DistinctCount",
        "logic": "COUNT(DISTINCT CommentType)",
        "inputs": [
          "CaseComment.CommentType_DistinctCount"
        ],
        "constraints": [],
        "explain": "Aggregate CommentType_DistinctCount from CaseComment"
      },
      {
        "name": "CampaignScoreHistoryDetail RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(ID)",
        "inputs": [
          "CampaignScoreHistoryDetail.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from CampaignScoreHistoryDetail"
      },
      {
        "name": "CampaignScoreHistoryDetail DistinctCampaignCount",
        "purpose": "Track DistinctCampaignCount",
        "logic": "COUNT(DISTINCT CampaignID)",
        "inputs": [
          "CampaignScoreHistoryDetail.DistinctCampaignCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctCampaignCount from CampaignScoreHistoryDetail"
      },
      {
        "name": "CampaignScoreHistoryDetail DistinctBusinessPointCount",
        "purpose": "Track DistinctBusinessPointCount",
        "logic": "COUNT(DISTINCT BusinessPointID)",
        "inputs": [
          "CampaignScoreHistoryDetail.DistinctBusinessPointCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctBusinessPointCount from CampaignScoreHistoryDetail"
      },
      {
        "name": "PointRelationship RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "PointRelationship.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from PointRelationship"
      },
      {
        "name": "PointRelationship DistinctDMKeyCount",
        "purpose": "Track DistinctDMKeyCount",
        "logic": "COUNT(DISTINCT DMKey)",
        "inputs": [
          "PointRelationship.DistinctDMKeyCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctDMKeyCount from PointRelationship"
      },
      {
        "name": "PointRelationship DistinctTypeCount",
        "purpose": "Track DistinctTypeCount",
        "logic": "COUNT(DISTINCT Type)",
        "inputs": [
          "PointRelationship.DistinctTypeCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctTypeCount from PointRelationship"
      },
      {
        "name": "BusinessPointConfirmationHistory CountConfirmations",
        "purpose": "Track CountConfirmations",
        "logic": "COUNT(*)",
        "inputs": [
          "BusinessPointConfirmationHistory.CountConfirmations"
        ],
        "constraints": [],
        "explain": "Aggregate CountConfirmations from BusinessPointConfirmationHistory"
      },
      {
        "name": "BusinessPointConfirmationHistory DistinctBusinessPointCount",
        "purpose": "Track DistinctBusinessPointCount",
        "logic": "COUNT(DISTINCT BusinessPointIdentificationID)",
        "inputs": [
          "BusinessPointConfirmationHistory.DistinctBusinessPointCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctBusinessPointCount from BusinessPointConfirmationHistory"
      },
      {
        "name": "BusinessPointConfirmationHistory DistinctPerformerCount",
        "purpose": "Track DistinctPerformerCount",
        "logic": "COUNT(DISTINCT PerformedByID)",
        "inputs": [
          "BusinessPointConfirmationHistory.DistinctPerformerCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctPerformerCount from BusinessPointConfirmationHistory"
      },
      {
        "name": "UserLog RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "UserLog.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from UserLog"
      },
      {
        "name": "UserLog ActionNonNullCount",
        "purpose": "Track ActionNonNullCount",
        "logic": "COUNT(Action)",
        "inputs": [
          "UserLog.ActionNonNullCount"
        ],
        "constraints": [],
        "explain": "Aggregate ActionNonNullCount from UserLog"
      },
      {
        "name": "UserLog DistinctActionCount",
        "purpose": "Track DistinctActionCount",
        "logic": "COUNT(DISTINCT Action)",
        "inputs": [
          "UserLog.DistinctActionCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctActionCount from UserLog"
      },
      {
        "name": "Ticket TicketCount",
        "purpose": "Track TicketCount",
        "logic": "COUNT(DMKey)",
        "inputs": [
          "Ticket.TicketCount"
        ],
        "constraints": [],
        "explain": "Aggregate TicketCount from Ticket"
      },
      {
        "name": "Ticket DistinctResultCount",
        "purpose": "Track DistinctResultCount",
        "logic": "COUNT(DISTINCT Result)",
        "inputs": [
          "Ticket.DistinctResultCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctResultCount from Ticket"
      },
      {
        "name": "Ticket ResultMin",
        "purpose": "Track ResultMin",
        "logic": "MIN(Result)",
        "inputs": [
          "Ticket.ResultMin"
        ],
        "constraints": [],
        "explain": "Aggregate ResultMin from Ticket"
      },
      {
        "name": "TicketResult TotalResult",
        "purpose": "Track TotalResult",
        "logic": "SUM(Result)",
        "inputs": [
          "TicketResult.TotalResult"
        ],
        "constraints": [],
        "explain": "Aggregate TotalResult from TicketResult"
      },
      {
        "name": "TicketResult AverageResult",
        "purpose": "Track AverageResult",
        "logic": "AVG(Result)",
        "inputs": [
          "TicketResult.AverageResult"
        ],
        "constraints": [],
        "explain": "Aggregate AverageResult from TicketResult"
      },
      {
        "name": "TicketResult MinResult",
        "purpose": "Track MinResult",
        "logic": "MIN(Result)",
        "inputs": [
          "TicketResult.MinResult"
        ],
        "constraints": [],
        "explain": "Aggregate MinResult from TicketResult"
      },
      {
        "name": "FreeTemplate TotalState",
        "purpose": "Track TotalState",
        "logic": "SUM(State)",
        "inputs": [
          "FreeTemplate.TotalState"
        ],
        "constraints": [
          "State = 1"
        ],
        "explain": "Aggregate TotalState from FreeTemplate"
      },
      {
        "name": "FreeTemplate TotalPrice",
        "purpose": "Track TotalPrice",
        "logic": "SUM(Price)",
        "inputs": [
          "FreeTemplate.TotalPrice"
        ],
        "constraints": [],
        "explain": "Aggregate TotalPrice from FreeTemplate"
      },
      {
        "name": "FreeTemplate TotalSalesTypeID",
        "purpose": "Track TotalSalesTypeID",
        "logic": "SUM(SalesTypeID)",
        "inputs": [
          "FreeTemplate.TotalSalesTypeID"
        ],
        "constraints": [],
        "explain": "Aggregate TotalSalesTypeID from FreeTemplate"
      },
      {
        "name": "FreeTemplateAdvertisement RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "FreeTemplateAdvertisement.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from FreeTemplateAdvertisement"
      },
      {
        "name": "FreeTemplateAdvertisement DistinctProductCount",
        "purpose": "Track DistinctProductCount",
        "logic": "COUNT(DISTINCT ProductID)",
        "inputs": [
          "FreeTemplateAdvertisement.DistinctProductCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctProductCount from FreeTemplateAdvertisement"
      },
      {
        "name": "FreeTemplateAdvertisement DistinctVersionSectionCount",
        "purpose": "Track DistinctVersionSectionCount",
        "logic": "COUNT(DISTINCT VersionSectionID)",
        "inputs": [
          "FreeTemplateAdvertisement.DistinctVersionSectionCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctVersionSectionCount from FreeTemplateAdvertisement"
      },
      {
        "name": "BatchActionHistoryAnalysis RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "BatchActionHistoryAnalysis.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from BatchActionHistoryAnalysis"
      },
      {
        "name": "BatchActionHistoryAnalysis DistinctEntityCount",
        "purpose": "Track DistinctEntityCount",
        "logic": "COUNT(DISTINCT EntityID)",
        "inputs": [
          "BatchActionHistoryAnalysis.DistinctEntityCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctEntityCount from BatchActionHistoryAnalysis"
      },
      {
        "name": "BatchActionHistoryAnalysis DistinctEntityTypeCount",
        "purpose": "Track DistinctEntityTypeCount",
        "logic": "COUNT(DISTINCT EntityType)",
        "inputs": [
          "BatchActionHistoryAnalysis.DistinctEntityTypeCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctEntityTypeCount from BatchActionHistoryAnalysis"
      },
      {
        "name": "TaskTarget RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "TaskTarget.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from TaskTarget"
      },
      {
        "name": "TaskTarget DistinctDMKeyCount",
        "purpose": "Track DistinctDMKeyCount",
        "logic": "COUNT(DISTINCT DMKey)",
        "inputs": [
          "TaskTarget.DistinctDMKeyCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctDMKeyCount from TaskTarget"
      },
      {
        "name": "TaskTarget TotalDMKey",
        "purpose": "Track TotalDMKey",
        "logic": "SUM(DMKey)",
        "inputs": [
          "TaskTarget.TotalDMKey"
        ],
        "constraints": [],
        "explain": "Aggregate TotalDMKey from TaskTarget"
      },
      {
        "name": "BatchActionHistory ActionCount",
        "purpose": "Track ActionCount",
        "logic": "COUNT(*)",
        "inputs": [
          "BatchActionHistory.ActionCount"
        ],
        "constraints": [],
        "explain": "Aggregate ActionCount from BatchActionHistory"
      },
      {
        "name": "BatchActionHistory TotalRowsAffected",
        "purpose": "Track TotalRowsAffected",
        "logic": "SUM(RowsAffected)",
        "inputs": [
          "BatchActionHistory.TotalRowsAffected"
        ],
        "constraints": [],
        "explain": "Aggregate TotalRowsAffected from BatchActionHistory"
      },
      {
        "name": "BatchActionHistory AverageRowsAffected",
        "purpose": "Track AverageRowsAffected",
        "logic": "AVG(RowsAffected)",
        "inputs": [
          "BatchActionHistory.AverageRowsAffected"
        ],
        "constraints": [],
        "explain": "Aggregate AverageRowsAffected from BatchActionHistory"
      },
      {
        "name": "TicketCommunication CommunicationCount",
        "purpose": "Track CommunicationCount",
        "logic": "COUNT(*)",
        "inputs": [
          "TicketCommunication.CommunicationCount"
        ],
        "constraints": [],
        "explain": "Aggregate CommunicationCount from TicketCommunication"
      },
      {
        "name": "TicketCommunication DistinctTicketCount",
        "purpose": "Track DistinctTicketCount",
        "logic": "COUNT(DISTINCT TicketID)",
        "inputs": [
          "TicketCommunication.DistinctTicketCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctTicketCount from TicketCommunication"
      },
      {
        "name": "TicketCommunication CommunicationsPerTicket",
        "purpose": "Track CommunicationsPerTicket",
        "logic": "COUNT(*) * 1.0 / NULLIF(COUNT(DISTINCT TicketID), 0)",
        "inputs": [
          "TicketCommunication.CommunicationsPerTicket"
        ],
        "constraints": [],
        "explain": "Aggregate CommunicationsPerTicket from TicketCommunication"
      },
      {
        "name": "KeywordMapping TotalRecords",
        "purpose": "Track TotalRecords",
        "logic": "COUNT(*)",
        "inputs": [
          "KeywordMapping.TotalRecords"
        ],
        "constraints": [],
        "explain": "Aggregate TotalRecords from KeywordMapping"
      },
      {
        "name": "KeywordMapping DistinctActivityCount",
        "purpose": "Track DistinctActivityCount",
        "logic": "COUNT(DISTINCT ActivityID)",
        "inputs": [
          "KeywordMapping.DistinctActivityCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctActivityCount from KeywordMapping"
      },
      {
        "name": "KeywordMapping DistinctKeywordCount",
        "purpose": "Track DistinctKeywordCount",
        "logic": "COUNT(DISTINCT KeywordID)",
        "inputs": [
          "KeywordMapping.DistinctKeywordCount"
        ],
        "constraints": [],
        "explain": "Aggregate DistinctKeywordCount from KeywordMapping"
      },
      {
        "name": "Step1 RecordCount",
        "purpose": "Track RecordCount",
        "logic": "COUNT(*)",
        "inputs": [
          "Step1.RecordCount"
        ],
        "constraints": [],
        "explain": "Aggregate RecordCount from Step1"
      },
      {
        "name": "Step1 SumActivityID",
        "purpose": "Track SumActivityID",
        "logic": "SUM(ActivityID)",
        "inputs": [
          "Step1.SumActivityID"
        ],
        "constraints": [],
        "explain": "Aggregate SumActivityID from Step1"
      },
      {
        "name": "Step1 AverageActivityID",
        "purpose": "Track AverageActivityID",
        "logic": "AVG(ActivityID)",
        "inputs": [
          "Step1.AverageActivityID"
        ],
        "constraints": [],
        "explain": "Aggregate AverageActivityID from Step1"
      }
    ],
    "audit": {
      "dialect": "tsql",
      "source_assets_used": [
        {
          "kind": "table",
          "name_or_path": "dbo.ContentAttributeValue"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.FreeTemplateAttributeValue"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TaskLog"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Task"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TaskAssignment"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BroaderArea"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Case"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TimeLogger"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TargetGroupItem"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.PricelistItemDetail"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.PricelistItem"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.AuditLog"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BusinessPointComment"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.DialerTask"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TargetGroupItemPeriod"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Advertisement"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.CampaignNewLossCustomer"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.ContractDocument"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Classification"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.PaymentMethod"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.ContractProduct"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.PointPhone"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.CaseComment"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.VersionGroupItem"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.CampaignScoreHistoryDetail"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Address"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.PointRelationship"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Phone"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Listing"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BusinessPoint"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BusinessPointConfirmationHistory"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BusinessPointCustomAttributeValue"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.CaseAttachment"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.UserLog"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Ticket"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BusinessPointIdentification"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.DialerBusinessPoint"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TicketResult"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.FreeTemplate"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.FreeTemplateAdvertisement"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BatchActionHistoryAnalysis"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TaskTarget"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BusinessPointListing"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.FreeListingSearchItem"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.BatchActionHistory"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TicketCommunication"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.PointEmail"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.Contact"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.ContactRelationship"
        },
        {
          "kind": "table",
          "name_or_path": "dbo.TaxCode"
        },
        {
          "kind": "table",
          "name_or_path": "HEADQUARTERS\\cstraitchof.DEV12867ClassificationBackup"
        },
        {
          "kind": "table",
          "name_or_path": "HEADQUARTERS\\spitsaris.devops11385_InvoicePaymentMethod_NULL_PaymentMonth"
        },
        {
          "kind": "table",
          "name_or_path": "HEADQUARTERS\\spitsaris.ViewPrefectureBPs"
        },
        {
          "kind": "table",
          "name_or_path": "HEADQUARTERS\\svytinioti.DialerBusinessPoint_20240704_31672"
        },
        {
          "kind": "table",
          "name_or_path": "MigrationSteps.KeywordMapping"
        },
        {
          "kind": "table",
          "name_or_path": "MigrationSteps.AttributeMapping"
        },
        {
          "kind": "table",
          "name_or_path": "MigrationSteps.Step1"
        },
        {
          "kind": "table",
          "name_or_path": "MigrationSteps.ReplaceKeywords"
        },
        {
          "kind": "table",
          "name_or_path": "MigrationSteps.Step2"
        },
        {
          "kind": "table",
          "name_or_path": "MigrationSteps.MergeMapping"
        },
        {
          "kind": "table",
          "name_or_path": "MigrationSteps.ReplaceAV"
        }
      ],
      "assumptions": [
        "Generated via fallback assembly"
      ]
    }
  },
  "usage_guide": {
    "description": "This semantic model can be used to generate SQL queries for BI tools",
    "tables": {
      "facts": [
        "ContentAttributeValue",
        "FreeTemplateAttributeValue",
        "TaskLog",
        "TaskAssignment",
        "TimeLogger",
        "TargetGroupItem",
        "PricelistItemDetail",
        "AuditLog",
        "BusinessPointComment",
        "DialerTask",
        "TargetGroupItemPeriod",
        "Advertisement",
        "CampaignNewLossCustomer",
        "Classification",
        "ContractProduct",
        "CaseComment",
        "CampaignScoreHistoryDetail",
        "PointRelationship",
        "BusinessPointConfirmationHistory",
        "UserLog",
        "Ticket",
        "TicketResult",
        "FreeTemplate",
        "FreeTemplateAdvertisement",
        "BatchActionHistoryAnalysis",
        "TaskTarget",
        "BatchActionHistory",
        "TicketCommunication",
        "KeywordMapping",
        "Step1"
      ],
      "dimensions": [
        "TaxCode",
        "DEV12867ClassificationBackup",
        "devops11385_InvoicePaymentMethod_NULL_PaymentMonth",
        "ViewPrefectureBPs",
        "AttributeMapping",
        "ReplaceKeywords",
        "Step2",
        "MergeMapping",
        "ReplaceAV"
      ],
      "entities": [
        "Task",
        "BroaderArea",
        "Case",
        "PricelistItem",
        "ContractDocument",
        "PaymentMethod",
        "PointPhone",
        "VersionGroupItem",
        "Address",
        "Phone",
        "Listing",
        "BusinessPoint",
        "BusinessPointCustomAttributeValue",
        "CaseAttachment",
        "BusinessPointIdentification",
        "DialerBusinessPoint",
        "BusinessPointListing",
        "FreeListingSearchItem",
        "PointEmail",
        "Contact",
        "ContactRelationship",
        "DialerBusinessPoint_20240704_31672"
      ]
    },
    "measures_available": {
      "ContentAttributeValue": [
        "RecordCount",
        "TotalSeqNo",
        "AverageSeqNo",
        "MinSeqNo",
        "MaxSeqNo",
        "CountSeqNo",
        "TotalDMKey",
        "AverageDMKey",
        "MinDMKey",
        "MaxDMKey",
        "DistinctDMKeyCount"
      ],
      "FreeTemplateAttributeValue": [
        "RecordCount",
        "DistinctDMKeyCount",
        "SumSeqNo",
        "AverageSeqNo",
        "MinSeqNo",
        "MaxSeqNo",
        "SumDMKey",
        "AverageDMKey",
        "MinDMKey",
        "MaxDMKey"
      ],
      "TaskLog": [
        "TaskLogCount",
        "DistinctDMKeyCount",
        "TotalDMKey",
        "AverageDMKey",
        "MinDMKey",
        "MaxDMKey"
      ],
      "TaskAssignment": [
        "AssignmentCount",
        "DistinctDMKeyCount",
        "DistinctAssignmentTypeCount",
        "AssignmentTypeSum",
        "AssignmentTypeAverage",
        "AssignmentTypeMin",
        "AssignmentTypeMax",
        "DMKeyMin",
        "DMKeyMax"
      ],
      "TimeLogger": [
        "RecordCount",
        "DistinctIDCount",
        "MinID",
        "MaxID",
        "TotalRowCount",
        "AverageRowCount",
        "MinRowCount",
        "MaxRowCount",
        "TotalDataSize",
        "AverageDataSize",
        "MinDataSize",
        "MaxDataSize",
        "TotalLogSize",
        "AverageLogSize",
        "MinLogSize",
        "MaxLogSize",
        "AverageDataSizePerRow"
      ],
      "TargetGroupItem": [
        "RecordCount",
        "MainHeadingID_Count",
        "DMKey_Count",
        "DistinctMainHeadingCount",
        "DistinctDMKeyCount",
        "SumMainHeadingID",
        "AverageMainHeadingID",
        "MinMainHeadingID",
        "MaxMainHeadingID",
        "SumDMKey",
        "AverageDMKey",
        "MinDMKey",
        "MaxDMKey"
      ],
      "PricelistItemDetail": [
        "TotalUnitAmount",
        "AverageUnitAmount",
        "MinimumUnitAmount",
        "MaximumUnitAmount",
        "RecordCount",
        "DistinctRecordCount",
        "MeasurementTypeCount",
        "DistinctMeasurementTypeCount",
        "MinimumMeasurementType",
        "MaximumMeasurementType"
      ],
      "AuditLog": [
        "RecordCount",
        "DistinctEntityCount",
        "NonNullEntityCount",
        "SumEntityID",
        "AverageEntityID",
        "MinEntityID",
        "MaxEntityID",
        "DistinctEntityTypeCount",
        "NonNullEntityTypeCount",
        "SumEntityType",
        "AverageEntityType",
        "MinEntityType",
        "MaxEntityType",
        "DistinctDMKeyCount",
        "NonNullDMKeyCount",
        "SumDMKey",
        "AverageDMKey",
        "MinDMKey",
        "MaxDMKey"
      ],
      "BusinessPointComment": [
        "TotalComments",
        "DistinctUsers",
        "DistinctBusinessPoints",
        "AverageCommentsPerUser",
        "AverageCommentsPerBusinessPoint",
        "MinCommentType",
        "MaxCommentType",
        "AverageCommentType"
      ],
      "DialerTask": [
        "TaskCount",
        "DistinctTaskIDs",
        "MinTaskID",
        "MaxTaskID",
        "DistinctBusinessPointCount",
        "MinBusinessPointID",
        "MaxBusinessPointID",
        "DistinctSourceTaskCount",
        "MinSourceTaskID",
        "MaxSourceTaskID",
        "DistinctCurrentTaskCount",
        "MinCurrentTaskID",
        "MaxCurrentTaskID",
        "DistinctDialerCampaignCount",
        "MinDialerCampaignID",
        "MaxDialerCampaignID",
        "DistinctTargetGroupItemValueCount",
        "MinTargetGroupItemValueID",
        "MaxTargetGroupItemValueID",
        "DistinctCampaignCount",
        "MinCampaignID",
        "MaxCampaignID",
        "TotalNotFound",
        "AverageNotFoundRate",
        "MinNotFound",
        "MaxNotFound"
      ],
      "TargetGroupItemPeriod": [
        "TotalRecords",
        "DMKeyNonNullCount",
        "DistinctTargetGroups",
        "MinPeriod",
        "MaxPeriod",
        "AveragePeriod",
        "PeriodSpan",
        "MinDMKey",
        "MaxDMKey",
        "AverageDMKey"
      ],
      "Advertisement": [
        "TotalProductID",
        "TotalVersionSectionID",
        "TotalGeoAreaID",
        "TotalHeadingID",
        "TotalDMKey"
      ],
      "CampaignNewLossCustomer": [
        "TotalRecords",
        "DistinctRuleCount",
        "MinRuleID",
        "MaxRuleID",
        "AvgRuleID",
        "DistinctBusinessPointCount",
        "MinBusinessPointID",
        "MaxBusinessPointID",
        "AvgBusinessPointID",
        "DistinctDialerActionCount",
        "MinDialerAction",
        "MaxDialerAction",
        "AvgDialerAction"
      ],
      "Classification": [
        "RecordCount",
        "UniqueDMKeyCount",
        "TotalDMKey",
        "AverageDMKey",
        "MinDMKey",
        "MaxDMKey"
      ],
      "ContractProduct": [
        "TotalState",
        "TotalPrice",
        "TotalSalesTypeID",
        "TotalQuantity",
        "TotalDiscount"
      ],
      "CaseComment": [
        "TotalComments",
        "CommentType_Count",
        "CommentType_DistinctCount",
        "CommentType_Min",
        "CommentType_Max",
        "CommentType_Average",
        "DMKey_Count",
        "DMKey_DistinctCount",
        "DMKey_Min",
        "DMKey_Max"
      ],
      "CampaignScoreHistoryDetail": [
        "RecordCount",
        "DistinctCampaignCount",
        "DistinctBusinessPointCount",
        "DistinctFileCount",
        "DistinctSegmentCount",
        "TotalTargetingAmountCalculated",
        "AverageTargetingAmountCalculated",
        "MinTargetingAmountCalculated",
        "MaxTargetingAmountCalculated",
        "TotalTargetingAmountByUser",
        "AverageTargetingAmountByUser",
        "MinTargetingAmountByUser",
        "MaxTargetingAmountByUser",
        "TotalPrintAmount",
        "AveragePrintAmount",
        "MinPrintAmount",
        "MaxPrintAmount",
        "TotalPPCAmount",
        "AveragePPCAmount",
        "TotalXOGRAmount",
        "AverageXOGRAmount",
        "TotalWebSiteAmount",
        "AverageWebSiteAmount",
        "TotalAmount",
        "AverageTotalAmount",
        "MinTotalAmount",
        "MaxTotalAmount",
        "TotalScoreTotal",
        "AverageScoreTotal",
        "MinScoreTotal",
        "MaxScoreTotal",
        "AverageScoreMainActivity",
        "MinScoreMainActivity",
        "MaxScoreMainActivity",
        "AverageScoreSeniority",
        "MinScoreSeniority",
        "MaxScoreSeniority",
        "AverageScoreValueBillingRange",
        "MinScoreValueBillingRange",
        "MaxScoreValueBillingRange",
        "AverageScoreCombinationMedium",
        "MinScoreCombinationMedium",
        "MaxScoreCombinationMedium",
        "AverageScoreMaxInvestmentMedium",
        "MinScoreMaxInvestmentMedium",
        "MaxScoreMaxInvestmentMedium",
        "AverageScoreCombinationProduct",
        "MinScoreCombinationProduct",
        "MaxScoreCombinationProduct",
        "AverageScoreCustomerBehavior",
        "MinScoreCustomerBehavior",
        "MaxScoreCustomerBehavior",
        "AverageScoreSalesmanManagement",
        "MinScoreSalesmanManagement",
        "MaxScoreSalesmanManagement",
        "AverageScoreDifferenceToAvg",
        "MinScoreDifferenceToAvg",
        "MaxScoreDifferenceToAvg",
        "SumTargetingCalculatedMinusByUser",
        "CountByItemStatus",
        "CountByWorkingStatus",
        "MinCharacterization",
        "MaxCharacterization"
      ],
      "PointRelationship": [
        "RecordCount",
        "DistinctDMKeyCount",
        "DistinctTypeCount",
        "MinType",
        "MaxType",
        "AvgType",
        "MinDMKey",
        "MaxDMKey",
        "AvgDMKey"
      ],
      "BusinessPointConfirmationHistory": [
        "CountConfirmations",
        "DistinctBusinessPointCount",
        "DistinctPerformerCount",
        "DistinctTaskCount",
        "DistinctActionTypeCount",
        "DistinctSourceTypeCount",
        "MinBusinessPointIdentificationID",
        "MaxBusinessPointIdentificationID",
        "MinPerformedByID",
        "MaxPerformedByID",
        "MinTaskID",
        "MaxTaskID",
        "MinActionType",
        "MaxActionType",
        "AverageActionType",
        "MinSourceType",
        "MaxSourceType"
      ],
      "UserLog": [
        "RecordCount",
        "ActionNonNullCount",
        "DistinctActionCount",
        "SumAction",
        "AverageAction",
        "MinAction",
        "MaxAction"
      ],
      "Ticket": [
        "TicketCount",
        "DistinctResultCount",
        "ResultMin",
        "ResultMax",
        "DistinctStatusCount",
        "StatusMin",
        "StatusMax",
        "DMKeyMin",
        "DMKeyMax",
        "DistinctLastAssignUserCount",
        "LastAssignUserIDMin",
        "DistinctLastAssignRoleCount",
        "LastAssignRoleIDMin",
        "TotalCreditNumber",
        "AverageCreditNumber",
        "TotalCreditAmount",
        "AverageCreditAmount",
        "MinCreditAmount",
        "MaxCreditAmount",
        "TotalCancelAmount",
        "AverageCancelAmount",
        "MinCancelAmount",
        "MaxCancelAmount",
        "DistinctDPSCurrentNodeCount",
        "DPSCurrentNodeIDMin",
        "DistinctRelatedAdvertisementCount",
        "RelatedAdvertisementIDMin",
        "DistinctInitialTicketTypeCount",
        "InitialTicketTypeIDMin",
        "DistinctSerialTicketTypeCount",
        "SerialTicketTypdeIDMin",
        "DistinctSerialRoleCount",
        "SerialRoleIDMin",
        "TotalRequestedChanges",
        "AverageRequestedChanges",
        "MinRequestedChanges",
        "MaxRequestedChanges",
        "DistinctSelectedSalesmanCount",
        "SelectedSalesmanIDMin"
      ],
      "TicketResult": [
        "TotalResult",
        "AverageResult",
        "MinResult",
        "MaxResult",
        "CountResults",
        "DistinctResultCount",
        "CountDMKey",
        "DistinctDMKeyCount",
        "MinDMKey",
        "MaxDMKey",
        "CountPerformedBy",
        "DistinctPerformers",
        "MinPerformedByID",
        "MaxPerformedByID",
        "RecordCount"
      ],
      "FreeTemplate": [
        "TotalState",
        "TotalPrice",
        "TotalSalesTypeID",
        "TotalQuantity",
        "TotalDiscount"
      ],
      "FreeTemplateAdvertisement": [
        "RecordCount",
        "DistinctProductCount",
        "DistinctVersionSectionCount",
        "DistinctGeoAreaCount",
        "DistinctHeadingCount",
        "DistinctDMKeyCount",
        "TotalPrice",
        "AveragePrice",
        "MinPrice",
        "MaxPrice",
        "TotalDiscount",
        "TotalRulesDiscount",
        "TotalAlteredAmount",
        "TotalPaymentDiscount",
        "TotalProductDiscount",
        "TotalBundleDiscount",
        "TotalDiscountsCombined",
        "AverageDiscountToPriceRatio",
        "TotalBudgetAmount",
        "TotalActualSpentBudget",
        "AverageBudgetUtilization",
        "TotalOneTimeAmount",
        "TotalExtraFeeAmount",
        "TotalOneTimeAmountAfterDiscount",
        "TotalExtraFeeAmountAfterDiscount",
        "TotalExtraFeeAmountAfterCC",
        "TotalAlteredPPCAmountAfterCC",
        "SumMonths",
        "AverageMonths",
        "MinMonths",
        "MaxMonths",
        "SumCompletedChanges",
        "AverageCompletedChanges",
        "MinCompletedChanges",
        "MaxCompletedChanges",
        "CountWithDeactivationReason",
        "DistinctDeactivationReasonCount",
        "DistinctRelatedFreeTemplateAdvertisementCount"
      ],
      "BatchActionHistoryAnalysis": [
        "RecordCount",
        "DistinctEntityCount",
        "DistinctEntityTypeCount",
        "DistinctTypeCount",
        "AverageEntityID",
        "AverageEntityType",
        "AverageType",
        "MinEntityID",
        "MaxEntityID",
        "MinEntityType",
        "MaxEntityType",
        "MinType",
        "MaxType"
      ],
      "TaskTarget": [
        "RecordCount",
        "DistinctDMKeyCount",
        "TotalDMKey",
        "AverageDMKey",
        "MinDMKey",
        "MaxDMKey",
        "MissingDMKeyCount"
      ],
      "BatchActionHistory": [
        "ActionCount",
        "TotalRowsAffected",
        "AverageRowsAffected",
        "MinRowsAffected",
        "MaxRowsAffected",
        "ActionsWithRowsAffectedCount",
        "PercentActionsWithRowsAffected",
        "DistinctBatchActionTypes",
        "MinBatchActionTypeCode",
        "MaxBatchActionTypeCode",
        "AverageBatchActionTypeCode",
        "DistinctStatuses",
        "MinStatusCode",
        "MaxStatusCode",
        "AverageStatusCode",
        "DistinctTypes",
        "MinTypeCode",
        "MaxTypeCode",
        "AverageTypeCode"
      ],
      "TicketCommunication": [
        "CommunicationCount",
        "DistinctTicketCount",
        "CommunicationsPerTicket",
        "MinTicketID",
        "MaxTicketID",
        "AverageTicketID"
      ],
      "KeywordMapping": [
        "TotalRecords",
        "DistinctActivityCount",
        "DistinctKeywordCount",
        "DistinctNewAttributeValueCount",
        "RecordsWithNewAttributeValue",
        "MinActivityID",
        "MaxActivityID",
        "AverageActivityID",
        "MinKeywordID",
        "MaxKeywordID",
        "AverageKeywordID",
        "MinNewAttributeValueID",
        "MaxNewAttributeValueID",
        "AverageNewAttributeValueID"
      ],
      "Step1": [
        "RecordCount",
        "SumActivityID",
        "AverageActivityID",
        "MinActivityID",
        "MaxActivityID",
        "CountActivityID",
        "DistinctActivityIDCount",
        "SumAttributeValueID",
        "AverageAttributeValueID",
        "MinAttributeValueID",
        "MaxAttributeValueID",
        "CountAttributeValueID",
        "DistinctAttributeValueIDCount"
      ]
    },
    "metrics_available": [
      "ContentAttributeValue RecordCount",
      "ContentAttributeValue TotalSeqNo",
      "ContentAttributeValue AverageSeqNo",
      "FreeTemplateAttributeValue RecordCount",
      "FreeTemplateAttributeValue DistinctDMKeyCount",
      "FreeTemplateAttributeValue SumSeqNo",
      "TaskLog TaskLogCount",
      "TaskLog DistinctDMKeyCount",
      "TaskLog TotalDMKey",
      "TaskAssignment AssignmentCount",
      "TaskAssignment DistinctDMKeyCount",
      "TaskAssignment DistinctAssignmentTypeCount",
      "TimeLogger RecordCount",
      "TimeLogger DistinctIDCount",
      "TimeLogger MinID",
      "TargetGroupItem RecordCount",
      "TargetGroupItem MainHeadingID_Count",
      "TargetGroupItem DMKey_Count",
      "PricelistItemDetail TotalUnitAmount",
      "PricelistItemDetail AverageUnitAmount",
      "PricelistItemDetail MinimumUnitAmount",
      "AuditLog RecordCount",
      "AuditLog DistinctEntityCount",
      "AuditLog NonNullEntityCount",
      "BusinessPointComment TotalComments",
      "BusinessPointComment DistinctUsers",
      "BusinessPointComment DistinctBusinessPoints",
      "DialerTask TaskCount",
      "DialerTask DistinctTaskIDs",
      "DialerTask MinTaskID",
      "TargetGroupItemPeriod TotalRecords",
      "TargetGroupItemPeriod DMKeyNonNullCount",
      "TargetGroupItemPeriod DistinctTargetGroups",
      "Advertisement TotalProductID",
      "Advertisement TotalVersionSectionID",
      "Advertisement TotalGeoAreaID",
      "CampaignNewLossCustomer TotalRecords",
      "CampaignNewLossCustomer DistinctRuleCount",
      "CampaignNewLossCustomer MinRuleID",
      "Classification RecordCount",
      "Classification UniqueDMKeyCount",
      "Classification TotalDMKey",
      "ContractProduct TotalState",
      "ContractProduct TotalPrice",
      "ContractProduct TotalSalesTypeID",
      "CaseComment TotalComments",
      "CaseComment CommentType_Count",
      "CaseComment CommentType_DistinctCount",
      "CampaignScoreHistoryDetail RecordCount",
      "CampaignScoreHistoryDetail DistinctCampaignCount",
      "CampaignScoreHistoryDetail DistinctBusinessPointCount",
      "PointRelationship RecordCount",
      "PointRelationship DistinctDMKeyCount",
      "PointRelationship DistinctTypeCount",
      "BusinessPointConfirmationHistory CountConfirmations",
      "BusinessPointConfirmationHistory DistinctBusinessPointCount",
      "BusinessPointConfirmationHistory DistinctPerformerCount",
      "UserLog RecordCount",
      "UserLog ActionNonNullCount",
      "UserLog DistinctActionCount",
      "Ticket TicketCount",
      "Ticket DistinctResultCount",
      "Ticket ResultMin",
      "TicketResult TotalResult",
      "TicketResult AverageResult",
      "TicketResult MinResult",
      "FreeTemplate TotalState",
      "FreeTemplate TotalPrice",
      "FreeTemplate TotalSalesTypeID",
      "FreeTemplateAdvertisement RecordCount",
      "FreeTemplateAdvertisement DistinctProductCount",
      "FreeTemplateAdvertisement DistinctVersionSectionCount",
      "BatchActionHistoryAnalysis RecordCount",
      "BatchActionHistoryAnalysis DistinctEntityCount",
      "BatchActionHistoryAnalysis DistinctEntityTypeCount",
      "TaskTarget RecordCount",
      "TaskTarget DistinctDMKeyCount",
      "TaskTarget TotalDMKey",
      "BatchActionHistory ActionCount",
      "BatchActionHistory TotalRowsAffected",
      "BatchActionHistory AverageRowsAffected",
      "TicketCommunication CommunicationCount",
      "TicketCommunication DistinctTicketCount",
      "TicketCommunication CommunicationsPerTicket",
      "KeywordMapping TotalRecords",
      "KeywordMapping DistinctActivityCount",
      "KeywordMapping DistinctKeywordCount",
      "Step1 RecordCount",
      "Step1 SumActivityID",
      "Step1 AverageActivityID"
    ]
  }
}