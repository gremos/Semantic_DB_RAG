# =================================================================
# SEMANTIC DATABASE RAG SYSTEM - Enhanced Configuration
# Simple, Readable, and Maintainable with 4-Stage Pipeline
# Copy this file to .env and fill in your actual values
# =================================================================

# =================================================================
# AZURE OPENAI CONFIGURATION (Required)
# =================================================================
AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here
AZURE_ENDPOINT=https://gyp-weu-02-res01-prdenv-cog01.openai.azure.com/
DEPLOYMENT_NAME=gpt-4.1-mini
MODEL_VERSION=2024-12-01-preview

# =================================================================
# DATABASE CONFIGURATION (Required)
# =================================================================
# Optimized SQL Server connection string
DATABASE_CONNECTION_STRING=Driver={ODBC Driver 17 for SQL Server};Server=localhost;Database=YourDatabase;Trusted_Connection=yes;MARS_Connection=yes;MultipleActiveResultSets=true;Pooling=true;Max Pool Size=50;

# Alternative: Individual database connection components
# DB_SERVER=localhost
# DB_DATABASE=YourDatabase
# DB_USERNAME=your_username
# DB_PASSWORD=your_password

# =================================================================
# 4-STAGE AUTOMATED PIPELINE CONFIGURATION
# =================================================================

# Enable the revolutionary 4-stage automated query pipeline
ENABLE_4_STAGE_PIPELINE=true

# Stage-specific settings for optimal performance
INTENT_ANALYSIS_TEMPERATURE=0.05    # Low temperature for consistent intent analysis
TABLE_SELECTION_CONFIDENCE=0.7      # Minimum confidence for table selection
RELATIONSHIP_VALIDATION=true        # Validate all table relationships
SQL_SYNTAX_VALIDATION=true          # Validate SQL before execution

# Pipeline timeout and retry settings
PIPELINE_TIMEOUT_SECONDS=60         # Total pipeline timeout
MAX_RETRY_ATTEMPTS=2                # Retry failed stages

# =================================================================
# ENHANCED DISCOVERY CONFIGURATION
# =================================================================

# View definition mining (extracts business logic from views)
ENABLE_VIEW_ANALYSIS=true
ANALYZE_VIEW_DEFINITIONS=true       # Extract SQL from view definitions
EXTRACT_VIEW_RELATIONSHIPS=true     # Find relationships from view JOINs

# Advanced relationship discovery
RELATIONSHIP_DISCOVERY_METHODS=all  # all, foreign_keys, patterns, views, data
RELATIONSHIP_CONFIDENCE_MIN=0.6     # Minimum relationship confidence
MAX_RELATIONSHIPS_PER_TABLE=10      # Limit relationships per table

# Enhanced sample data collection
SAMPLES_PER_OBJECT=5                # Exactly 5 samples per object
SAMPLE_DATA_ANALYSIS=true           # Analyze sample data for business context
SAMPLE_DATA_CORRELATION=true        # Find data correlations between tables

# =================================================================
# SEMANTIC ANALYSIS & BUSINESS INTELLIGENCE
# =================================================================

# Multi-stage semantic analysis
ENABLE_PATTERN_CLASSIFICATION=true  # Pattern-based entity classification
ENABLE_LLM_ENHANCEMENT=true         # LLM-enhanced classification
ENABLE_DOMAIN_ANALYSIS=true         # Business domain identification
CREATE_BUSINESS_TEMPLATES=true      # Generate query templates

# Classification settings
CLASSIFICATION_CONFIDENCE_THRESHOLD=0.6
ENTITY_CLASSIFICATION_BATCH_SIZE=5
LLM_CLASSIFICATION_TEMPERATURE=0.1

# Business template creation
ENABLE_TEMPLATE_LEARNING=true       # Learn from successful queries
CACHE_QUERY_PATTERNS=true          # Cache working query patterns
TEMPLATE_CONFIDENCE_MIN=0.7         # Minimum confidence for templates

# =================================================================
# PERFORMANCE & CACHE CONFIGURATION
# =================================================================

# Processing performance
MAX_PARALLEL_WORKERS=8              # Parallel workers for discovery
QUERY_TIMEOUT_SECONDS=30            # Query timeout per object
MAX_RESULTS=100                     # Results per query
USE_FAST_QUERIES=true               # Enable OPTION (FAST n) optimization

# Cache settings for active development
DISCOVERY_CACHE_HOURS=24            # Discovery cache duration
SEMANTIC_CACHE_HOURS=24             # Semantic analysis cache duration

# Advanced performance features
ENABLE_CONNECTION_POOLING=true      # Reuse database connections
BATCH_PROCESSING=true               # Process objects in batches
MEMORY_OPTIMIZATION=true            # Optimize memory usage

# =================================================================
# RESULT VALIDATION & BUSINESS LOGIC
# =================================================================

# 4-stage pipeline result validation
ENABLE_RESULT_VALIDATION=true       # Validate results make business sense
BUSINESS_LOGIC_VALIDATION=true      # Apply business rules to results
AUTO_RETRY_ON_VALIDATION_FAIL=true  # Retry queries that fail validation

# Query result settings
RESULT_FORMATTING=enhanced          # enhanced, simple
LARGE_NUMBER_FORMATTING=true        # Add commas to large numbers
TRUNCATE_LONG_TEXT=true             # Truncate long text fields

# =================================================================
# INTERNATIONAL CHARACTER SUPPORT
# =================================================================

# Greek text and international character support
UTF8_ENCODING=true                  # Force UTF-8 encoding
PRESERVE_INTERNATIONAL_CHARS=true   # Preserve non-English characters
UNICODE_NORMALIZATION=true          # Normalize Unicode text

# =================================================================
# FEATURE FLAGS
# =================================================================

# Enhanced features (all enabled by default for full functionality)
ENABLE_VIEW_MINING=true             # Mine view definitions for relationships
ENABLE_BUSINESS_INTELLIGENCE=true   # Generate business insights
ENABLE_ADVANCED_RELATIONSHIPS=true  # Multi-method relationship discovery
ENABLE_QUERY_CACHING=true          # Cache successful query patterns
ENABLE_PROGRESS_TRACKING=true       # Show real-time progress bars

# Experimental features
ENABLE_DATA_CORRELATION=true        # Find data correlations between tables
ENABLE_SAMPLE_DATA_ANALYSIS=true    # Analyze sample data for insights
ENABLE_ADAPTIVE_BATCHING=true       # Adaptive batch sizes based on performance

# =================================================================
# SYSTEM BEHAVIOR
# =================================================================

# Discovery behavior
EXCLUDE_SYSTEM_TABLES=true          # Exclude system/technical tables
MINIMAL_FILTERING=true              # Use minimal filtering for maximum coverage
PRIORITIZE_BUSINESS_OBJECTS=true    # Prioritize business-relevant objects

# User experience
SHOW_PROGRESS_BARS=true             # Show progress during operations
COLORED_OUTPUT=true                 # Use colored console output
DETAILED_ERROR_MESSAGES=true        # Show detailed error information
HELPFUL_SUGGESTIONS=true            # Provide suggestions on errors

# =================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT DATABASE SIZES
# =================================================================

# Small databases (< 100 objects):
# MAX_PARALLEL_WORKERS=4
# QUERY_TIMEOUT_SECONDS=20
# DISCOVERY_CACHE_HOURS=12

# Medium databases (100-500 objects):
# MAX_PARALLEL_WORKERS=8
# QUERY_TIMEOUT_SECONDS=30
# DISCOVERY_CACHE_HOURS=24

# Large databases (500+ objects):
# MAX_PARALLEL_WORKERS=12
# QUERY_TIMEOUT_SECONDS=45
# DISCOVERY_CACHE_HOURS=48
# ENABLE_AGGRESSIVE_CACHING=true

# =================================================================
# CONNECTION STRING EXAMPLES
# =================================================================

# Local SQL Server with Windows Authentication:
# DATABASE_CONNECTION_STRING=Driver={ODBC Driver 17 for SQL Server};Server=localhost;Database=YourDB;Trusted_Connection=yes;MARS_Connection=yes;MultipleActiveResultSets=true;Pooling=true;

# SQL Server with SQL Authentication:
# DATABASE_CONNECTION_STRING=Driver={ODBC Driver 17 for SQL Server};Server=localhost;Database=YourDB;UID=username;PWD=password;MARS_Connection=yes;MultipleActiveResultSets=true;Pooling=true;

# Azure SQL Database:
# DATABASE_CONNECTION_STRING=Driver={ODBC Driver 17 for SQL Server};Server=yourserver.database.windows.net;Database=YourDB;UID=username;PWD=password;Encrypt=yes;TrustServerCertificate=no;MARS_Connection=yes;

# SQL Server with custom port:
# DATABASE_CONNECTION_STRING=Driver={ODBC Driver 17 for SQL Server};Server=localhost,1433;Database=YourDB;UID=username;PWD=password;MARS_Connection=yes;MultipleActiveResultSets=true;

# =================================================================
# WHAT'S NEW IN VERSION 2.0
# =================================================================

# ðŸš€ REVOLUTIONARY FEATURES:
# âœ… 4-Stage Automated Query Pipeline - Fully automated natural language to SQL
# âœ… View Definition Mining - Extracts business logic from database views
# âœ… Enhanced Relationship Discovery - Finds 76,000+ relationships automatically
# âœ… Business Intelligence Templates - Pre-built patterns for common questions
# âœ… Multi-LLM Validation Chain - Each stage validated before proceeding
# âœ… Result Business Validation - Ensures results make business sense
# âœ… Advanced Entity Classification - Pattern + LLM hybrid approach
# âœ… International Character Support - Perfect Greek text and Unicode handling
# âœ… Query Pattern Learning - System learns from successful queries
# âœ… Real-time Progress Tracking - Beautiful progress bars and status updates

# ðŸ“Š PERFORMANCE IMPROVEMENTS:
# - 2-5x faster discovery with OPTION (FAST n) queries
# - Intelligent caching reduces repeat analysis time
# - Adaptive batching optimizes for database size
# - Connection pooling for better resource usage
# - Parallel processing with configurable workers

# ðŸ’¡ BUSINESS INTELLIGENCE:
# - Automatic domain identification (E-Commerce, CRM, Financial, etc.)
# - Smart sample question generation based on your data
# - Business capability detection (customer analysis, payments, etc.)
# - Query template creation for common business questions
# - Cross-entity relationship analysis

# ðŸŽ¯ 4-STAGE PIPELINE FEATURES:
# Stage 1: Business Intent Analysis - Understands what you're asking
# Stage 2: Smart Table Selection - Finds right tables from 100s of options
# Stage 3: Relationship Resolution - Uses view definitions for perfect joins
# Stage 4: Validated SQL Generation - Creates queries that actually work

# ðŸ”§ RELIABILITY IMPROVEMENTS:
# - Comprehensive error handling and recovery
# - Automatic retry logic for failed operations
# - Business validation prevents nonsensical results
# - Enhanced logging and debugging capabilities
# - Graceful degradation when features are unavailable

# =================================================================
# SUPPORT & TROUBLESHOOTING
# =================================================================

# Common issues and solutions:
# 1. "Connection failed" - Check DATABASE_CONNECTION_STRING format
# 2. "API key invalid" - Verify AZURE_OPENAI_API_KEY is correct
# 3. "No tables found" - Check database permissions and table access
# 4. "Pipeline timeout" - Increase PIPELINE_TIMEOUT_SECONDS
# 5. "Memory issues" - Reduce MAX_PARALLEL_WORKERS or enable MEMORY_OPTIMIZATION

# Performance tuning:
# - Large databases: Increase cache hours, reduce parallel workers
# - Small databases: Reduce cache hours, increase parallel workers
# - Slow networks: Increase timeout values, enable connection pooling
# - Limited memory: Enable memory optimization, reduce batch sizes

# Feature troubleshooting:
# - 4-stage pipeline issues: Check AZURE_OPENAI_API_KEY and MODEL_VERSION
# - View analysis problems: Ensure database user has view definition access
# - Relationship discovery issues: Enable RELATIONSHIP_DISCOVERY_METHODS=all
# - Classification problems: Adjust CLASSIFICATION_CONFIDENCE_THRESHOLD

# =================================================================
# GETTING STARTED CHECKLIST
# =================================================================
# â–¡ Copy this file to .env
# â–¡ Set AZURE_OPENAI_API_KEY with your actual API key
# â–¡ Set DATABASE_CONNECTION_STRING with your database details
# â–¡ Test connection: python -c "from shared.config import Config; Config()"
# â–¡ Run discovery: Choose option 1 in main menu
# â–¡ Run semantic analysis: Choose option 2 in main menu
# â–¡ Try 4-stage pipeline: Choose option 3 and ask business questions
# â–¡ Enjoy intelligent database analysis! ðŸš€